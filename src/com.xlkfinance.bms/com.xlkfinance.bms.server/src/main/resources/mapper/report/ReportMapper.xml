<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlkfinance.bms.server.report.mapper.ReportMapper">
	<resultMap type="handleDifferWarnReport" id="handleDifferWarnReportMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="businessSourceName" column="BUSINESS_SOURCE_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="deptName" column="DEPT_NAME" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="applyUserName" column="APPLY_USER_NAME" />
		<id property="loanBank" column="LOAN_BANK" />
		<id property="loanAmt" column="LOAN_MONEY" />
		<id property="houseName" column="HOUSE_NAME" />
		<id property="houseType" column="HOUSE_TYPE" />
		<id property="loanWay" column="LOAN_WAY" />
		<id property="foreclosureFloorDate" column="FORECLOSURE_FLOOR_DATE" />
		<id property="cancelMortgageDate" column="CANCEL_MORTGAGE_DATE" />
		<id property="transferDate" column="TRANSFER_DATE" />
		<id property="getNewLicenseDate" column="GET_NEW_LICENSE_DATE" />
		<id property="mortgageDate" column="MORTGAGE_DATE" />
		<id property="cancelGuaranteeDate" column="CANCEL_GUARANTEE_DATE" />
		<id property="transferOperator" column="TRANSFER_OPERATOR" />
		<id property="warnTag" column="WARN_TAG" />
		<id property="sellerName" column="SELLER_NAME" />
		<id property="buyerName" column="BUYER_NAME" />
	</resultMap>
	<!-- 业务汇总 -->
	<resultMap type="businessSummaryReport" id="businessSummaryReportMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="businessSourceName" column="BUSINESS_SOURCE_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="deptId" column="DEPT_ID" />
		<id property="deptName" column="DEPT_NAME" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="pmUserId" column="PM_USER_ID" />
		<id property="housePropertyCard" column="HOUSE_PROPERTY_CARD" />
		<id property="sellerName" column="SELLER_NAME" />
		<id property="buyerName" column="BUYER_NAME" />
		<id property="loanAmt" column="LOAN_AMT" />
		<id property="interest" column="INTEREST" />
		<id property="recInterestDate" column="REC_INTEREST_DATE" />
		<id property="loanDate" column="LOAN_DATE" />
		<id property="planRecLoanDate" column="PLAN_RECLOAN_DATE" />
		<id property="recLoanDate" column="REC_LOAN_DATE" />
		<id property="recMoney" column="REC_MONEY" />
		<id property="remainingRecMoney" column="REMAINING_RECMONEY" />
		<id property="overdueFee" column="OVERDUE_FEE" />
		<id property="overdueDay" column="OVERDUE_DAY" />
		<id property="extensionFee" column="EXTENSION_FEE" />
		<id property="extensionDate" column="EXTENSION_DATE" />
		<id property="feeTotal" column="FEE_TOTAL" />
		<id property="oldLoanBank" column="OLD_LOAN_BANK" />
		<id property="innerOrOut" column="INNER_OR_OUT" />
		<id property="foreclosureStatus" column="FORECLOSURE_STATUS" />
		<id property="recFeeStatus" column="REC_FEE_STATUS" />
		<id property="bizHandleDynamic" column="BIZ_HANDLE_DYNAMIC" />
		<id property="realLoan" column="REAL_LOAN" />
		<id property="poundage" column="POUNDAGE" />

		<id property="foreclosureFloorDate" column="FORECLOSURE_FLOOR_DATE" />
		<id property="cancelMortgageDate" column="CANCEL_MORTGAGE_DATE" />
		<id property="transferDate" column="TRANSFER_DATE" />
		<id property="getNewLicenseDate" column="GET_NEW_LICENSE_DATE" />
		<id property="getOldLicenseDate" column="GET_OLD_LICENSE_DATE" />
		<id property="mortgageDate" column="MORTGAGE_DATE" />
		<id property="repaymentStatus" column="REPAYMENT_STATUS" />
	</resultMap>

	<resultMap type="chechanReport" id="chechanReportMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="businessSourceName" column="BUSINESS_SOURCE_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="deptId" column="DEPT_ID" />
		<id property="deptName" column="DEPT_NAME" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="pmUserId" column="PM_USER_ID" />
		<id property="housePropertyCard" column="HOUSE_PROPERTY_CARD" />
		<id property="sellerName" column="SELLER_NAME" />
		<id property="buyerName" column="BUYER_NAME" />
		<id property="loanAmt" column="LOAN_AMT" />
		<id property="interest" column="INTEREST" />
		<id property="recInterestDate" column="REC_INTEREST_DATE" />
		<id property="loanDate" column="LOAN_DATE" />
		<id property="planRecLoanDate" column="PLAN_RECLOAN_DATE" />
		<id property="recLoanDate" column="REC_LOAN_DATE" />
		<id property="recMoney" column="REC_MONEY" />
		<id property="remainingRecMoney" column="REMAINING_RECMONEY" />
		<id property="overdueFee" column="OVERDUE_FEE" />
		<id property="overdueDay" column="OVERDUE_DAY" />
		<id property="extensionFee" column="EXTENSION_FEE" />
		<id property="extensionDate" column="EXTENSION_DATE" />
		<id property="feeTotal" column="FEE_TOTAL" />
		<id property="oldLoanBank" column="OLD_LOAN_BANK" />
		<id property="innerOrOut" column="INNER_OR_OUT" />
		<id property="foreclosureStatus" column="FORECLOSURE_STATUS" />
		<id property="recFeeStatus" column="REC_FEE_STATUS" />
		<id property="bizHandleDynamic" column="BIZ_HANDLE_DYNAMIC" />
		<id property="realLoan" column="REAL_LOAN" />
		<id property="poundage" column="POUNDAGE" />

		<id property="foreclosureFloorDate" column="FORECLOSURE_FLOOR_DATE" />
		<id property="cancelMortgageDate" column="CANCEL_MORTGAGE_DATE" />
		<id property="transferDate" column="TRANSFER_DATE" />
		<id property="getNewLicenseDate" column="GET_NEW_LICENSE_DATE" />
		<id property="getOldLicenseDate" column="GET_OLD_LICENSE_DATE" />
		<id property="mortgageDate" column="MORTGAGE_DATE" />
		<id property="isChechan" column="IS_CHECHAN" />
		<id property="chechanDate" column="CHECHAN_DATE" />
		<id property="chechanUserId" column="CHECHAN_USER_ID" />
		<id property="chechanCause" column="CHECHAN_CAUSE" />
		<id property="newLoanBank" column="NEW_LOAN_BANK" />
		<id property="newLoanBankBranch" column="NEW_LOAN_BANK_BRANCH" />
		<id property="applyName" column="CHINA_NAME" />
		<id property="paymentType" column="PAYMENT_TYPE" />
		<id property="chechanUser" column="CHECHAN_USER" />
	</resultMap>
	<!-- 收费统计报表 -->
	<resultMap type="collectFeeReport" id="collectFeeReportMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="businessSourceName" column="BUSINESS_SOURCE_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="innerOrOut" column="INNER_OR_OUT" />
		<id property="foreclosureStatus" column="FORECLOSURE_STATUS" />
		<id property="deptId" column="DEPT_ID" />
		<id property="deptName" column="DEPT_NAME" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="pmUserId" column="PM_USER_ID" />
		<id property="housePropertyCard" column="HOUSE_PROPERTY_CARD" />
		<id property="homeName" column="HOME_NAME" />
		<id property="sellerName" column="SELLER_NAME" />
		<id property="buyerName" column="BUYER_NAME" />
		<id property="loanAmt" column="LOAN_AMT" />
		<id property="consultFee" column="CONSULT_FEE" />
		<id property="poundage" column="POUNDAGE" />
		<id property="brokerage" column="BROKERAGE" />

	</resultMap>
	<resultMap type="com.xlkfinance.bms.rpc.report.TrackRecordReport"
		id="trackRecordMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="deptId" column="DEPT_ID" />
		<id property="deptName" column="DEPT_NAME" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="pmUserId" column="PM_USER_ID" />
		<id property="housePropertyCard" column="HOUSE_PROPERTY_CARD" />
		<id property="sellerName" column="SELLER_NAME" />
		<id property="buyerName" column="BUYER_NAME" />
		<id property="oldLoanBank" column="OLD_LOAN_BANK" />
		<id property="newLoanBank" column="NEW_LOAN_BANK" />
		<id property="productId" column="PRODUCT_ID" />
		<id property="loanAmt" column="LOAN_AMT" />
		<id property="interest" column="INTEREST" />
		<id property="requestDate" column="REQUEST_DATE" />
		<id property="loanDate" column="LOAN_DATE" />
		<id property="foreclosureFloorDate" column="FORECLOSURE_FLOOR_DATE" />
		<id property="cancelMortgageDate" column="CANCEL_MORTGAGE_DATE" />
		<id property="transferDate" column="TRANSFER_DATE" />
		<id property="getNewLicenseDate" column="GET_NEW_LICENSE_DATE" />
		<id property="getOldLicenseDate" column="GET_OLD_LICENSE_DATE" />
		<id property="mortgageDate" column="MORTGAGE_DATE" />
		<id property="overdueFee" column="OVERDUE_FEE" />
		<id property="overdueDay" column="OVERDUE_DAY" />
		<id property="extensionFee" column="EXTENSION_FEE" />
		<id property="extensionDays" column="EXTENSION_DAYS" />
		<id property="recLoanDate" column="REC_LOAN_DATE" />
		<id property="innerOrOut" column="INNER_OR_OUT" />
		<id property="declaration" column="DECLARATION" />
		<id property="houseClerkName" column="HOUSE_CLERK_NAME" />
		<id property="logoutName" column="LOGOUT_NAME" />
		<id property="assignedName" column="ASSIGNED_NAME" />
		<id property="newCardName" column="NEW_CARD_NAME" />
		<id property="mortgageName" column="MORTGAGE_NAME" />
	</resultMap>


	<!-- 赎楼贷业务统计 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.ForeclosureReport"
		id="ForeclosureMap">
		<id property="rePaymentMonthId" column="REPAYMENT_MONTH_ID" />
		<id property="reMonth" column="RE_MONTH" />
		<id property="newCount" column="NEW_COUNT" />
		<id property="newMoney" column="NEW_MONEY" />
		<id property="squareCount" column="SQUARE_COUNT" />
		<id property="squareMoney" column="SQUARE_MONEY" />
		<id property="ingCount" column="ING_COUNT" />
		<id property="ingMoney" column="ING_MONEY" />
		<id property="sumNewCount" column="SUM_NEW_COUNT" />
		<id property="sumNewMoney" column="SUM_NEW_MONEY" />

		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="loanMoney" column="REC_MONEY" />
		<id property="pmUserName" column="REAL_NAME" />
		<id property="applyLoanDate" column="NEW_REC_MONTH" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
	</resultMap>

	<!-- 赎楼贷合作机构业务统计 -->
	<resultMap
		type="com.xlkfinance.bms.rpc.report.ForeclosureOrganizationReport" id="ForeclosureOrganizationReportMap">
		<id property="rePaymentMonthId" column="REPAYMENT_MONTH_ID" />
		<id property="reMonth" column="RE_MONTH" />
		<id property="newCount" column="NEW_COUNT" />
		<id property="newMoney" column="NEW_MONEY" />
		<id property="squareCount" column="SQUARE_COUNT" />
		<id property="squareMoney" column="SQUARE_MONEY" />
		<id property="ingCount" column="ING_COUNT" />
		<id property="ingMoney" column="ING_MONEY" />
		<id property="totalCount" column="TOTAL_COUNT" />
		<id property="totalMoney" column="TOTAL_MONEY" />
		<id property="orgName" column="ORG_NAME" />
		<id property="availableLimit" column="AVAILABLE_LIMIT" />
		<id property="singeUpperLimit" column="SINGLE_UPPER_LIMIT" />
		<id property="assureMoney" column="ASSURE_MONEY" />

		<id property="sumNewMoney" column="SUM_NEW_MONEY" />
		<id property="sumNewCount" column="SUM_NEW_COUNT" />

	</resultMap>

	<!-- 资金方业务统计 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.ForeclosureCapitalReport"
		id="ForeclosureCapitalReportMap">
		<id property="rePaymentMonthId" column="REPAYMENT_MONTH_ID" />
		<id property="reMonth" column="RE_MONTH" />
		<id property="newCount" column="NEW_COUNT" />
		<id property="newMoney" column="NEW_MONEY" />
		<id property="squareCount" column="SQUARE_COUNT" />
		<id property="squareMoney" column="SQUARE_MONEY" />
		<id property="ingCount" column="ING_COUNT" />
		<id property="ingMoney" column="ING_MONEY" />
		<id property="fromDateth" column="fromDate" />
		<id property="endDate" column="endDate" />
		<id property="fromDate" column="fromDate" />
		<id property="endDate" column="endDate" />
		<id property="totalCount" column="TOTAL_COUNT" />
		<id property="totalMoney" column="TOTAL_MONEY" />
		<id property="orgName" column="ORG_NAME" />

	</resultMap>
	<!-- 财务统计 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.FinancialStatisticsReport"
		id="financialStatisticsMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="loanAmt" column="LOAN_AMT" />
		<id property="realLoan" column="REAL_LOAN" />
		<id property="loanDate" column="LOAN_DATE" />
		<id property="recMoney" column="REC_MONEY" />
		<id property="recLoanDate" column="REC_LOAN_DATE" />
		<id property="planLoanDate" column="PLAN_RECLOAN_DATE" />
		<id property="needRecMoney" column="NEED_RECMONEY" />
		<id property="orgName" column="ORG_NAME" />
		<id property="orgLoanDate" column="ORG_LOAN_DATE" />
		<id property="orgReDate" column="ORG_RE_DATE" />
		<id property="poundage" column="POUNDAGE" />
		<id property="rePoundage" column="RE_POUNDAGE" />

		<id property="interest" column="INTEREST" />
		<id property="reInterest" column="RE_INTEREST" />
		<id property="payInterest" column="PAY_INTEREST" />
	</resultMap>
	<!-- 退咨询费统计 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.RefundFeesReport"
		id="refundFeesIndexMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="returnFee" column="RETURN_FEE" />
		<id property="confirmMoney" column="CONFIRM_MONEY" />
		<id property="confirmDate" column="CONFIRM_DATE" />
		<id property="collectFeesDate" column="REC_DATE" />
		<id property="isChechan" column="IS_CHECHAN" />
		<id property="chinaName" column="CHINA_NAME" />
		<id property="loanDays" column="LOAN_DAYS" />
		<id property="poundage" column="POUNDAGE" />
		<id property="loanAmount" column="LOAN_AMOUNT" />
		<id property="pmUserName" column="PM_USER_NAME" />
		<!-- and new -->
		<id property="loanDate" column="LOAN_DATE" />
		<id property="recInterestDate" column="REC_INTEREST_DATE" />
		<id property="extensionDays" column="EXTENSION_DAYS" />
		<id property="recLoanDate" column="REC_LOAN_DATE" />
		<id property="recMoney" column="REC_MONEY" />
		<id property="consultingfeeRate" column="CONSULTING_FEE_RATE" />
		<id property="returnFee" column="CONSULTING_FEE" />
		<id property="extensionFeeRate" column="EXTENSION_FEE_RATE" />
		<id property="acExtensionFee" column="AC_EXTENSION_FEE" />
		<id property="extensionFee" column="EXTENSION_FEE" />
		<id property="planConsultingMoney" column="PLAN_CONSULTING_MONEY" />
		<id property="planExtensionMoney" column="PLAN_EXTENSION_MONEY" />
		<id property="planRetrunConsulting" column="PLAN_RETRUN_CONSULTING" />
	</resultMap>
	<!-- 业务审批明细需求 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.BusinessApprovalDetail"
		id="businessApprovalDetailMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="businessSource" column="BUSINESS_SOURCE" />

		<id property="businessCatelog" column="BUSINESS_CATELOG" />
		<id property="customerName" column="CUSTOMER_NAME" />
		<id property="realLoan" column="REAL_LOAN" />
		<id property="approvalStep" column="APPROVAL_STEP" />

		<id property="createDate" column="CREATER_DATE" />
		<id property="approvalDate" column="UPDATE_DATE" />
		<id property="approvalStatus" column="APPROVAL_STATUS" />
		<id property="approvalPerson" column="APPROVAL_PERSON" />
		<id property="department" column="DEPARTMENT" />
	</resultMap>

	<!-- 业务审批台账需求 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.BusinessApprovalBill"
		id="businessApprovalBillMap">
		<id property="dateId" column="DATE_ID" />
		<id property="department" column="DEPARTMENT" />
		<id property="approvalPerson" column="APPROVAL_PERSON" />
		<id property="businessCatelog" column="BUSINESS_CATELOG" />
		<id property="approvalStep" column="APPROVAL_STEP" />
		<id property="totalCount" column="TOTAL_COUNT" />
		<id property="totalMoney" column="TOTAL_MONEY" />
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="businessSource" column="BUSINESS_SOURCE" />
		<id property="customerName" column="CUSTOMER_NAME" />
		<id property="realLoan" column="REAL_LOAN" />
		<id property="approvalDate" column="APPROVAL_DATE" />
	</resultMap>
	<!-- 拒单列表 -->
	<resultMap type="com.xlkfinance.bms.rpc.report.RefuseProjectReport"
		id="refuseProjectReportMap">
		<id property="projectId" column="PROJECT_ID" />
		<id property="projectName" column="PROJECT_NAME" />
		<id property="projectNumber" column="PROJECT_NUMBER" />
		<id property="businessSourceStr" column="BUSINESS_SOURCE_STR" />
		<id property="productName" column="PRODUCT_NAME" />
		<id property="productId" column="PRODUCT_ID" />
		<id property="acctName" column="ACCT_NAME" />
		<id property="loanMoney" column="LOAN_MONEY" />
		<id property="refuseUserName" column="REFUSE_USER_NAME" />
		<id property="refuseTime" column="REFUSE_TIME" />
		<id property="refuseReason" column="REFUSE_REASON" />
	</resultMap>

	<!-- 根据条件查询预警统计报表（分页查询） -->
	<select id="queryHandleDifferWarnReport" resultMap="handleDifferWarnReportMap"
		parameterType="handleDifferWarnReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT A.PID AS PROJECT_ID,
		A.PROJECT_NAME,
		A.PROJECT_NUMBER,
		B.PRODUCT_NAME,
		A.BUSINESS_SOURCE,
		V.BUSINESS_SOURCE_STR AS BUSINESS_SOURCE_STR,
		D.NAME AS DEPT_NAME,
		C.REAL_NAME AS PM_USER_NAME,
		F.CHINA_NAME AS APPLY_USER_NAME,
		S.BANK_NAME AS LOAN_BANK,
		H.LOAN_MONEY,
		I.HOUSE_NAME,
		I.SELLER_NAME,
		I.BUYER_NAME,
		'' AS HOUSE_TYPE,
		G.PAYMENT_TYPE AS LOAN_WAY,
		TO_CHAR(HD.FORECLOSURE_FLOOR_DATE, 'yyyy-MM-dd') AS FORECLOSURE_FLOOR_DATE,
		TO_CHAR(HD.CANCEL_MORTGAGE_DATE, 'yyyy-MM-dd') AS
		CANCEL_MORTGAGE_DATE,
		TO_CHAR(HD.TRANSFER_DATE, 'yyyy-MM-dd') AS TRANSFER_DATE,
		TO_CHAR(HD.GET_NEW_LICENSE_DATE, 'yyyy-MM-dd') AS GET_NEW_LICENSE_DATE,
		TO_CHAR(HD.MORTGAGE_DATE, 'yyyy-MM-dd') AS MORTGAGE_DATE,
		TO_CHAR(HD.CANCEL_GUARANTEE_DATE, 'yyyy-MM-dd') AS CANCEL_GUARANTEE_DATE,
		BLH.TRANSFER_OPERATOR AS TRANSFER_OPERATOR,
		TO_CHAR(J.CREATER_DATE, 'yyyy-MM-dd') AS CREATER_DATE
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 0
		AND PROJECT_TYPE IN (2, 6)) A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN SYS_USER C
		ON C.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO D
		ON D.ID = C.ORG_ID
		LEFT JOIN (SELECT ACCT_ID,CHINA_NAME FROM CUS_PERSON WHERE RELATION_TYPE =
		1) F
		ON A.ACCT_ID = F.ACCT_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE H
		ON H.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY I
		ON I.PROJECT_ID = A.PID
		INNER JOIN BIZ_LOAN_HANDLE_INFO J
		ON J.PROJECT_ID = A.PID
		LEFT JOIN BUSINESS_SOURCE_V V
		ON V.PID = A.PID
		LEFT JOIN SYS_BANK_INFO S
		ON S.PID = G.NEW_LOAN_BANK
		LEFT JOIN (SELECT HD.HANDLE_ID,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 2) THEN HD.FINISH_DATE ELSE NULL END) AS
		FORECLOSURE_FLOOR_DATE,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 4) THEN HD.FINISH_DATE ELSE NULL END) AS
		CANCEL_MORTGAGE_DATE,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 5) THEN HD.FINISH_DATE ELSE NULL END) AS
		TRANSFER_DATE,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 6) THEN HD.FINISH_DATE ELSE NULL END) AS
		GET_NEW_LICENSE_DATE,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 7) THEN HD.FINISH_DATE ELSE NULL END) AS
		MORTGAGE_DATE,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 10) THEN HD.FINISH_DATE ELSE NULL END) AS
		CANCEL_GUARANTEE_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD GROUP BY HD.HANDLE_ID
		) HD
		ON HD.HANDLE_ID=J.PID
		LEFT JOIN (SELECT HD.HANDLE_ID,
		MAX(CASE WHEN (HD.HANDLE_FLOW_ID = 5) THEN HD.OPERATOR ELSE NULL END) AS
		TRANSFER_OPERATOR
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD GROUP BY HD.HANDLE_ID
		) BLH
		ON BLH.HANDLE_ID=J.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND B.PRODUCT_TYPE = 2
				</if>
				<if
					test="( foreclosureFloorDate !=null and foreclosureFloorDate !='') or ( foreclosureFloorEndDate !=null and foreclosureFloorEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=2
					<if test="foreclosureFloorDate !=null and foreclosureFloorDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{foreclosureFloorDate},'yyyy-mm-dd')
					</if>
					<if
						test="foreclosureFloorEndDate !=null and foreclosureFloorEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{foreclosureFloorEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( mortgageDate !=null and mortgageDate !='') or ( mortgageEndDate !=null and mortgageEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=4
					<if test="mortgageDate !=null and mortgageDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{mortgageDate},'yyyy-mm-dd')
					</if>
					<if test="mortgageEndDate !=null and mortgageEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{mortgageEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( transferDate !=null and transferDate !='') or ( transferEndDate !=null and transferEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=5
					<if test="transferDate !=null and transferDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{transferDate},'yyyy-mm-dd')
					</if>
					<if test="transferEndDate !=null and transferEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{transferEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( getNewLicenseDate !=null and getNewLicenseDate !='') or ( getNewLicenseEndDate !=null and getNewLicenseEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=6
					<if test="getNewLicenseDate !=null and getNewLicenseDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{getNewLicenseDate},'yyyy-mm-dd')
					</if>
					<if test="getNewLicenseEndDate !=null and getNewLicenseEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{getNewLicenseEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND I.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND I.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="transferOperator !=null and transferOperator !=''">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM
					BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE HD.HANDLE_FLOW_ID=5 AND HD.OPERATOR
					LIKE '%${transferOperator}%')
				</if>
				<if test="loanBank !=null and loanBank !=''">
					AND G.NEW_LOAN_BANK IN(SELECT S1.PID FROM SYS_BANK_INFO
					S1 WHERE S1.BANK_NAME LIKE '%${loanBank}%')
				</if>
				<if test="applyUserName !=null and applyUserName !=''">
					AND F.CHINA_NAME LIKE '%${applyUserName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND C.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND D.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		<if test="page!=-1">
		<![CDATA[
		ORDER BY HD.CANCEL_GUARANTEE_DATE DESC,J.CREATER_DATE DESC
		) T
		WHERE ROWNUM <=#{page}*#{rows}
		) D
		WHERE D.RN > ((#{page}-1)*#{rows})
		]]>
		</if>
	</select>
	<!-- 根据条件查询预警统计报表总数 -->
	<select id="getHandleDifferWarnReportTotal" resultType="Integer"
		parameterType="handleDifferWarnReport">
		SELECT COUNT(1) FROM
		( SELECT A.PID AS PROJECT_ID
		FROM BIZ_PROJECT A
		INNER JOIN BIZ_PRODUCT
		B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN SYS_USER C
		ON C.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO D
		ON D.ID = C.ORG_ID
		LEFT JOIN CUS_ACCT E
		ON
		A.ACCT_ID = E.PID
		LEFT JOIN CUS_PERSON F
		ON E.PID = F.ACCT_ID AND
		F.RELATION_TYPE = 1
		LEFT JOIN
		BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID =
		A.PID
		LEFT JOIN
		BIZ_PROJECT_GUARANTEE H
		ON H.PROJECT_ID = A.PID
		LEFT JOIN
		BIZ_PROJECT_PROPERTY I
		ON I.PROJECT_ID = A.PID
		INNER JOIN
		BIZ_LOAN_HANDLE_INFO J
		ON J.PROJECT_ID = A.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND A.STATUS=1 AND B.PRODUCT_TYPE = 2 AND A.IS_CHECHAN=0 AND
					A.PROJECT_TYPE IN(2,6)
				</if>
				<if
					test="( foreclosureFloorDate !=null and foreclosureFloorDate !='') or ( foreclosureFloorEndDate !=null and foreclosureFloorEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=2
					<if test="foreclosureFloorDate !=null and foreclosureFloorDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{foreclosureFloorDate},'yyyy-mm-dd')
					</if>
					<if
						test="foreclosureFloorEndDate !=null and foreclosureFloorEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{foreclosureFloorEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( mortgageDate !=null and mortgageDate !='') or ( mortgageEndDate !=null and mortgageEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=4
					<if test="mortgageDate !=null and mortgageDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{mortgageDate},'yyyy-mm-dd')
					</if>
					<if test="mortgageEndDate !=null and mortgageEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{mortgageEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( transferDate !=null and transferDate !='') or ( transferEndDate !=null and transferEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=5
					<if test="transferDate !=null and transferDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{transferDate},'yyyy-mm-dd')
					</if>
					<if test="transferEndDate !=null and transferEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{transferEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if
					test="( getNewLicenseDate !=null and getNewLicenseDate !='') or ( getNewLicenseEndDate !=null and getNewLicenseEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=6
					<if test="getNewLicenseDate !=null and getNewLicenseDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{getNewLicenseDate},'yyyy-mm-dd')
					</if>
					<if test="getNewLicenseEndDate !=null and getNewLicenseEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{getNewLicenseEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND I.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND I.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="transferOperator !=null and transferOperator !=''">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE
					HD.HANDLE_FLOW_ID=5 AND HD.OPERATOR LIKE '%${transferOperator}%')
				</if>
				<if test="loanBank !=null and loanBank !=''">
					AND G.NEW_LOAN_BANK IN(SELECT S1.PID FROM SYS_BANK_INFO S1 WHERE
					S1.BANK_NAME LIKE '%${loanBank}%')
				</if>
				<if test="applyUserName !=null and applyUserName !=''">
					AND F.CHINA_NAME LIKE '%${applyUserName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND C.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND D.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		) T
	</select>
	<!-- 业务汇总 -->
	<select id="queryBusinessSummary" resultMap="businessSummaryReportMap"
		parameterType="businessSummaryReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT A.PID AS PROJECT_ID,
		A.PROJECT_NAME,
		A.PROJECT_NUMBER,
		A.FORECLOSURE_STATUS,
		A.INNER_OR_OUT,
		B.PRODUCT_NAME,
		C.HOUSE_PROPERTY_CARD,
		C.SELLER_NAME,
		C.BUYER_NAME,
		D.LOAN_MONEY AS LOAN_AMT,
		AFH.REC_MONEY AS INTEREST,
		TO_CHAR(AFH.REC_DATE, 'yyyy-MM-dd') AS REC_INTEREST_DATE,
		F.NAME AS DEPT_NAME,
		F.ID AS DEPT_ID,
		A.PM_USER_ID AS PM_USER_ID,
		E.REAL_NAME AS PM_USER_NAME,
		G.PAYMENT_DATE AS PLAN_RECLOAN_DATE,
		TO_CHAR(BLF.REC_DATE, 'yyyy-MM-dd') AS LOAN_DATE,
		TO_CHAR(HD.FORECLOSURE_FLOOR_DATE, 'yyyy-MM-dd') AS FORECLOSURE_FLOOR_DATE,
		TO_CHAR(HD.CANCEL_MORTGAGE_DATE, 'yyyy-MM-dd') AS
		CANCEL_MORTGAGE_DATE,
		TO_CHAR(HD.TRANSFER_DATE, 'yyyy-MM-dd') AS TRANSFER_DATE,
		TO_CHAR(HD.GET_NEW_LICENSE_DATE, 'yyyy-MM-dd') AS GET_NEW_LICENSE_DATE,
		TO_CHAR(HD.MORTGAGE_DATE, 'yyyy-MM-dd') AS MORTGAGE_DATE,
		TO_CHAR(HD.GET_OLD_LICENSE_DATE, 'yyyy-MM-dd') AS GET_OLD_LICENSE_DATE,
		M.REPAYMENT_MONEY AS REC_MONEY,
		TO_CHAR(M.NEW_REPAYMENT_DATE, 'yyyy-MM-dd') AS REC_LOAN_DATE,
		M.STATUS AS REPAYMENT_STATUS,
		(CASE
		WHEN (D.LOAN_MONEY - M.REPAYMENT_MONEY) >= 0 THEN
		(D.LOAN_MONEY - M.REPAYMENT_MONEY)
		ELSE
		0
		END) AS REMAINING_RECMONEY,
		N.OVERDUE_FEE,
		N.OVERDUE_DAY,
		GET_EXTENSION_FEE(A.PID) AS EXTENSION_FEE,
		I.EXTENSION_DATE AS EXTENSION_DATE,
		0 AS FEE_TOTAL,
		TO_CHAR(S.BANK_NAME) AS OLD_LOAN_BANK,
		A.BUSINESS_SOURCE,
		Q.BUSINESS_SOURCE_STR,
		J.STATUS AS REC_FEE_STATUS,
		H.APPLY_HANDLE_STATUS,
		BLA.REAL_LOAN,
		BLA.POUNDAGE,
		CASE
		WHEN K.STATUS = 1 THEN
		L.NAME_
		ELSE
		CAST('' AS NVARCHAR2(55))
		END AS BIZ_HANDLE_DYNAMIC
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 0
		AND PROJECT_TYPE IN (2, 6)) A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_HANDLE_INFO H
		ON H.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_EXTENSION I
		ON I.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J
		ON J.PROJECT_ID = A.PID
		LEFT JOIN BIZ_HANDLE_WORKFLOW K
		ON K.PID = H.PID
		LEFT JOIN ACT_RU_TASK L
		ON K.EXECUTION_ID = L.EXECUTION_ID_
		LEFT JOIN BIZ_LOAN_REPAYMENT M
		ON M.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_OVERDUE_FEE N
		ON N.PROJECT_ID = A.PID
		LEFT JOIN (SELECT P.PID,WM_CONCAT(S.BANK_NAME) BANK_NAME
		FROM BIZ_ORIGINAL_LOAN BO, SYS_BANK_INFO S, BIZ_PROJECT P
		WHERE S.PID = BO.OLD_LOAN_BANK
		AND BO.PROJECT_ID = P.PID
		AND BO.STATUS = 1
		GROUP BY P.PID) S
		ON S.PID = A.PID
		LEFT JOIN BUSINESS_SOURCE_V Q
		ON Q.PID = A.PID
		LEFT JOIN (SELECT REC_MONEY, REC_DATE, FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE
		WHERE REC_PRO = 1) AFH
		ON AFH.FINANCE_HANDLE_ID = J.PID

		LEFT JOIN (SELECT HD.HANDLE_ID,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 2 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS FORECLOSURE_FLOOR_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 3 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS GET_OLD_LICENSE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 4 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS CANCEL_MORTGAGE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 5 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS TRANSFER_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 6 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS GET_NEW_LICENSE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 7 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS MORTGAGE_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		GROUP BY HD.HANDLE_ID) HD
		ON HD.HANDLE_ID = H.PID
		LEFT JOIN (SELECT AFH.FINANCE_HANDLE_ID,
		SUM(CASE
		WHEN AFH.REC_PRO IN (3, 4, 5, 6) THEN
		AFH.REC_MONEY
		ELSE
		0
		END) AS REAL_LOAN,
		SUM(CASE
		WHEN AFH.REC_PRO IN (2) THEN
		AFH.REC_MONEY
		ELSE
		0
		END) AS POUNDAGE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		GROUP BY AFH.FINANCE_HANDLE_ID) BLA
		ON BLA.FINANCE_HANDLE_ID = J.PID
		LEFT JOIN (
		SELECT AFH.REC_DATE,AFH.FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE AFH.REC_PRO = 3) BLF
		ON BLF.FINANCE_HANDLE_ID = J.PID

		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND B.PRODUCT_TYPE = 2
				</if>
				<if
					test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					AND J.PID IN (SELECT AFH.FINANCE_HANDLE_ID
					FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
					WHERE AFH.REC_PRO = 3
					<if test="loanDate !=null and loanDate !=''">
						AND AFH.REC_DATE <![CDATA[>=]]>
						to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND AFH.REC_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{loanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					) AND J.STATUS=3
				</if>
				<if
					test="( handleFlowStartDate !=null and handleFlowStartDate !='') or ( handleFlowEndDate !=null and handleFlowEndDate !='')">
					AND H.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=#{handleFlowId}
					<if test="handleFlowStartDate !=null and handleFlowStartDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{handleFlowStartDate},'yyyy-mm-dd')
					</if>
					<if test="handleFlowEndDate !=null and handleFlowEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{handleFlowEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = H.PID
					)
				</if>
				<if test="oldLoanBank !=null and oldLoanBank !=''">
					AND S.BANK_NAME LIKE '%${oldLoanBank}%'
				</if>
				<if test="bizHandleDynamic !=null and bizHandleDynamic !=''">
					AND L.NAME_ =#{bizHandleDynamic}
				</if>
				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="loanAmtMax !=null and loanAmtMax >0">
					AND D.LOAN_MONEY <![CDATA[<=]]>
					#{loanAmtMax}
				</if>
				<if test="foreclosureStatus !=null and foreclosureStatus >0">
					AND A.FORECLOSURE_STATUS = #{foreclosureStatus}
				</if>
				<if test="innerOrOut !=null and innerOrOut >0">
					AND A.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="repaymentStatus !=null and repaymentStatus ==1">
					AND (M.STATUS = 1 OR M.STATUS = 0 OR M.STATUS IS NULL)
				</if>
				<if test="repaymentStatus !=null and repaymentStatus ==2">
					AND M.STATUS = 2
				</if>
				<if test="recFeeStatus !=null and recFeeStatus >0">
					AND J.STATUS = #{recFeeStatus}
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND Q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND A.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		ORDER BY A.REQUEST_DTTM DESC
		<if test="page!=-1">
	<![CDATA[
	
	 ) T
	WHERE ROWNUM <=#{page}*#{rows}
	) D
	WHERE D.RN > ((#{page}-1)*#{rows})
	]]>
		</if>
	</select>
	<!-- 业务汇总总数 -->
	<select id="getBusinessSummaryTotal" resultType="Integer"
		parameterType="businessSummaryReport">
		SELECT COUNT(1) FROM
		( SELECT A.PID AS PROJECT_ID
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 0
		AND PROJECT_TYPE IN (2, 6)) A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_HANDLE_INFO H
		ON H.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_EXTENSION I
		ON I.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J
		ON J.PROJECT_ID = A.PID
		LEFT JOIN BIZ_HANDLE_WORKFLOW K
		ON K.PID = H.PID
		LEFT JOIN ACT_RU_TASK L
		ON K.EXECUTION_ID = L.EXECUTION_ID_
		LEFT JOIN BIZ_LOAN_REPAYMENT M
		ON M.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_OVERDUE_FEE N
		ON N.PROJECT_ID = A.PID
		LEFT JOIN (SELECT P.PID,WM_CONCAT(S.BANK_NAME) BANK_NAME
		FROM BIZ_ORIGINAL_LOAN BO, SYS_BANK_INFO S, BIZ_PROJECT P
		WHERE S.PID = BO.OLD_LOAN_BANK
		AND BO.PROJECT_ID = P.PID
		AND BO.STATUS = 1
		GROUP BY P.PID) S
		ON S.PID = A.PID
		LEFT JOIN BUSINESS_SOURCE_V Q
		ON Q.PID = A.PID
		LEFT JOIN (SELECT REC_MONEY, REC_DATE, FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE
		WHERE REC_PRO = 1) AFH
		ON AFH.FINANCE_HANDLE_ID = J.PID

		LEFT JOIN (SELECT HD.HANDLE_ID,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 2 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS FORECLOSURE_FLOOR_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 3 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS GET_OLD_LICENSE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 4 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS CANCEL_MORTGAGE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 5 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS TRANSFER_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 6 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS GET_NEW_LICENSE_DATE,
		MAX(CASE
		WHEN HD.HANDLE_FLOW_ID = 7 THEN
		HD.FINISH_DATE
		ELSE
		NULL
		END) AS MORTGAGE_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		GROUP BY HD.HANDLE_ID) HD
		ON HD.HANDLE_ID = H.PID
		LEFT JOIN (SELECT AFH.FINANCE_HANDLE_ID,
		SUM(CASE
		WHEN AFH.REC_PRO IN (3, 4, 5, 6) THEN
		AFH.REC_MONEY
		ELSE
		0
		END) AS REAL_LOAN,
		SUM(CASE
		WHEN AFH.REC_PRO IN (2) THEN
		AFH.REC_MONEY
		ELSE
		0
		END) AS POUNDAGE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		GROUP BY AFH.FINANCE_HANDLE_ID) BLA
		ON BLA.FINANCE_HANDLE_ID = J.PID
		LEFT JOIN (
		SELECT AFH.REC_DATE,AFH.FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE AFH.REC_PRO = 3) BLF
		ON BLF.FINANCE_HANDLE_ID = J.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND B.PRODUCT_TYPE = 2
				</if>
				<if
					test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					AND J.PID IN (SELECT AFH.FINANCE_HANDLE_ID
					FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
					WHERE AFH.REC_PRO = 3
					<if test="loanDate !=null and loanDate !=''">
						AND AFH.REC_DATE <![CDATA[>=]]>
						to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND AFH.REC_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{loanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					) AND J.STATUS=3
				</if>
				<if
					test="( handleFlowStartDate !=null and handleFlowStartDate !='') or ( handleFlowEndDate !=null and handleFlowEndDate !='')">
					AND H.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=#{handleFlowId}
					<if test="handleFlowStartDate !=null and handleFlowStartDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{handleFlowStartDate},'yyyy-mm-dd')
					</if>
					<if test="handleFlowEndDate !=null and handleFlowEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{handleFlowEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = H.PID
					)
				</if>
				<if test="oldLoanBank !=null and oldLoanBank !=''">
					AND S.BANK_NAME LIKE '%${oldLoanBank}%'
				</if>
				<if test="bizHandleDynamic !=null and bizHandleDynamic !=''">
					AND L.NAME_ =#{bizHandleDynamic}
				</if>
				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="loanAmtMax !=null and loanAmtMax >0">
					AND D.LOAN_MONEY <![CDATA[<=]]>
					#{loanAmtMax}
				</if>
				<if test="foreclosureStatus !=null and foreclosureStatus >0">
					AND A.FORECLOSURE_STATUS = #{foreclosureStatus}
				</if>
				<if test="innerOrOut !=null and innerOrOut >0">
					AND A.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="repaymentStatus !=null and repaymentStatus ==1">
					AND (M.STATUS = 1 OR M.STATUS = 0 OR M.STATUS IS NULL)
				</if>
				<if test="repaymentStatus !=null and repaymentStatus ==2">
					AND M.STATUS = 2
				</if>
				<if test="recFeeStatus !=null and recFeeStatus >0">
					AND J.STATUS = #{recFeeStatus}
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND Q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND A.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		) T
	</select>

	<select id="queryChechan" resultMap="chechanReportMap"
		parameterType="chechanReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT A.PID AS PROJECT_ID,
		A.PROJECT_NAME,
		A.PROJECT_NUMBER,
		A.INNER_OR_OUT,
		A.IS_CHECHAN,
		TO_CHAR(A.CHECHAN_DATE, 'yyyy-MM-dd hh24:mi:ss') AS CHECHAN_DATE,
		A.CHECHAN_USER_ID,
		SU.REAL_NAME AS CHECHAN_USER,
		A.CHECHAN_CAUSE,
		B.PRODUCT_NAME,
		C.SELLER_NAME,
		C.BUYER_NAME,
		D.LOAN_MONEY AS LOAN_AMT,
		SBI.BANK_NAME AS NEW_LOAN_BANK,
		G.PAYMENT_TYPE,
		P.CHINA_NAME,
		AFH.REC_MONEY AS INTEREST,
		TO_CHAR(AFH.REC_DATE, 'yyyy-MM-dd') AS REC_INTEREST_DATE,
		F.NAME AS DEPT_NAME,
		F.ID AS DEPT_ID,
		A.PM_USER_ID AS PM_USER_ID,
		E.REAL_NAME AS PM_USER_NAME,
		TO_CHAR(S.BANK_NAME) AS OLD_LOAN_BANK,
		A.BUSINESS_SOURCE,
		V.BUSINESS_SOURCE_STR AS BUSINESS_SOURCE_STR

		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 1
		AND PROJECT_TYPE = 2
		AND IS_CLOSED=2
		AND CHECHAN_USER_ID IS NOT NULL
		) A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J
		ON J.PROJECT_ID = A.PID
		LEFT JOIN (SELECT * FROM CUS_PERSON WHERE RELATION_TYPE = 1) P
		ON P.ACCT_ID = A.ACCT_ID
		LEFT JOIN (SELECT P.PID,WM_CONCAT(S.BANK_NAME) AS BANK_NAME
		FROM BIZ_ORIGINAL_LOAN BO, SYS_BANK_INFO S, BIZ_PROJECT P
		WHERE S.PID = BO.OLD_LOAN_BANK
		AND BO.PROJECT_ID = P.PID
		AND BO.STATUS = 1
		GROUP BY P.PID) S
		ON S.PID = A.PID
		LEFT JOIN (SELECT REC_MONEY, REC_DATE, FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE
		WHERE REC_PRO = 1) AFH
		ON AFH.FINANCE_HANDLE_ID = J.PID
		LEFT JOIN BUSINESS_SOURCE_V V
		ON V.PID = A.PID
		LEFT JOIN SYS_BANK_INFO SBI
		ON SBI.PID = G.NEW_LOAN_BANK
		LEFT JOIN SYS_USER SU
		ON SU.PID = A.CHECHAN_USER_ID
		<where>
			<trim>
				AND P.RELATION_TYPE=1
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND B.PRODUCT_TYPE = 2
				</if>
				<if
					test="newLoanBank !=null and newLoanBank != '' and newLoanBank != '-1'">
					AND G.NEW_LOAN_BANK = TO_NUMBER('${newLoanBank}')
				</if>
				<if test="applyName !=null and applyName !=''">
					AND P.CHINA_NAME LIKE '%${applyName}%'
				</if>
				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="loanAmtMax !=null and loanAmtMax >0">
					AND D.LOAN_MONEY <![CDATA[<=]]>
					#{loanAmtMax}
				</if>

				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		ORDER BY A.CHECHAN_DATE DESC
		<if test="page!=-1">
	<![CDATA[
	) T
	WHERE ROWNUM <=#{page}*#{rows}
	) D
	WHERE D.RN > ((#{page}-1)*#{rows})
	]]>
		</if>
	</select>
	<!-- 撤单业务汇总总数 -->
	<select id="getChechanTotal" resultType="Integer" parameterType="chechanReport">
		SELECT COUNT(1) FROM
		( SELECT A.PID AS PROJECT_ID
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 1
		AND PROJECT_TYPE = 2
		AND CHECHAN_USER_ID IS NOT NULL
		AND IS_CLOSED=2) A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J
		ON J.PROJECT_ID = A.PID
		LEFT JOIN (SELECT * FROM CUS_PERSON WHERE RELATION_TYPE = 1) P
		ON P.ACCT_ID = A.ACCT_ID
		LEFT JOIN OLD_LOAN_BANK_V S
		ON S.PID = A.PID
		LEFT JOIN (SELECT REC_MONEY, REC_DATE, FINANCE_HANDLE_ID
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE
		WHERE REC_PRO = 1) AFH
		ON AFH.FINANCE_HANDLE_ID = J.PID
		LEFT JOIN BUSINESS_SOURCE_V V
		ON V.PID = P.PID
		LEFT JOIN SYS_BANK_INFO SBI
		ON SBI.PID = G.NEW_LOAN_BANK
		LEFT JOIN SYS_USER SU
		ON SU.PID = A.CHECHAN_USER_ID
		<where>
			<trim>
				AND P.RELATION_TYPE=1
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND B.PRODUCT_TYPE = 2
				</if>
				<if
					test="newLoanBank !=null and newLoanBank != '' and newLoanBank != '-1'">
					AND G.NEW_LOAN_BANK = TO_NUMBER('${newLoanBank}')
				</if>
				<if test="applyName !=null and applyName !=''">
					AND P.CHINA_NAME LIKE '%${applyName}%'
				</if>
				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="loanAmtMax !=null and loanAmtMax >0">
					AND D.LOAN_MONEY <![CDATA[<=]]>
					#{loanAmtMax}
				</if>

				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		) T
	</select>

	<!-- 根据条件查询业绩数据 -->
	<select id="queryTrackRecordReport" resultMap="trackRecordMap"
		parameterType="com.xlkfinance.bms.rpc.report.TrackRecordReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT PRO.PROJECT_NAME,
		PRO.PID AS PROJECT_ID,
		PRO.PROJECT_NUMBER,
		PRO.INNER_OR_OUT,
		SU.REAL_NAME AS PM_USER_NAME,
		SO.NAME DEPT_NAME,
		SO.ID DEPT_ID,
		PDU.PRODUCT_NAME,
		I.HOUSE_PROPERTY_CARD,
		I.SELLER_NAME,
		I.BUYER_NAME,
		(SELECT S.BANK_NAME
		FROM SYS_BANK_INFO S
		WHERE S.PID = G.NEW_LOAN_BANK) AS NEW_LOAN_BANK,
		S.BANK_NAME AS OLD_LOAN_BANK,
		H.LOAN_MONEY as LOAN_AMT,
		(SELECT SUM(AFH.REC_MONEY)
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE BL.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO IN (2)) AS INTEREST,
		pro.complete_dttm REQUEST_DATE,
		(SELECT AFH.REC_DATE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE AFH.FINANCE_HANDLE_ID = BL.PID
		AND AFH.REC_PRO = 3) AS LOAN_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 2
		AND HD.HANDLE_ID = J.PID) AS FORECLOSURE_FLOOR_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_ID = J.PID
		AND HD.HANDLE_FLOW_ID = 3) AS GET_OLD_LICENSE_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 4
		AND HD.HANDLE_ID = J.PID) AS CANCEL_MORTGAGE_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 5
		AND HD.HANDLE_ID = J.PID) AS TRANSFER_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 6
		AND HD.HANDLE_ID = J.PID) AS GET_NEW_LICENSE_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 7
		AND HD.HANDLE_ID = J.PID) AS MORTGAGE_DATE,
		(SELECT HD.FINISH_DATE
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		WHERE HD.HANDLE_FLOW_ID = 10
		AND HD.HANDLE_ID = J.PID) AS CANCEL_GUARANTEE_DATE,
		N.OVERDUE_FEE,
		N.OVERDUE_DAY,
		G.EXTENSION_DAYS AS EXTENSION_DAYS,
		G.EXTENSION_FEE,
		PRO.DECLARATION,
		M.NEW_REPAYMENT_DATE AS REC_LOAN_DATE,
		(SELECT U.REAL_NAME
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		INNER JOIN SYS_USER U
		ON HD.CURRENT_HANDLE_USER_ID = U.PID
		WHERE HD.HANDLE_FLOW_ID=2 AND HD.HANDLE_ID = J.PID)AS HOUSE_CLERK_NAME,
		(SELECT U.REAL_NAME
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		INNER JOIN SYS_USER U
		ON HD.CURRENT_HANDLE_USER_ID = U.PID
		WHERE HD.HANDLE_FLOW_ID=4 AND HD.HANDLE_ID = J.PID)AS LOGOUT_NAME,
		(SELECT U.REAL_NAME
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		INNER JOIN SYS_USER U
		ON HD.CURRENT_HANDLE_USER_ID = U.PID
		WHERE HD.HANDLE_FLOW_ID=5 AND HD.HANDLE_ID = J.PID)AS ASSIGNED_NAME,
		(SELECT U.REAL_NAME
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		INNER JOIN SYS_USER U
		ON HD.CURRENT_HANDLE_USER_ID = U.PID
		WHERE HD.HANDLE_FLOW_ID=6 AND HD.HANDLE_ID = J.PID)AS NEW_CARD_NAME,
		(SELECT U.REAL_NAME
		FROM BIZ_LOAN_HANDLE_DYNAMIC HD
		INNER JOIN SYS_USER U
		ON HD.CURRENT_HANDLE_USER_ID = U.PID
		WHERE HD.HANDLE_FLOW_ID=7 AND HD.HANDLE_ID = J.PID)AS MORTGAGE_NAME
		FROM BIZ_PROJECT PRO
		LEFT JOIN SYS_USER SU
		ON PRO.PM_USER_ID = SU.PID
		LEFT JOIN SYS_ORG_INFO SO
		ON SU.ORG_ID = SO.ID
		LEFT JOIN BIZ_PRODUCT PDU
		ON PRO.PRODUCT_ID = PDU.PID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE H
		ON H.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY I
		ON I.PROJECT_ID = PRO.PID
		INNER JOIN BIZ_LOAN_HANDLE_INFO J
		ON J.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_LOAN_OVERDUE_FEE N
		ON N.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_LOAN_REPAYMENT M
		ON M.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE BL
		ON BL.PROJECT_ID = PRO.PID
		LEFT JOIN OLD_LOAN_BANK_V S
		ON S.PID = A.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND pro.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND pro.STATUS=1 AND pro.project_type = 2 AND
					pro.IS_CHECHAN=0 and pdu.product_type = 2
				</if>
				<if
					test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					AND BL.PID IN (SELECT AFH.FINANCE_HANDLE_ID
					FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
					WHERE AFH.REC_PRO = 3
					<if test="loanDate !=null and loanDate !=''">
						AND AFH.REC_DATE <![CDATA[>=]]>
						to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND AFH.REC_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{loanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					)
				</if>
				<if
					test="( handleFlowStartDate !=null and handleFlowStartDate !='') or ( handleFlowEndDate !=null and handleFlowEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=#{handleFlowId}
					<if test="handleFlowStartDate !=null and handleFlowStartDate !=''">
						AND HD.FINISH_DATE <![CDATA[>=]]>
						to_date(#{handleFlowStartDate},'yyyy-mm-dd')
					</if>
					<if test="handleFlowEndDate !=null and handleFlowEndDate !=''">
						AND HD.FINISH_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{handleFlowEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if test="condition !=null and condition !=''">
					AND (I.BUYER_NAME LIKE '%${condition}%' OR I.SELLER_NAME
					LIKE '%${condition}%' OR I.HOUSE_NAME LIKE '%${condition}%')
				</if>

				<if test="newLoanBank !=null and newLoanBank !=''">
					AND G.NEW_LOAN_BANK IN(SELECT S1.PID FROM SYS_BANK_INFO
					S1 WHERE S1.BANK_NAME LIKE '%${newLoanBank}%')
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND SU.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND so.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND PDU.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND PRO.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="housePropertyCard !=null and housePropertyCard !=''">
					AND I.HOUSE_PROPERTY_CARD LIKE '%${housePropertyCard}%'
				</if>
				<if test="innerOrOut != null and innerOrOut >0">
					AND PRO.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="projectId !=null and projectId >0">
					AND PRO.PID = #{projectId}
				</if>
			</trim>
		</where>
		<if test="page!=-1">
			<![CDATA[
			ORDER BY PRO.COMPLETE_DTTM DESC
			) T
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>
	<!-- 根据条件查询业绩总数 -->
	<select id="queryTrackRecordReportTotal" parameterType="com.xlkfinance.bms.rpc.report.TrackRecordReport"
		resultType="Integer">
		SELECT COUNT(*) FROM (
		SELECT
		PRO.PID AS PROJECT_ID
		FROM BIZ_PROJECT PRO
		LEFT JOIN SYS_USER SU
		ON PRO.PM_USER_ID = SU.PID
		LEFT JOIN SYS_ORG_INFO SO
		ON SU.ORG_ID = SO.ID
		LEFT JOIN BIZ_PRODUCT PDU
		ON PRO.PRODUCT_ID = PDU.PID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G
		ON G.PROJECT_ID = pro.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE H
		ON H.PROJECT_ID = pro.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY I
		ON I.PROJECT_ID = pro.PID
		INNER JOIN BIZ_LOAN_HANDLE_INFO J
		ON J.PROJECT_ID = Pro.PID
		LEFT JOIN BIZ_LOAN_OVERDUE_FEE N
		ON N.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_LOAN_REPAYMENT M
		ON M.PROJECT_ID = PRO.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE BL
		ON BL.PROJECT_ID = PRO.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND PRO.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND PRO.STATUS=1 AND PRO.PROJECT_TYPE = 2 AND
					PRO.IS_CHECHAN=0 AND PDU.PRODUCT_TYPE = 2
				</if>
				<if
					test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					AND BL.PID IN (SELECT AFH.FINANCE_HANDLE_ID
					FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
					WHERE AFH.REC_PRO = 3
					<if test="loanDate !=null and loanDate !=''">
						AND AFH.REC_DATE <![CDATA[>=]]>
						to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND AFH.REC_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{loanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					)
				</if>
				<if
					test="( handleFlowStartDate !=null and handleFlowStartDate !='') or ( handleFlowEndDate !=null and handleFlowEndDate !='')">
					AND J.PID IN (SELECT HD.HANDLE_ID
					FROM BIZ_LOAN_HANDLE_DYNAMIC HD
					WHERE hd.handle_flow_id=#{handleFlowId}
					<if test="handleFlowStartDate !=null and handleFlowStartDate !=''">
						AND hd.finish_date <![CDATA[>=]]>
						to_date(#{handleFlowStartDate},'yyyy-mm-dd')
					</if>
					<if test="handleFlowEndDate !=null and handleFlowEndDate !=''">
						and hd.finish_date <![CDATA[<=]]>
						TO_DATE(CONCAT(#{handleFlowEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
					AND HD.HANDLE_ID = J.PID
					)
				</if>
				<if test="condition !=null and condition !=''">
					AND (I.BUYER_NAME LIKE '%${condition}%' OR I.SELLER_NAME
					LIKE '%${condition}%' OR I.HOUSE_NAME LIKE '%${condition}%')
				</if>

				<if test="newLoanBank !=null and newLoanBank !=''">
					AND G.NEW_LOAN_BANK IN(SELECT S1.PID FROM SYS_BANK_INFO
					S1 WHERE S1.BANK_NAME LIKE '%${newLoanBank}%')
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND SU.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND so.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND PRO.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="housePropertyCard !=null and housePropertyCard !=''">
					AND I.HOUSE_PROPERTY_CARD LIKE '%${housePropertyCard}%'
				</if>
				<if test="innerOrOut != null and innerOrOut >0">
					AND PRO.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="projectId !=null and projectId >0">
					AND PRO.PID = #{projectId}
				</if>
			</trim>
		</where>
		) T
	</select>

	<!-- 收费统计报表分页查询 -->
	<select id="queryCollectFeeReport" resultMap="collectFeeReportMap"
		parameterType="collectFeeReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT A.PID AS PROJECT_ID,
		A.PROJECT_NAME,
		A.PROJECT_NUMBER,
		A.FORECLOSURE_STATUS,
		A.INNER_OR_OUT,
		B.PRODUCT_NAME,
		C.HOUSE_NAME,
		C.HOUSE_PROPERTY_CARD,
		C.SELLER_NAME,
		C.BUYER_NAME,
		D.LOAN_MONEY AS LOAN_AMT,
		F.NAME AS DEPT_NAME,
		F.ID AS DEPT_ID,
		A.PM_USER_ID AS PM_USER_ID,
		E.REAL_NAME AS PM_USER_NAME,
		(SELECT T.LOOKUP_VAL
		FROM SYS_LOOKUP_INFO_V T
		WHERE T.LOOKUP_TYPE = 'BUSINESS_SOURCE'
		AND T.LOOKUP_VAL_ID = A.BUSINESS_SOURCE) AS BUSINESS_SOURCE_NAME,
		(SELECT V.BUSINESS_SOURCE_STR FROM BUSINESS_SOURCE_V V WHERE V.PID = A.PID)
		BUSINESS_SOURCE_STR,
		(SELECT T.REC_MONEY
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE T
		WHERE T.FINANCE_HANDLE_ID = G.PID
		AND T.REC_PRO = 1) AS CONSULT_FEE,
		(SELECT T.REC_MONEY
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE T
		WHERE T.FINANCE_HANDLE_ID = G.PID
		AND T.REC_PRO = 2) AS POUNDAGE,
		(SELECT T.REC_MONEY
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE T
		WHERE T.FINANCE_HANDLE_ID = G.PID
		AND T.REC_PRO = 7) AS BROKERAGE,
		(SELECT TO_CHAR(T.REC_DATE, 'yyyy-MM-dd')
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE T
		WHERE T.FINANCE_HANDLE_ID = G.PID
		AND T.REC_PRO = 1) AS COLLECT_FEE_DATE
		FROM BIZ_PROJECT A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE G
		ON G.PROJECT_ID = A.PID
		<where>
			<trim>
				A.IS_CHECHAN = 1
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND A.STATUS=1 AND B.PRODUCT_TYPE = 2
				</if>

				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="foreclosureStatus !=null and foreclosureStatus >0">
					AND A.FORECLOSURE_STATUS = #{foreclosureStatus}
				</if>
				<if test="innerOrOut !=null and innerOrOut >0">
					AND A.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		<if test="page!=-1">
	<![CDATA[
	) T
	WHERE ROWNUM <=#{page}*#{rows}
	) D
	WHERE D.RN > ((#{page}-1)*#{rows})
	]]>
		</if>
	</select>
	<!-- 收费统计报表总数 -->
	<select id="getCollectFeeReportTotal" resultType="Integer"
		parameterType="collectFeeReport">
		SELECT COUNT(1) FROM
		(SELECT A.PID
		FROM BIZ_PROJECT A
		INNER JOIN BIZ_PRODUCT B
		ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_PROPERTY C
		ON C.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D
		ON D.PROJECT_ID = A.PID
		LEFT JOIN SYS_USER E
		ON E.PID = A.PM_USER_ID
		LEFT JOIN SYS_ORG_INFO F
		ON F.ID = E.ORG_ID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE G
		ON G.PROJECT_ID = A.PID
		<where>
			<trim>
				A.IS_CHECHAN = 1
				<if test="userIds!=null and userIds.size()>0">
					AND A.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="1==1">
					AND A.STATUS=1 AND B.PRODUCT_TYPE = 2
				</if>

				<if test="loanAmt !=null and loanAmt >0">
					AND D.LOAN_MONEY <![CDATA[>=]]>
					#{loanAmt}
				</if>
				<if test="foreclosureStatus !=null and foreclosureStatus >0">
					AND A.FORECLOSURE_STATUS = #{foreclosureStatus}
				</if>
				<if test="innerOrOut !=null and innerOrOut >0">
					AND A.INNER_OR_OUT = #{innerOrOut}
				</if>
				<if test="buyerName !=null and buyerName !=''">
					AND C.BUYER_NAME LIKE '%${buyerName}%'
				</if>
				<if test="sellerName !=null and sellerName !=''">
					AND C.SELLER_NAME LIKE '%${sellerName}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
				<if test="deptName !=null and deptName !=''">
					AND F.NAME LIKE '%${deptName}%'
				</if>
				<if test="productName !=null and productName !=''">
					AND B.PRODUCT_NAME LIKE '%${productName}%'
				</if>
				<if test="businessSource !=null and businessSource >0">
					AND A.BUSINESS_SOURCE = #{businessSource}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND A.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectId !=null and projectId >0">
					AND A.PID = #{projectId}
				</if>
			</trim>
		</where>
		) T
	</select>
	<!--赎楼贷新增明细 -->
	<select id="queryNewForeclosureReport" resultMap="ForeclosureMap"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT P.PID AS PROJECT_ID,
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		AFH.REC_MONEY,
		E.REAL_NAME,
		v.BUSINESS_SOURCE_STR,
		TO_CHAR(AFH.REC_DATE, 'YYYY-MM-DD') AS NEW_REC_MONTH
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2
		<if test="includeWt ==0">
			AND 1=0
		</if>
		<if test="includeWt ==1">
			AND 1=1
		</if>
		)
		)P
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE FH on P.PID = FH.PROJECT_ID
		INNER JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH ON FH.PID =
		AFH.FINANCE_HANDLE_ID
		LEFT JOIN SYS_USER E ON E.PID = P.PM_USER_ID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = P.PID
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==1">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD')<![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==2">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<]]>
					#{endDate}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND p.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND p.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
			</trim>
		</where>
		and AFH.REC_PRO = 3
		AND FH.STATUS = 3
		GROUP BY
		TO_CHAR(AFH.REC_DATE,'YYYY-MM-DD'),
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		AFH.REC_MONEY,
		E.REAL_NAME,
		P.PID,
		v.BUSINESS_SOURCE_STR
		<if test="page!=-1">
	<![CDATA[
	) T
	WHERE ROWNUM <=#{page}*#{rows}
	) D
	WHERE D.RN > ((#{page}-1)*#{rows})
	]]>
		</if>

	</select>

	<!-- 新增详情总数 -->
	<select id="getNewForeclosureReportTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport">
		SELECT COUNT(1) FROM
		(SELECT P.PID AS PROJECT_ID
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2
		<if test="includeWt ==0">
			AND 1=0
		</if>
		<if test="includeWt ==1">
			AND 1=1
		</if>
		)
		)P
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE FH on p.pid = FH.PROJECT_ID
		INNER JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH ON FH.PID =
		AFH.FINANCE_HANDLE_ID
		LEFT JOIN SYS_USER E ON E.PID = P.PM_USER_ID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = P.PID
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==1">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD')<![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==2">
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(AFH.REC_DATE,'YYYYMMDD') <![CDATA[<]]>
					#{endDate}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND p.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND p.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
			</trim>
		</where>
		and AFH.REC_PRO = 3
		AND FH.STATUS = 3
		GROUP BY
		TO_CHAR(AFH.REC_DATE,'YYYY-MM-DD'),
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		AFH.REC_MONEY,
		E.REAL_NAME,
		P.PID) T
	</select>

	<!--赎楼贷结清明细 -->
	<select id="querySquareForeclosureReport" resultMap="ForeclosureMap"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT P.PID AS PROJECT_ID,
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		R.REPAYMENT_MONEY AS REC_MONEY,
		E.REAL_NAME,
		V.BUSINESS_SOURCE_STR,
		TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYY-MM-DD') AS NEW_REC_MONTH
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2
		<if test="includeWt ==0">
			AND 1=0
		</if>
		<if test="includeWt ==1">
			AND 1=1
		</if>
		)
		)P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON P.PID = R.PROJECT_ID
		LEFT JOIN SYS_USER E ON E.PID = P.PM_USER_ID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = P.PID
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==1">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD')<![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==2">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<]]>
					#{endDate}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND p.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND p.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
			</trim>
		</where>
		AND R.STATUS = 2
		GROUP BY TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYY-MM-DD'),
		P.PID,
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		R.REPAYMENT_MONEY,
		E.REAL_NAME,
		V.BUSINESS_SOURCE_STR
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=${page}*${rows}
			) D
			WHERE D.RN > ((${page}-1)*${rows})
			]]>
		</if>

	</select>

	<!-- 结清详情总数 -->
	<select id="getSquareForeclosureReportTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport">
		SELECT COUNT(1) FROM
		(SELECT p.PID AS PROJECT_ID,
		p.PROJECT_NAME,
		p.PROJECT_NUMBER,
		R.REPAYMENT_MONEY AS REC_MONEY,
		E.REAL_NAME,
		TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYY-MM-DD') AS NEW_REC_MONTH
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2
		<if test="includeWt ==0">
			AND 1=0
		</if>
		<if test="includeWt ==1">
			AND 1=1
		</if>
		)
		)P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON P.PID = R.PROJECT_ID
		LEFT JOIN SYS_USER E ON E.PID = P.PM_USER_ID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = P.PID
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==1">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD')<![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<=]]>
					#{endDate}
				</if>
				<if test="chooseMonthOrWeek ==2">
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[>=]]>
					#{fromDate}
					AND TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYYMMDD') <![CDATA[<]]>
					#{endDate}
				</if>
				<if test="projectName !=null and projectName !=''">
					AND p.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="projectNumber !=null and projectNumber !=''">
					AND p.PROJECT_NUMBER LIKE '%${projectNumber}%'
				</if>
				<if test="pmUserName !=null and pmUserName !=''">
					AND E.REAL_NAME LIKE '%${pmUserName}%'
				</if>
			</trim>
		</where>
		AND R.STATUS = 2
		GROUP BY TO_CHAR(R.NEW_REPAYMENT_DATE,'YYYY-MM-DD'),
		P.PID,
		P.PROJECT_NAME,
		P.PROJECT_NUMBER,
		R.REPAYMENT_MONEY,
		E.REAL_NAME) T
	</select>


	<!-- 查询赎楼贷业务 -->
	<select id="queryForeclosureReport" resultMap="ForeclosureMap"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport"
		statementType="STATEMENT">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT RE_MONTH REPAYMENT_MONTH_ID,
		NEW_COUNT,
		NEW_MONEY, SQUARE_COUNT, SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT AS SUM_NEW_COUNT,
		LJ_NEW_MONEY AS SUM_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,NEW_COUNT,NEW_MONEY,
		SQUARE_COUNT, SQUARE_MONEY,ING_COUNT,ING_MONEY,LJ_NEW_COUNT,LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) AS NEW_COUNT,MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(SUM(ING_COUNT)) AS ING_COUNT,TO_CHAR(SUM(ING_MONEY)) AS
		ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS LJ_NEW_COUNT, TO_CHAR(MAX(LJ_NEW_MONEY)) AS LJ_NEW_MONEY,
		'1' order_fld
		FROM
		( SELECT *
		FROM
		(SELECT T.RE_MONTH,0 NEW_COUNT,0 NEW_MONEY,0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT,0 AS ING_MONEY,
		SUM(NVL(S.NEW_COUNT,0)) OVER(PARTITION BY 1 ORDER BY T.RE_MONTH)
		LJ_NEW_COUNT,
		SUM(NVL(S.NEW_MONEY,0)) OVER(PARTITION BY 1 ORDER BY T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		UNION
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		) T,
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		ORDER BY 1
		) S
		WHERE T.RE_MONTH = S.RE_MONTH(+)
		GROUP BY T.RE_MONTH,NVL(S.NEW_COUNT,0),NVL(S.NEW_MONEY,0)
		ORDER BY 1
		) LJ
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		UNION ALL

		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY, 0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY, 0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT,0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		*
		FROM
		( SELECT RE_MONTH, 0 AS NEW_COUNT,0 AS NEW_MONEY, 0 AS SQUARE_COUNT, 0
		AS SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY 1 ORDER BY RE_MONTH) -
		SUM(SQUARE_COUNT) OVER(PARTITION BY 1 ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY 1 ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY 1 ORDER BY RE_MONTH) ING_MONEY,
		0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONE
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) NEW_COUNT, MAX(NEW_MONEY) NEW_MONEY,MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY,0 AS
		LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		GROUP BY
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT, 0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		GROUP BY
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) T
		GROUP BY
		RE_MONTH
		) ZT
		GROUP BY RE_MONTH,NEW_COUNT,NEW_MONEY,SQUARE_COUNT,SQUARE_MONEY
		ORDER BY 1,2,3,4
		) ZT
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH
		UNION ALL
		<!-- 求合计 -->
		SELECT
		'合计' RE_MONTH,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		'2' order_fld
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY <!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH
		ORDER BY 1
		) T
		) A
		ORDER BY order_fld,1
		) B
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=${page}*${rows}
			) D
			WHERE D.RN > ((${page}-1)*${rows})
			]]>
		</if>
	</select>

	<!-- 根据条件查询赎楼贷业务总数 -->
	<select id="getForeclosureReportTotal" parameterType="com.xlkfinance.bms.rpc.report.ForeclosureReport"
		resultType="Integer" statementType="STATEMENT">

		SELECT COUNT(1)
		FROM (
		SELECT RE_MONTH REPAYMENT_MONTH_ID,
		NEW_COUNT,
		NEW_MONEY, SQUARE_COUNT, SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT AS SUM_NEW_COUNT,
		LJ_NEW_MONEY AS SUM_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,NEW_COUNT,NEW_MONEY,
		SQUARE_COUNT, SQUARE_MONEY,ING_COUNT,ING_MONEY,LJ_NEW_COUNT,LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) AS NEW_COUNT,MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(SUM(ING_COUNT)) AS ING_COUNT,TO_CHAR(SUM(ING_MONEY)) AS
		ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS LJ_NEW_COUNT, TO_CHAR(MAX(LJ_NEW_MONEY)) AS LJ_NEW_MONEY,
		'1' order_fld
		FROM
		(SELECT * FROM
		(SELECT T.RE_MONTH,0 NEW_COUNT,0 NEW_MONEY,0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT,0 AS ING_MONEY,
		SUM(NVL(S.NEW_COUNT,0)) OVER(PARTITION BY 1 ORDER BY T.RE_MONTH)
		LJ_NEW_COUNT,
		SUM(NVL(S.NEW_MONEY,0)) OVER(PARTITION BY 1 ORDER BY T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		UNION
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		) T,
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		ORDER BY 1
		) S
		WHERE T.RE_MONTH = S.RE_MONTH(+)
		GROUP BY T.RE_MONTH,NVL(S.NEW_COUNT,0),NVL(S.NEW_MONEY,0)
		ORDER BY 1
		) LJ
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		UNION ALL

		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY, 0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY, 0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT,0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		*
		FROM
		( SELECT RE_MONTH, 0 AS NEW_COUNT,0 AS NEW_MONEY, 0 AS SQUARE_COUNT, 0
		AS SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY 1 ORDER BY RE_MONTH) -
		SUM(SQUARE_COUNT) OVER(PARTITION BY 1 ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY 1 ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY 1 ORDER BY RE_MONTH) ING_MONEY,
		0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONE
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) NEW_COUNT, MAX(NEW_MONEY) NEW_MONEY,MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY,0 AS
		LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		GROUP BY
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT, 0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		GROUP BY
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) T
		GROUP BY
		RE_MONTH
		) ZT
		GROUP BY RE_MONTH,NEW_COUNT,NEW_MONEY,SQUARE_COUNT,SQUARE_MONEY
		ORDER BY 1,2,3,4
		) ZT
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH
		UNION ALL
		<!-- 求合计 -->
		SELECT
		'合计' RE_MONTH,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		'2' order_fld
		FROM
		(
		SELECT
		RE_MONTH,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY <!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R
		WHERE P.PID = R.PROJECT_ID
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH
		ORDER BY 1
		) T
		) A
		ORDER BY order_fld,1)
		) B
	</select>

	<!-- 查询赎楼贷合作机构业务统计 -->
	<select id="queryForeclosureOrganizationReport" resultMap="ForeclosureOrganizationReportMap"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureOrganizationReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT
			T.*,ROWNUM RN
			FROM (
		</if>
		SELECT CASE WHEN RE_MONTH = '合计' THEN '--' ELSE RE_MONTH END
		REPAYMENT_MONTH_ID,
		CASE WHEN RE_MONTH = '合计' THEN '合计' ELSE ORG_NAME END ORG_NAME,
		NVL(AVAILABLE_LIMIT,'--') AVAILABLE_LIMIT,
		NVL(SINGLE_UPPER_LIMIT,'--') SINGLE_UPPER_LIMIT,
		NVL(ASSURE_MONEY,'--') ASSURE_MONEY,
		NEW_COUNT,
		NEW_MONEY, SQUARE_COUNT, SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT AS SUM_NEW_COUNT,
		LJ_NEW_MONEY AS SUM_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH, ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		NEW_COUNT,NEW_MONEY,
		SQUARE_COUNT, SQUARE_MONEY,ING_COUNT,ING_MONEY,LJ_NEW_COUNT,LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,ORG_NAME,TO_CHAR(AVAILABLE_LIMIT) AVAILABLE_LIMIT,
		TO_CHAR(SINGLE_UPPER_LIMIT) SINGLE_UPPER_LIMIT,TO_CHAR(ASSURE_MONEY) ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(MAX(ING_COUNT)) AS ING_COUNT,TO_CHAR(SUM(ING_MONEY)) AS
		ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS LJ_NEW_COUNT, TO_CHAR(MAX(LJ_NEW_MONEY)) AS LJ_NEW_MONEY,
		'1' order_fld
		FROM
		( SELECT *
		FROM
		(SELECT T.RE_MONTH,T.ORG_NAME,T.AVAILABLE_LIMIT,T.SINGLE_UPPER_LIMIT,
		T.ASSURE_MONEY,0 NEW_COUNT,0 NEW_MONEY,0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT,0 AS ING_MONEY,
		SUM(NVL(S.NEW_COUNT,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY
		T.RE_MONTH) LJ_NEW_COUNT,
		SUM(NVL(S.NEW_MONEY,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT ORG_NAME,RE_MONTH,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		FROM
		(
		SELECT OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		UNION
		SELECT
		OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R ,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND R.STATUS = 2
		) A
		) T,
		(
		SELECT OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS
		ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT, ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		ORDER BY 1,2
		) S
		WHERE T.ORG_NAME = S.ORG_NAME(+)
		AND T.RE_MONTH = S.RE_MONTH(+)
		GROUP BY
		T.RE_MONTH,T.ORG_NAME,NVL(S.NEW_COUNT,0),NVL(S.NEW_MONEY,0),T.AVAILABLE_LIMIT,T.SINGLE_UPPER_LIMIT,T.ASSURE_MONEY
		ORDER BY 2,1,3,4
		) LJ
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		UNION ALL

		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,COUNT(DISTINCT P.PID) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY, 0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY, 0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,0 AS NEW_MONEY,
		COUNT(DISTINCT R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R ,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		AND R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		*
		FROM
		( SELECT RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT, ASSURE_MONEY, 0 AS NEW_COUNT,0 AS NEW_MONEY, 0 AS SQUARE_COUNT, 0 AS
		SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH)
		ING_MONEY,
		0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONE
		FROM
		(
		SELECT
		RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT, ASSURE_MONEY,
		MAX(NEW_COUNT) NEW_COUNT, MAX(NEW_MONEY) NEW_MONEY,MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY, COUNT(1) NEW_COUNT,SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY,0
		AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT, 0 AS NEW_MONEY,COUNT(R.PROJECT_ID) AS SQUARE_COUNT,SUM(
		CASE WHEN R.REPAYMENT_MONEY>AFH.REC_MONEY THEN AFH.REC_MONEY ELSE
		R.REPAYMENT_MONEY END) AS SQUARE_MONEY,
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		and P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS = 3
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		AND R.STATUS = 2
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,

		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) T
		GROUP BY
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY
		) ZT
		GROUP BY
		RE_MONTH,ORG_NAME,NEW_COUNT,NEW_MONEY,SQUARE_COUNT,AVAILABLE_LIMIT,SQUARE_MONEY,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		ORDER BY 2,1,3,4
		) ZT
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		UNION ALL
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT,
		LJ_NEW_MONEY,
		'1' order_fld
		FROM
		(
		SELECT
		'合计' RE_MONTH,
		ORG_NAME,
		'--' AS AVAILABLE_LIMIT,
		'--' AS SINGLE_UPPER_LIMIT,
		'--' AS ASSURE_MONEY,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		MAX(RN) RECORDS_CNT,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		<!--TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH, -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		COUNT(1) NEW_COUNT,<!-- 新增笔数 -->
		SUM(AFH.REC_MONEY) AS NEW_MONEY, <!-- 新增金额 -->
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		<!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY
		ORDER BY 2,1
		) B
		GROUP BY ORG_NAME
		) C
		WHERE RECORDS_CNT !=1
		<!--END 合计 -->
		UNION ALL
		<!-- 求总计 -->
		SELECT
		'总计' RE_MONTH,
		'总计'ORG_NAME,
		'--' AVAILABLE_LIMIT,
		'--' SINGLE_UPPER_LIMIT,
		'--' ASSURE_MONEY,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		'3' order_fld
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		<!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		AND R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		ORDER BY 2,1
		) T
		) A
		ORDER BY order_fld,2,1
		) B
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=${page}*${rows}
			) D
			WHERE D.RN > ((${page}-1)*${rows})
			]]>
		</if>
	</select>

	<!-- 查询赎楼贷合作机构业务统计总数 -->
	<select id="getForeclosureOrganizationReportTotal"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureOrganizationReport"
		statementType="STATEMENT" resultType="Integer">
		SELECT COUNT(1) FROM (
		SELECT CASE WHEN RE_MONTH = '合计' THEN '--' ELSE RE_MONTH END
		REPAYMENT_MONTH_ID,
		CASE WHEN RE_MONTH = '合计' THEN '合计' ELSE ORG_NAME END ORG_NAME,
		AVAILABLE_LIMIT, SINGLE_UPPER_LIMIT, ASSURE_MONEY, NEW_COUNT,
		NEW_MONEY, SQUARE_COUNT, SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT AS SUM_NEW_COUNT,
		LJ_NEW_MONEY AS SUM_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH, ORG_NAME, AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,ASSURE_MONEY,NEW_COUNT,NEW_MONEY,
		SQUARE_COUNT, SQUARE_MONEY,ING_COUNT,ING_MONEY,LJ_NEW_COUNT,LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,ORG_NAME,TO_CHAR(AVAILABLE_LIMIT) AVAILABLE_LIMIT,
		TO_CHAR(SINGLE_UPPER_LIMIT) SINGLE_UPPER_LIMIT,TO_CHAR(ASSURE_MONEY) ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(MAX(ING_COUNT)) AS ING_COUNT,TO_CHAR(SUM(ING_MONEY)) AS
		ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS LJ_NEW_COUNT, TO_CHAR(MAX(LJ_NEW_MONEY)) AS LJ_NEW_MONEY,
		'1' order_fld
		FROM
		( SELECT *
		FROM
		(SELECT T.RE_MONTH,T.ORG_NAME,T.AVAILABLE_LIMIT,T.SINGLE_UPPER_LIMIT,
		T.ASSURE_MONEY,0 NEW_COUNT,0 NEW_MONEY,0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT,0 AS ING_MONEY,
		SUM(NVL(S.NEW_COUNT,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY
		T.RE_MONTH) LJ_NEW_COUNT,
		SUM(NVL(S.NEW_MONEY,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT ORG_NAME,RE_MONTH,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		FROM
		(
		SELECT OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		UNION
		SELECT
		OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R ,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND R.STATUS = 2
		) A
		) T,
		(
		SELECT OA.ORG_NAME,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS
		ASSURE_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT, ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		ORDER BY 1,2
		) S
		WHERE T.ORG_NAME = S.ORG_NAME(+)
		AND T.RE_MONTH = S.RE_MONTH(+)
		GROUP BY
		T.RE_MONTH,T.ORG_NAME,NVL(S.NEW_COUNT,0),NVL(S.NEW_MONEY,0),T.AVAILABLE_LIMIT,T.SINGLE_UPPER_LIMIT,T.ASSURE_MONEY
		ORDER BY 2,1,3,4
		) LJ
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		UNION ALL

		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY, 0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY, 0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R ,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		AND R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		*
		FROM
		( SELECT RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT, ASSURE_MONEY, 0 AS NEW_COUNT,0 AS NEW_MONEY, 0 AS SQUARE_COUNT, 0 AS
		SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH)
		ING_MONEY,
		0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONE
		FROM
		(
		SELECT
		RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT, ASSURE_MONEY,
		MAX(NEW_COUNT) NEW_COUNT, MAX(NEW_MONEY) NEW_MONEY,MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM
		(
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY, COUNT(1) NEW_COUNT,SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,0 AS SQUARE_MONEY,0 AS ING_COUNT, 0 AS ING_MONEY,0
		AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT, 0 AS NEW_MONEY,COUNT(R.PROJECT_ID) AS
		SQUARE_COUNT,SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,0 AS ING_MONEY,0 AS LJ_NEW_COUNT,0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND R.STATUS = 2
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) T
		GROUP BY
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY
		) ZT
		GROUP BY
		RE_MONTH,ORG_NAME,NEW_COUNT,NEW_MONEY,SQUARE_COUNT,AVAILABLE_LIMIT,SQUARE_MONEY,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		ORDER BY 2,1,3,4
		) ZT
		WHERE RE_MONTH BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		UNION ALL
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT,
		LJ_NEW_MONEY,
		'1' order_fld
		FROM
		(
		SELECT
		'合计' RE_MONTH,
		ORG_NAME,
		'--' AS AVAILABLE_LIMIT,
		'--' AS SINGLE_UPPER_LIMIT,
		'--' AS ASSURE_MONEY,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		MAX(RN) RECORDS_CNT,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		<!--TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH, -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		COUNT(1) NEW_COUNT,<!-- 新增笔数 -->
		SUM(AFH.REC_MONEY) AS NEW_MONEY, <!-- 新增金额 -->
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,<!-- 结清笔数 -->
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,<!-- 结清金额 -->
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		AND R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		<!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY
		ORDER BY 2,1
		) B
		GROUP BY ORG_NAME
		) C
		WHERE RECORDS_CNT !=1
		<!--END 合计 -->
		UNION ALL
		<!-- 求总计 -->
		SELECT
		'总计' RE_MONTH,
		'总计'ORG_NAME,
		'--' AVAILABLE_LIMIT,
		'--' SINGLE_UPPER_LIMIT,
		'--' ASSURE_MONEY,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		'3' order_fld
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		COUNT(1) NEW_COUNT,
		SUM(AFH.REC_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_FINANCE_HANDLE FH,
		BIZ_LOAN_APPLY_FINANCE_HANDLE AFH,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PID = AFH.FINANCE_HANDLE_ID
		AND AFH.REC_PRO = 3
		AND FH.STATUS =3
		AND P.BUSINESS_SOURCE_NO = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND OC.ORG_ID(+) = OA.PID
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		<!-- TO_CHAR(AFH.REC_DATE, 'YYYYMM') -->
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(AFH.REC_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(REC_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(REC_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		END
		UNION ALL
		SELECT
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END RE_MONTH,
		OA.ORG_NAME,
		OC.AVAILABLE_LIMIT AS AVAILABLE_LIMIT,
		OC.SINGLE_UPPER_LIMIT AS SINGLE_UPPER_LIMIT,
		OC.ASSURE_MONEY AS ASSURE_MONEY,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(R.REPAYMENT_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1 AND PROJECT_TYPE IN (2,6) AND IS_NEED_FINANCIAL =1
		AND PROJECT_SOURCE IN (2,3) AND IS_CHECHAN=0
		OR(PROJECT_SOURCE = 1 AND IS_NEED_FINANCIAL = 2 AND 1=${includeWt})
		)P,
		BIZ_LOAN_REPAYMENT R,
		ORG_COOPERAT_COMPANY_APPLY_INF OC,
		ORG_ASSETS_COOPERATION_INFO OA
		WHERE P.PID = R.PROJECT_ID
		AND P.BUSINESS_SOURCE_NO = OA.PID
		AND OC.ORG_ID(+) = OA.PID
		<if test="orgName != null and orgName !=''">
			AND OA.ORG_NAME LIKE '%${orgName}%'
		</if>
		AND R.STATUS = 2
		AND CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END BETWEEN
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${fromDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${fromDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${fromDate},'YYYYMMDD'), 'YYYYMMDD')
		END AND
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN
		TO_CHAR(TO_DATE(${endDate},'YYYYMM'), 'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24 -
		7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(TO_DATE(${endDate},'YYYYMMDD')+15/24,2)-1,'YYYYMMDD')
		ELSE
		TO_CHAR(TO_DATE(${endDate},'YYYYMMDD'), 'YYYYMMDD')
		END
		GROUP BY OA.ORG_NAME,
		AVAILABLE_LIMIT,
		SINGLE_UPPER_LIMIT,
		ASSURE_MONEY,
		CASE WHEN ${chooseMonthOrWeek} = 0 THEN TO_CHAR(NEW_REPAYMENT_DATE,
		'YYYYMM')
		WHEN ${chooseMonthOrWeek} = 1 THEN
		(TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')||'~'||
		TO_CHAR(NEXT_DAY(NEW_REPAYMENT_DATE+15/24,2)-1,'YYYYMMDD'))
		ELSE
		TO_CHAR(NEW_REPAYMENT_DATE, 'YYYYMMDD')
		END
		) A
		GROUP BY RE_MONTH,ORG_NAME,AVAILABLE_LIMIT,SINGLE_UPPER_LIMIT,ASSURE_MONEY
		ORDER BY 2,1
		) T
		) A
		ORDER BY order_fld,2,1
		) B
		)
	</select>

	<!-- 财务统计 -->
	<select id="queryFinancialStatisticsReport" resultMap="financialStatisticsMap"
		parameterType="com.xlkfinance.bms.rpc.report.FinancialStatisticsReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
	SELECT TA.PROJECT_ID,
       TA.PROJECT_NAME,
       TA.BUSINESS_SOURCE, 
       TA.PROJECT_NUMBER,
       TA.BUSINESS_SOURCE_STR,
       TA.LOAN_AMT,
       TA.PLAN_RECLOAN_DATE,
       TA.NEED_RECMONEY,
       TA.REAL_LOAN,
       TA.LOAN_DATE,
       TA.REC_MONEY,
       TA.REC_LOAN_DATE,
       TA.ORG_NAME,
       TA.ORG_LOAN_DATE,
       TA.ORG_RE_DATE,
       TA.RE_INTEREST,
       TA.RE_POUNDAGE,
       TA.PAY_INTEREST,
       TA.INTEREST,
       TA.PM_USER_ID,
       TA.PM_USER_NAME,
       TA.POUNDAGE
from (
SELECT A.PID AS PROJECT_ID,A.PM_USER_ID,
  A.PROJECT_NAME,
  A.BUSINESS_SOURCE,
  A.PROJECT_NUMBER,
  G.REAL_NAME AS PM_USER_NAME,
  V.BUSINESS_SOURCE_STR AS BUSINESS_SOURCE_STR,
  D.LOAN_MONEY AS LOAN_AMT,
  AFH_temp.REC_MONEY as REAL_LOAN,
  AFH_temp.REC_DATE AS LOAN_DATE,
  M.REPAYMENT_MONEY AS REC_MONEY,
  M.NEW_REPAYMENT_DATE AS REC_LOAN_DATE,
  G.PAYMENT_DATE AS PLAN_RECLOAN_DATE,
  D.LOAN_MONEY AS NEED_RECMONEY,
  QQ.ORG_NAME  AS ORG_NAME,
  QQ.ORG_CODE  AS ORG_CODE,
  QQ.PARTNER_LOAN_DATE AS ORG_LOAN_DATE,
 
  QQ.REFUND_DATE AS ORG_RE_DATE, 
  W.RE_INTEREST,
  T.RE_POUNDAGE,
  P_TEMP.PAY_INTEREST,
  FH.REC_MONEY AS INTEREST,
  AFH.REC_MONEY AS POUNDAGE
  FROM (SELECT *
                  FROM BIZ_PROJECT
                 WHERE STATUS = 1
                   AND IS_CHECHAN = 0
                   AND PROJECT_TYPE IN (2, 6)
                   AND FORECLOSURE_STATUS > 5) A
  INNER JOIN BIZ_PRODUCT B  ON A.PRODUCT_ID = B.PID
  LEFT JOIN BIZ_PROJECT_GUARANTEE D  ON D.PROJECT_ID = A.PID
  LEFT JOIN BIZ_PROJECT_FORECLOSURE G  ON G.PROJECT_ID = A.PID
  LEFT JOIN SYS_USER G ON g.PID = a.PM_USER_ID
  LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J  ON J.PROJECT_ID = A.PID
  LEFT JOIN (SELECT AFH.FINANCE_HANDLE_ID,AFH.REC_MONEY,AFH.REC_DATE
                  FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
                   WHERE AFH.REC_PRO = 3) AFH_TEMP ON AFH_TEMP.FINANCE_HANDLE_ID = J.PID
  LEFT JOIN (SELECT DISTINCT C_TEMP.ORG_NAME,C_TEMP.ORG_CODE,P_TEMP.PROJECT_ID,P_TEMP.PARTNER_LOAN_DATE,P_TEMP.REFUND_DATE
                  FROM (SELECT *
                          FROM BIZ_PROJECT_PARTNER BPP
                         WHERE BPP.LOAN_STATUS = 4) P_TEMP
                  LEFT JOIN CAPITAL_ORG_INFO C_TEMP
                    ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
                  LEFT JOIN BIZ_LOAN_FINANCE_HANDLE L_TEMP
                    ON L_TEMP.PROJECT_ID = P_TEMP.PROJECT_ID
                  LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE LA_TEMP
                    ON LA_TEMP.FINANCE_HANDLE_ID = L_TEMP.PID
                 WHERE  P_TEMP.LOAN_STATUS = 4) QQ ON QQ.PROJECT_ID = A.PID
                 
  LEFT JOIN BIZ_LOAN_REPAYMENT M  ON M.PROJECT_ID = A.PID
  LEFT JOIN(SELECT R.PROJECT_ID,  R.CONFIRM_MONEY AS RE_INTEREST  FROM BIZ_LOAN_REFUND_FEE R  where R.TYPE = 2) W
    ON W.PROJECT_ID = A.PID
      LEFT JOIN(
             SELECT
               R.PROJECT_ID,  R.CONFIRM_MONEY AS RE_POUNDAGE
                 FROM BIZ_LOAN_REFUND_FEE R
                   WHERE R.TYPE = 1
                  ) T
                  ON T.PROJECT_ID = A.PID
  LEFT JOIN (SELECT * FROM BIZ_PROJECT_PARTNER BPP WHERE BPP.LOAN_STATUS = 4) U  ON U.PROJECT_ID = A.PID
  LEFT JOIN  
        (SELECT DISTINCT C_TEMP.ORG_NAME AS ORG_NAME ,C_TEMP.ORG_CODE AS ORG_CODE,C_TEMP.STATUS AS STATUS FROM BIZ_PROJECT_PARTNER P_TEMP   
          LEFT JOIN CAPITAL_ORG_INFO C_TEMP ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
          LEFT JOIN BIZ_LOAN_FINANCE_HANDLE L_TEMP ON L_TEMP.PROJECT_ID = P_TEMP.PROJECT_ID
          LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE LA_TEMP ON LA_TEMP.FINANCE_HANDLE_ID = L_TEMP.PID
  )X 
  ON X.ORG_CODE = U.PARTNER_NO AND X.STATUS=1

  LEFT JOIN BUSINESS_SOURCE_V V
  ON V.PID = A.PID
  LEFT JOIN ( SELECT (NVL(p_temp.REFUND_LOAN_AMOUNT,0)+ NVL(p_temp.REFUND_XIFEE,0) +  NVL(p_temp.PARTNER_INTERESTS,0)  - NVL(p_temp.confirm_loan_money,0) ) AS PAY_INTEREST ,p_temp.Project_Id
              from BIZ_PROJECT_PARTNER p_temp  
              LEFT JOIN CAPITAL_ORG_INFO C_TEMP ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
              WHERE P_TEMP.REPAYMENT_REPURCHASE_STATUS = 3
      )P_TEMP ON A.PID = P_TEMP.PROJECT_ID
  
  LEFT JOIN (SELECT AFH.REC_MONEY,FH.PROJECT_ID FROM BIZ_LOAN_FINANCE_HANDLE FH
  LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
  ON FH.PID=AFH.FINANCE_HANDLE_ID
  WHERE AFH.REC_PRO=1 AND FH.STATUS !=1 )FH ON FH.PROJECT_ID=A.PID
  LEFT JOIN 
  (SELECT AFH.REC_MONEY,FH.PROJECT_ID FROM BIZ_LOAN_FINANCE_HANDLE FH
  LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH  ON FH.PID=AFH.FINANCE_HANDLE_ID
  WHERE AFH.REC_PRO=2 AND FH.STATUS !=1 )AFH ON AFH.PROJECT_ID=A.PID
  ORDER BY A.REQUEST_DTTM DESC) TA  		                                                            
                    
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND TA.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
			
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND TA.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
				</if>
				<if test="orgName !=null and orgName !='' and orgName !='-1'">
					AND TA.ORG_CODE = #{orgName}
				</if>						
				<!--项目名称-->
				<if test="projectName !=null and projectName !=''">
					AND TA.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<!--放款日期-->
				<if test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					<if test="loanDate !=null and loanDate !=''">
						AND TA.LOAN_DATE <![CDATA[>=]]> to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND TA.LOAN_DATE <![CDATA[<=]]> to_date(#{loanEndDate},'yyyy-MM-dd')
					</if>
				 </if>
				 <!--应回款日期-->
				 <if test="( planLoanDate !=null and planLoanDate !='') or ( planLoanEndDate !=null and planLoanEndDate !='')">
					 <if test="( planLoanDate !=null and planLoanDate !='')" >
						 and TA.PLAN_RECLOAN_DATE <![CDATA[>=]]>
						 to_date(#{planLoanDate},'yyyy-MM-dd')
					</if>
					<if test="( planLoanEndDate !=null and planLoanEndDate !='')" >
						and TA.PLAN_RECLOAN_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{planLoanEndDate},' 23:59:59'),'yyyy-mm-dd hh24:mi:ss')
					</if>
				 </if>
					<!--  回款日期-->
				 <if test="( recLoanDate !=null and recLoanDate !='') or ( recLoanEndDate !=null and recLoanEndDate !='')">
					 <if test="( recLoanDate !=null and recLoanDate !='')" >
						 and TA.REC_LOAN_DATE <![CDATA[>=]]>
						 to_date(#{recLoanDate},'yyyy-MM-dd')
					</if>
					<if test="( recLoanEndDate !=null and recLoanEndDate !='')" >
						and TA.REC_LOAN_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{recLoanEndDate},' 23:59:59'),'yyyy-mm-dd hh24:mi:ss')
					</if>
				 </if>
			</trim>
		</where>
		<if test="page!=-1">
			<![CDATA[
			) T 
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>
	<!-- 财务总数 -->
	<select id="getFinancialStatisticsReportTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.FinancialStatisticsReport">
		SELECT COUNT(1) FROM (
		SELECT TA.PROJECT_ID
		from (
		SELECT A.PID AS PROJECT_ID,A.PM_USER_ID,
		A.PROJECT_NAME,
		A.BUSINESS_SOURCE,
		V.BUSINESS_SOURCE_STR AS BUSINESS_SOURCE_STR,
		D.LOAN_MONEY AS LOAN_AMT,

		AFH_temp.REC_MONEY as REAL_LOAN,
		AFH_temp.REC_DATE AS LOAN_DATE,

		M.REPAYMENT_MONEY AS REC_MONEY,

		M.NEW_REPAYMENT_DATE AS REC_LOAN_DATE,

		G.PAYMENT_DATE AS PLAN_RECLOAN_DATE,

		D.LOAN_MONEY AS NEED_RECMONEY,

		QQ.ORG_NAME AS ORG_NAME,
		QQ.ORG_CODE AS ORG_CODE,
		QQ.PARTNER_LOAN_DATE AS ORG_LOAN_DATE,

		QQ.REFUND_DATE AS ORG_RE_DATE,
		W.RE_INTEREST,
		T.RE_POUNDAGE,
		P_TEMP.PAY_INTEREST,
		FH.REC_MONEY AS INTEREST,
		AFH.REC_MONEY AS POUNDAGE
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND IS_CHECHAN = 0
		AND PROJECT_TYPE IN (2, 6)
		AND FORECLOSURE_STATUS > 5) A
		INNER JOIN BIZ_PRODUCT B ON A.PRODUCT_ID = B.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE D ON D.PROJECT_ID = A.PID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE G ON G.PROJECT_ID = A.PID
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE J ON J.PROJECT_ID = A.PID
		LEFT JOIN (SELECT AFH.FINANCE_HANDLE_ID,AFH.REC_MONEY,AFH.REC_DATE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		WHERE AFH.REC_PRO = 3) AFH_TEMP ON AFH_TEMP.FINANCE_HANDLE_ID = J.PID
		LEFT JOIN (SELECT DISTINCT
		C_TEMP.ORG_NAME,C_TEMP.ORG_CODE,P_TEMP.PROJECT_ID,P_TEMP.PARTNER_LOAN_DATE,P_TEMP.REFUND_DATE
		FROM (SELECT *
		FROM BIZ_PROJECT_PARTNER BPP
		WHERE BPP.LOAN_STATUS = 4) P_TEMP
		LEFT JOIN CAPITAL_ORG_INFO C_TEMP
		ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE L_TEMP
		ON L_TEMP.PROJECT_ID = P_TEMP.PROJECT_ID
		LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE LA_TEMP
		ON LA_TEMP.FINANCE_HANDLE_ID = L_TEMP.PID
		WHERE P_TEMP.LOAN_STATUS = 4) QQ ON QQ.PROJECT_ID = A.PID

		LEFT JOIN BIZ_LOAN_REPAYMENT M ON M.PROJECT_ID = A.PID
		LEFT JOIN(SELECT R.PROJECT_ID, R.CONFIRM_MONEY AS RE_INTEREST FROM
		BIZ_LOAN_REFUND_FEE R where R.TYPE = 2) W
		ON W.PROJECT_ID = A.PID
		LEFT JOIN(
		SELECT
		R.PROJECT_ID, R.CONFIRM_MONEY AS RE_POUNDAGE
		FROM BIZ_LOAN_REFUND_FEE R
		WHERE R.TYPE = 1
		) T
		ON T.PROJECT_ID = A.PID
		LEFT JOIN (SELECT * FROM BIZ_PROJECT_PARTNER BPP WHERE BPP.LOAN_STATUS =
		4) U ON U.PROJECT_ID = A.PID
		LEFT JOIN
		(SELECT DISTINCT C_TEMP.ORG_NAME AS ORG_NAME ,C_TEMP.ORG_CODE AS
		ORG_CODE,C_TEMP.STATUS AS STATUS FROM BIZ_PROJECT_PARTNER P_TEMP
		LEFT JOIN CAPITAL_ORG_INFO C_TEMP ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE L_TEMP ON L_TEMP.PROJECT_ID =
		P_TEMP.PROJECT_ID
		LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE LA_TEMP ON
		LA_TEMP.FINANCE_HANDLE_ID = L_TEMP.PID
		)X
		ON X.ORG_CODE = U.PARTNER_NO AND X.STATUS=1

		LEFT JOIN BUSINESS_SOURCE_V V
		ON V.PID = A.PID
		LEFT JOIN ( SELECT (NVL(p_temp.REFUND_LOAN_AMOUNT,0)+
		NVL(p_temp.REFUND_XIFEE,0) + NVL(p_temp.PARTNER_INTERESTS,0) -
		NVL(p_temp.confirm_loan_money,0) ) AS PAY_INTEREST ,p_temp.Project_Id
		from BIZ_PROJECT_PARTNER p_temp
		LEFT JOIN CAPITAL_ORG_INFO C_TEMP ON C_TEMP.ORG_CODE = P_TEMP.PARTNER_NO
		WHERE P_TEMP.REPAYMENT_REPURCHASE_STATUS = 3
		)P_TEMP ON A.PID = P_TEMP.PROJECT_ID

		LEFT JOIN (SELECT AFH.REC_MONEY,FH.PROJECT_ID FROM BIZ_LOAN_FINANCE_HANDLE
		FH
		LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
		ON FH.PID=AFH.FINANCE_HANDLE_ID
		WHERE AFH.REC_PRO=1 AND FH.STATUS !=1 )FH ON FH.PROJECT_ID=A.PID
		LEFT JOIN
		(SELECT AFH.REC_MONEY,FH.PROJECT_ID FROM BIZ_LOAN_FINANCE_HANDLE FH
		LEFT JOIN BIZ_LOAN_APPLY_FINANCE_HANDLE AFH ON
		FH.PID=AFH.FINANCE_HANDLE_ID
		WHERE AFH.REC_PRO=2 AND FH.STATUS !=1 )AFH ON AFH.PROJECT_ID=A.PID
		ORDER BY A.REQUEST_DTTM DESC) TA
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND TA.PM_USER_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND TA.BUSINESS_SOURCE_STR LIKE'%${businessSourceStr}%'
				</if>
				<if test="orgName !=null and orgName !='' and orgName !='-1'">
					AND TA.ORG_CODE = #{orgName}
				</if>
				<!--项目名称 -->
				<if test="projectName !=null and projectName !=''">
					AND TA.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<!--放款日期 -->
				<if
					test="( loanDate !=null and loanDate !='') or ( loanEndDate !=null and loanEndDate !='')">
					<!-- AND J.PID IN (SELECT AFH.FINANCE_HANDLE_ID -->
					<!-- FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH -->
					<!-- WHERE AFH.REC_PRO = 3 -->
					<if test="loanDate !=null and loanDate !=''">
						AND TA.LOAN_DATE <![CDATA[>=]]>
						to_date(#{loanDate},'yyyy-MM-dd')
					</if>
					<if test="loanEndDate !=null and loanEndDate !=''">
						AND TA.LOAN_DATE <![CDATA[<=]]>
						to_date(#{loanEndDate},'yyyy-MM-dd')
					</if>
					<!-- ) -->
				</if>
				<!--应回款日期 -->
				<if
					test="( planLoanDate !=null and planLoanDate !='') or ( planLoanEndDate !=null and planLoanEndDate !='')">
					<if test="( planLoanDate !=null and planLoanDate !='')">
						and TA.PLAN_RECLOAN_DATE <![CDATA[>=]]>
						to_date(#{planLoanDate},'yyyy-MM-dd')
					</if>
					<if test="( planLoanEndDate !=null and planLoanEndDate !='')">
						and TA.PLAN_RECLOAN_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{planLoanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
				<!-- 回款日期 -->
				<if
					test="( recLoanDate !=null and recLoanDate !='') or ( recLoanEndDate !=null and recLoanEndDate !='')">
					<if test="( recLoanDate !=null and recLoanDate !='')">
						and TA.REC_LOAN_DATE <![CDATA[>=]]>
						to_date(#{recLoanDate},'yyyy-MM-dd')
					</if>
					<if test="( recLoanEndDate !=null and recLoanEndDate !='')">
						and TA.REC_LOAN_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{recLoanEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
			</trim>
		</where>
		) T
	</select>

	<!-- 收退咨询费统计 -->
	<select id="queryRefundFeesReport" resultMap="refundFeesIndexMap"
		parameterType="com.xlkfinance.bms.rpc.report.RefundFeesReport">
		<if test="page!=-1">
		SELECT D.*
  FROM (
			SELECT t.PROJECT_ID,
               t.PROJECT_NAME,
               t.PROJECT_NUMBER,
               t.CONSULTING_FEE,
               t.rec_date,
               t.CONFIRM_MONEY,
               t.BUSINESS_SOURCE_STR,
               t.CONFIRM_DATE,
               t.PM_USER_NAME,
               t.CHINA_NAME,
               t.LOAN_AMOUNT,
               t.LOAN_DAYS,
               t.REC_MONEY,
               t.REC_LOAN_DATE,
               t.REC_INTEREST_DATE,
               t.EXTENSION_FEE,
               t.AC_EXTENSION_FEE,
               t.EXTENSION_DAYS,
               t.EXTENSION_FEE_RATE,
               t.CONSULTING_fee_rate,
               t.plan_CONSULTING_money,
               t.plan_EXTENSION_money,
               t.is_chechan,
               t.Pm_User_Id,
               t.plan_retrun_CONSULTING,
               t.LOAN_DATE,
               t.suspend_day,
               t.POUNDAGE,
               ROWNUM RN
			FROM (
		</if>
		select * from (select nvl(a.PROJECT_ID, b.PROJECT_ID) PROJECT_ID,
                             nvl(a.PROJECT_NAME, b.PROJECT_NAME) PROJECT_NAME,
                             nvl(a.PROJECT_NUMBER, b.PROJECT_NUMBER) PROJECT_NUMBER,
                             a.CONSULTING_FEE,
                             to_char(a.rec_date, 'yyyy-mm-dd') rec_date,
                             a.CONFIRM_MONEY,
                             a.fee_rate as consulting_fee_rate,
                               nvl(a.BUSINESS_SOURCE_STR, b.BUSINESS_SOURCE_STR) BUSINESS_SOURCE_STR,
                               a.CONFIRM_DATE,
                                nvl(a.PM_USER_NAME, b.PM_USER_NAME) PM_USER_NAME,
                                 nvl(a.CHINA_NAME, b.CHINA_NAME) CHINA_NAME,
                              nvl(a.LOAN_AMOUNT, b.LOAN_AMOUNT) LOAN_AMOUNT,
                                nvl(a.LOAN_DAYS, b.LOAN_DAYS) LOAN_DAYS,
                               b.REC_MONEY,
                               b.REC_LOAN_DATE,
                               c.REC_INTEREST_DATE,
                               c.extension_fee,
                               c.AC_EXTENSION_FEE,
                               c.FEE_RATE as EXTENSION_FEE_RATE,
                               c.EXTENSION_DAYS,
                               a.plan_CONSULTING_money,
                               c.plan_EXTENSION_money,
                               (a.CONSULTING_FEE + c.extension_fee -
                               a.plan_CONSULTING_money -
                               c.plan_EXTENSION_money) as plan_retrun_CONSULTING,
                               nvl(a.LOAN_DATE, b.LOAN_DATE) LOAN_DATE,
                               a.suspend_day,
                               a.is_chechan,
                               a.pm_user_id,
                               a.POUNDAGE
                               
		from (SELECT E.PID AS PROJECT_ID,
                                       row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date), '2099-12-31')) rn,
                                       E.PROJECT_NAME,
                                       E.PROJECT_NUMBER,
                                       aa.CONSULTING_FEE,
                                       aa.rec_date,
                                       F.CONFIRM_MONEY,
                                       bg.fee_rate,
                                       E.is_chechan,
                                       round(BG.LOAN_MONEY * bg.FEE_RATE *
                                             BF.LOAN_DAYS / 3000,
                                             2) as plan_CONSULTING_money,
                                       Q.BUSINESS_SOURCE_STR,
                                       TO_CHAR(F.CONFIRM_DATE, 'YYYY-MM-DD') AS CONFIRM_DATE,
                                       G.REAL_NAME AS PM_USER_NAME,
                                       bb.china_name as CHINA_NAME,
                                       BG.LOAN_MONEY AS LOAN_AMOUNT,
                                       BF.LOAN_DAYS,
                                       TO_CHAR(BLF.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
                                       bs.suspend_day,
                                       e.pm_user_id,
                                       aa.POUNDAGE
                                  FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
                                  LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D
                                    ON C.FINANCE_HANDLE_ID = D.PID
                                 inner JOIN BIZ_PROJECT E
                                    ON E.PID = D.PROJECT_ID
                                  LEFT JOIN BIZ_LOAN_REFUND_FEE F
                                    ON F.PROJECT_ID = E.PID
                                  LEFT JOIN SYS_USER G
                                    ON g.PID = E.PM_USER_ID
                                  LEFT JOIN BIZ_PROJECT_FORECLOSURE BF
                                    ON BF.PROJECT_ID = E.PID
                                  LEFT JOIN BIZ_PROJECT_GUARANTEE BG
                                    ON BG.PROJECT_ID = E.PID
                                  LEFT JOIN BUSINESS_SOURCE_V Q
                                    ON Q.PID = E.PID
                                  Left join BIZ_LOAN_REPAYMENT br
                                    on br.project_id = e.pid
                                  left join BIZ_LOAN_SUSPEND_RECORD bs
                                    on bs.project_id = e.pid
                                  left join (SELECT AFH.REC_DATE,
                                                   AFH.FINANCE_HANDLE_ID
                                              FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
                                             WHERE AFH.REC_PRO = 3) BLF
                                    on BLF.FINANCE_HANDLE_ID = d.pid
                                  left join (SELECT B.CHINA_NAME, b.acct_id
                                              FROM CUS_PERSON B
                                             WHERE B.RELATION_TYPE = 1) bb
                                    on bb.acct_id = e.acct_id
                                  left join (SELECT A.PROJECT_ID,
                                                   A.FINANCE_HANDLE_ID,
                                                   A.CONSULTING_FEE,
                                                   A.POUNDAGE,
                                                   A.REC_DATE as REC_DATE
                                              FROM BIZ_LOAN_COLLECT_FEE_HIS A
                                              LEFT JOIN SYS_USER B
                                                ON A.CREATER_ID = B.PID
                                              LEFT JOIN (SELECT LOOKUP_VAL,
                                                               lv.LOOKUP_DESC
                                                          FROM SYS_LOOKUP     L,
                                                               SYS_LOOKUP_VAL LV
                                                         WHERE LV.STATUS = 1
                                                           AND L.PID =
                                                               LV.LOOKUP_ID
                                                           AND L.LOOKUP_TYPE =
                                                               'LOAN_SOURCES_OF_FUNDS') C
                                                ON C.LOOKUP_VAL =
                                                   A.PRO_RESOURCE) aa
                                    on aa.PROJECT_ID = e.pid
                                 where F.TYPE = 2
                                   AND C.REC_PRO = 1
		<if test="userIds!=null and userIds.size()>0">
			AND e.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				#{itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND e.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) a
		full join (select b.project_id,
                                   g.real_name as PM_USER_NAME,
                                   q.BUSINESS_SOURCE_STR,
                                   a.PROJECT_NAME,
                                   a.PROJECT_NUMBER,
                                 TO_CHAR(BLF.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
                                   bb.china_name,
                                   row_number() over(partition by b.project_id order by nvl(to_char(b.REPAYMENT_DATE), '2099-12-31')) rn,
                                   b.REPAYMENT_MONEY AS REC_MONEY,
                                   bg.loan_money as LOAN_AMOUNT,
                                   bf.loan_days,
                                   TO_CHAR(b.REPAYMENT_DATE, 'yyyy-MM-dd') AS REC_LOAN_DATE
                              from BIZ_PROJECT a,
                                   BIZ_LOAN_REPAYMENT_RECORD b,
                                   SYS_USER G,
                                   BUSINESS_SOURCE_V Q,
                                   (SELECT B.CHINA_NAME, b.acct_id
                                      FROM CUS_PERSON B
                                     WHERE B.RELATION_TYPE = 1) bb,
                                   BIZ_PROJECT_GUARANTEE bg,
                                   BIZ_PROJECT_FORECLOSURE bf,
                                   (SELECT AFH.REC_DATE, AFH.FINANCE_HANDLE_ID
                                      FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
                                     WHERE AFH.REC_PRO = 3) BLF , BIZ_LOAN_FINANCE_HANDLE d
                                 
                             where a.pid = b.project_id
                             and d.project_id=a.pid
                             and BLF.FINANCE_HANDLE_ID = d.pid
                               and g.pid = a.PM_USER_ID
                               and q.PID = a.pid
                               and bb.acct_id = a.acct_id
                               and bg.project_id = a.pid
                               and bf.project_id = a.pid
          <if test="userIds!=null and userIds.size()>0">
			AND a.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				#{itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND a.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) b 
		on a.project_id = b.project_id and a.rn = b.rn
		left join (
		select
		PROJEC.pid AS PROJECT_ID,
		EXTEN.EXTENSION_RATE as FEE_RATE,
		EXTEN.extension_fee,
		round(g.LOAN_MONEY * EXTEN.EXTENSION_RATE *
		EXTEN.EXTENSION_DAYS / 3000,
		2) as plan_EXTENSION_money,
		PROJEC.PROJECT_NAME,
		(SELECT TO_CHAR(A.Rec_Date,'yyyy-mm-dd')
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE A
		INNER JOIN BIZ_LOAN_FINANCE_HANDLE B
		ON A.FINANCE_HANDLE_ID = B.PID
		WHERE B.PROJECT_ID =
		EXTEN.PROJECT_ID
		AND A.REC_PRO = 8) AS REC_INTEREST_DATE,
		EXTEN.EXTENSION_DAYS AS EXTENSION_DAYS,
		(SELECT A.REC_MONEY
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE A
		INNER JOIN BIZ_LOAN_FINANCE_HANDLE B
		ON A.FINANCE_HANDLE_ID = B.PID
		WHERE B.PROJECT_ID = EXTEN.PROJECT_ID
		AND A.REC_PRO = 8) AS AC_EXTENSION_FEE,
		EXTEN.Extension_Project_Id as Extension_Project_Id ,
		row_number() over(partition by EXTEN.Extension_Project_Id order by
		nvl(to_char(EXTEN.EXTENSION_DATE), '2099-12-31')) rn
		FROM BIZ_PROJECT_EXTENSION EXTEN
		LEFT JOIN BIZ_PROJECT PROJEC
		ON EXTEN.PROJECT_ID = PROJEC.PID
		LEFT JOIN BIZ_PRODUCT PDU
		ON PROJEC.PRODUCT_ID = PDU.PID
		LEFT JOIN SYS_USER SYS
		ON PROJEC.PM_USER_ID = SYS.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE G
		ON PROJEC.PID = G.PROJECT_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE F
		ON PROJEC.PID = F.PROJECT_ID
		WHERE PROJEC.STATUS = 1
		AND PROJEC.PROJECT_TYPE = 4
		AND PROJEC.IS_REJECTED = 0
		AND PROJEC.IS_CHECHAN = 0
		AND PROJEC.PID NOT IN
		(SELECT BPC.PROJECT_ID
		FROM BIZ_PROJECT_COMPLETE BPC
		WHERE BPC.IS_COMPLETE = 1
		AND BPC.STATUS = 1
		AND BPC.PROJECT_ID = PROJEC.PID)
		AND PDU.PRODUCT_TYPE = 2
		) c on a.project_id = c.EXTENSION_PROJECT_ID and a.rn = c.rn
		union all
		select nvl(a.PROJECT_ID, b.PROJECT_ID) PROJECT_ID,
                               '合计' PROJECT_NAME,
                               '' PROJECT_NUMBER,
                               sum(nvl(a.CONSULTING_FEE, 0)) as CONSULTING_FEE,
                               '' rec_date,
                               0 CONFIRM_MONEY,
                               0 consulting_fee_rate,
                               nvl(a.BUSINESS_SOURCE_STR,b.BUSINESS_SOURCE_STR) as BUSINESS_SOURCE_STR,
                               '' CONFIRM_DATE,
                               nvl(a.PM_USER_NAME,b.PM_USER_NAME),
                                nvl(a.CHINA_NAME, b.CHINA_NAME) CHINA_NAME,
                               0 LOAN_AMOUNT,
                               0 LOAN_DAYS,
                               sum(nvl(b.REC_MONEY,0)) REC_MONEY,
                               '' REC_LOAN_DATE,
                               '' REC_INTEREST_DATE,
                               0 extension_fee,
                               0 AC_EXTENSION_FEE,
                               0 extension_fee_rate,
                               0 EXTENSION_DAYS,
                               0 plan_CONSULTING_money,
                               0 plan_EXTENSION_money,
                               0 plan_retrun_CONSULTING,
                               '' LOAN_DATE,
                               0 suspend_day,
                               0 is_chechan,
                               0 pm_user_id,
                               sum(nvl(a.POUNDAGE, 0)) as POUNDAGE
		from (SELECT E.PID AS PROJECT_ID,
                                       row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date), '2099-12-31')) rn,
                                       E.PROJECT_NAME,
                                       E.PROJECT_NUMBER,
                                       aa.CONSULTING_FEE,
                                       aa.rec_date,
                                       F.CONFIRM_MONEY,
                                       bg.fee_rate,
                                       E.is_chechan,
                                       round(BG.LOAN_MONEY * bg.FEE_RATE *
                                             BF.LOAN_DAYS / 3000,
                                             2) as plan_CONSULTING_money,
                                       Q.BUSINESS_SOURCE_STR,
                                       TO_CHAR(F.CONFIRM_DATE, 'YYYY-MM-DD') AS CONFIRM_DATE,
                                       G.REAL_NAME AS PM_USER_NAME,
                                       bb.china_name as CHINA_NAME,
                                       BG.LOAN_MONEY AS LOAN_AMOUNT,
                                       BF.LOAN_DAYS,
                                       TO_CHAR(C.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
                                       bs.suspend_day,
                                       e.pm_user_id,
                                       aa.POUNDAGE
                                  FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
                                  LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D
                                    ON C.FINANCE_HANDLE_ID = D.PID
                                 inner JOIN BIZ_PROJECT E
                                    ON E.PID = D.PROJECT_ID
                                  LEFT JOIN BIZ_LOAN_REFUND_FEE F
                                    ON F.PROJECT_ID = E.PID
                                  LEFT JOIN SYS_USER G
                                    ON g.PID = E.PM_USER_ID
                                  LEFT JOIN BIZ_PROJECT_FORECLOSURE BF
                                    ON BF.PROJECT_ID = E.PID
                                  LEFT JOIN BIZ_PROJECT_GUARANTEE BG
                                    ON BG.PROJECT_ID = E.PID
                                  LEFT JOIN BUSINESS_SOURCE_V Q
                                    ON Q.PID = E.PID
                                  Left join BIZ_LOAN_REPAYMENT br
                                    on br.project_id = e.pid
                                  left join BIZ_LOAN_SUSPEND_RECORD bs
                                    on bs.project_id = e.pid
                                  left join (SELECT B.CHINA_NAME, b.acct_id
                                              FROM CUS_PERSON B
                                             WHERE B.RELATION_TYPE = 1) bb
                                    on bb.acct_id = e.acct_id
                                  left join (SELECT A.PROJECT_ID,
                                                   A.FINANCE_HANDLE_ID,
                                                   A.CONSULTING_FEE,
                                                   A.POUNDAGE,
                                                   A.REC_DATE as REC_DATE
                                              FROM BIZ_LOAN_COLLECT_FEE_HIS A
                                              LEFT JOIN SYS_USER B
                                                ON A.CREATER_ID = B.PID
                                              LEFT JOIN (SELECT LOOKUP_VAL,
                                                               lv.LOOKUP_DESC
                                                          FROM SYS_LOOKUP     L,
                                                               SYS_LOOKUP_VAL LV
                                                         WHERE LV.STATUS = 1
                                                           AND L.PID =
                                                               LV.LOOKUP_ID
                                                           AND L.LOOKUP_TYPE =
                                                               'LOAN_SOURCES_OF_FUNDS') C
                                                ON C.LOOKUP_VAL =
                                                   A.PRO_RESOURCE) aa
                                    on aa.PROJECT_ID = e.pid
                                 where F.TYPE = 2
                                   AND C.REC_PRO = 1
		<if test="userIds!=null and userIds.size()>0">
			AND e.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				#{itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND e.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) a
		full join (select b.project_id,
                                   g.real_name as PM_USER_NAME,
                                   q.BUSINESS_SOURCE_STR,
                                   a.PROJECT_NAME,
                                   a.PROJECT_NUMBER,
                                 TO_CHAR(BLF.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
                                   bb.china_name,
                                   row_number() over(partition by b.project_id order by nvl(to_char(b.REPAYMENT_DATE), '2099-12-31')) rn,
                                   b.REPAYMENT_MONEY AS REC_MONEY,
                                   bg.loan_money as LOAN_AMOUNT,
                                   bf.loan_days,
                                   TO_CHAR(b.REPAYMENT_DATE, 'yyyy-MM-dd') AS REC_LOAN_DATE
                              from BIZ_PROJECT a,
                                   BIZ_LOAN_REPAYMENT_RECORD b,
                                   SYS_USER G,
                                   BUSINESS_SOURCE_V Q,
                                   (SELECT B.CHINA_NAME, b.acct_id
                                      FROM CUS_PERSON B
                                     WHERE B.RELATION_TYPE = 1) bb,
                                   BIZ_PROJECT_GUARANTEE bg,
                                   BIZ_PROJECT_FORECLOSURE bf,
                                   (SELECT AFH.REC_DATE, AFH.FINANCE_HANDLE_ID
                                      FROM BIZ_LOAN_APPLY_FINANCE_HANDLE AFH
                                     WHERE AFH.REC_PRO = 3) BLF , BIZ_LOAN_FINANCE_HANDLE d
                             where a.pid = b.project_id
                             and d.project_id=a.pid
                             and BLF.FINANCE_HANDLE_ID = d.pid
                               and g.pid = a.PM_USER_ID
                               and q.PID = a.pid
                               and bb.acct_id = a.acct_id
                               and bg.project_id = a.pid
                               and bf.project_id = a.pid
         <if test="userIds!=null and userIds.size()>0">
			AND a.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				#{itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND a.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) b 
		on a.project_id = b.project_id  and a.rn = b.rn
		inner join(
		select distinct PROJECT_ID
		from (SELECT E.PID AS PROJECT_ID,
		row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date),
		'2099-12-31')) rn
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D ON C.FINANCE_HANDLE_ID = D.PID
		inner JOIN BIZ_PROJECT E ON E.PID = D.PROJECT_ID
		LEFT JOIN BIZ_LOAN_REFUND_FEE F ON F.PROJECT_ID = E.PID
		left join (SELECT A.PROJECT_ID,
		A.FINANCE_HANDLE_ID,
		A.CONSULTING_FEE,
		A.POUNDAGE,
		A.REC_DATE
		FROM BIZ_LOAN_COLLECT_FEE_HIS A
		LEFT JOIN SYS_USER B ON A.CREATER_ID = B.PID
		LEFT JOIN (SELECT LOOKUP_VAL, lv.LOOKUP_DESC
		FROM SYS_LOOKUP L,
		SYS_LOOKUP_VAL LV
		WHERE LV.STATUS = 1
		AND L.PID = LV.LOOKUP_ID
		AND L.LOOKUP_TYPE ='LOAN_SOURCES_OF_FUNDS') C
		ON C.LOOKUP_VAL = A.PRO_RESOURCE) aa on aa.PROJECT_ID = e.pid
		FULL JOIN  BIZ_LOAN_REPAYMENT_RECORD B ON E.PID = B.PROJECT_ID
		where F.TYPE = 2 AND C.REC_PRO = 1)
		where rn > 1) d  on nvl(a.PROJECT_ID,b.PROJECT_ID) = d.project_id
		group by nvl(a.PROJECT_ID, b.PROJECT_ID),
                         nvl(a.CHINA_NAME, b.CHINA_NAME),
                         nvl(a.BUSINESS_SOURCE_STR,b.BUSINESS_SOURCE_STR),
                                   nvl(a.PM_USER_NAME,b.PM_USER_NAME)) c
		order by 1, case when c.PROJECT_NAME like '%合计%' then 1 else 0 end
		<!-- order by 2,1 -->
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>

	<select id="getRefundFeesReportTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.RefundFeesReport">

		select count(1) from (
		SELECT
		t.PROJECT_ID,t.Pm_User_Id
		FROM (
		select
		a.PROJECT_ID,
		a.pm_user_id
		from (SELECT E.PID AS PROJECT_ID,
		row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date),
		'2099-12-31')) rn,
		E.PROJECT_NAME,
		E.PROJECT_NUMBER,
		aa.CONSULTING_FEE,
		aa.rec_date,
		F.CONFIRM_MONEY,
		bg.fee_rate,
		E.is_chechan,
		<!-- 应退咨询费：预收咨询费+预收展期费-应收咨询费-应收展期费 -->
		round(BG.LOAN_MONEY * bg.FEE_RATE * BF.LOAN_DAYS / 3000,2) as
		plan_CONSULTING_money,
		Q.BUSINESS_SOURCE_STR,
		TO_CHAR(F.CONFIRM_DATE, 'YYYY-MM-DD') AS CONFIRM_DATE,
		G.REAL_NAME AS PM_USER_NAME,
		bb.china_name as CHINA_NAME,
		BG.LOAN_MONEY AS LOAN_AMOUNT,
		BF.LOAN_DAYS,
		TO_CHAR(C.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
		bs.suspend_day,
		e.pm_user_id,
		aa.POUNDAGE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D ON C.FINANCE_HANDLE_ID = D.PID
		inner JOIN BIZ_PROJECT E ON E.PID = D.PROJECT_ID
		LEFT JOIN BIZ_LOAN_REFUND_FEE F ON F.PROJECT_ID = E.PID
		LEFT JOIN SYS_USER G ON g.PID = E.PM_USER_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE BF ON BF.PROJECT_ID = E.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE BG ON BG.PROJECT_ID = E.PID
		LEFT JOIN BUSINESS_SOURCE_V Q ON Q.PID = E.PID
		Left join BIZ_LOAN_REPAYMENT br on br.project_id = e.pid
		left join BIZ_LOAN_SUSPEND_RECORD bs on bs.project_id = e.pid

		left join (SELECT B.CHINA_NAME, b.acct_id
		FROM CUS_PERSON B
		WHERE B.RELATION_TYPE = 1) bb on bb.acct_id = e.acct_id
		left join (SELECT A.PROJECT_ID,
		A.FINANCE_HANDLE_ID,
		A.CONSULTING_FEE,
		A.POUNDAGE,
		A.REC_DATE as REC_DATE
		FROM BIZ_LOAN_COLLECT_FEE_HIS A
		LEFT JOIN SYS_USER B
		ON A.CREATER_ID = B.PID
		LEFT JOIN (SELECT LOOKUP_VAL, lv.LOOKUP_DESC
		FROM SYS_LOOKUP L, SYS_LOOKUP_VAL LV
		WHERE LV.STATUS = 1
		AND L.PID = LV.LOOKUP_ID
		AND L.LOOKUP_TYPE =
		'LOAN_SOURCES_OF_FUNDS') C
		ON C.LOOKUP_VAL = A.PRO_RESOURCE) aa on aa.PROJECT_ID = e.pid
		where F.TYPE = 2 AND C.REC_PRO = 1
		<if test="projectName !=null and projectName !=''">
			AND e.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) a full join (select b.project_id,
                                            a.PROJECT_NAME,
                                            a.PROJECT_NUMBER,
                                           row_number() over(partition by b.project_id order by nvl(to_char(b.REPAYMENT_DATE), '2099-12-31')) rn,
                                           b.REPAYMENT_MONEY AS REC_MONEY,
                                           TO_CHAR(b.REPAYMENT_DATE,
                                                   'yyyy-MM-dd') AS REC_LOAN_DATE
                                      from BIZ_PROJECT a, BIZ_LOAN_REPAYMENT_RECORD b,SYS_USER G,BUSINESS_SOURCE_V Q 
                                     where a.pid = b.project_id and g.pid = a.PM_USER_ID and q.PID=a.pid
		<if test="projectName !=null and projectName !=''">
			AND a.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) b 
		on a.project_id = b.project_id and a.rn = b.rn
		
		left join (select
		PROJEC.pid AS PROJECT_ID,
		EXTEN.EXTENSION_RATE as FEE_RATE,
		EXTEN.extension_fee,
		round(g.LOAN_MONEY * EXTEN.EXTENSION_RATE *
		EXTEN.EXTENSION_DAYS / 3000,
		2) as plan_EXTENSION_money,
		PROJEC.PROJECT_NAME,
		(SELECT TO_CHAR(A.Rec_Date, 'yyyy-mm-dd')
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE A INNER JOIN BIZ_LOAN_FINANCE_HANDLE B
		ON A.FINANCE_HANDLE_ID = B.PID
		WHERE B.PROJECT_ID = EXTEN.PROJECT_ID
		AND A.REC_PRO = 8) AS REC_INTEREST_DATE,
		EXTEN.EXTENSION_DAYS AS EXTENSION_DAYS,
		(SELECT A.REC_MONEY
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE A
		INNER JOIN BIZ_LOAN_FINANCE_HANDLE B
		ON A.FINANCE_HANDLE_ID = B.PID
		WHERE B.PROJECT_ID = EXTEN.PROJECT_ID
		AND A.REC_PRO = 8) AS AC_EXTENSION_FEE,
		EXTEN.Extension_Project_Id as Extension_Project_Id ,
		row_number() over(partition by EXTEN.Extension_Project_Id order by
		nvl(to_char(EXTEN.EXTENSION_DATE), '2099-12-31')) rn
		FROM BIZ_PROJECT_EXTENSION EXTEN
		LEFT JOIN BIZ_PROJECT PROJEC
		ON EXTEN.PROJECT_ID = PROJEC.PID
		LEFT JOIN BIZ_PRODUCT PDU
		ON PROJEC.PRODUCT_ID = PDU.PID
		LEFT JOIN SYS_USER SYS
		ON PROJEC.PM_USER_ID = SYS.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE G
		ON PROJEC.PID = G.PROJECT_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE F
		ON PROJEC.PID = F.PROJECT_ID
		WHERE PROJEC.STATUS = 1
		AND PROJEC.PROJECT_TYPE = 4
		AND PROJEC.IS_REJECTED = 0
		AND PROJEC.IS_CHECHAN = 0
		AND PROJEC.PID NOT IN
		(SELECT BPC.PROJECT_ID
		FROM BIZ_PROJECT_COMPLETE BPC
		WHERE BPC.IS_COMPLETE = 1
		AND BPC.STATUS = 1
		AND BPC.PROJECT_ID = PROJEC.PID)
		AND PDU.PRODUCT_TYPE = 2
		) c on a.project_id = c.EXTENSION_PROJECT_ID and a.rn = c.rn
		
		
		union all

		select nvl(a.PROJECT_ID,b.PROJECT_ID) PROJECT_ID,
		0 pm_user_id
		from (SELECT E.PID AS PROJECT_ID,
		row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date),
		'2099-12-31')) rn,
		E.PROJECT_NAME,
		E.PROJECT_NUMBER,
		aa.CONSULTING_FEE,
		aa.rec_date,
		F.CONFIRM_MONEY,
		bg.fee_rate,
		E.is_chechan,
		round(BG.LOAN_MONEY * bg.FEE_RATE *
		BF.LOAN_DAYS / 3000, 2) as plan_CONSULTING_money,
		Q.BUSINESS_SOURCE_STR,
		TO_CHAR(F.CONFIRM_DATE, 'YYYY-MM-DD') AS CONFIRM_DATE,
		G.REAL_NAME AS PM_USER_NAME,
		bb.china_name as CHINA_NAME,
		BG.LOAN_MONEY AS LOAN_AMOUNT,
		BF.LOAN_DAYS,
		TO_CHAR(C.REC_DATE, 'YYYY-MM-DD') AS LOAN_DATE,
		bs.suspend_day,
		e.pm_user_id,
		aa.POUNDAGE
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D ON C.FINANCE_HANDLE_ID = D.PID
		inner JOIN BIZ_PROJECT E ON E.PID = D.PROJECT_ID
		LEFT JOIN BIZ_LOAN_REFUND_FEE F ON F.PROJECT_ID = E.PID
		LEFT JOIN SYS_USER G ON g.PID = E.PM_USER_ID
		LEFT JOIN BIZ_PROJECT_FORECLOSURE BF ON BF.PROJECT_ID = E.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE BG ON BG.PROJECT_ID = E.PID
		LEFT JOIN BUSINESS_SOURCE_V Q ON Q.PID = E.PID
		Left join BIZ_LOAN_REPAYMENT br on br.project_id = e.pid
		left join BIZ_LOAN_SUSPEND_RECORD bs on bs.project_id = e.pid
		left join (SELECT B.CHINA_NAME, b.acct_id
		FROM CUS_PERSON B
		WHERE B.RELATION_TYPE = 1) bb on bb.acct_id = e.acct_id
		left join (SELECT A.PROJECT_ID,
		A.FINANCE_HANDLE_ID,
		A.CONSULTING_FEE,
		A.POUNDAGE,
		A.REC_DATE as REC_DATE
		FROM BIZ_LOAN_COLLECT_FEE_HIS A
		LEFT JOIN SYS_USER B ON A.CREATER_ID = B.PID
		LEFT JOIN (SELECT LOOKUP_VAL,
		lv.LOOKUP_DESC
		FROM SYS_LOOKUP L,
		SYS_LOOKUP_VAL LV
		WHERE LV.STATUS = 1
		AND L.PID = LV.LOOKUP_ID
		AND L.LOOKUP_TYPE =
		'LOAN_SOURCES_OF_FUNDS') C ON C.LOOKUP_VAL = A.PRO_RESOURCE) aa
		on aa.PROJECT_ID = e.pid
		where F.TYPE = 2 AND C.REC_PRO = 1

		<if test="projectName !=null and projectName !=''">
			AND e.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>

		) a 
		full join (select b.project_id,
                                            a.PROJECT_NAME,
                                            a.PROJECT_NUMBER,
                                           row_number() over(partition by b.project_id order by nvl(to_char(b.REPAYMENT_DATE), '2099-12-31')) rn,
                                           b.REPAYMENT_MONEY AS REC_MONEY,
                                           TO_CHAR(b.REPAYMENT_DATE,
                                                   'yyyy-MM-dd') AS REC_LOAN_DATE
                                      from BIZ_PROJECT a, BIZ_LOAN_REPAYMENT_RECORD b,SYS_USER G,BUSINESS_SOURCE_V Q 
                                     where a.pid = b.project_id and g.pid = a.PM_USER_ID and q.PID=a.pid
		<if test="projectName !=null and projectName !=''">
			AND a.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="pmUserName !=null and pmUserName !=''">
			AND G.REAL_NAME LIKE '%${pmUserName}%'
		</if>
		<if test="businessSourceStr !=null and businessSourceStr !=''">
			AND q.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		) b    on a.project_id = b.project_id
		inner join (select distinct PROJECT_ID
		from (SELECT E.PID AS PROJECT_ID,
		row_number() over(partition by E.PID order by nvl(to_char(aa.rec_date),
		'2099-12-31')) rn
		FROM BIZ_LOAN_APPLY_FINANCE_HANDLE C
		LEFT JOIN BIZ_LOAN_FINANCE_HANDLE D ON C.FINANCE_HANDLE_ID = D.PID
		inner JOIN BIZ_PROJECT E ON E.PID = D.PROJECT_ID
		LEFT JOIN BIZ_LOAN_REFUND_FEE F ON F.PROJECT_ID = E.PID
		left join (SELECT A.PROJECT_ID,
		A.FINANCE_HANDLE_ID,
		A.CONSULTING_FEE,
		A.POUNDAGE,
		A.REC_DATE
		FROM BIZ_LOAN_COLLECT_FEE_HIS A
		LEFT JOIN SYS_USER B ON A.CREATER_ID = B.PID
		LEFT JOIN (SELECT LOOKUP_VAL, lv.LOOKUP_DESC
		FROM SYS_LOOKUP L,
		SYS_LOOKUP_VAL LV
		WHERE LV.STATUS = 1
		AND L.PID = LV.LOOKUP_ID
		AND L.LOOKUP_TYPE ='LOAN_SOURCES_OF_FUNDS') C
		ON C.LOOKUP_VAL = A.PRO_RESOURCE) aa on aa.PROJECT_ID = e.pid
		 full join  BIZ_LOAN_REPAYMENT_RECORD b on e.pid = b.project_id
		where F.TYPE = 2 AND C.REC_PRO = 1)
		where rn > 1) d on nvl(a.PROJECT_ID,b.PROJECT_ID) = d.project_id
		group by  nvl(a.PROJECT_ID,b.PROJECT_ID)
		)t
		<where>
			<if test="userIds!=null and userIds.size()>0">
				AND t.PM_USER_ID IN
				<foreach item="itemId" collection="userIds" open="("
					separator="," close=")">
					#{itemId}
				</foreach>
			</if>
		</where>
		)
	</select>
	<!-- 资金方业务统计 -->
	<select id="queryForeclosureCapitalReport" resultMap="ForeclosureCapitalReportMap"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureCapitalReport"
		statementType="STATEMENT">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT * FROM (
		SELECT Q.RE_MONTH AS RE_MONTH,
		Q.ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(MAX(ING_COUNT)) AS ING_COUNT,
		TO_CHAR(MAX(ING_MONEY)) AS ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS TOTAL_COUNT,
		TO_CHAR(MAX(LJ_NEW_MONEY)) AS TOTAL_MONEY,
		1 ORDER_FIELD
		FROM (
		SELECT *
		FROM
		(
		SELECT T.ORG_NAME,
		T.RE_MONTH,
		0 NEW_COUNT,
		0 NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		SUM(NVL(A.NEW_COUNT,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY T.RE_MONTH) LJ_NEW_COUNT,
		SUM(NVL(A.NEW_MONEY,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY
		T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT ORG_NAME,RE_MONTH
		FROM (

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH
		</if>

		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH
		</if>
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN AFH ON P.PID = AFH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A ON AFH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2)B)T,
		(
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		ORDER BY 1,2
		) A
		WHERE T.ORG_NAME = A.ORG_NAME(+)
		AND T.RE_MONTH = A.RE_MONTH(+)
		GROUP BY T.RE_MONTH,
		T.ORG_NAME,
		NVL(A.NEW_COUNT,0),NVL(A.NEW_MONEY,0)
		ORDER BY 1,
		2)LJ

		UNION ALL

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		UNION ALL

		SELECT ORG_NAME,
		RE_MONTH,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) - SUM(SQUARE_COUNT)
		OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH)
		ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT
		ORG_NAME,RE_MONTH,

		MAX(NEW_COUNT) NEW_COUNT,
		MAX(NEW_MONEY) NEW_MONEY,
		MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM (SELECT OA.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(FH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(FH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(FH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(1) NEW_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P,
		V_PROJECT_LOAN FH,
		CAPITAL_ORG_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PRO_RESOURCE = OA.ORG_CODE
		GROUP BY OA.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(FH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(FH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(FH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT
		A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) T
		GROUP BY RE_MONTH, ORG_NAME) AFH
		GROUP BY RE_MONTH,
		ORG_NAME,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY
		ORDER BY 2, 1

		) Q
		<where>
			<trim>
				<if test="orgName != null and orgName !=''">
					AND Q.ORG_NAME LIKE '%${orgName}%'
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>
		GROUP BY Q.RE_MONTH, Q.ORG_NAME
		UNION ALL
		SELECT
		RE_MONTH,
		ORG_NAME,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT,
		LJ_NEW_MONEY,
		ORDER_FIELD
		FROM
		(

		SELECT
		'合计' RE_MONTH,
		ORG_NAME,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		MAX(RN) RECODE,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		1 ORDER_FIELD
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R
		ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH
		ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A
		ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME
		ORDER BY 2,1
		) T
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>
		GROUP BY ORG_NAME)A WHERE A.RECODE <![CDATA[<>]]>
		1
		<if test="orgName != null and orgName !=''">
			AND A.ORG_NAME LIKE '%${orgName}%'
		</if>
		UNION ALL
		SELECT
		'总计' RE_MONTH,
		'总计'ORG_NAME,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		3 ORDER_FIELD
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>

		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R
		ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH
		ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A
		ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND A.ORG_NAME LIKE '%${orgName}%'
		</if>
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME
		ORDER BY 2,1
		) T
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>

		)Q
		ORDER BY ORDER_FIELD,Q.ORG_NAME, Q.RE_MONTH ASC

		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=${page}*${rows}
			) D
			WHERE D.RN > ((${page}-1)*${rows})
			]]>
		</if>
	</select>

	<!-- 资金方业务统计总数 -->
	<select id="getForeclosureCapitalReportTotal"
		parameterType="com.xlkfinance.bms.rpc.report.ForeclosureCapitalReport"
		statementType="STATEMENT" resultType="Integer">
		SELECT COUNT(1) FROM (
		SELECT Q.RE_MONTH AS RE_MONTH,
		Q.ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		TO_CHAR(MAX(ING_COUNT)) AS ING_COUNT,
		TO_CHAR(MAX(ING_MONEY)) AS ING_MONEY,
		TO_CHAR(MAX(LJ_NEW_COUNT)) AS TOTAL_COUNT,
		TO_CHAR(MAX(LJ_NEW_MONEY)) AS TOTAL_MONEY,
		1 ORDER_FIELD
		FROM (
		SELECT *
		FROM
		(
		SELECT T.ORG_NAME,
		T.RE_MONTH,
		0 NEW_COUNT,
		0 NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		SUM(NVL(A.NEW_COUNT,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY T.RE_MONTH) LJ_NEW_COUNT,
		SUM(NVL(A.NEW_MONEY,0)) OVER(PARTITION BY T.ORG_NAME ORDER BY
		T.RE_MONTH) LJ_NEW_MONEY
		FROM
		(
		SELECT ORG_NAME,RE_MONTH
		FROM (

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH
		</if>

		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH
		</if>
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN AFH ON P.PID = AFH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A ON AFH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2)B)T,
		(
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		ORDER BY 1,2
		) A
		WHERE T.ORG_NAME = A.ORG_NAME(+)
		AND T.RE_MONTH = A.RE_MONTH(+)
		GROUP BY T.RE_MONTH,
		T.ORG_NAME,
		NVL(A.NEW_COUNT,0),NVL(A.NEW_MONEY,0)
		ORDER BY 1,
		2)LJ
		UNION ALL

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R
		ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH
		ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A
		ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		UNION ALL

		SELECT ORG_NAME,
		RE_MONTH,
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		SUM(NEW_COUNT) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) - SUM(SQUARE_COUNT)
		OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) ING_COUNT,
		SUM(NEW_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH) -
		SUM(SQUARE_MONEY) OVER(PARTITION BY ORG_NAME ORDER BY RE_MONTH)
		ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT
		ORG_NAME,RE_MONTH,

		MAX(NEW_COUNT) NEW_COUNT,
		MAX(NEW_MONEY) NEW_MONEY,
		MAX(SQUARE_COUNT) SQUARE_COUNT,
		MAX(SQUARE_MONEY) SQUARE_MONEY
		FROM (SELECT OA.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(FH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(FH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(FH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(1) NEW_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P,
		V_PROJECT_LOAN FH,
		CAPITAL_ORG_INFO OA
		WHERE P.PID = FH.PROJECT_ID
		AND FH.PRO_RESOURCE = OA.ORG_CODE
		GROUP BY OA.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(FH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(FH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(FH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT
		A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PROJECT_ID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM (SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) T
		GROUP BY RE_MONTH, ORG_NAME) AFH
		GROUP BY RE_MONTH,
		ORG_NAME,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY
		ORDER BY 2, 1
		) Q
		<where>
			<trim>
				<if test="orgName != null and orgName !=''">
					AND Q.ORG_NAME LIKE '%${orgName}%'
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND Q.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND Q.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>
		GROUP BY Q.RE_MONTH, Q.ORG_NAME
		UNION ALL
		SELECT
		RE_MONTH,
		ORG_NAME,
		NEW_COUNT,
		NEW_MONEY,
		SQUARE_COUNT,
		SQUARE_MONEY,
		ING_COUNT,
		ING_MONEY,
		LJ_NEW_COUNT,
		LJ_NEW_MONEY,
		ORDER_FIELD
		FROM
		(
		SELECT
		'合计' RE_MONTH,
		ORG_NAME,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		MAX(RN) RECODE,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		1 ORDER_FIELD
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(

		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R
		ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH
		ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A
		ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME
		ORDER BY 2,1
		) T
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>
		GROUP BY ORG_NAME)A WHERE A.RECODE <![CDATA[<>]]>
		1
		<if test="orgName != null and orgName !=''">
			AND A.ORG_NAME LIKE '%${orgName}%'
		</if>
		UNION ALL
		SELECT
		'总计' RE_MONTH,
		'总计'ORG_NAME,
		SUM(NEW_COUNT) AS NEW_COUNT,
		SUM(NEW_MONEY) AS NEW_MONEY,
		SUM(SQUARE_COUNT) AS SQUARE_COUNT,
		SUM(SQUARE_MONEY) AS SQUARE_MONEY,
		'--' AS ING_COUNT,
		'--' AS ING_MONEY,
		'--' AS LJ_NEW_COUNT,
		'--' AS LJ_NEW_MONEY,
		3 ORDER_FIELD
		FROM
		(
		SELECT
		RE_MONTH,
		ORG_NAME,
		MAX(NEW_COUNT) AS NEW_COUNT,
		MAX(NEW_MONEY) AS NEW_MONEY,
		MAX(SQUARE_COUNT) AS SQUARE_COUNT,
		MAX(SQUARE_MONEY) AS SQUARE_MONEY,
		ROW_NUMBER() OVER (PARTITION BY ORG_NAME ORDER BY RE_MONTH) RN
		FROM
		(
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(AFH.REC_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(AFH.REC_DATE, 'YYYYMMDD') RE_MONTH,
		</if>

		COUNT(P.PID) AS NEW_COUNT,
		SUM(AFH.PRO_RESOURE_MONEY) AS NEW_MONEY,
		0 AS SQUARE_COUNT,
		0 AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		INNER JOIN V_PROJECT_LOAN AFH
		ON P.PID = AFH.PROJECT_ID
		INNER JOIN CAPITAL_ORG_INFO A
		ON AFH.PRO_RESOURCE = A.ORG_CODE
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(AFH.REC_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(AFH.REC_DATE, 'YYYYMMDD')
		</if>
		UNION ALL
		SELECT A.ORG_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==1">
			TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD') RE_MONTH,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD') RE_MONTH,
		</if>
		0 AS NEW_COUNT,
		0 AS NEW_MONEY,
		COUNT(R.PID) AS SQUARE_COUNT,
		SUM(FH.PRO_RESOURE_MONEY) AS SQUARE_MONEY,
		0 AS ING_COUNT,
		0 AS ING_MONEY,
		0 AS LJ_NEW_COUNT,
		0 AS LJ_NEW_MONEY
		FROM
		(SELECT *
		FROM BIZ_PROJECT
		WHERE STATUS = 1
		AND PROJECT_TYPE IN (2,6)
		AND PROJECT_SOURCE IN (2,3)
		AND IS_CLOSED =2
		AND IS_CHECHAN = 0
		) P
		LEFT JOIN BIZ_LOAN_REPAYMENT R
		ON R.PROJECT_ID = P.PID
		INNER JOIN V_PROJECT_LOAN FH
		ON P.PID = FH.PROJECT_ID
		LEFT JOIN CAPITAL_ORG_INFO A
		ON FH.PRO_RESOURCE = A.ORG_CODE
		WHERE R.STATUS = 2
		<if test="orgName != null and orgName !=''">
			AND A.ORG_NAME LIKE '%${orgName}%'
		</if>
		GROUP BY A.ORG_NAME
		<if test="chooseMonthOrWeek ==0">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			,TO_CHAR(next_day(R.NEW_REPAYMENT_DATE+15/24 - 7,2),'YYYYMMDD')
		</if>
		<if test="chooseMonthOrWeek ==2">
			,TO_CHAR(R.NEW_REPAYMENT_DATE, 'YYYYMMDD')
		</if>
		) A
		GROUP BY
		RE_MONTH,
		ORG_NAME
		ORDER BY 2,1
		) T
		<where>
			<trim>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND T.RE_MONTH <![CDATA[>=]]>
						${fromDate}
					</if>
					<if test="endDate !=null and endDate !=''">
						AND T.RE_MONTH <![CDATA[<=]]>
						${endDate}
					</if>
				</if>
			</trim>
		</where>

		)Q
	</select>

	<!-- 业务审批明细 -->
	<select id="queryBusinessApprovalDetail" resultMap="businessApprovalDetailMap"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalDetail">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT
		C.PID AS PROJECT_ID,
		C.PROJECT_NUMBER,
		C.PROJECT_NAME,
		V.BUSINESS_SOURCE_STR,
		C.BUSINESS_SOURCE,
		Q.PRODUCT_NAME AS BUSINESS_CATELOG,
		D.ACCT_NAME AS CUSTOMER_NAME,
		E.LOAN_MONEY AS REAL_LOAN,
		A.STATUS AS APPROVAL_STATUS,
		A.DYNAMIC_NAME AS APPROVAL_STEP,
		S.REAL_NAME AS APPROVAL_PERSON,
		S.DEPARTMENT,
		TO_CHAR(A.CREATER_DATE,'yyyy-mm-dd hh24:mi:ss') AS CREATER_DATE,
		TO_CHAR(A.UPDATE_DATE,'yyyy-mm-dd hh24:mi:ss') AS UPDATE_DATE
		FROM
		BIZ_DYNAMIC A
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN SYS_USER S ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN CUS_ACCT_BLACKLIST_REFUSE_V D ON D.ACCT_ID=C.ACCT_ID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID=C.PID
		LEFT JOIN BIZ_PRODUCT Q ON C.PRODUCT_ID = Q.PID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = C.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND V.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND C.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="department !=null and department !=''">
					AND S.DEPARTMENT LIKE '%${department}%'
				</if>
				<if test="approvalStep !=null and approvalStep !=''">
					AND A.DYNAMIC_NAME LIKE '%${approvalStep}%'
				</if>
				<if test="approvalStatus !=null and approvalStatus >0">
					AND A.STATUS = #{approvalStatus}
				</if>
				<if test="businessCatelog !=null and businessCatelog !=''">
					AND Q.PRODUCT_NAME = #{businessCatelog}
				</if>
				<if test="approvalPerson !=null and approvalPerson !=''">
					AND S.REAL_NAME LIKE '%${approvalPerson}%'
				</if>
				<if
					test="( createDate !=null and createDate !='') or ( createEndDate !=null and createEndDate !='')">
					<if test="( createDate !=null and createDate !='')">
						and A.CREATER_DATE <![CDATA[>=]]>
						to_date(#{createDate},'yyyy-MM-dd')
					</if>
					<if test="( createEndDate !=null and createEndDate !='')">
						and A.CREATER_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{createEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
				<if
					test="( approvalDate !=null and approvalDate !='') or ( approvalEndDate !=null and approvalEndDate !='')">
					<if test="( approvalDate !=null and approvalDate !='')">
						and A.UPDATE_DATE <![CDATA[>=]]>
						to_date(#{approvalDate},'yyyy-MM-dd')
					</if>
					<if test="( approvalEndDate !=null and approvalEndDate !='')">
						and A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{approvalEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
			</trim>
		</where>
		ORDER BY A.CREATER_DATE DESC
		<if test="page!=-1">
		<![CDATA[
		) T
		WHERE ROWNUM <=${page}*${rows}
		) D
		WHERE D.RN > ((${page}-1)*${rows})
		]]>
		</if>
	</select>

	<select id="getBusinessApprovalDetailTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalDetail">
		SELECT DISTINCT COUNT(1) FROM
		(SELECT A.PID
		FROM BIZ_DYNAMIC A
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN SYS_USER S ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN CUS_ACCT_BLACKLIST_REFUSE_V D ON D.ACCT_ID=C.ACCT_ID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID=C.PID
		LEFT JOIN BIZ_PRODUCT Q ON C.PRODUCT_ID = Q.PID
		LEFT JOIN BUSINESS_SOURCE_V V ON V.PID = C.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="businessSourceStr !=null and businessSourceStr !=''">
					AND V.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
				</if>
				<if test="projectName !=null and projectName !=''">
					AND C.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="department !=null and department !=''">
					AND S.DEPARTMENT LIKE '%${department}%'
				</if>
				<if test="approvalStep !=null and approvalStep !=''">
					AND A.DYNAMIC_NAME LIKE '%${approvalStep}%'
				</if>
				<if test="approvalStatus !=null and approvalStatus >0">
					AND A.STATUS = #{approvalStatus}
				</if>
				<if test="businessCatelog !=null and businessCatelog !=''">
					AND Q.PRODUCT_NAME = #{businessCatelog}
				</if>
				<if test="approvalPerson !=null and approvalPerson !=''">
					AND S.REAL_NAME LIKE '%${approvalPerson}%'
				</if>
				<if
					test="( createDate !=null and createDate !='') or ( createEndDate !=null and createEndDate !='')">
					<if test="( createDate !=null and createDate !='')">
						and A.CREATER_DATE <![CDATA[>=]]>
						to_date(#{createDate},'yyyy-MM-dd')
					</if>
					<if test="( createEndDate !=null and createEndDate !='')">
						and A.CREATER_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{createEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
				<if
					test="( approvalDate !=null and approvalDate !='') or ( approvalEndDate !=null and approvalEndDate !='')">
					<if test="( approvalDate !=null and approvalDate !='')">
						and A.UPDATE_DATE <![CDATA[>=]]>
						to_date(#{approvalDate},'yyyy-MM-dd')
					</if>
					<if test="( approvalEndDate !=null and approvalEndDate !='')">
						and A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{approvalEndDate},' 23:59:59'),'yyyy-mm-dd
						hh24:mi:ss')
					</if>
				</if>
			</trim>
		</where>
		) T
	</select>

	<!-- 业务审批台账 -->
	<select id="queryBusinessApprovalBill" resultMap="businessApprovalBillMap"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalBill">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT
		COUNT(C.PID) AS TOTAL_COUNT,
		SUM(E.LOAN_MONEY) AS TOTAL_MONEY,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(A.UPDATE_DATE,'YYYYMM') AS DATE_ID,
		</if>
		<if test="chooseMonthOrWeek ==1">
			get_wk(A.UPDATE_DATE) DATE_ID,
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(A.UPDATE_DATE, 'YYYYMMDD') DATE_ID,
		</if>
		S.DEPARTMENT,A.DYNAMIC_NAME AS APPROVAL_STEP,S.REAL_NAME AS
		APPROVAL_PERSON
		FROM BIZ_DYNAMIC A
		LEFT JOIN SYS_USER S ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID = C.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{fromDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
			</trim>
		</where>
		GROUP BY S.REAL_NAME,S.DEPARTMENT,A.DYNAMIC_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(A.UPDATE_DATE,'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			get_wk(A.UPDATE_DATE)
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(A.UPDATE_DATE, 'YYYYMMDD')
		</if>
		ORDER BY
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(A.UPDATE_DATE,'YYYYMM') DESC
		</if>
		<if test="chooseMonthOrWeek ==1">
			get_wk(A.UPDATE_DATE) DESC
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(A.UPDATE_DATE, 'YYYYMMDD') DESC
		</if>
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>

	<!-- 业务审批台账总数 -->
	<select id="getBusinessApprovalBillTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalBill">
		SELECT DISTINCT COUNT(1) FROM
		(
		SELECT
		COUNT(C.PID) AS TOTAL_COUNT
		FROM BIZ_DYNAMIC A
		LEFT JOIN SYS_USER S ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID = C.PID
		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						#{itemId}
					</foreach>
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE<![CDATA[<=]]>
						TO_DATE(CONCAT(#{fromDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
			</trim>
		</where>
		GROUP BY S.REAL_NAME,S.DEPARTMENT,A.DYNAMIC_NAME,
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(A.UPDATE_DATE,'YYYYMM')
		</if>
		<if test="chooseMonthOrWeek ==1">
			get_wk(A.UPDATE_DATE)
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(A.UPDATE_DATE, 'YYYYMMDD')
		</if>
		ORDER BY
		<if test="chooseMonthOrWeek ==0">
			TO_CHAR(A.UPDATE_DATE,'YYYYMM') DESC
		</if>
		<if test="chooseMonthOrWeek ==1">
			get_wk(A.UPDATE_DATE) DESC
		</if>
		<if test="chooseMonthOrWeek ==2">
			TO_CHAR(A.UPDATE_DATE, 'YYYYMMDD') DESC
		</if>
		) T
	</select>

	<!-- 业务审批台账业务详情笔数 -->
	<select id="queryBusinessApprovalBillCount" resultMap="businessApprovalBillMap"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalBill">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT C.PID AS PROJECT_ID,
		C.PROJECT_NAME,
		(SELECT V.BUSINESS_SOURCE_STR FROM BUSINESS_SOURCE_V V WHERE V.PID = C.PID)
		BUSINESS_SOURCE_STR,
		C.BUSINESS_SOURCE,
		D.PRODUCT_NAME AS BUSINESS_CATELOG,
		D.ACCT_NAME AS CUSTOMER_NAME,
		E.LOAN_MONEY AS REAL_LOAN,
		A.DYNAMIC_NAME AS APPROVAL_STEP,
		S.REAL_NAME AS APPROVAL_PERSON,
		S.DEPARTMENT,

		TO_CHAR(A.UPDATE_DATE,'yyyy-mm-dd hh24:mi:ss') as APPROVAL_DATE
		FROM
		BIZ_DYNAMIC A LEFT JOIN SYS_USER S ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN CUS_ACCT_BLACKLIST_REFUSE_V D ON D.ACCT_ID=C.ACCT_ID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID=C.PID
		LEFT JOIN BIZ_PRODUCT D ON C.PRODUCT_ID = D.PID

		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						${itemId}
					</foreach>
				</if>
				<if test="projectName !=null and projectName !=''">
					AND C.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="approvalPerson !=null and approvalPerson !=''">
					AND S.REAL_NAME = #{approvalPerson}
				</if>
				<if test="approvalStep !=null and approvalStep !=''">
					AND A.DYNAMIC_NAME = #{approvalStep}
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyy/mm/ddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyy/mm/ddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{fromDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
			</trim>
		</where>
		<if test="page!=-1">
			<![CDATA[
			) T
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>

	<!-- 业务审批台账业务详情笔数总数 -->
	<select id="getBusinessApprovalBillCountTotal" resultType="Integer"
		parameterType="com.xlkfinance.bms.rpc.report.BusinessApprovalBill">
		SELECT DISTINCT COUNT(1) FROM
		(
		SELECT
		C.PID AS PROJECT_ID,
		C.PROJECT_NAME,
		(SELECT V.BUSINESS_SOURCE_STR FROM BUSINESS_SOURCE_V V WHERE V.PID = C.PID)
		BUSINESS_SOURCE_STR,
		C.BUSINESS_SOURCE,
		D.PRODUCT_NAME AS BUSINESS_CATELOG,
		D.ACCT_NAME AS CUSTOMER_NAME,
		E.LOAN_MONEY AS REAL_LOAN,
		A.DYNAMIC_NAME AS APPROVAL_STEP,
		S.REAL_NAME AS APPROVAL_PERSON,
		S.DEPARTMENT,
		TO_CHAR(A.UPDATE_DATE,'yyyy-mm-dd hh24:mi:ss') as APPROVAL_DATE
		FROM

		BIZ_DYNAMIC A LEFT JOIN SYS_USER S
		ON A.HANDLE_AUTHOR_ID = S.PID
		LEFT JOIN BIZ_PROJECT C ON A.PROJECT_ID = C.PID
		LEFT JOIN CUS_ACCT_BLACKLIST_REFUSE_V D ON D.ACCT_ID=C.ACCT_ID
		LEFT JOIN BIZ_PROJECT_GUARANTEE E ON E.PROJECT_ID=C.PID
		LEFT JOIN BIZ_PRODUCT D ON c.PRODUCT_ID = D.PID

		<where>
			<trim>
				<if test="userIds!=null and userIds.size()>0">
					AND A.HANDLE_AUTHOR_ID IN
					<foreach item="itemId" collection="userIds" open="("
						separator="," close=")">
						${itemId}
					</foreach>
				</if>
				<if test="projectName !=null and projectName !=''">
					AND C.PROJECT_NAME LIKE '%${projectName}%'
				</if>
				<if test="approvalPerson !=null and approvalPerson !=''">
					AND S.REAL_NAME = #{approvalPerson}
				</if>
				<if test="approvalStep !=null and approvalStep !=''">
					AND A.DYNAMIC_NAME = #{approvalStep}
				</if>
				<if test="chooseMonthOrWeek ==0">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==1">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyy/mm/ddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{endDate},'235959'),'yyyy/mm/ddhh24miss')
					</if>
				</if>
				<if test="chooseMonthOrWeek ==2">
					<if test="fromDate !=null and fromDate !=''">
						AND A.UPDATE_DATE <![CDATA[>=]]>
						TO_DATE(CONCAT(#{fromDate},'000000'),'yyyymmddhh24miss')
					</if>
					<if test="endDate !=null and endDate !=''">
						AND A.UPDATE_DATE <![CDATA[<=]]>
						TO_DATE(CONCAT(#{fromDate},'235959'),'yyyymmddhh24miss')
					</if>
				</if>
			</trim>
		</where>
		) T
	</select>
	
	<select id="queryRefuseProject" resultMap="refuseProjectReportMap" parameterType="com.xlkfinance.bms.rpc.report.RefuseProjectReport">
		<if test="page!=-1">
			SELECT D.* FROM (SELECT T.*, ROWNUM RN
			FROM (
		</if>
		SELECT A.PID  AS PROJECT_ID,
       A.PROJECT_NAME,
       A.PROJECT_NUMBER,
       C.BUSINESS_SOURCE_STR,
       D.PRODUCT_NAME,
       E.CHINA_NAME AS ACCT_NAME,
       F.LOAN_MONEY,
       TO_CHAR(B.CREATER_DATE,'YYYY-MM-DD HH24:MI:SS') AS REFUSE_TIME,
       G.REAL_NAME AS REFUSE_USER_NAME,
       B.REMARK AS REFUSE_REASON
  FROM BIZ_PROJECT A
  LEFT JOIN BIZ_DYNAMIC B
    ON A.PID = B.PROJECT_ID
  LEFT JOIN BUSINESS_SOURCE_V C
    ON A.PID = C.PID
  LEFT JOIN BIZ_PRODUCT D
    ON A.PRODUCT_ID = D.PID
  LEFT JOIN CUS_PERSON E
    ON A.ACCT_ID = E.ACCT_ID
   AND E.RELATION_TYPE = 1
  LEFT JOIN BIZ_PROJECT_GUARANTEE F
    ON A.PID = F.PROJECT_ID
  LEFT JOIN SYS_USER G
    ON B.HANDLE_AUTHOR_ID = G.PID
 WHERE A.IS_REJECTED = 1
   AND (B.MODUEL_NUMBER = 'e' AND B.DYNAMIC_NUMBER IN ('a', 'd') OR
       (B.MODUEL_NUMBER = 'd' AND B.DYNAMIC_NUMBER = 'd'))
		<if test="userIds!=null and userIds.size()>0">
			AND A.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				${itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND A.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="projectNumber != null and projectNumber != '' ">
			AND A.PROJECT_NUMBER LIKE '%${projectNumber}%'
		</if>
		<if test="productId != null and productId >0">
			AND	A.PRODUCT_ID =#{productId}
		</if>
		<if test="businessSourceStr != null and businessSourceStr!=''">
			AND	C.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		<if test="refuseTimeStart != null and refuseTimeStart !=''">
			 AND B.CREATER_DATE <![CDATA[>= ]]> #{refuseTimeStart,jdbcType=TIMESTAMP,javaType=String}
		</if>
		<if test="refuseTimeEnd != null and refuseTimeEnd !=''">
			 AND B.CREATER_DATE <![CDATA[<= ]]> #{refuseTimeEnd,jdbcType=TIMESTAMP,javaType=String}
		</if>
		<if test="page!=-1">
			<![CDATA[
			ORDER BY B.CREATER_DATE desc) T
			WHERE ROWNUM <=#{page}*#{rows}
			) D
			WHERE D.RN > ((#{page}-1)*#{rows})
			]]>
		</if>
	</select>
	<!-- 拒单列表总数 -->
	<select id="queryRefuseProjectTotal" parameterType="com.xlkfinance.bms.rpc.report.RefuseProjectReport" resultType="Integer">
		SELECT COUNT(A.PID)
  FROM BIZ_PROJECT A
  LEFT JOIN BIZ_DYNAMIC B
    ON A.PID = B.PROJECT_ID
  LEFT JOIN BUSINESS_SOURCE_V C
    ON A.PID = C.PID
  LEFT JOIN BIZ_PRODUCT D
    ON A.PRODUCT_ID = D.PID
  LEFT JOIN CUS_PERSON E
    ON A.ACCT_ID = E.ACCT_ID
   AND E.RELATION_TYPE = 1
  LEFT JOIN BIZ_PROJECT_GUARANTEE F
    ON A.PID = F.PROJECT_ID
  LEFT JOIN SYS_USER G
    ON B.HANDLE_AUTHOR_ID = G.PID
 WHERE A.IS_REJECTED = 1
   AND (B.MODUEL_NUMBER = 'e' AND B.DYNAMIC_NUMBER IN ('a', 'd') OR
       (B.MODUEL_NUMBER = 'd' AND B.DYNAMIC_NUMBER = 'd'))
   		<if test="userIds!=null and userIds.size()>0">
			AND A.PM_USER_ID IN
			<foreach item="itemId" collection="userIds" open="("
				separator="," close=")">
				${itemId}
			</foreach>
		</if>
		<if test="projectName !=null and projectName !=''">
			AND A.PROJECT_NAME LIKE '%${projectName}%'
		</if>
		<if test="projectNumber != null and projectNumber != '' ">
			AND A.PROJECT_NUMBER LIKE '%${projectNumber}%'
		</if>
		<if test="productId != null and productId >0">
			AND	A.PRODUCT_ID =#{productId}
		</if>
		<if test="businessSourceStr != null and businessSourceStr!=''">
			AND	C.BUSINESS_SOURCE_STR LIKE '%${businessSourceStr}%'
		</if>
		<if test="refuseTimeStart != null and refuseTimeStart !=''">
			 AND B.CREATER_DATE <![CDATA[>= ]]> #{refuseTimeStart,jdbcType=TIMESTAMP,javaType=String}
		</if>
		<if test="refuseTimeEnd != null and refuseTimeEnd !=''">
			 AND B.CREATER_DATE <![CDATA[<= ]]> #{refuseTimeEnd,jdbcType=TIMESTAMP,javaType=String}
		</if>
	</select>
	
</mapper>
