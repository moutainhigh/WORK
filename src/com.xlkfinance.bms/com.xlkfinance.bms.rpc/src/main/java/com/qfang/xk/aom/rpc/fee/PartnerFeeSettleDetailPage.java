/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.fee;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-9-12")
public class PartnerFeeSettleDetailPage implements org.apache.thrift.TBase<PartnerFeeSettleDetailPage, PartnerFeeSettleDetailPage._Fields>, java.io.Serializable, Cloneable, Comparable<PartnerFeeSettleDetailPage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PartnerFeeSettleDetailPage");

  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FEE_SETTLE_DETAIL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("feeSettleDetailId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField SETTLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("settleId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_FIELD_DESC = new org.apache.thrift.protocol.TField("returnComm", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("returnCommRate", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField LOAN_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("loanMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("loanDate", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PAYMENT_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField PAYMENT_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentDate", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField SOLUTION_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("solutionDate", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.I32, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PartnerFeeSettleDetailPageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PartnerFeeSettleDetailPageTupleSchemeFactory());
  }

  public int page; // required
  public int rows; // required
  public int feeSettleDetailId; // required
  public int settleId; // required
  public int projectId; // required
  public String projectName; // required
  public double returnComm; // required
  public double returnCommRate; // required
  public double loanMoney; // required
  public String loanDate; // required
  public double paymentMoney; // required
  public String paymentDate; // required
  public String solutionDate; // required
  public int partnerId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PAGE((short)1, "page"),
    ROWS((short)2, "rows"),
    FEE_SETTLE_DETAIL_ID((short)3, "feeSettleDetailId"),
    SETTLE_ID((short)4, "settleId"),
    PROJECT_ID((short)5, "projectId"),
    PROJECT_NAME((short)6, "projectName"),
    RETURN_COMM((short)7, "returnComm"),
    RETURN_COMM_RATE((short)8, "returnCommRate"),
    LOAN_MONEY((short)9, "loanMoney"),
    LOAN_DATE((short)10, "loanDate"),
    PAYMENT_MONEY((short)11, "paymentMoney"),
    PAYMENT_DATE((short)12, "paymentDate"),
    SOLUTION_DATE((short)13, "solutionDate"),
    PARTNER_ID((short)14, "partnerId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PAGE
          return PAGE;
        case 2: // ROWS
          return ROWS;
        case 3: // FEE_SETTLE_DETAIL_ID
          return FEE_SETTLE_DETAIL_ID;
        case 4: // SETTLE_ID
          return SETTLE_ID;
        case 5: // PROJECT_ID
          return PROJECT_ID;
        case 6: // PROJECT_NAME
          return PROJECT_NAME;
        case 7: // RETURN_COMM
          return RETURN_COMM;
        case 8: // RETURN_COMM_RATE
          return RETURN_COMM_RATE;
        case 9: // LOAN_MONEY
          return LOAN_MONEY;
        case 10: // LOAN_DATE
          return LOAN_DATE;
        case 11: // PAYMENT_MONEY
          return PAYMENT_MONEY;
        case 12: // PAYMENT_DATE
          return PAYMENT_DATE;
        case 13: // SOLUTION_DATE
          return SOLUTION_DATE;
        case 14: // PARTNER_ID
          return PARTNER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAGE_ISSET_ID = 0;
  private static final int __ROWS_ISSET_ID = 1;
  private static final int __FEESETTLEDETAILID_ISSET_ID = 2;
  private static final int __SETTLEID_ISSET_ID = 3;
  private static final int __PROJECTID_ISSET_ID = 4;
  private static final int __RETURNCOMM_ISSET_ID = 5;
  private static final int __RETURNCOMMRATE_ISSET_ID = 6;
  private static final int __LOANMONEY_ISSET_ID = 7;
  private static final int __PAYMENTMONEY_ISSET_ID = 8;
  private static final int __PARTNERID_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEE_SETTLE_DETAIL_ID, new org.apache.thrift.meta_data.FieldMetaData("feeSettleDetailId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SETTLE_ID, new org.apache.thrift.meta_data.FieldMetaData("settleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RETURN_COMM, new org.apache.thrift.meta_data.FieldMetaData("returnComm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RETURN_COMM_RATE, new org.apache.thrift.meta_data.FieldMetaData("returnCommRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_MONEY, new org.apache.thrift.meta_data.FieldMetaData("loanMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("loanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_MONEY, new org.apache.thrift.meta_data.FieldMetaData("paymentMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAYMENT_DATE, new org.apache.thrift.meta_data.FieldMetaData("paymentDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SOLUTION_DATE, new org.apache.thrift.meta_data.FieldMetaData("solutionDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PartnerFeeSettleDetailPage.class, metaDataMap);
  }

  public PartnerFeeSettleDetailPage() {
  }

  public PartnerFeeSettleDetailPage(
    int page,
    int rows,
    int feeSettleDetailId,
    int settleId,
    int projectId,
    String projectName,
    double returnComm,
    double returnCommRate,
    double loanMoney,
    String loanDate,
    double paymentMoney,
    String paymentDate,
    String solutionDate,
    int partnerId)
  {
    this();
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.feeSettleDetailId = feeSettleDetailId;
    setFeeSettleDetailIdIsSet(true);
    this.settleId = settleId;
    setSettleIdIsSet(true);
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectName = projectName;
    this.returnComm = returnComm;
    setReturnCommIsSet(true);
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    this.loanMoney = loanMoney;
    setLoanMoneyIsSet(true);
    this.loanDate = loanDate;
    this.paymentMoney = paymentMoney;
    setPaymentMoneyIsSet(true);
    this.paymentDate = paymentDate;
    this.solutionDate = solutionDate;
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PartnerFeeSettleDetailPage(PartnerFeeSettleDetailPage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.page = other.page;
    this.rows = other.rows;
    this.feeSettleDetailId = other.feeSettleDetailId;
    this.settleId = other.settleId;
    this.projectId = other.projectId;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.returnComm = other.returnComm;
    this.returnCommRate = other.returnCommRate;
    this.loanMoney = other.loanMoney;
    if (other.isSetLoanDate()) {
      this.loanDate = other.loanDate;
    }
    this.paymentMoney = other.paymentMoney;
    if (other.isSetPaymentDate()) {
      this.paymentDate = other.paymentDate;
    }
    if (other.isSetSolutionDate()) {
      this.solutionDate = other.solutionDate;
    }
    this.partnerId = other.partnerId;
  }

  public PartnerFeeSettleDetailPage deepCopy() {
    return new PartnerFeeSettleDetailPage(this);
  }

  @Override
  public void clear() {
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setFeeSettleDetailIdIsSet(false);
    this.feeSettleDetailId = 0;
    setSettleIdIsSet(false);
    this.settleId = 0;
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectName = null;
    setReturnCommIsSet(false);
    this.returnComm = 0.0;
    setReturnCommRateIsSet(false);
    this.returnCommRate = 0.0;
    setLoanMoneyIsSet(false);
    this.loanMoney = 0.0;
    this.loanDate = null;
    setPaymentMoneyIsSet(false);
    this.paymentMoney = 0.0;
    this.paymentDate = null;
    this.solutionDate = null;
    setPartnerIdIsSet(false);
    this.partnerId = 0;
  }

  public int getPage() {
    return this.page;
  }

  public PartnerFeeSettleDetailPage setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public PartnerFeeSettleDetailPage setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getFeeSettleDetailId() {
    return this.feeSettleDetailId;
  }

  public PartnerFeeSettleDetailPage setFeeSettleDetailId(int feeSettleDetailId) {
    this.feeSettleDetailId = feeSettleDetailId;
    setFeeSettleDetailIdIsSet(true);
    return this;
  }

  public void unsetFeeSettleDetailId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FEESETTLEDETAILID_ISSET_ID);
  }

  /** Returns true if field feeSettleDetailId is set (has been assigned a value) and false otherwise */
  public boolean isSetFeeSettleDetailId() {
    return EncodingUtils.testBit(__isset_bitfield, __FEESETTLEDETAILID_ISSET_ID);
  }

  public void setFeeSettleDetailIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FEESETTLEDETAILID_ISSET_ID, value);
  }

  public int getSettleId() {
    return this.settleId;
  }

  public PartnerFeeSettleDetailPage setSettleId(int settleId) {
    this.settleId = settleId;
    setSettleIdIsSet(true);
    return this;
  }

  public void unsetSettleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SETTLEID_ISSET_ID);
  }

  /** Returns true if field settleId is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleId() {
    return EncodingUtils.testBit(__isset_bitfield, __SETTLEID_ISSET_ID);
  }

  public void setSettleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SETTLEID_ISSET_ID, value);
  }

  public int getProjectId() {
    return this.projectId;
  }

  public PartnerFeeSettleDetailPage setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public PartnerFeeSettleDetailPage setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public double getReturnComm() {
    return this.returnComm;
  }

  public PartnerFeeSettleDetailPage setReturnComm(double returnComm) {
    this.returnComm = returnComm;
    setReturnCommIsSet(true);
    return this;
  }

  public void unsetReturnComm() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMM_ISSET_ID);
  }

  /** Returns true if field returnComm is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnComm() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMM_ISSET_ID);
  }

  public void setReturnCommIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMM_ISSET_ID, value);
  }

  public double getReturnCommRate() {
    return this.returnCommRate;
  }

  public PartnerFeeSettleDetailPage setReturnCommRate(double returnCommRate) {
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    return this;
  }

  public void unsetReturnCommRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  /** Returns true if field returnCommRate is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCommRate() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  public void setReturnCommRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID, value);
  }

  public double getLoanMoney() {
    return this.loanMoney;
  }

  public PartnerFeeSettleDetailPage setLoanMoney(double loanMoney) {
    this.loanMoney = loanMoney;
    setLoanMoneyIsSet(true);
    return this;
  }

  public void unsetLoanMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANMONEY_ISSET_ID);
  }

  /** Returns true if field loanMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANMONEY_ISSET_ID);
  }

  public void setLoanMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANMONEY_ISSET_ID, value);
  }

  public String getLoanDate() {
    return this.loanDate;
  }

  public PartnerFeeSettleDetailPage setLoanDate(String loanDate) {
    this.loanDate = loanDate;
    return this;
  }

  public void unsetLoanDate() {
    this.loanDate = null;
  }

  /** Returns true if field loanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanDate() {
    return this.loanDate != null;
  }

  public void setLoanDateIsSet(boolean value) {
    if (!value) {
      this.loanDate = null;
    }
  }

  public double getPaymentMoney() {
    return this.paymentMoney;
  }

  public PartnerFeeSettleDetailPage setPaymentMoney(double paymentMoney) {
    this.paymentMoney = paymentMoney;
    setPaymentMoneyIsSet(true);
    return this;
  }

  public void unsetPaymentMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTMONEY_ISSET_ID);
  }

  /** Returns true if field paymentMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTMONEY_ISSET_ID);
  }

  public void setPaymentMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTMONEY_ISSET_ID, value);
  }

  public String getPaymentDate() {
    return this.paymentDate;
  }

  public PartnerFeeSettleDetailPage setPaymentDate(String paymentDate) {
    this.paymentDate = paymentDate;
    return this;
  }

  public void unsetPaymentDate() {
    this.paymentDate = null;
  }

  /** Returns true if field paymentDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentDate() {
    return this.paymentDate != null;
  }

  public void setPaymentDateIsSet(boolean value) {
    if (!value) {
      this.paymentDate = null;
    }
  }

  public String getSolutionDate() {
    return this.solutionDate;
  }

  public PartnerFeeSettleDetailPage setSolutionDate(String solutionDate) {
    this.solutionDate = solutionDate;
    return this;
  }

  public void unsetSolutionDate() {
    this.solutionDate = null;
  }

  /** Returns true if field solutionDate is set (has been assigned a value) and false otherwise */
  public boolean isSetSolutionDate() {
    return this.solutionDate != null;
  }

  public void setSolutionDateIsSet(boolean value) {
    if (!value) {
      this.solutionDate = null;
    }
  }

  public int getPartnerId() {
    return this.partnerId;
  }

  public PartnerFeeSettleDetailPage setPartnerId(int partnerId) {
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    return this;
  }

  public void unsetPartnerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  public void setPartnerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case FEE_SETTLE_DETAIL_ID:
      if (value == null) {
        unsetFeeSettleDetailId();
      } else {
        setFeeSettleDetailId((Integer)value);
      }
      break;

    case SETTLE_ID:
      if (value == null) {
        unsetSettleId();
      } else {
        setSettleId((Integer)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case RETURN_COMM:
      if (value == null) {
        unsetReturnComm();
      } else {
        setReturnComm((Double)value);
      }
      break;

    case RETURN_COMM_RATE:
      if (value == null) {
        unsetReturnCommRate();
      } else {
        setReturnCommRate((Double)value);
      }
      break;

    case LOAN_MONEY:
      if (value == null) {
        unsetLoanMoney();
      } else {
        setLoanMoney((Double)value);
      }
      break;

    case LOAN_DATE:
      if (value == null) {
        unsetLoanDate();
      } else {
        setLoanDate((String)value);
      }
      break;

    case PAYMENT_MONEY:
      if (value == null) {
        unsetPaymentMoney();
      } else {
        setPaymentMoney((Double)value);
      }
      break;

    case PAYMENT_DATE:
      if (value == null) {
        unsetPaymentDate();
      } else {
        setPaymentDate((String)value);
      }
      break;

    case SOLUTION_DATE:
      if (value == null) {
        unsetSolutionDate();
      } else {
        setSolutionDate((String)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case FEE_SETTLE_DETAIL_ID:
      return Integer.valueOf(getFeeSettleDetailId());

    case SETTLE_ID:
      return Integer.valueOf(getSettleId());

    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NAME:
      return getProjectName();

    case RETURN_COMM:
      return Double.valueOf(getReturnComm());

    case RETURN_COMM_RATE:
      return Double.valueOf(getReturnCommRate());

    case LOAN_MONEY:
      return Double.valueOf(getLoanMoney());

    case LOAN_DATE:
      return getLoanDate();

    case PAYMENT_MONEY:
      return Double.valueOf(getPaymentMoney());

    case PAYMENT_DATE:
      return getPaymentDate();

    case SOLUTION_DATE:
      return getSolutionDate();

    case PARTNER_ID:
      return Integer.valueOf(getPartnerId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case FEE_SETTLE_DETAIL_ID:
      return isSetFeeSettleDetailId();
    case SETTLE_ID:
      return isSetSettleId();
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NAME:
      return isSetProjectName();
    case RETURN_COMM:
      return isSetReturnComm();
    case RETURN_COMM_RATE:
      return isSetReturnCommRate();
    case LOAN_MONEY:
      return isSetLoanMoney();
    case LOAN_DATE:
      return isSetLoanDate();
    case PAYMENT_MONEY:
      return isSetPaymentMoney();
    case PAYMENT_DATE:
      return isSetPaymentDate();
    case SOLUTION_DATE:
      return isSetSolutionDate();
    case PARTNER_ID:
      return isSetPartnerId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PartnerFeeSettleDetailPage)
      return this.equals((PartnerFeeSettleDetailPage)that);
    return false;
  }

  public boolean equals(PartnerFeeSettleDetailPage that) {
    if (that == null)
      return false;

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_feeSettleDetailId = true;
    boolean that_present_feeSettleDetailId = true;
    if (this_present_feeSettleDetailId || that_present_feeSettleDetailId) {
      if (!(this_present_feeSettleDetailId && that_present_feeSettleDetailId))
        return false;
      if (this.feeSettleDetailId != that.feeSettleDetailId)
        return false;
    }

    boolean this_present_settleId = true;
    boolean that_present_settleId = true;
    if (this_present_settleId || that_present_settleId) {
      if (!(this_present_settleId && that_present_settleId))
        return false;
      if (this.settleId != that.settleId)
        return false;
    }

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_returnComm = true;
    boolean that_present_returnComm = true;
    if (this_present_returnComm || that_present_returnComm) {
      if (!(this_present_returnComm && that_present_returnComm))
        return false;
      if (this.returnComm != that.returnComm)
        return false;
    }

    boolean this_present_returnCommRate = true;
    boolean that_present_returnCommRate = true;
    if (this_present_returnCommRate || that_present_returnCommRate) {
      if (!(this_present_returnCommRate && that_present_returnCommRate))
        return false;
      if (this.returnCommRate != that.returnCommRate)
        return false;
    }

    boolean this_present_loanMoney = true;
    boolean that_present_loanMoney = true;
    if (this_present_loanMoney || that_present_loanMoney) {
      if (!(this_present_loanMoney && that_present_loanMoney))
        return false;
      if (this.loanMoney != that.loanMoney)
        return false;
    }

    boolean this_present_loanDate = true && this.isSetLoanDate();
    boolean that_present_loanDate = true && that.isSetLoanDate();
    if (this_present_loanDate || that_present_loanDate) {
      if (!(this_present_loanDate && that_present_loanDate))
        return false;
      if (!this.loanDate.equals(that.loanDate))
        return false;
    }

    boolean this_present_paymentMoney = true;
    boolean that_present_paymentMoney = true;
    if (this_present_paymentMoney || that_present_paymentMoney) {
      if (!(this_present_paymentMoney && that_present_paymentMoney))
        return false;
      if (this.paymentMoney != that.paymentMoney)
        return false;
    }

    boolean this_present_paymentDate = true && this.isSetPaymentDate();
    boolean that_present_paymentDate = true && that.isSetPaymentDate();
    if (this_present_paymentDate || that_present_paymentDate) {
      if (!(this_present_paymentDate && that_present_paymentDate))
        return false;
      if (!this.paymentDate.equals(that.paymentDate))
        return false;
    }

    boolean this_present_solutionDate = true && this.isSetSolutionDate();
    boolean that_present_solutionDate = true && that.isSetSolutionDate();
    if (this_present_solutionDate || that_present_solutionDate) {
      if (!(this_present_solutionDate && that_present_solutionDate))
        return false;
      if (!this.solutionDate.equals(that.solutionDate))
        return false;
    }

    boolean this_present_partnerId = true;
    boolean that_present_partnerId = true;
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (this.partnerId != that.partnerId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_feeSettleDetailId = true;
    list.add(present_feeSettleDetailId);
    if (present_feeSettleDetailId)
      list.add(feeSettleDetailId);

    boolean present_settleId = true;
    list.add(present_settleId);
    if (present_settleId)
      list.add(settleId);

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_returnComm = true;
    list.add(present_returnComm);
    if (present_returnComm)
      list.add(returnComm);

    boolean present_returnCommRate = true;
    list.add(present_returnCommRate);
    if (present_returnCommRate)
      list.add(returnCommRate);

    boolean present_loanMoney = true;
    list.add(present_loanMoney);
    if (present_loanMoney)
      list.add(loanMoney);

    boolean present_loanDate = true && (isSetLoanDate());
    list.add(present_loanDate);
    if (present_loanDate)
      list.add(loanDate);

    boolean present_paymentMoney = true;
    list.add(present_paymentMoney);
    if (present_paymentMoney)
      list.add(paymentMoney);

    boolean present_paymentDate = true && (isSetPaymentDate());
    list.add(present_paymentDate);
    if (present_paymentDate)
      list.add(paymentDate);

    boolean present_solutionDate = true && (isSetSolutionDate());
    list.add(present_solutionDate);
    if (present_solutionDate)
      list.add(solutionDate);

    boolean present_partnerId = true;
    list.add(present_partnerId);
    if (present_partnerId)
      list.add(partnerId);

    return list.hashCode();
  }

  @Override
  public int compareTo(PartnerFeeSettleDetailPage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeeSettleDetailId()).compareTo(other.isSetFeeSettleDetailId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeeSettleDetailId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feeSettleDetailId, other.feeSettleDetailId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleId()).compareTo(other.isSetSettleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleId, other.settleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnComm()).compareTo(other.isSetReturnComm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnComm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnComm, other.returnComm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnCommRate()).compareTo(other.isSetReturnCommRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCommRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnCommRate, other.returnCommRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanMoney()).compareTo(other.isSetLoanMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanMoney, other.loanMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanDate()).compareTo(other.isSetLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanDate, other.loanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMoney()).compareTo(other.isSetPaymentMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMoney, other.paymentMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentDate()).compareTo(other.isSetPaymentDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentDate, other.paymentDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSolutionDate()).compareTo(other.isSetSolutionDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSolutionDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.solutionDate, other.solutionDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(other.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, other.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PartnerFeeSettleDetailPage(");
    boolean first = true;

    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("feeSettleDetailId:");
    sb.append(this.feeSettleDetailId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleId:");
    sb.append(this.settleId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnComm:");
    sb.append(this.returnComm);
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnCommRate:");
    sb.append(this.returnCommRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanMoney:");
    sb.append(this.loanMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanDate:");
    if (this.loanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.loanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMoney:");
    sb.append(this.paymentMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentDate:");
    if (this.paymentDate == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("solutionDate:");
    if (this.solutionDate == null) {
      sb.append("null");
    } else {
      sb.append(this.solutionDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    sb.append(this.partnerId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PartnerFeeSettleDetailPageStandardSchemeFactory implements SchemeFactory {
    public PartnerFeeSettleDetailPageStandardScheme getScheme() {
      return new PartnerFeeSettleDetailPageStandardScheme();
    }
  }

  private static class PartnerFeeSettleDetailPageStandardScheme extends StandardScheme<PartnerFeeSettleDetailPage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PartnerFeeSettleDetailPage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FEE_SETTLE_DETAIL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.feeSettleDetailId = iprot.readI32();
              struct.setFeeSettleDetailIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SETTLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.settleId = iprot.readI32();
              struct.setSettleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RETURN_COMM
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnComm = iprot.readDouble();
              struct.setReturnCommIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RETURN_COMM_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnCommRate = iprot.readDouble();
              struct.setReturnCommRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LOAN_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanMoney = iprot.readDouble();
              struct.setLoanMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanDate = iprot.readString();
              struct.setLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PAYMENT_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.paymentMoney = iprot.readDouble();
              struct.setPaymentMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PAYMENT_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.paymentDate = iprot.readString();
              struct.setPaymentDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SOLUTION_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.solutionDate = iprot.readString();
              struct.setSolutionDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerId = iprot.readI32();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PartnerFeeSettleDetailPage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FEE_SETTLE_DETAIL_ID_FIELD_DESC);
      oprot.writeI32(struct.feeSettleDetailId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SETTLE_ID_FIELD_DESC);
      oprot.writeI32(struct.settleId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RETURN_COMM_FIELD_DESC);
      oprot.writeDouble(struct.returnComm);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RETURN_COMM_RATE_FIELD_DESC);
      oprot.writeDouble(struct.returnCommRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.loanMoney);
      oprot.writeFieldEnd();
      if (struct.loanDate != null) {
        oprot.writeFieldBegin(LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.loanDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.paymentMoney);
      oprot.writeFieldEnd();
      if (struct.paymentDate != null) {
        oprot.writeFieldBegin(PAYMENT_DATE_FIELD_DESC);
        oprot.writeString(struct.paymentDate);
        oprot.writeFieldEnd();
      }
      if (struct.solutionDate != null) {
        oprot.writeFieldBegin(SOLUTION_DATE_FIELD_DESC);
        oprot.writeString(struct.solutionDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
      oprot.writeI32(struct.partnerId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PartnerFeeSettleDetailPageTupleSchemeFactory implements SchemeFactory {
    public PartnerFeeSettleDetailPageTupleScheme getScheme() {
      return new PartnerFeeSettleDetailPageTupleScheme();
    }
  }

  private static class PartnerFeeSettleDetailPageTupleScheme extends TupleScheme<PartnerFeeSettleDetailPage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PartnerFeeSettleDetailPage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPage()) {
        optionals.set(0);
      }
      if (struct.isSetRows()) {
        optionals.set(1);
      }
      if (struct.isSetFeeSettleDetailId()) {
        optionals.set(2);
      }
      if (struct.isSetSettleId()) {
        optionals.set(3);
      }
      if (struct.isSetProjectId()) {
        optionals.set(4);
      }
      if (struct.isSetProjectName()) {
        optionals.set(5);
      }
      if (struct.isSetReturnComm()) {
        optionals.set(6);
      }
      if (struct.isSetReturnCommRate()) {
        optionals.set(7);
      }
      if (struct.isSetLoanMoney()) {
        optionals.set(8);
      }
      if (struct.isSetLoanDate()) {
        optionals.set(9);
      }
      if (struct.isSetPaymentMoney()) {
        optionals.set(10);
      }
      if (struct.isSetPaymentDate()) {
        optionals.set(11);
      }
      if (struct.isSetSolutionDate()) {
        optionals.set(12);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetFeeSettleDetailId()) {
        oprot.writeI32(struct.feeSettleDetailId);
      }
      if (struct.isSetSettleId()) {
        oprot.writeI32(struct.settleId);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetReturnComm()) {
        oprot.writeDouble(struct.returnComm);
      }
      if (struct.isSetReturnCommRate()) {
        oprot.writeDouble(struct.returnCommRate);
      }
      if (struct.isSetLoanMoney()) {
        oprot.writeDouble(struct.loanMoney);
      }
      if (struct.isSetLoanDate()) {
        oprot.writeString(struct.loanDate);
      }
      if (struct.isSetPaymentMoney()) {
        oprot.writeDouble(struct.paymentMoney);
      }
      if (struct.isSetPaymentDate()) {
        oprot.writeString(struct.paymentDate);
      }
      if (struct.isSetSolutionDate()) {
        oprot.writeString(struct.solutionDate);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeI32(struct.partnerId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PartnerFeeSettleDetailPage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(1)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.feeSettleDetailId = iprot.readI32();
        struct.setFeeSettleDetailIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.settleId = iprot.readI32();
        struct.setSettleIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.returnComm = iprot.readDouble();
        struct.setReturnCommIsSet(true);
      }
      if (incoming.get(7)) {
        struct.returnCommRate = iprot.readDouble();
        struct.setReturnCommRateIsSet(true);
      }
      if (incoming.get(8)) {
        struct.loanMoney = iprot.readDouble();
        struct.setLoanMoneyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.loanDate = iprot.readString();
        struct.setLoanDateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.paymentMoney = iprot.readDouble();
        struct.setPaymentMoneyIsSet(true);
      }
      if (incoming.get(11)) {
        struct.paymentDate = iprot.readString();
        struct.setPaymentDateIsSet(true);
      }
      if (incoming.get(12)) {
        struct.solutionDate = iprot.readString();
        struct.setSolutionDateIsSet(true);
      }
      if (incoming.get(13)) {
        struct.partnerId = iprot.readI32();
        struct.setPartnerIdIsSet(true);
      }
    }
  }

}

