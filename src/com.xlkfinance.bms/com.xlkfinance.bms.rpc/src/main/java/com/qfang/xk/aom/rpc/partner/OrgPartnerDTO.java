/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.partner;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-9-1")
public class OrgPartnerDTO implements org.apache.thrift.TBase<OrgPartnerDTO, OrgPartnerDTO._Fields>, java.io.Serializable, Cloneable, Comparable<OrgPartnerDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgPartnerDTO");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField LOGIN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField REAL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("realName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CARD_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("cardNo", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField AUDIT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStatus", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField COOPERATION_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("cooperationStatus", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField USER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("userStatus", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField ORG_NUMS_FIELD_DESC = new org.apache.thrift.protocol.TField("orgNums", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField APPLY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("applyTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField REVIEW_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewTime", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField REVIEW_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewStatus", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("rate", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgPartnerDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgPartnerDTOTupleSchemeFactory());
  }

  public int pid; // required
  public String loginName; // required
  public String realName; // required
  public String email; // required
  public String phone; // required
  public String createTime; // required
  public String cardNo; // required
  public int auditStatus; // required
  public int cooperationStatus; // required
  public int userStatus; // required
  public int page; // required
  public int rows; // required
  public int userId; // required
  public int orgNums; // required
  public String applyTime; // required
  public String reviewTime; // required
  public int reviewStatus; // required
  public String startTime; // required
  public String endTime; // required
  public String rate; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    LOGIN_NAME((short)2, "loginName"),
    REAL_NAME((short)3, "realName"),
    EMAIL((short)4, "email"),
    PHONE((short)5, "phone"),
    CREATE_TIME((short)6, "createTime"),
    CARD_NO((short)7, "cardNo"),
    AUDIT_STATUS((short)8, "auditStatus"),
    COOPERATION_STATUS((short)9, "cooperationStatus"),
    USER_STATUS((short)10, "userStatus"),
    PAGE((short)11, "page"),
    ROWS((short)12, "rows"),
    USER_ID((short)13, "userId"),
    ORG_NUMS((short)14, "orgNums"),
    APPLY_TIME((short)15, "applyTime"),
    REVIEW_TIME((short)16, "reviewTime"),
    REVIEW_STATUS((short)17, "reviewStatus"),
    START_TIME((short)18, "startTime"),
    END_TIME((short)19, "endTime"),
    RATE((short)20, "rate");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // LOGIN_NAME
          return LOGIN_NAME;
        case 3: // REAL_NAME
          return REAL_NAME;
        case 4: // EMAIL
          return EMAIL;
        case 5: // PHONE
          return PHONE;
        case 6: // CREATE_TIME
          return CREATE_TIME;
        case 7: // CARD_NO
          return CARD_NO;
        case 8: // AUDIT_STATUS
          return AUDIT_STATUS;
        case 9: // COOPERATION_STATUS
          return COOPERATION_STATUS;
        case 10: // USER_STATUS
          return USER_STATUS;
        case 11: // PAGE
          return PAGE;
        case 12: // ROWS
          return ROWS;
        case 13: // USER_ID
          return USER_ID;
        case 14: // ORG_NUMS
          return ORG_NUMS;
        case 15: // APPLY_TIME
          return APPLY_TIME;
        case 16: // REVIEW_TIME
          return REVIEW_TIME;
        case 17: // REVIEW_STATUS
          return REVIEW_STATUS;
        case 18: // START_TIME
          return START_TIME;
        case 19: // END_TIME
          return END_TIME;
        case 20: // RATE
          return RATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __AUDITSTATUS_ISSET_ID = 1;
  private static final int __COOPERATIONSTATUS_ISSET_ID = 2;
  private static final int __USERSTATUS_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private static final int __USERID_ISSET_ID = 6;
  private static final int __ORGNUMS_ISSET_ID = 7;
  private static final int __REVIEWSTATUS_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOGIN_NAME, new org.apache.thrift.meta_data.FieldMetaData("loginName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REAL_NAME, new org.apache.thrift.meta_data.FieldMetaData("realName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARD_NO, new org.apache.thrift.meta_data.FieldMetaData("cardNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("auditStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COOPERATION_STATUS, new org.apache.thrift.meta_data.FieldMetaData("cooperationStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("userStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NUMS, new org.apache.thrift.meta_data.FieldMetaData("orgNums", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLY_TIME, new org.apache.thrift.meta_data.FieldMetaData("applyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_TIME, new org.apache.thrift.meta_data.FieldMetaData("reviewTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_STATUS, new org.apache.thrift.meta_data.FieldMetaData("reviewStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATE, new org.apache.thrift.meta_data.FieldMetaData("rate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgPartnerDTO.class, metaDataMap);
  }

  public OrgPartnerDTO() {
  }

  public OrgPartnerDTO(
    int pid,
    String loginName,
    String realName,
    String email,
    String phone,
    String createTime,
    String cardNo,
    int auditStatus,
    int cooperationStatus,
    int userStatus,
    int page,
    int rows,
    int userId,
    int orgNums,
    String applyTime,
    String reviewTime,
    int reviewStatus,
    String startTime,
    String endTime,
    String rate)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.loginName = loginName;
    this.realName = realName;
    this.email = email;
    this.phone = phone;
    this.createTime = createTime;
    this.cardNo = cardNo;
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    this.cooperationStatus = cooperationStatus;
    setCooperationStatusIsSet(true);
    this.userStatus = userStatus;
    setUserStatusIsSet(true);
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.orgNums = orgNums;
    setOrgNumsIsSet(true);
    this.applyTime = applyTime;
    this.reviewTime = reviewTime;
    this.reviewStatus = reviewStatus;
    setReviewStatusIsSet(true);
    this.startTime = startTime;
    this.endTime = endTime;
    this.rate = rate;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgPartnerDTO(OrgPartnerDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetLoginName()) {
      this.loginName = other.loginName;
    }
    if (other.isSetRealName()) {
      this.realName = other.realName;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetCardNo()) {
      this.cardNo = other.cardNo;
    }
    this.auditStatus = other.auditStatus;
    this.cooperationStatus = other.cooperationStatus;
    this.userStatus = other.userStatus;
    this.page = other.page;
    this.rows = other.rows;
    this.userId = other.userId;
    this.orgNums = other.orgNums;
    if (other.isSetApplyTime()) {
      this.applyTime = other.applyTime;
    }
    if (other.isSetReviewTime()) {
      this.reviewTime = other.reviewTime;
    }
    this.reviewStatus = other.reviewStatus;
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    if (other.isSetRate()) {
      this.rate = other.rate;
    }
  }

  public OrgPartnerDTO deepCopy() {
    return new OrgPartnerDTO(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.loginName = null;
    this.realName = null;
    this.email = null;
    this.phone = null;
    this.createTime = null;
    this.cardNo = null;
    setAuditStatusIsSet(false);
    this.auditStatus = 0;
    setCooperationStatusIsSet(false);
    this.cooperationStatus = 0;
    setUserStatusIsSet(false);
    this.userStatus = 0;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    setOrgNumsIsSet(false);
    this.orgNums = 0;
    this.applyTime = null;
    this.reviewTime = null;
    setReviewStatusIsSet(false);
    this.reviewStatus = 0;
    this.startTime = null;
    this.endTime = null;
    this.rate = null;
  }

  public int getPid() {
    return this.pid;
  }

  public OrgPartnerDTO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getLoginName() {
    return this.loginName;
  }

  public OrgPartnerDTO setLoginName(String loginName) {
    this.loginName = loginName;
    return this;
  }

  public void unsetLoginName() {
    this.loginName = null;
  }

  /** Returns true if field loginName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginName() {
    return this.loginName != null;
  }

  public void setLoginNameIsSet(boolean value) {
    if (!value) {
      this.loginName = null;
    }
  }

  public String getRealName() {
    return this.realName;
  }

  public OrgPartnerDTO setRealName(String realName) {
    this.realName = realName;
    return this;
  }

  public void unsetRealName() {
    this.realName = null;
  }

  /** Returns true if field realName is set (has been assigned a value) and false otherwise */
  public boolean isSetRealName() {
    return this.realName != null;
  }

  public void setRealNameIsSet(boolean value) {
    if (!value) {
      this.realName = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public OrgPartnerDTO setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public OrgPartnerDTO setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public OrgPartnerDTO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getCardNo() {
    return this.cardNo;
  }

  public OrgPartnerDTO setCardNo(String cardNo) {
    this.cardNo = cardNo;
    return this;
  }

  public void unsetCardNo() {
    this.cardNo = null;
  }

  /** Returns true if field cardNo is set (has been assigned a value) and false otherwise */
  public boolean isSetCardNo() {
    return this.cardNo != null;
  }

  public void setCardNoIsSet(boolean value) {
    if (!value) {
      this.cardNo = null;
    }
  }

  public int getAuditStatus() {
    return this.auditStatus;
  }

  public OrgPartnerDTO setAuditStatus(int auditStatus) {
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    return this;
  }

  public void unsetAuditStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  /** Returns true if field auditStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  public void setAuditStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID, value);
  }

  public int getCooperationStatus() {
    return this.cooperationStatus;
  }

  public OrgPartnerDTO setCooperationStatus(int cooperationStatus) {
    this.cooperationStatus = cooperationStatus;
    setCooperationStatusIsSet(true);
    return this;
  }

  public void unsetCooperationStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID);
  }

  /** Returns true if field cooperationStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCooperationStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID);
  }

  public void setCooperationStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID, value);
  }

  public int getUserStatus() {
    return this.userStatus;
  }

  public OrgPartnerDTO setUserStatus(int userStatus) {
    this.userStatus = userStatus;
    setUserStatusIsSet(true);
    return this;
  }

  public void unsetUserStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERSTATUS_ISSET_ID);
  }

  /** Returns true if field userStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetUserStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __USERSTATUS_ISSET_ID);
  }

  public void setUserStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERSTATUS_ISSET_ID, value);
  }

  public int getPage() {
    return this.page;
  }

  public OrgPartnerDTO setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public OrgPartnerDTO setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public OrgPartnerDTO setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public int getOrgNums() {
    return this.orgNums;
  }

  public OrgPartnerDTO setOrgNums(int orgNums) {
    this.orgNums = orgNums;
    setOrgNumsIsSet(true);
    return this;
  }

  public void unsetOrgNums() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGNUMS_ISSET_ID);
  }

  /** Returns true if field orgNums is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgNums() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGNUMS_ISSET_ID);
  }

  public void setOrgNumsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGNUMS_ISSET_ID, value);
  }

  public String getApplyTime() {
    return this.applyTime;
  }

  public OrgPartnerDTO setApplyTime(String applyTime) {
    this.applyTime = applyTime;
    return this;
  }

  public void unsetApplyTime() {
    this.applyTime = null;
  }

  /** Returns true if field applyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyTime() {
    return this.applyTime != null;
  }

  public void setApplyTimeIsSet(boolean value) {
    if (!value) {
      this.applyTime = null;
    }
  }

  public String getReviewTime() {
    return this.reviewTime;
  }

  public OrgPartnerDTO setReviewTime(String reviewTime) {
    this.reviewTime = reviewTime;
    return this;
  }

  public void unsetReviewTime() {
    this.reviewTime = null;
  }

  /** Returns true if field reviewTime is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewTime() {
    return this.reviewTime != null;
  }

  public void setReviewTimeIsSet(boolean value) {
    if (!value) {
      this.reviewTime = null;
    }
  }

  public int getReviewStatus() {
    return this.reviewStatus;
  }

  public OrgPartnerDTO setReviewStatus(int reviewStatus) {
    this.reviewStatus = reviewStatus;
    setReviewStatusIsSet(true);
    return this;
  }

  public void unsetReviewStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID);
  }

  /** Returns true if field reviewStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID);
  }

  public void setReviewStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID, value);
  }

  public String getStartTime() {
    return this.startTime;
  }

  public OrgPartnerDTO setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  public String getEndTime() {
    return this.endTime;
  }

  public OrgPartnerDTO setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public String getRate() {
    return this.rate;
  }

  public OrgPartnerDTO setRate(String rate) {
    this.rate = rate;
    return this;
  }

  public void unsetRate() {
    this.rate = null;
  }

  /** Returns true if field rate is set (has been assigned a value) and false otherwise */
  public boolean isSetRate() {
    return this.rate != null;
  }

  public void setRateIsSet(boolean value) {
    if (!value) {
      this.rate = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case LOGIN_NAME:
      if (value == null) {
        unsetLoginName();
      } else {
        setLoginName((String)value);
      }
      break;

    case REAL_NAME:
      if (value == null) {
        unsetRealName();
      } else {
        setRealName((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case CARD_NO:
      if (value == null) {
        unsetCardNo();
      } else {
        setCardNo((String)value);
      }
      break;

    case AUDIT_STATUS:
      if (value == null) {
        unsetAuditStatus();
      } else {
        setAuditStatus((Integer)value);
      }
      break;

    case COOPERATION_STATUS:
      if (value == null) {
        unsetCooperationStatus();
      } else {
        setCooperationStatus((Integer)value);
      }
      break;

    case USER_STATUS:
      if (value == null) {
        unsetUserStatus();
      } else {
        setUserStatus((Integer)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case ORG_NUMS:
      if (value == null) {
        unsetOrgNums();
      } else {
        setOrgNums((Integer)value);
      }
      break;

    case APPLY_TIME:
      if (value == null) {
        unsetApplyTime();
      } else {
        setApplyTime((String)value);
      }
      break;

    case REVIEW_TIME:
      if (value == null) {
        unsetReviewTime();
      } else {
        setReviewTime((String)value);
      }
      break;

    case REVIEW_STATUS:
      if (value == null) {
        unsetReviewStatus();
      } else {
        setReviewStatus((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((String)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((String)value);
      }
      break;

    case RATE:
      if (value == null) {
        unsetRate();
      } else {
        setRate((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case LOGIN_NAME:
      return getLoginName();

    case REAL_NAME:
      return getRealName();

    case EMAIL:
      return getEmail();

    case PHONE:
      return getPhone();

    case CREATE_TIME:
      return getCreateTime();

    case CARD_NO:
      return getCardNo();

    case AUDIT_STATUS:
      return Integer.valueOf(getAuditStatus());

    case COOPERATION_STATUS:
      return Integer.valueOf(getCooperationStatus());

    case USER_STATUS:
      return Integer.valueOf(getUserStatus());

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case ORG_NUMS:
      return Integer.valueOf(getOrgNums());

    case APPLY_TIME:
      return getApplyTime();

    case REVIEW_TIME:
      return getReviewTime();

    case REVIEW_STATUS:
      return Integer.valueOf(getReviewStatus());

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case RATE:
      return getRate();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case LOGIN_NAME:
      return isSetLoginName();
    case REAL_NAME:
      return isSetRealName();
    case EMAIL:
      return isSetEmail();
    case PHONE:
      return isSetPhone();
    case CREATE_TIME:
      return isSetCreateTime();
    case CARD_NO:
      return isSetCardNo();
    case AUDIT_STATUS:
      return isSetAuditStatus();
    case COOPERATION_STATUS:
      return isSetCooperationStatus();
    case USER_STATUS:
      return isSetUserStatus();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case USER_ID:
      return isSetUserId();
    case ORG_NUMS:
      return isSetOrgNums();
    case APPLY_TIME:
      return isSetApplyTime();
    case REVIEW_TIME:
      return isSetReviewTime();
    case REVIEW_STATUS:
      return isSetReviewStatus();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case RATE:
      return isSetRate();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgPartnerDTO)
      return this.equals((OrgPartnerDTO)that);
    return false;
  }

  public boolean equals(OrgPartnerDTO that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_loginName = true && this.isSetLoginName();
    boolean that_present_loginName = true && that.isSetLoginName();
    if (this_present_loginName || that_present_loginName) {
      if (!(this_present_loginName && that_present_loginName))
        return false;
      if (!this.loginName.equals(that.loginName))
        return false;
    }

    boolean this_present_realName = true && this.isSetRealName();
    boolean that_present_realName = true && that.isSetRealName();
    if (this_present_realName || that_present_realName) {
      if (!(this_present_realName && that_present_realName))
        return false;
      if (!this.realName.equals(that.realName))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_cardNo = true && this.isSetCardNo();
    boolean that_present_cardNo = true && that.isSetCardNo();
    if (this_present_cardNo || that_present_cardNo) {
      if (!(this_present_cardNo && that_present_cardNo))
        return false;
      if (!this.cardNo.equals(that.cardNo))
        return false;
    }

    boolean this_present_auditStatus = true;
    boolean that_present_auditStatus = true;
    if (this_present_auditStatus || that_present_auditStatus) {
      if (!(this_present_auditStatus && that_present_auditStatus))
        return false;
      if (this.auditStatus != that.auditStatus)
        return false;
    }

    boolean this_present_cooperationStatus = true;
    boolean that_present_cooperationStatus = true;
    if (this_present_cooperationStatus || that_present_cooperationStatus) {
      if (!(this_present_cooperationStatus && that_present_cooperationStatus))
        return false;
      if (this.cooperationStatus != that.cooperationStatus)
        return false;
    }

    boolean this_present_userStatus = true;
    boolean that_present_userStatus = true;
    if (this_present_userStatus || that_present_userStatus) {
      if (!(this_present_userStatus && that_present_userStatus))
        return false;
      if (this.userStatus != that.userStatus)
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_orgNums = true;
    boolean that_present_orgNums = true;
    if (this_present_orgNums || that_present_orgNums) {
      if (!(this_present_orgNums && that_present_orgNums))
        return false;
      if (this.orgNums != that.orgNums)
        return false;
    }

    boolean this_present_applyTime = true && this.isSetApplyTime();
    boolean that_present_applyTime = true && that.isSetApplyTime();
    if (this_present_applyTime || that_present_applyTime) {
      if (!(this_present_applyTime && that_present_applyTime))
        return false;
      if (!this.applyTime.equals(that.applyTime))
        return false;
    }

    boolean this_present_reviewTime = true && this.isSetReviewTime();
    boolean that_present_reviewTime = true && that.isSetReviewTime();
    if (this_present_reviewTime || that_present_reviewTime) {
      if (!(this_present_reviewTime && that_present_reviewTime))
        return false;
      if (!this.reviewTime.equals(that.reviewTime))
        return false;
    }

    boolean this_present_reviewStatus = true;
    boolean that_present_reviewStatus = true;
    if (this_present_reviewStatus || that_present_reviewStatus) {
      if (!(this_present_reviewStatus && that_present_reviewStatus))
        return false;
      if (this.reviewStatus != that.reviewStatus)
        return false;
    }

    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }

    boolean this_present_rate = true && this.isSetRate();
    boolean that_present_rate = true && that.isSetRate();
    if (this_present_rate || that_present_rate) {
      if (!(this_present_rate && that_present_rate))
        return false;
      if (!this.rate.equals(that.rate))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_loginName = true && (isSetLoginName());
    list.add(present_loginName);
    if (present_loginName)
      list.add(loginName);

    boolean present_realName = true && (isSetRealName());
    list.add(present_realName);
    if (present_realName)
      list.add(realName);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_cardNo = true && (isSetCardNo());
    list.add(present_cardNo);
    if (present_cardNo)
      list.add(cardNo);

    boolean present_auditStatus = true;
    list.add(present_auditStatus);
    if (present_auditStatus)
      list.add(auditStatus);

    boolean present_cooperationStatus = true;
    list.add(present_cooperationStatus);
    if (present_cooperationStatus)
      list.add(cooperationStatus);

    boolean present_userStatus = true;
    list.add(present_userStatus);
    if (present_userStatus)
      list.add(userStatus);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_userId = true;
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    boolean present_orgNums = true;
    list.add(present_orgNums);
    if (present_orgNums)
      list.add(orgNums);

    boolean present_applyTime = true && (isSetApplyTime());
    list.add(present_applyTime);
    if (present_applyTime)
      list.add(applyTime);

    boolean present_reviewTime = true && (isSetReviewTime());
    list.add(present_reviewTime);
    if (present_reviewTime)
      list.add(reviewTime);

    boolean present_reviewStatus = true;
    list.add(present_reviewStatus);
    if (present_reviewStatus)
      list.add(reviewStatus);

    boolean present_startTime = true && (isSetStartTime());
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true && (isSetEndTime());
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_rate = true && (isSetRate());
    list.add(present_rate);
    if (present_rate)
      list.add(rate);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgPartnerDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginName()).compareTo(other.isSetLoginName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginName, other.loginName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealName()).compareTo(other.isSetRealName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realName, other.realName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCardNo()).compareTo(other.isSetCardNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardNo, other.cardNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStatus()).compareTo(other.isSetAuditStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStatus, other.auditStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCooperationStatus()).compareTo(other.isSetCooperationStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCooperationStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cooperationStatus, other.cooperationStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserStatus()).compareTo(other.isSetUserStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userStatus, other.userStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgNums()).compareTo(other.isSetOrgNums());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgNums()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgNums, other.orgNums);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyTime()).compareTo(other.isSetApplyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyTime, other.applyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewTime()).compareTo(other.isSetReviewTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewTime, other.reviewTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewStatus()).compareTo(other.isSetReviewStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewStatus, other.reviewStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRate()).compareTo(other.isSetRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rate, other.rate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgPartnerDTO(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginName:");
    if (this.loginName == null) {
      sb.append("null");
    } else {
      sb.append(this.loginName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("realName:");
    if (this.realName == null) {
      sb.append("null");
    } else {
      sb.append(this.realName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    if (this.createTime == null) {
      sb.append("null");
    } else {
      sb.append(this.createTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardNo:");
    if (this.cardNo == null) {
      sb.append("null");
    } else {
      sb.append(this.cardNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStatus:");
    sb.append(this.auditStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cooperationStatus:");
    sb.append(this.cooperationStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userStatus:");
    sb.append(this.userStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgNums:");
    sb.append(this.orgNums);
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyTime:");
    if (this.applyTime == null) {
      sb.append("null");
    } else {
      sb.append(this.applyTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewTime:");
    if (this.reviewTime == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewStatus:");
    sb.append(this.reviewStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rate:");
    if (this.rate == null) {
      sb.append("null");
    } else {
      sb.append(this.rate);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgPartnerDTOStandardSchemeFactory implements SchemeFactory {
    public OrgPartnerDTOStandardScheme getScheme() {
      return new OrgPartnerDTOStandardScheme();
    }
  }

  private static class OrgPartnerDTOStandardScheme extends StandardScheme<OrgPartnerDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgPartnerDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LOGIN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginName = iprot.readString();
              struct.setLoginNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REAL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.realName = iprot.readString();
              struct.setRealNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CARD_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardNo = iprot.readString();
              struct.setCardNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AUDIT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.auditStatus = iprot.readI32();
              struct.setAuditStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COOPERATION_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cooperationStatus = iprot.readI32();
              struct.setCooperationStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // USER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userStatus = iprot.readI32();
              struct.setUserStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ORG_NUMS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgNums = iprot.readI32();
              struct.setOrgNumsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // APPLY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applyTime = iprot.readString();
              struct.setApplyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // REVIEW_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewTime = iprot.readString();
              struct.setReviewTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // REVIEW_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reviewStatus = iprot.readI32();
              struct.setReviewStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startTime = iprot.readString();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endTime = iprot.readString();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.rate = iprot.readString();
              struct.setRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgPartnerDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.loginName != null) {
        oprot.writeFieldBegin(LOGIN_NAME_FIELD_DESC);
        oprot.writeString(struct.loginName);
        oprot.writeFieldEnd();
      }
      if (struct.realName != null) {
        oprot.writeFieldBegin(REAL_NAME_FIELD_DESC);
        oprot.writeString(struct.realName);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.cardNo != null) {
        oprot.writeFieldBegin(CARD_NO_FIELD_DESC);
        oprot.writeString(struct.cardNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUDIT_STATUS_FIELD_DESC);
      oprot.writeI32(struct.auditStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COOPERATION_STATUS_FIELD_DESC);
      oprot.writeI32(struct.cooperationStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_STATUS_FIELD_DESC);
      oprot.writeI32(struct.userStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORG_NUMS_FIELD_DESC);
      oprot.writeI32(struct.orgNums);
      oprot.writeFieldEnd();
      if (struct.applyTime != null) {
        oprot.writeFieldBegin(APPLY_TIME_FIELD_DESC);
        oprot.writeString(struct.applyTime);
        oprot.writeFieldEnd();
      }
      if (struct.reviewTime != null) {
        oprot.writeFieldBegin(REVIEW_TIME_FIELD_DESC);
        oprot.writeString(struct.reviewTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REVIEW_STATUS_FIELD_DESC);
      oprot.writeI32(struct.reviewStatus);
      oprot.writeFieldEnd();
      if (struct.startTime != null) {
        oprot.writeFieldBegin(START_TIME_FIELD_DESC);
        oprot.writeString(struct.startTime);
        oprot.writeFieldEnd();
      }
      if (struct.endTime != null) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeString(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.rate != null) {
        oprot.writeFieldBegin(RATE_FIELD_DESC);
        oprot.writeString(struct.rate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgPartnerDTOTupleSchemeFactory implements SchemeFactory {
    public OrgPartnerDTOTupleScheme getScheme() {
      return new OrgPartnerDTOTupleScheme();
    }
  }

  private static class OrgPartnerDTOTupleScheme extends TupleScheme<OrgPartnerDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgPartnerDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetLoginName()) {
        optionals.set(1);
      }
      if (struct.isSetRealName()) {
        optionals.set(2);
      }
      if (struct.isSetEmail()) {
        optionals.set(3);
      }
      if (struct.isSetPhone()) {
        optionals.set(4);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(5);
      }
      if (struct.isSetCardNo()) {
        optionals.set(6);
      }
      if (struct.isSetAuditStatus()) {
        optionals.set(7);
      }
      if (struct.isSetCooperationStatus()) {
        optionals.set(8);
      }
      if (struct.isSetUserStatus()) {
        optionals.set(9);
      }
      if (struct.isSetPage()) {
        optionals.set(10);
      }
      if (struct.isSetRows()) {
        optionals.set(11);
      }
      if (struct.isSetUserId()) {
        optionals.set(12);
      }
      if (struct.isSetOrgNums()) {
        optionals.set(13);
      }
      if (struct.isSetApplyTime()) {
        optionals.set(14);
      }
      if (struct.isSetReviewTime()) {
        optionals.set(15);
      }
      if (struct.isSetReviewStatus()) {
        optionals.set(16);
      }
      if (struct.isSetStartTime()) {
        optionals.set(17);
      }
      if (struct.isSetEndTime()) {
        optionals.set(18);
      }
      if (struct.isSetRate()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetLoginName()) {
        oprot.writeString(struct.loginName);
      }
      if (struct.isSetRealName()) {
        oprot.writeString(struct.realName);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetCardNo()) {
        oprot.writeString(struct.cardNo);
      }
      if (struct.isSetAuditStatus()) {
        oprot.writeI32(struct.auditStatus);
      }
      if (struct.isSetCooperationStatus()) {
        oprot.writeI32(struct.cooperationStatus);
      }
      if (struct.isSetUserStatus()) {
        oprot.writeI32(struct.userStatus);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetOrgNums()) {
        oprot.writeI32(struct.orgNums);
      }
      if (struct.isSetApplyTime()) {
        oprot.writeString(struct.applyTime);
      }
      if (struct.isSetReviewTime()) {
        oprot.writeString(struct.reviewTime);
      }
      if (struct.isSetReviewStatus()) {
        oprot.writeI32(struct.reviewStatus);
      }
      if (struct.isSetStartTime()) {
        oprot.writeString(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeString(struct.endTime);
      }
      if (struct.isSetRate()) {
        oprot.writeString(struct.rate);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgPartnerDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.loginName = iprot.readString();
        struct.setLoginNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.realName = iprot.readString();
        struct.setRealNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(4)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cardNo = iprot.readString();
        struct.setCardNoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.auditStatus = iprot.readI32();
        struct.setAuditStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cooperationStatus = iprot.readI32();
        struct.setCooperationStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.userStatus = iprot.readI32();
        struct.setUserStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(11)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(12)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.orgNums = iprot.readI32();
        struct.setOrgNumsIsSet(true);
      }
      if (incoming.get(14)) {
        struct.applyTime = iprot.readString();
        struct.setApplyTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.reviewTime = iprot.readString();
        struct.setReviewTimeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.reviewStatus = iprot.readI32();
        struct.setReviewStatusIsSet(true);
      }
      if (incoming.get(17)) {
        struct.startTime = iprot.readString();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.endTime = iprot.readString();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.rate = iprot.readString();
        struct.setRateIsSet(true);
      }
    }
  }

}

