/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.partner;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-9-1")
public class OrgPartnerInfo implements org.apache.thrift.TBase<OrgPartnerInfo, OrgPartnerInfo._Fields>, java.io.Serializable, Cloneable, Comparable<OrgPartnerInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgPartnerInfo");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CARD_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("cardNo", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("rate", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField COOPERATION_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("cooperationStatus", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField CONTRACT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("contractId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField URL_FIELD_DESC = new org.apache.thrift.protocol.TField("url", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField COOPERATION_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("cooperationDesc", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField BIZ_ADVISER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bizAdviserId", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField CREATOR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("creatorId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("updateId", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField UPDATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField ORG_USER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("orgUserInfo", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField AUDIT_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("auditDesc", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField REVIEW_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewStatus", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField REVIEW_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewDesc", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField REVIEW_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewId", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField REVIEW_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewTime", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField APPLY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("applyTime", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField MSG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("msgCode", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField PAYEE_ACCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("payeeAccount", org.apache.thrift.protocol.TType.STRING, (short)26);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgPartnerInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgPartnerInfoTupleSchemeFactory());
  }

  public int pid; // required
  public int userId; // required
  public String startTime; // required
  public String endTime; // required
  public String cardNo; // required
  public double rate; // required
  public int cooperationStatus; // required
  public int contractId; // required
  public String url; // required
  public String cooperationDesc; // required
  public int status; // required
  public int bizAdviserId; // required
  public int creatorId; // required
  public String createDate; // required
  public int updateId; // required
  public String updateDate; // required
  public String remark; // required
  public com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo; // required
  public String auditDesc; // required
  public int reviewStatus; // required
  public String reviewDesc; // required
  public int reviewId; // required
  public String reviewTime; // required
  public String applyTime; // required
  public String msgCode; // required
  public String payeeAccount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    USER_ID((short)2, "userId"),
    START_TIME((short)3, "startTime"),
    END_TIME((short)4, "endTime"),
    CARD_NO((short)5, "cardNo"),
    RATE((short)6, "rate"),
    COOPERATION_STATUS((short)7, "cooperationStatus"),
    CONTRACT_ID((short)8, "contractId"),
    URL((short)9, "url"),
    COOPERATION_DESC((short)10, "cooperationDesc"),
    STATUS((short)11, "status"),
    BIZ_ADVISER_ID((short)12, "bizAdviserId"),
    CREATOR_ID((short)13, "creatorId"),
    CREATE_DATE((short)14, "createDate"),
    UPDATE_ID((short)15, "updateId"),
    UPDATE_DATE((short)16, "updateDate"),
    REMARK((short)17, "remark"),
    ORG_USER_INFO((short)18, "orgUserInfo"),
    AUDIT_DESC((short)19, "auditDesc"),
    REVIEW_STATUS((short)20, "reviewStatus"),
    REVIEW_DESC((short)21, "reviewDesc"),
    REVIEW_ID((short)22, "reviewId"),
    REVIEW_TIME((short)23, "reviewTime"),
    APPLY_TIME((short)24, "applyTime"),
    MSG_CODE((short)25, "msgCode"),
    PAYEE_ACCOUNT((short)26, "payeeAccount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // START_TIME
          return START_TIME;
        case 4: // END_TIME
          return END_TIME;
        case 5: // CARD_NO
          return CARD_NO;
        case 6: // RATE
          return RATE;
        case 7: // COOPERATION_STATUS
          return COOPERATION_STATUS;
        case 8: // CONTRACT_ID
          return CONTRACT_ID;
        case 9: // URL
          return URL;
        case 10: // COOPERATION_DESC
          return COOPERATION_DESC;
        case 11: // STATUS
          return STATUS;
        case 12: // BIZ_ADVISER_ID
          return BIZ_ADVISER_ID;
        case 13: // CREATOR_ID
          return CREATOR_ID;
        case 14: // CREATE_DATE
          return CREATE_DATE;
        case 15: // UPDATE_ID
          return UPDATE_ID;
        case 16: // UPDATE_DATE
          return UPDATE_DATE;
        case 17: // REMARK
          return REMARK;
        case 18: // ORG_USER_INFO
          return ORG_USER_INFO;
        case 19: // AUDIT_DESC
          return AUDIT_DESC;
        case 20: // REVIEW_STATUS
          return REVIEW_STATUS;
        case 21: // REVIEW_DESC
          return REVIEW_DESC;
        case 22: // REVIEW_ID
          return REVIEW_ID;
        case 23: // REVIEW_TIME
          return REVIEW_TIME;
        case 24: // APPLY_TIME
          return APPLY_TIME;
        case 25: // MSG_CODE
          return MSG_CODE;
        case 26: // PAYEE_ACCOUNT
          return PAYEE_ACCOUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __RATE_ISSET_ID = 2;
  private static final int __COOPERATIONSTATUS_ISSET_ID = 3;
  private static final int __CONTRACTID_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __BIZADVISERID_ISSET_ID = 6;
  private static final int __CREATORID_ISSET_ID = 7;
  private static final int __UPDATEID_ISSET_ID = 8;
  private static final int __REVIEWSTATUS_ISSET_ID = 9;
  private static final int __REVIEWID_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARD_NO, new org.apache.thrift.meta_data.FieldMetaData("cardNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATE, new org.apache.thrift.meta_data.FieldMetaData("rate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.COOPERATION_STATUS, new org.apache.thrift.meta_data.FieldMetaData("cooperationStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CONTRACT_ID, new org.apache.thrift.meta_data.FieldMetaData("contractId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.URL, new org.apache.thrift.meta_data.FieldMetaData("url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COOPERATION_DESC, new org.apache.thrift.meta_data.FieldMetaData("cooperationDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BIZ_ADVISER_ID, new org.apache.thrift.meta_data.FieldMetaData("bizAdviserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATOR_ID, new org.apache.thrift.meta_data.FieldMetaData("creatorId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_ID, new org.apache.thrift.meta_data.FieldMetaData("updateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("updateDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_USER_INFO, new org.apache.thrift.meta_data.FieldMetaData("orgUserInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.qfang.xk.aom.rpc.system.OrgUserInfo.class)));
    tmpMap.put(_Fields.AUDIT_DESC, new org.apache.thrift.meta_data.FieldMetaData("auditDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_STATUS, new org.apache.thrift.meta_data.FieldMetaData("reviewStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REVIEW_DESC, new org.apache.thrift.meta_data.FieldMetaData("reviewDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REVIEW_ID, new org.apache.thrift.meta_data.FieldMetaData("reviewId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REVIEW_TIME, new org.apache.thrift.meta_data.FieldMetaData("reviewTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLY_TIME, new org.apache.thrift.meta_data.FieldMetaData("applyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MSG_CODE, new org.apache.thrift.meta_data.FieldMetaData("msgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYEE_ACCOUNT, new org.apache.thrift.meta_data.FieldMetaData("payeeAccount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgPartnerInfo.class, metaDataMap);
  }

  public OrgPartnerInfo() {
  }

  public OrgPartnerInfo(
    int pid,
    int userId,
    String startTime,
    String endTime,
    String cardNo,
    double rate,
    int cooperationStatus,
    int contractId,
    String url,
    String cooperationDesc,
    int status,
    int bizAdviserId,
    int creatorId,
    String createDate,
    int updateId,
    String updateDate,
    String remark,
    com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo,
    String auditDesc,
    int reviewStatus,
    String reviewDesc,
    int reviewId,
    String reviewTime,
    String applyTime,
    String msgCode,
    String payeeAccount)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.startTime = startTime;
    this.endTime = endTime;
    this.cardNo = cardNo;
    this.rate = rate;
    setRateIsSet(true);
    this.cooperationStatus = cooperationStatus;
    setCooperationStatusIsSet(true);
    this.contractId = contractId;
    setContractIdIsSet(true);
    this.url = url;
    this.cooperationDesc = cooperationDesc;
    this.status = status;
    setStatusIsSet(true);
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    this.creatorId = creatorId;
    setCreatorIdIsSet(true);
    this.createDate = createDate;
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    this.updateDate = updateDate;
    this.remark = remark;
    this.orgUserInfo = orgUserInfo;
    this.auditDesc = auditDesc;
    this.reviewStatus = reviewStatus;
    setReviewStatusIsSet(true);
    this.reviewDesc = reviewDesc;
    this.reviewId = reviewId;
    setReviewIdIsSet(true);
    this.reviewTime = reviewTime;
    this.applyTime = applyTime;
    this.msgCode = msgCode;
    this.payeeAccount = payeeAccount;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgPartnerInfo(OrgPartnerInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    this.userId = other.userId;
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    if (other.isSetCardNo()) {
      this.cardNo = other.cardNo;
    }
    this.rate = other.rate;
    this.cooperationStatus = other.cooperationStatus;
    this.contractId = other.contractId;
    if (other.isSetUrl()) {
      this.url = other.url;
    }
    if (other.isSetCooperationDesc()) {
      this.cooperationDesc = other.cooperationDesc;
    }
    this.status = other.status;
    this.bizAdviserId = other.bizAdviserId;
    this.creatorId = other.creatorId;
    if (other.isSetCreateDate()) {
      this.createDate = other.createDate;
    }
    this.updateId = other.updateId;
    if (other.isSetUpdateDate()) {
      this.updateDate = other.updateDate;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetOrgUserInfo()) {
      this.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo(other.orgUserInfo);
    }
    if (other.isSetAuditDesc()) {
      this.auditDesc = other.auditDesc;
    }
    this.reviewStatus = other.reviewStatus;
    if (other.isSetReviewDesc()) {
      this.reviewDesc = other.reviewDesc;
    }
    this.reviewId = other.reviewId;
    if (other.isSetReviewTime()) {
      this.reviewTime = other.reviewTime;
    }
    if (other.isSetApplyTime()) {
      this.applyTime = other.applyTime;
    }
    if (other.isSetMsgCode()) {
      this.msgCode = other.msgCode;
    }
    if (other.isSetPayeeAccount()) {
      this.payeeAccount = other.payeeAccount;
    }
  }

  public OrgPartnerInfo deepCopy() {
    return new OrgPartnerInfo(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.startTime = null;
    this.endTime = null;
    this.cardNo = null;
    setRateIsSet(false);
    this.rate = 0.0;
    setCooperationStatusIsSet(false);
    this.cooperationStatus = 0;
    setContractIdIsSet(false);
    this.contractId = 0;
    this.url = null;
    this.cooperationDesc = null;
    setStatusIsSet(false);
    this.status = 0;
    setBizAdviserIdIsSet(false);
    this.bizAdviserId = 0;
    setCreatorIdIsSet(false);
    this.creatorId = 0;
    this.createDate = null;
    setUpdateIdIsSet(false);
    this.updateId = 0;
    this.updateDate = null;
    this.remark = null;
    this.orgUserInfo = null;
    this.auditDesc = null;
    setReviewStatusIsSet(false);
    this.reviewStatus = 0;
    this.reviewDesc = null;
    setReviewIdIsSet(false);
    this.reviewId = 0;
    this.reviewTime = null;
    this.applyTime = null;
    this.msgCode = null;
    this.payeeAccount = null;
  }

  public int getPid() {
    return this.pid;
  }

  public OrgPartnerInfo setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public OrgPartnerInfo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public String getStartTime() {
    return this.startTime;
  }

  public OrgPartnerInfo setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  public String getEndTime() {
    return this.endTime;
  }

  public OrgPartnerInfo setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public String getCardNo() {
    return this.cardNo;
  }

  public OrgPartnerInfo setCardNo(String cardNo) {
    this.cardNo = cardNo;
    return this;
  }

  public void unsetCardNo() {
    this.cardNo = null;
  }

  /** Returns true if field cardNo is set (has been assigned a value) and false otherwise */
  public boolean isSetCardNo() {
    return this.cardNo != null;
  }

  public void setCardNoIsSet(boolean value) {
    if (!value) {
      this.cardNo = null;
    }
  }

  public double getRate() {
    return this.rate;
  }

  public OrgPartnerInfo setRate(double rate) {
    this.rate = rate;
    setRateIsSet(true);
    return this;
  }

  public void unsetRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  /** Returns true if field rate is set (has been assigned a value) and false otherwise */
  public boolean isSetRate() {
    return EncodingUtils.testBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  public void setRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATE_ISSET_ID, value);
  }

  public int getCooperationStatus() {
    return this.cooperationStatus;
  }

  public OrgPartnerInfo setCooperationStatus(int cooperationStatus) {
    this.cooperationStatus = cooperationStatus;
    setCooperationStatusIsSet(true);
    return this;
  }

  public void unsetCooperationStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID);
  }

  /** Returns true if field cooperationStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCooperationStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID);
  }

  public void setCooperationStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COOPERATIONSTATUS_ISSET_ID, value);
  }

  public int getContractId() {
    return this.contractId;
  }

  public OrgPartnerInfo setContractId(int contractId) {
    this.contractId = contractId;
    setContractIdIsSet(true);
    return this;
  }

  public void unsetContractId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTID_ISSET_ID);
  }

  /** Returns true if field contractId is set (has been assigned a value) and false otherwise */
  public boolean isSetContractId() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTID_ISSET_ID);
  }

  public void setContractIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTID_ISSET_ID, value);
  }

  public String getUrl() {
    return this.url;
  }

  public OrgPartnerInfo setUrl(String url) {
    this.url = url;
    return this;
  }

  public void unsetUrl() {
    this.url = null;
  }

  /** Returns true if field url is set (has been assigned a value) and false otherwise */
  public boolean isSetUrl() {
    return this.url != null;
  }

  public void setUrlIsSet(boolean value) {
    if (!value) {
      this.url = null;
    }
  }

  public String getCooperationDesc() {
    return this.cooperationDesc;
  }

  public OrgPartnerInfo setCooperationDesc(String cooperationDesc) {
    this.cooperationDesc = cooperationDesc;
    return this;
  }

  public void unsetCooperationDesc() {
    this.cooperationDesc = null;
  }

  /** Returns true if field cooperationDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetCooperationDesc() {
    return this.cooperationDesc != null;
  }

  public void setCooperationDescIsSet(boolean value) {
    if (!value) {
      this.cooperationDesc = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public OrgPartnerInfo setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getBizAdviserId() {
    return this.bizAdviserId;
  }

  public OrgPartnerInfo setBizAdviserId(int bizAdviserId) {
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    return this;
  }

  public void unsetBizAdviserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  /** Returns true if field bizAdviserId is set (has been assigned a value) and false otherwise */
  public boolean isSetBizAdviserId() {
    return EncodingUtils.testBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  public void setBizAdviserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIZADVISERID_ISSET_ID, value);
  }

  public int getCreatorId() {
    return this.creatorId;
  }

  public OrgPartnerInfo setCreatorId(int creatorId) {
    this.creatorId = creatorId;
    setCreatorIdIsSet(true);
    return this;
  }

  public void unsetCreatorId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATORID_ISSET_ID);
  }

  /** Returns true if field creatorId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatorId() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATORID_ISSET_ID);
  }

  public void setCreatorIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATORID_ISSET_ID, value);
  }

  public String getCreateDate() {
    return this.createDate;
  }

  public OrgPartnerInfo setCreateDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  public void unsetCreateDate() {
    this.createDate = null;
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return this.createDate != null;
  }

  public void setCreateDateIsSet(boolean value) {
    if (!value) {
      this.createDate = null;
    }
  }

  public int getUpdateId() {
    return this.updateId;
  }

  public OrgPartnerInfo setUpdateId(int updateId) {
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    return this;
  }

  public void unsetUpdateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  /** Returns true if field updateId is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateId() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  public void setUpdateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEID_ISSET_ID, value);
  }

  public String getUpdateDate() {
    return this.updateDate;
  }

  public OrgPartnerInfo setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  public void unsetUpdateDate() {
    this.updateDate = null;
  }

  /** Returns true if field updateDate is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateDate() {
    return this.updateDate != null;
  }

  public void setUpdateDateIsSet(boolean value) {
    if (!value) {
      this.updateDate = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public OrgPartnerInfo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public com.qfang.xk.aom.rpc.system.OrgUserInfo getOrgUserInfo() {
    return this.orgUserInfo;
  }

  public OrgPartnerInfo setOrgUserInfo(com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo) {
    this.orgUserInfo = orgUserInfo;
    return this;
  }

  public void unsetOrgUserInfo() {
    this.orgUserInfo = null;
  }

  /** Returns true if field orgUserInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgUserInfo() {
    return this.orgUserInfo != null;
  }

  public void setOrgUserInfoIsSet(boolean value) {
    if (!value) {
      this.orgUserInfo = null;
    }
  }

  public String getAuditDesc() {
    return this.auditDesc;
  }

  public OrgPartnerInfo setAuditDesc(String auditDesc) {
    this.auditDesc = auditDesc;
    return this;
  }

  public void unsetAuditDesc() {
    this.auditDesc = null;
  }

  /** Returns true if field auditDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditDesc() {
    return this.auditDesc != null;
  }

  public void setAuditDescIsSet(boolean value) {
    if (!value) {
      this.auditDesc = null;
    }
  }

  public int getReviewStatus() {
    return this.reviewStatus;
  }

  public OrgPartnerInfo setReviewStatus(int reviewStatus) {
    this.reviewStatus = reviewStatus;
    setReviewStatusIsSet(true);
    return this;
  }

  public void unsetReviewStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID);
  }

  /** Returns true if field reviewStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID);
  }

  public void setReviewStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REVIEWSTATUS_ISSET_ID, value);
  }

  public String getReviewDesc() {
    return this.reviewDesc;
  }

  public OrgPartnerInfo setReviewDesc(String reviewDesc) {
    this.reviewDesc = reviewDesc;
    return this;
  }

  public void unsetReviewDesc() {
    this.reviewDesc = null;
  }

  /** Returns true if field reviewDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewDesc() {
    return this.reviewDesc != null;
  }

  public void setReviewDescIsSet(boolean value) {
    if (!value) {
      this.reviewDesc = null;
    }
  }

  public int getReviewId() {
    return this.reviewId;
  }

  public OrgPartnerInfo setReviewId(int reviewId) {
    this.reviewId = reviewId;
    setReviewIdIsSet(true);
    return this;
  }

  public void unsetReviewId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REVIEWID_ISSET_ID);
  }

  /** Returns true if field reviewId is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewId() {
    return EncodingUtils.testBit(__isset_bitfield, __REVIEWID_ISSET_ID);
  }

  public void setReviewIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REVIEWID_ISSET_ID, value);
  }

  public String getReviewTime() {
    return this.reviewTime;
  }

  public OrgPartnerInfo setReviewTime(String reviewTime) {
    this.reviewTime = reviewTime;
    return this;
  }

  public void unsetReviewTime() {
    this.reviewTime = null;
  }

  /** Returns true if field reviewTime is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewTime() {
    return this.reviewTime != null;
  }

  public void setReviewTimeIsSet(boolean value) {
    if (!value) {
      this.reviewTime = null;
    }
  }

  public String getApplyTime() {
    return this.applyTime;
  }

  public OrgPartnerInfo setApplyTime(String applyTime) {
    this.applyTime = applyTime;
    return this;
  }

  public void unsetApplyTime() {
    this.applyTime = null;
  }

  /** Returns true if field applyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyTime() {
    return this.applyTime != null;
  }

  public void setApplyTimeIsSet(boolean value) {
    if (!value) {
      this.applyTime = null;
    }
  }

  public String getMsgCode() {
    return this.msgCode;
  }

  public OrgPartnerInfo setMsgCode(String msgCode) {
    this.msgCode = msgCode;
    return this;
  }

  public void unsetMsgCode() {
    this.msgCode = null;
  }

  /** Returns true if field msgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMsgCode() {
    return this.msgCode != null;
  }

  public void setMsgCodeIsSet(boolean value) {
    if (!value) {
      this.msgCode = null;
    }
  }

  public String getPayeeAccount() {
    return this.payeeAccount;
  }

  public OrgPartnerInfo setPayeeAccount(String payeeAccount) {
    this.payeeAccount = payeeAccount;
    return this;
  }

  public void unsetPayeeAccount() {
    this.payeeAccount = null;
  }

  /** Returns true if field payeeAccount is set (has been assigned a value) and false otherwise */
  public boolean isSetPayeeAccount() {
    return this.payeeAccount != null;
  }

  public void setPayeeAccountIsSet(boolean value) {
    if (!value) {
      this.payeeAccount = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((String)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((String)value);
      }
      break;

    case CARD_NO:
      if (value == null) {
        unsetCardNo();
      } else {
        setCardNo((String)value);
      }
      break;

    case RATE:
      if (value == null) {
        unsetRate();
      } else {
        setRate((Double)value);
      }
      break;

    case COOPERATION_STATUS:
      if (value == null) {
        unsetCooperationStatus();
      } else {
        setCooperationStatus((Integer)value);
      }
      break;

    case CONTRACT_ID:
      if (value == null) {
        unsetContractId();
      } else {
        setContractId((Integer)value);
      }
      break;

    case URL:
      if (value == null) {
        unsetUrl();
      } else {
        setUrl((String)value);
      }
      break;

    case COOPERATION_DESC:
      if (value == null) {
        unsetCooperationDesc();
      } else {
        setCooperationDesc((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case BIZ_ADVISER_ID:
      if (value == null) {
        unsetBizAdviserId();
      } else {
        setBizAdviserId((Integer)value);
      }
      break;

    case CREATOR_ID:
      if (value == null) {
        unsetCreatorId();
      } else {
        setCreatorId((Integer)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((String)value);
      }
      break;

    case UPDATE_ID:
      if (value == null) {
        unsetUpdateId();
      } else {
        setUpdateId((Integer)value);
      }
      break;

    case UPDATE_DATE:
      if (value == null) {
        unsetUpdateDate();
      } else {
        setUpdateDate((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case ORG_USER_INFO:
      if (value == null) {
        unsetOrgUserInfo();
      } else {
        setOrgUserInfo((com.qfang.xk.aom.rpc.system.OrgUserInfo)value);
      }
      break;

    case AUDIT_DESC:
      if (value == null) {
        unsetAuditDesc();
      } else {
        setAuditDesc((String)value);
      }
      break;

    case REVIEW_STATUS:
      if (value == null) {
        unsetReviewStatus();
      } else {
        setReviewStatus((Integer)value);
      }
      break;

    case REVIEW_DESC:
      if (value == null) {
        unsetReviewDesc();
      } else {
        setReviewDesc((String)value);
      }
      break;

    case REVIEW_ID:
      if (value == null) {
        unsetReviewId();
      } else {
        setReviewId((Integer)value);
      }
      break;

    case REVIEW_TIME:
      if (value == null) {
        unsetReviewTime();
      } else {
        setReviewTime((String)value);
      }
      break;

    case APPLY_TIME:
      if (value == null) {
        unsetApplyTime();
      } else {
        setApplyTime((String)value);
      }
      break;

    case MSG_CODE:
      if (value == null) {
        unsetMsgCode();
      } else {
        setMsgCode((String)value);
      }
      break;

    case PAYEE_ACCOUNT:
      if (value == null) {
        unsetPayeeAccount();
      } else {
        setPayeeAccount((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case CARD_NO:
      return getCardNo();

    case RATE:
      return Double.valueOf(getRate());

    case COOPERATION_STATUS:
      return Integer.valueOf(getCooperationStatus());

    case CONTRACT_ID:
      return Integer.valueOf(getContractId());

    case URL:
      return getUrl();

    case COOPERATION_DESC:
      return getCooperationDesc();

    case STATUS:
      return Integer.valueOf(getStatus());

    case BIZ_ADVISER_ID:
      return Integer.valueOf(getBizAdviserId());

    case CREATOR_ID:
      return Integer.valueOf(getCreatorId());

    case CREATE_DATE:
      return getCreateDate();

    case UPDATE_ID:
      return Integer.valueOf(getUpdateId());

    case UPDATE_DATE:
      return getUpdateDate();

    case REMARK:
      return getRemark();

    case ORG_USER_INFO:
      return getOrgUserInfo();

    case AUDIT_DESC:
      return getAuditDesc();

    case REVIEW_STATUS:
      return Integer.valueOf(getReviewStatus());

    case REVIEW_DESC:
      return getReviewDesc();

    case REVIEW_ID:
      return Integer.valueOf(getReviewId());

    case REVIEW_TIME:
      return getReviewTime();

    case APPLY_TIME:
      return getApplyTime();

    case MSG_CODE:
      return getMsgCode();

    case PAYEE_ACCOUNT:
      return getPayeeAccount();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case USER_ID:
      return isSetUserId();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case CARD_NO:
      return isSetCardNo();
    case RATE:
      return isSetRate();
    case COOPERATION_STATUS:
      return isSetCooperationStatus();
    case CONTRACT_ID:
      return isSetContractId();
    case URL:
      return isSetUrl();
    case COOPERATION_DESC:
      return isSetCooperationDesc();
    case STATUS:
      return isSetStatus();
    case BIZ_ADVISER_ID:
      return isSetBizAdviserId();
    case CREATOR_ID:
      return isSetCreatorId();
    case CREATE_DATE:
      return isSetCreateDate();
    case UPDATE_ID:
      return isSetUpdateId();
    case UPDATE_DATE:
      return isSetUpdateDate();
    case REMARK:
      return isSetRemark();
    case ORG_USER_INFO:
      return isSetOrgUserInfo();
    case AUDIT_DESC:
      return isSetAuditDesc();
    case REVIEW_STATUS:
      return isSetReviewStatus();
    case REVIEW_DESC:
      return isSetReviewDesc();
    case REVIEW_ID:
      return isSetReviewId();
    case REVIEW_TIME:
      return isSetReviewTime();
    case APPLY_TIME:
      return isSetApplyTime();
    case MSG_CODE:
      return isSetMsgCode();
    case PAYEE_ACCOUNT:
      return isSetPayeeAccount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgPartnerInfo)
      return this.equals((OrgPartnerInfo)that);
    return false;
  }

  public boolean equals(OrgPartnerInfo that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }

    boolean this_present_cardNo = true && this.isSetCardNo();
    boolean that_present_cardNo = true && that.isSetCardNo();
    if (this_present_cardNo || that_present_cardNo) {
      if (!(this_present_cardNo && that_present_cardNo))
        return false;
      if (!this.cardNo.equals(that.cardNo))
        return false;
    }

    boolean this_present_rate = true;
    boolean that_present_rate = true;
    if (this_present_rate || that_present_rate) {
      if (!(this_present_rate && that_present_rate))
        return false;
      if (this.rate != that.rate)
        return false;
    }

    boolean this_present_cooperationStatus = true;
    boolean that_present_cooperationStatus = true;
    if (this_present_cooperationStatus || that_present_cooperationStatus) {
      if (!(this_present_cooperationStatus && that_present_cooperationStatus))
        return false;
      if (this.cooperationStatus != that.cooperationStatus)
        return false;
    }

    boolean this_present_contractId = true;
    boolean that_present_contractId = true;
    if (this_present_contractId || that_present_contractId) {
      if (!(this_present_contractId && that_present_contractId))
        return false;
      if (this.contractId != that.contractId)
        return false;
    }

    boolean this_present_url = true && this.isSetUrl();
    boolean that_present_url = true && that.isSetUrl();
    if (this_present_url || that_present_url) {
      if (!(this_present_url && that_present_url))
        return false;
      if (!this.url.equals(that.url))
        return false;
    }

    boolean this_present_cooperationDesc = true && this.isSetCooperationDesc();
    boolean that_present_cooperationDesc = true && that.isSetCooperationDesc();
    if (this_present_cooperationDesc || that_present_cooperationDesc) {
      if (!(this_present_cooperationDesc && that_present_cooperationDesc))
        return false;
      if (!this.cooperationDesc.equals(that.cooperationDesc))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_bizAdviserId = true;
    boolean that_present_bizAdviserId = true;
    if (this_present_bizAdviserId || that_present_bizAdviserId) {
      if (!(this_present_bizAdviserId && that_present_bizAdviserId))
        return false;
      if (this.bizAdviserId != that.bizAdviserId)
        return false;
    }

    boolean this_present_creatorId = true;
    boolean that_present_creatorId = true;
    if (this_present_creatorId || that_present_creatorId) {
      if (!(this_present_creatorId && that_present_creatorId))
        return false;
      if (this.creatorId != that.creatorId)
        return false;
    }

    boolean this_present_createDate = true && this.isSetCreateDate();
    boolean that_present_createDate = true && that.isSetCreateDate();
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (!this.createDate.equals(that.createDate))
        return false;
    }

    boolean this_present_updateId = true;
    boolean that_present_updateId = true;
    if (this_present_updateId || that_present_updateId) {
      if (!(this_present_updateId && that_present_updateId))
        return false;
      if (this.updateId != that.updateId)
        return false;
    }

    boolean this_present_updateDate = true && this.isSetUpdateDate();
    boolean that_present_updateDate = true && that.isSetUpdateDate();
    if (this_present_updateDate || that_present_updateDate) {
      if (!(this_present_updateDate && that_present_updateDate))
        return false;
      if (!this.updateDate.equals(that.updateDate))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_orgUserInfo = true && this.isSetOrgUserInfo();
    boolean that_present_orgUserInfo = true && that.isSetOrgUserInfo();
    if (this_present_orgUserInfo || that_present_orgUserInfo) {
      if (!(this_present_orgUserInfo && that_present_orgUserInfo))
        return false;
      if (!this.orgUserInfo.equals(that.orgUserInfo))
        return false;
    }

    boolean this_present_auditDesc = true && this.isSetAuditDesc();
    boolean that_present_auditDesc = true && that.isSetAuditDesc();
    if (this_present_auditDesc || that_present_auditDesc) {
      if (!(this_present_auditDesc && that_present_auditDesc))
        return false;
      if (!this.auditDesc.equals(that.auditDesc))
        return false;
    }

    boolean this_present_reviewStatus = true;
    boolean that_present_reviewStatus = true;
    if (this_present_reviewStatus || that_present_reviewStatus) {
      if (!(this_present_reviewStatus && that_present_reviewStatus))
        return false;
      if (this.reviewStatus != that.reviewStatus)
        return false;
    }

    boolean this_present_reviewDesc = true && this.isSetReviewDesc();
    boolean that_present_reviewDesc = true && that.isSetReviewDesc();
    if (this_present_reviewDesc || that_present_reviewDesc) {
      if (!(this_present_reviewDesc && that_present_reviewDesc))
        return false;
      if (!this.reviewDesc.equals(that.reviewDesc))
        return false;
    }

    boolean this_present_reviewId = true;
    boolean that_present_reviewId = true;
    if (this_present_reviewId || that_present_reviewId) {
      if (!(this_present_reviewId && that_present_reviewId))
        return false;
      if (this.reviewId != that.reviewId)
        return false;
    }

    boolean this_present_reviewTime = true && this.isSetReviewTime();
    boolean that_present_reviewTime = true && that.isSetReviewTime();
    if (this_present_reviewTime || that_present_reviewTime) {
      if (!(this_present_reviewTime && that_present_reviewTime))
        return false;
      if (!this.reviewTime.equals(that.reviewTime))
        return false;
    }

    boolean this_present_applyTime = true && this.isSetApplyTime();
    boolean that_present_applyTime = true && that.isSetApplyTime();
    if (this_present_applyTime || that_present_applyTime) {
      if (!(this_present_applyTime && that_present_applyTime))
        return false;
      if (!this.applyTime.equals(that.applyTime))
        return false;
    }

    boolean this_present_msgCode = true && this.isSetMsgCode();
    boolean that_present_msgCode = true && that.isSetMsgCode();
    if (this_present_msgCode || that_present_msgCode) {
      if (!(this_present_msgCode && that_present_msgCode))
        return false;
      if (!this.msgCode.equals(that.msgCode))
        return false;
    }

    boolean this_present_payeeAccount = true && this.isSetPayeeAccount();
    boolean that_present_payeeAccount = true && that.isSetPayeeAccount();
    if (this_present_payeeAccount || that_present_payeeAccount) {
      if (!(this_present_payeeAccount && that_present_payeeAccount))
        return false;
      if (!this.payeeAccount.equals(that.payeeAccount))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_userId = true;
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    boolean present_startTime = true && (isSetStartTime());
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_endTime = true && (isSetEndTime());
    list.add(present_endTime);
    if (present_endTime)
      list.add(endTime);

    boolean present_cardNo = true && (isSetCardNo());
    list.add(present_cardNo);
    if (present_cardNo)
      list.add(cardNo);

    boolean present_rate = true;
    list.add(present_rate);
    if (present_rate)
      list.add(rate);

    boolean present_cooperationStatus = true;
    list.add(present_cooperationStatus);
    if (present_cooperationStatus)
      list.add(cooperationStatus);

    boolean present_contractId = true;
    list.add(present_contractId);
    if (present_contractId)
      list.add(contractId);

    boolean present_url = true && (isSetUrl());
    list.add(present_url);
    if (present_url)
      list.add(url);

    boolean present_cooperationDesc = true && (isSetCooperationDesc());
    list.add(present_cooperationDesc);
    if (present_cooperationDesc)
      list.add(cooperationDesc);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_bizAdviserId = true;
    list.add(present_bizAdviserId);
    if (present_bizAdviserId)
      list.add(bizAdviserId);

    boolean present_creatorId = true;
    list.add(present_creatorId);
    if (present_creatorId)
      list.add(creatorId);

    boolean present_createDate = true && (isSetCreateDate());
    list.add(present_createDate);
    if (present_createDate)
      list.add(createDate);

    boolean present_updateId = true;
    list.add(present_updateId);
    if (present_updateId)
      list.add(updateId);

    boolean present_updateDate = true && (isSetUpdateDate());
    list.add(present_updateDate);
    if (present_updateDate)
      list.add(updateDate);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_orgUserInfo = true && (isSetOrgUserInfo());
    list.add(present_orgUserInfo);
    if (present_orgUserInfo)
      list.add(orgUserInfo);

    boolean present_auditDesc = true && (isSetAuditDesc());
    list.add(present_auditDesc);
    if (present_auditDesc)
      list.add(auditDesc);

    boolean present_reviewStatus = true;
    list.add(present_reviewStatus);
    if (present_reviewStatus)
      list.add(reviewStatus);

    boolean present_reviewDesc = true && (isSetReviewDesc());
    list.add(present_reviewDesc);
    if (present_reviewDesc)
      list.add(reviewDesc);

    boolean present_reviewId = true;
    list.add(present_reviewId);
    if (present_reviewId)
      list.add(reviewId);

    boolean present_reviewTime = true && (isSetReviewTime());
    list.add(present_reviewTime);
    if (present_reviewTime)
      list.add(reviewTime);

    boolean present_applyTime = true && (isSetApplyTime());
    list.add(present_applyTime);
    if (present_applyTime)
      list.add(applyTime);

    boolean present_msgCode = true && (isSetMsgCode());
    list.add(present_msgCode);
    if (present_msgCode)
      list.add(msgCode);

    boolean present_payeeAccount = true && (isSetPayeeAccount());
    list.add(present_payeeAccount);
    if (present_payeeAccount)
      list.add(payeeAccount);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgPartnerInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCardNo()).compareTo(other.isSetCardNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardNo, other.cardNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRate()).compareTo(other.isSetRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rate, other.rate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCooperationStatus()).compareTo(other.isSetCooperationStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCooperationStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cooperationStatus, other.cooperationStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractId()).compareTo(other.isSetContractId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractId, other.contractId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUrl()).compareTo(other.isSetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.url, other.url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCooperationDesc()).compareTo(other.isSetCooperationDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCooperationDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cooperationDesc, other.cooperationDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBizAdviserId()).compareTo(other.isSetBizAdviserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBizAdviserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizAdviserId, other.bizAdviserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatorId()).compareTo(other.isSetCreatorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatorId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creatorId, other.creatorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateId()).compareTo(other.isSetUpdateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateId, other.updateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateDate()).compareTo(other.isSetUpdateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateDate, other.updateDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgUserInfo()).compareTo(other.isSetOrgUserInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgUserInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgUserInfo, other.orgUserInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditDesc()).compareTo(other.isSetAuditDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditDesc, other.auditDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewStatus()).compareTo(other.isSetReviewStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewStatus, other.reviewStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewDesc()).compareTo(other.isSetReviewDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewDesc, other.reviewDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewId()).compareTo(other.isSetReviewId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewId, other.reviewId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewTime()).compareTo(other.isSetReviewTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewTime, other.reviewTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyTime()).compareTo(other.isSetApplyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyTime, other.applyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMsgCode()).compareTo(other.isSetMsgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMsgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msgCode, other.msgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayeeAccount()).compareTo(other.isSetPayeeAccount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayeeAccount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payeeAccount, other.payeeAccount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgPartnerInfo(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardNo:");
    if (this.cardNo == null) {
      sb.append("null");
    } else {
      sb.append(this.cardNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rate:");
    sb.append(this.rate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cooperationStatus:");
    sb.append(this.cooperationStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractId:");
    sb.append(this.contractId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("url:");
    if (this.url == null) {
      sb.append("null");
    } else {
      sb.append(this.url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cooperationDesc:");
    if (this.cooperationDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.cooperationDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bizAdviserId:");
    sb.append(this.bizAdviserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creatorId:");
    sb.append(this.creatorId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    if (this.createDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateId:");
    sb.append(this.updateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateDate:");
    if (this.updateDate == null) {
      sb.append("null");
    } else {
      sb.append(this.updateDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgUserInfo:");
    if (this.orgUserInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.orgUserInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditDesc:");
    if (this.auditDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.auditDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewStatus:");
    sb.append(this.reviewStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewDesc:");
    if (this.reviewDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewId:");
    sb.append(this.reviewId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewTime:");
    if (this.reviewTime == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyTime:");
    if (this.applyTime == null) {
      sb.append("null");
    } else {
      sb.append(this.applyTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("msgCode:");
    if (this.msgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.msgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payeeAccount:");
    if (this.payeeAccount == null) {
      sb.append("null");
    } else {
      sb.append(this.payeeAccount);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (orgUserInfo != null) {
      orgUserInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgPartnerInfoStandardSchemeFactory implements SchemeFactory {
    public OrgPartnerInfoStandardScheme getScheme() {
      return new OrgPartnerInfoStandardScheme();
    }
  }

  private static class OrgPartnerInfoStandardScheme extends StandardScheme<OrgPartnerInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgPartnerInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startTime = iprot.readString();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endTime = iprot.readString();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CARD_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardNo = iprot.readString();
              struct.setCardNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rate = iprot.readDouble();
              struct.setRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COOPERATION_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cooperationStatus = iprot.readI32();
              struct.setCooperationStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONTRACT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.contractId = iprot.readI32();
              struct.setContractIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.url = iprot.readString();
              struct.setUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // COOPERATION_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cooperationDesc = iprot.readString();
              struct.setCooperationDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BIZ_ADVISER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bizAdviserId = iprot.readI32();
              struct.setBizAdviserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATOR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.creatorId = iprot.readI32();
              struct.setCreatorIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createDate = iprot.readString();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateId = iprot.readI32();
              struct.setUpdateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // UPDATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateDate = iprot.readString();
              struct.setUpdateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ORG_USER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo();
              struct.orgUserInfo.read(iprot);
              struct.setOrgUserInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // AUDIT_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditDesc = iprot.readString();
              struct.setAuditDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // REVIEW_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reviewStatus = iprot.readI32();
              struct.setReviewStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // REVIEW_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewDesc = iprot.readString();
              struct.setReviewDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // REVIEW_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reviewId = iprot.readI32();
              struct.setReviewIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // REVIEW_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewTime = iprot.readString();
              struct.setReviewTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // APPLY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applyTime = iprot.readString();
              struct.setApplyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // MSG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msgCode = iprot.readString();
              struct.setMsgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PAYEE_ACCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payeeAccount = iprot.readString();
              struct.setPayeeAccountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgPartnerInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      if (struct.startTime != null) {
        oprot.writeFieldBegin(START_TIME_FIELD_DESC);
        oprot.writeString(struct.startTime);
        oprot.writeFieldEnd();
      }
      if (struct.endTime != null) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeString(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.cardNo != null) {
        oprot.writeFieldBegin(CARD_NO_FIELD_DESC);
        oprot.writeString(struct.cardNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RATE_FIELD_DESC);
      oprot.writeDouble(struct.rate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COOPERATION_STATUS_FIELD_DESC);
      oprot.writeI32(struct.cooperationStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONTRACT_ID_FIELD_DESC);
      oprot.writeI32(struct.contractId);
      oprot.writeFieldEnd();
      if (struct.url != null) {
        oprot.writeFieldBegin(URL_FIELD_DESC);
        oprot.writeString(struct.url);
        oprot.writeFieldEnd();
      }
      if (struct.cooperationDesc != null) {
        oprot.writeFieldBegin(COOPERATION_DESC_FIELD_DESC);
        oprot.writeString(struct.cooperationDesc);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BIZ_ADVISER_ID_FIELD_DESC);
      oprot.writeI32(struct.bizAdviserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATOR_ID_FIELD_DESC);
      oprot.writeI32(struct.creatorId);
      oprot.writeFieldEnd();
      if (struct.createDate != null) {
        oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
        oprot.writeString(struct.createDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UPDATE_ID_FIELD_DESC);
      oprot.writeI32(struct.updateId);
      oprot.writeFieldEnd();
      if (struct.updateDate != null) {
        oprot.writeFieldBegin(UPDATE_DATE_FIELD_DESC);
        oprot.writeString(struct.updateDate);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      if (struct.orgUserInfo != null) {
        oprot.writeFieldBegin(ORG_USER_INFO_FIELD_DESC);
        struct.orgUserInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.auditDesc != null) {
        oprot.writeFieldBegin(AUDIT_DESC_FIELD_DESC);
        oprot.writeString(struct.auditDesc);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REVIEW_STATUS_FIELD_DESC);
      oprot.writeI32(struct.reviewStatus);
      oprot.writeFieldEnd();
      if (struct.reviewDesc != null) {
        oprot.writeFieldBegin(REVIEW_DESC_FIELD_DESC);
        oprot.writeString(struct.reviewDesc);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REVIEW_ID_FIELD_DESC);
      oprot.writeI32(struct.reviewId);
      oprot.writeFieldEnd();
      if (struct.reviewTime != null) {
        oprot.writeFieldBegin(REVIEW_TIME_FIELD_DESC);
        oprot.writeString(struct.reviewTime);
        oprot.writeFieldEnd();
      }
      if (struct.applyTime != null) {
        oprot.writeFieldBegin(APPLY_TIME_FIELD_DESC);
        oprot.writeString(struct.applyTime);
        oprot.writeFieldEnd();
      }
      if (struct.msgCode != null) {
        oprot.writeFieldBegin(MSG_CODE_FIELD_DESC);
        oprot.writeString(struct.msgCode);
        oprot.writeFieldEnd();
      }
      if (struct.payeeAccount != null) {
        oprot.writeFieldBegin(PAYEE_ACCOUNT_FIELD_DESC);
        oprot.writeString(struct.payeeAccount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgPartnerInfoTupleSchemeFactory implements SchemeFactory {
    public OrgPartnerInfoTupleScheme getScheme() {
      return new OrgPartnerInfoTupleScheme();
    }
  }

  private static class OrgPartnerInfoTupleScheme extends TupleScheme<OrgPartnerInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgPartnerInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetStartTime()) {
        optionals.set(2);
      }
      if (struct.isSetEndTime()) {
        optionals.set(3);
      }
      if (struct.isSetCardNo()) {
        optionals.set(4);
      }
      if (struct.isSetRate()) {
        optionals.set(5);
      }
      if (struct.isSetCooperationStatus()) {
        optionals.set(6);
      }
      if (struct.isSetContractId()) {
        optionals.set(7);
      }
      if (struct.isSetUrl()) {
        optionals.set(8);
      }
      if (struct.isSetCooperationDesc()) {
        optionals.set(9);
      }
      if (struct.isSetStatus()) {
        optionals.set(10);
      }
      if (struct.isSetBizAdviserId()) {
        optionals.set(11);
      }
      if (struct.isSetCreatorId()) {
        optionals.set(12);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(13);
      }
      if (struct.isSetUpdateId()) {
        optionals.set(14);
      }
      if (struct.isSetUpdateDate()) {
        optionals.set(15);
      }
      if (struct.isSetRemark()) {
        optionals.set(16);
      }
      if (struct.isSetOrgUserInfo()) {
        optionals.set(17);
      }
      if (struct.isSetAuditDesc()) {
        optionals.set(18);
      }
      if (struct.isSetReviewStatus()) {
        optionals.set(19);
      }
      if (struct.isSetReviewDesc()) {
        optionals.set(20);
      }
      if (struct.isSetReviewId()) {
        optionals.set(21);
      }
      if (struct.isSetReviewTime()) {
        optionals.set(22);
      }
      if (struct.isSetApplyTime()) {
        optionals.set(23);
      }
      if (struct.isSetMsgCode()) {
        optionals.set(24);
      }
      if (struct.isSetPayeeAccount()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetStartTime()) {
        oprot.writeString(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeString(struct.endTime);
      }
      if (struct.isSetCardNo()) {
        oprot.writeString(struct.cardNo);
      }
      if (struct.isSetRate()) {
        oprot.writeDouble(struct.rate);
      }
      if (struct.isSetCooperationStatus()) {
        oprot.writeI32(struct.cooperationStatus);
      }
      if (struct.isSetContractId()) {
        oprot.writeI32(struct.contractId);
      }
      if (struct.isSetUrl()) {
        oprot.writeString(struct.url);
      }
      if (struct.isSetCooperationDesc()) {
        oprot.writeString(struct.cooperationDesc);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetBizAdviserId()) {
        oprot.writeI32(struct.bizAdviserId);
      }
      if (struct.isSetCreatorId()) {
        oprot.writeI32(struct.creatorId);
      }
      if (struct.isSetCreateDate()) {
        oprot.writeString(struct.createDate);
      }
      if (struct.isSetUpdateId()) {
        oprot.writeI32(struct.updateId);
      }
      if (struct.isSetUpdateDate()) {
        oprot.writeString(struct.updateDate);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetOrgUserInfo()) {
        struct.orgUserInfo.write(oprot);
      }
      if (struct.isSetAuditDesc()) {
        oprot.writeString(struct.auditDesc);
      }
      if (struct.isSetReviewStatus()) {
        oprot.writeI32(struct.reviewStatus);
      }
      if (struct.isSetReviewDesc()) {
        oprot.writeString(struct.reviewDesc);
      }
      if (struct.isSetReviewId()) {
        oprot.writeI32(struct.reviewId);
      }
      if (struct.isSetReviewTime()) {
        oprot.writeString(struct.reviewTime);
      }
      if (struct.isSetApplyTime()) {
        oprot.writeString(struct.applyTime);
      }
      if (struct.isSetMsgCode()) {
        oprot.writeString(struct.msgCode);
      }
      if (struct.isSetPayeeAccount()) {
        oprot.writeString(struct.payeeAccount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgPartnerInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.startTime = iprot.readString();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endTime = iprot.readString();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cardNo = iprot.readString();
        struct.setCardNoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.rate = iprot.readDouble();
        struct.setRateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cooperationStatus = iprot.readI32();
        struct.setCooperationStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.contractId = iprot.readI32();
        struct.setContractIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.url = iprot.readString();
        struct.setUrlIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cooperationDesc = iprot.readString();
        struct.setCooperationDescIsSet(true);
      }
      if (incoming.get(10)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.bizAdviserId = iprot.readI32();
        struct.setBizAdviserIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.creatorId = iprot.readI32();
        struct.setCreatorIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createDate = iprot.readString();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updateId = iprot.readI32();
        struct.setUpdateIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.updateDate = iprot.readString();
        struct.setUpdateDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(17)) {
        struct.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo();
        struct.orgUserInfo.read(iprot);
        struct.setOrgUserInfoIsSet(true);
      }
      if (incoming.get(18)) {
        struct.auditDesc = iprot.readString();
        struct.setAuditDescIsSet(true);
      }
      if (incoming.get(19)) {
        struct.reviewStatus = iprot.readI32();
        struct.setReviewStatusIsSet(true);
      }
      if (incoming.get(20)) {
        struct.reviewDesc = iprot.readString();
        struct.setReviewDescIsSet(true);
      }
      if (incoming.get(21)) {
        struct.reviewId = iprot.readI32();
        struct.setReviewIdIsSet(true);
      }
      if (incoming.get(22)) {
        struct.reviewTime = iprot.readString();
        struct.setReviewTimeIsSet(true);
      }
      if (incoming.get(23)) {
        struct.applyTime = iprot.readString();
        struct.setApplyTimeIsSet(true);
      }
      if (incoming.get(24)) {
        struct.msgCode = iprot.readString();
        struct.setMsgCodeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.payeeAccount = iprot.readString();
        struct.setPayeeAccountIsSet(true);
      }
    }
  }

}

