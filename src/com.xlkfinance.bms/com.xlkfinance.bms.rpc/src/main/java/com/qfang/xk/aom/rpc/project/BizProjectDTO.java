/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.project;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-7-24")
public class BizProjectDTO implements org.apache.thrift.TBase<BizProjectDTO, BizProjectDTO._Fields>, java.io.Serializable, Cloneable, Comparable<BizProjectDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizProjectDTO");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PM_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ORG_CUSTOMER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCustomerName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORG_CUSTOMER_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCustomerPhone", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ORG_CUSTOMER_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCustomerCard", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatus", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField APPLY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("applyStatus", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("requestDttm", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PLAN_LOAN_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("planLoanMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField IS_CLOSED_FIELD_DESC = new org.apache.thrift.protocol.TField("isClosed", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField PLAN_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("planLoanDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField PROJECT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("projectType", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField LOAN_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("loanRate", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
  private static final org.apache.thrift.protocol.TField MAX_LOAN_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("maxLoanRate", org.apache.thrift.protocol.TType.DOUBLE, (short)21);
  private static final org.apache.thrift.protocol.TField BUSINESS_CATEGORY_FIELD_DESC = new org.apache.thrift.protocol.TField("businessCategory", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField AREA_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("areaCode", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField AREA_CODES_FIELD_DESC = new org.apache.thrift.protocol.TField("areaCodes", org.apache.thrift.protocol.TType.LIST, (short)24);
  private static final org.apache.thrift.protocol.TField REQUEST_STATU_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatuList", org.apache.thrift.protocol.TType.LIST, (short)25);
  private static final org.apache.thrift.protocol.TField APPLY_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applyUserId", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField IS_NEED_HANDLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isNeedHandle", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField FORECLOSURE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("foreclosureStatus", org.apache.thrift.protocol.TType.I32, (short)28);
  private static final org.apache.thrift.protocol.TField IS_REJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("isReject", org.apache.thrift.protocol.TType.I32, (short)29);
  private static final org.apache.thrift.protocol.TField IS_ASSIGNED_FIELD_DESC = new org.apache.thrift.protocol.TField("isAssigned", org.apache.thrift.protocol.TType.I32, (short)30);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)31);
  private static final org.apache.thrift.protocol.TField APPLY_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("applyUserName", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField END_REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("endRequestDttm", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField LOAN_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("loanDays", org.apache.thrift.protocol.TType.I32, (short)34);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)36);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizProjectDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizProjectDTOTupleSchemeFactory());
  }

  public int pid; // required
  public String projectNumber; // required
  public String projectName; // required
  public String orgName; // required
  public int pmUserId; // required
  public String pmUserName; // required
  public String orgCustomerName; // required
  public String orgCustomerPhone; // required
  public String orgCustomerCard; // required
  public int orgId; // required
  public int requestStatus; // required
  public int applyStatus; // required
  public String requestDttm; // required
  public double planLoanMoney; // required
  public int isClosed; // required
  public String planLoanDate; // required
  public int page; // required
  public int rows; // required
  public int projectType; // required
  public double loanRate; // required
  public double maxLoanRate; // required
  public int businessCategory; // required
  public String areaCode; // required
  public List<String> areaCodes; // required
  public List<Integer> requestStatuList; // required
  public int applyUserId; // required
  public int isNeedHandle; // required
  public int foreclosureStatus; // required
  public int isReject; // required
  public int isAssigned; // required
  public List<Integer> userIds; // required
  public String applyUserName; // required
  public String endRequestDttm; // required
  public int loanDays; // required
  public String productName; // required
  public int productId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    PROJECT_NUMBER((short)2, "projectNumber"),
    PROJECT_NAME((short)3, "projectName"),
    ORG_NAME((short)4, "orgName"),
    PM_USER_ID((short)5, "pmUserId"),
    PM_USER_NAME((short)6, "pmUserName"),
    ORG_CUSTOMER_NAME((short)7, "orgCustomerName"),
    ORG_CUSTOMER_PHONE((short)8, "orgCustomerPhone"),
    ORG_CUSTOMER_CARD((short)9, "orgCustomerCard"),
    ORG_ID((short)10, "orgId"),
    REQUEST_STATUS((short)11, "requestStatus"),
    APPLY_STATUS((short)12, "applyStatus"),
    REQUEST_DTTM((short)13, "requestDttm"),
    PLAN_LOAN_MONEY((short)14, "planLoanMoney"),
    IS_CLOSED((short)15, "isClosed"),
    PLAN_LOAN_DATE((short)16, "planLoanDate"),
    PAGE((short)17, "page"),
    ROWS((short)18, "rows"),
    PROJECT_TYPE((short)19, "projectType"),
    LOAN_RATE((short)20, "loanRate"),
    MAX_LOAN_RATE((short)21, "maxLoanRate"),
    BUSINESS_CATEGORY((short)22, "businessCategory"),
    AREA_CODE((short)23, "areaCode"),
    AREA_CODES((short)24, "areaCodes"),
    REQUEST_STATU_LIST((short)25, "requestStatuList"),
    APPLY_USER_ID((short)26, "applyUserId"),
    IS_NEED_HANDLE((short)27, "isNeedHandle"),
    FORECLOSURE_STATUS((short)28, "foreclosureStatus"),
    IS_REJECT((short)29, "isReject"),
    IS_ASSIGNED((short)30, "isAssigned"),
    USER_IDS((short)31, "userIds"),
    APPLY_USER_NAME((short)32, "applyUserName"),
    END_REQUEST_DTTM((short)33, "endRequestDttm"),
    LOAN_DAYS((short)34, "loanDays"),
    PRODUCT_NAME((short)35, "productName"),
    PRODUCT_ID((short)36, "productId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 3: // PROJECT_NAME
          return PROJECT_NAME;
        case 4: // ORG_NAME
          return ORG_NAME;
        case 5: // PM_USER_ID
          return PM_USER_ID;
        case 6: // PM_USER_NAME
          return PM_USER_NAME;
        case 7: // ORG_CUSTOMER_NAME
          return ORG_CUSTOMER_NAME;
        case 8: // ORG_CUSTOMER_PHONE
          return ORG_CUSTOMER_PHONE;
        case 9: // ORG_CUSTOMER_CARD
          return ORG_CUSTOMER_CARD;
        case 10: // ORG_ID
          return ORG_ID;
        case 11: // REQUEST_STATUS
          return REQUEST_STATUS;
        case 12: // APPLY_STATUS
          return APPLY_STATUS;
        case 13: // REQUEST_DTTM
          return REQUEST_DTTM;
        case 14: // PLAN_LOAN_MONEY
          return PLAN_LOAN_MONEY;
        case 15: // IS_CLOSED
          return IS_CLOSED;
        case 16: // PLAN_LOAN_DATE
          return PLAN_LOAN_DATE;
        case 17: // PAGE
          return PAGE;
        case 18: // ROWS
          return ROWS;
        case 19: // PROJECT_TYPE
          return PROJECT_TYPE;
        case 20: // LOAN_RATE
          return LOAN_RATE;
        case 21: // MAX_LOAN_RATE
          return MAX_LOAN_RATE;
        case 22: // BUSINESS_CATEGORY
          return BUSINESS_CATEGORY;
        case 23: // AREA_CODE
          return AREA_CODE;
        case 24: // AREA_CODES
          return AREA_CODES;
        case 25: // REQUEST_STATU_LIST
          return REQUEST_STATU_LIST;
        case 26: // APPLY_USER_ID
          return APPLY_USER_ID;
        case 27: // IS_NEED_HANDLE
          return IS_NEED_HANDLE;
        case 28: // FORECLOSURE_STATUS
          return FORECLOSURE_STATUS;
        case 29: // IS_REJECT
          return IS_REJECT;
        case 30: // IS_ASSIGNED
          return IS_ASSIGNED;
        case 31: // USER_IDS
          return USER_IDS;
        case 32: // APPLY_USER_NAME
          return APPLY_USER_NAME;
        case 33: // END_REQUEST_DTTM
          return END_REQUEST_DTTM;
        case 34: // LOAN_DAYS
          return LOAN_DAYS;
        case 35: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 36: // PRODUCT_ID
          return PRODUCT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __PMUSERID_ISSET_ID = 1;
  private static final int __ORGID_ISSET_ID = 2;
  private static final int __REQUESTSTATUS_ISSET_ID = 3;
  private static final int __APPLYSTATUS_ISSET_ID = 4;
  private static final int __PLANLOANMONEY_ISSET_ID = 5;
  private static final int __ISCLOSED_ISSET_ID = 6;
  private static final int __PAGE_ISSET_ID = 7;
  private static final int __ROWS_ISSET_ID = 8;
  private static final int __PROJECTTYPE_ISSET_ID = 9;
  private static final int __LOANRATE_ISSET_ID = 10;
  private static final int __MAXLOANRATE_ISSET_ID = 11;
  private static final int __BUSINESSCATEGORY_ISSET_ID = 12;
  private static final int __APPLYUSERID_ISSET_ID = 13;
  private static final int __ISNEEDHANDLE_ISSET_ID = 14;
  private static final int __FORECLOSURESTATUS_ISSET_ID = 15;
  private static final int __ISREJECT_ISSET_ID = 16;
  private static final int __ISASSIGNED_ISSET_ID = 17;
  private static final int __LOANDAYS_ISSET_ID = 18;
  private static final int __PRODUCTID_ISSET_ID = 19;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("pmUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PM_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("pmUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CUSTOMER_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgCustomerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CUSTOMER_PHONE, new org.apache.thrift.meta_data.FieldMetaData("orgCustomerPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CUSTOMER_CARD, new org.apache.thrift.meta_data.FieldMetaData("orgCustomerCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUEST_STATUS, new org.apache.thrift.meta_data.FieldMetaData("requestStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("applyStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("requestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_LOAN_MONEY, new org.apache.thrift.meta_data.FieldMetaData("planLoanMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.IS_CLOSED, new org.apache.thrift.meta_data.FieldMetaData("isClosed", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAN_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("planLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("projectType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOAN_RATE, new org.apache.thrift.meta_data.FieldMetaData("loanRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MAX_LOAN_RATE, new org.apache.thrift.meta_data.FieldMetaData("maxLoanRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS_CATEGORY, new org.apache.thrift.meta_data.FieldMetaData("businessCategory", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AREA_CODE, new org.apache.thrift.meta_data.FieldMetaData("areaCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_CODES, new org.apache.thrift.meta_data.FieldMetaData("areaCodes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.REQUEST_STATU_LIST, new org.apache.thrift.meta_data.FieldMetaData("requestStatuList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.APPLY_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("applyUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_NEED_HANDLE, new org.apache.thrift.meta_data.FieldMetaData("isNeedHandle", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FORECLOSURE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("foreclosureStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_REJECT, new org.apache.thrift.meta_data.FieldMetaData("isReject", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_ASSIGNED, new org.apache.thrift.meta_data.FieldMetaData("isAssigned", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.APPLY_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("applyUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("endRequestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_DAYS, new org.apache.thrift.meta_data.FieldMetaData("loanDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizProjectDTO.class, metaDataMap);
  }

  public BizProjectDTO() {
  }

  public BizProjectDTO(
    int pid,
    String projectNumber,
    String projectName,
    String orgName,
    int pmUserId,
    String pmUserName,
    String orgCustomerName,
    String orgCustomerPhone,
    String orgCustomerCard,
    int orgId,
    int requestStatus,
    int applyStatus,
    String requestDttm,
    double planLoanMoney,
    int isClosed,
    String planLoanDate,
    int page,
    int rows,
    int projectType,
    double loanRate,
    double maxLoanRate,
    int businessCategory,
    String areaCode,
    List<String> areaCodes,
    List<Integer> requestStatuList,
    int applyUserId,
    int isNeedHandle,
    int foreclosureStatus,
    int isReject,
    int isAssigned,
    List<Integer> userIds,
    String applyUserName,
    String endRequestDttm,
    int loanDays,
    String productName,
    int productId)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.projectNumber = projectNumber;
    this.projectName = projectName;
    this.orgName = orgName;
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    this.pmUserName = pmUserName;
    this.orgCustomerName = orgCustomerName;
    this.orgCustomerPhone = orgCustomerPhone;
    this.orgCustomerCard = orgCustomerCard;
    this.orgId = orgId;
    setOrgIdIsSet(true);
    this.requestStatus = requestStatus;
    setRequestStatusIsSet(true);
    this.applyStatus = applyStatus;
    setApplyStatusIsSet(true);
    this.requestDttm = requestDttm;
    this.planLoanMoney = planLoanMoney;
    setPlanLoanMoneyIsSet(true);
    this.isClosed = isClosed;
    setIsClosedIsSet(true);
    this.planLoanDate = planLoanDate;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.projectType = projectType;
    setProjectTypeIsSet(true);
    this.loanRate = loanRate;
    setLoanRateIsSet(true);
    this.maxLoanRate = maxLoanRate;
    setMaxLoanRateIsSet(true);
    this.businessCategory = businessCategory;
    setBusinessCategoryIsSet(true);
    this.areaCode = areaCode;
    this.areaCodes = areaCodes;
    this.requestStatuList = requestStatuList;
    this.applyUserId = applyUserId;
    setApplyUserIdIsSet(true);
    this.isNeedHandle = isNeedHandle;
    setIsNeedHandleIsSet(true);
    this.foreclosureStatus = foreclosureStatus;
    setForeclosureStatusIsSet(true);
    this.isReject = isReject;
    setIsRejectIsSet(true);
    this.isAssigned = isAssigned;
    setIsAssignedIsSet(true);
    this.userIds = userIds;
    this.applyUserName = applyUserName;
    this.endRequestDttm = endRequestDttm;
    this.loanDays = loanDays;
    setLoanDaysIsSet(true);
    this.productName = productName;
    this.productId = productId;
    setProductIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizProjectDTO(BizProjectDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    this.pmUserId = other.pmUserId;
    if (other.isSetPmUserName()) {
      this.pmUserName = other.pmUserName;
    }
    if (other.isSetOrgCustomerName()) {
      this.orgCustomerName = other.orgCustomerName;
    }
    if (other.isSetOrgCustomerPhone()) {
      this.orgCustomerPhone = other.orgCustomerPhone;
    }
    if (other.isSetOrgCustomerCard()) {
      this.orgCustomerCard = other.orgCustomerCard;
    }
    this.orgId = other.orgId;
    this.requestStatus = other.requestStatus;
    this.applyStatus = other.applyStatus;
    if (other.isSetRequestDttm()) {
      this.requestDttm = other.requestDttm;
    }
    this.planLoanMoney = other.planLoanMoney;
    this.isClosed = other.isClosed;
    if (other.isSetPlanLoanDate()) {
      this.planLoanDate = other.planLoanDate;
    }
    this.page = other.page;
    this.rows = other.rows;
    this.projectType = other.projectType;
    this.loanRate = other.loanRate;
    this.maxLoanRate = other.maxLoanRate;
    this.businessCategory = other.businessCategory;
    if (other.isSetAreaCode()) {
      this.areaCode = other.areaCode;
    }
    if (other.isSetAreaCodes()) {
      List<String> __this__areaCodes = new ArrayList<String>(other.areaCodes);
      this.areaCodes = __this__areaCodes;
    }
    if (other.isSetRequestStatuList()) {
      List<Integer> __this__requestStatuList = new ArrayList<Integer>(other.requestStatuList);
      this.requestStatuList = __this__requestStatuList;
    }
    this.applyUserId = other.applyUserId;
    this.isNeedHandle = other.isNeedHandle;
    this.foreclosureStatus = other.foreclosureStatus;
    this.isReject = other.isReject;
    this.isAssigned = other.isAssigned;
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
    if (other.isSetApplyUserName()) {
      this.applyUserName = other.applyUserName;
    }
    if (other.isSetEndRequestDttm()) {
      this.endRequestDttm = other.endRequestDttm;
    }
    this.loanDays = other.loanDays;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    this.productId = other.productId;
  }

  public BizProjectDTO deepCopy() {
    return new BizProjectDTO(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.projectNumber = null;
    this.projectName = null;
    this.orgName = null;
    setPmUserIdIsSet(false);
    this.pmUserId = 0;
    this.pmUserName = null;
    this.orgCustomerName = null;
    this.orgCustomerPhone = null;
    this.orgCustomerCard = null;
    setOrgIdIsSet(false);
    this.orgId = 0;
    setRequestStatusIsSet(false);
    this.requestStatus = 0;
    setApplyStatusIsSet(false);
    this.applyStatus = 0;
    this.requestDttm = null;
    setPlanLoanMoneyIsSet(false);
    this.planLoanMoney = 0.0;
    setIsClosedIsSet(false);
    this.isClosed = 0;
    this.planLoanDate = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setProjectTypeIsSet(false);
    this.projectType = 0;
    setLoanRateIsSet(false);
    this.loanRate = 0.0;
    setMaxLoanRateIsSet(false);
    this.maxLoanRate = 0.0;
    setBusinessCategoryIsSet(false);
    this.businessCategory = 0;
    this.areaCode = null;
    this.areaCodes = null;
    this.requestStatuList = null;
    setApplyUserIdIsSet(false);
    this.applyUserId = 0;
    setIsNeedHandleIsSet(false);
    this.isNeedHandle = 0;
    setForeclosureStatusIsSet(false);
    this.foreclosureStatus = 0;
    setIsRejectIsSet(false);
    this.isReject = 0;
    setIsAssignedIsSet(false);
    this.isAssigned = 0;
    this.userIds = null;
    this.applyUserName = null;
    this.endRequestDttm = null;
    setLoanDaysIsSet(false);
    this.loanDays = 0;
    this.productName = null;
    setProductIdIsSet(false);
    this.productId = 0;
  }

  public int getPid() {
    return this.pid;
  }

  public BizProjectDTO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public BizProjectDTO setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getProjectName() {
    return this.projectName;
  }

  public BizProjectDTO setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public String getOrgName() {
    return this.orgName;
  }

  public BizProjectDTO setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public int getPmUserId() {
    return this.pmUserId;
  }

  public BizProjectDTO setPmUserId(int pmUserId) {
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    return this;
  }

  public void unsetPmUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  /** Returns true if field pmUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  public void setPmUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PMUSERID_ISSET_ID, value);
  }

  public String getPmUserName() {
    return this.pmUserName;
  }

  public BizProjectDTO setPmUserName(String pmUserName) {
    this.pmUserName = pmUserName;
    return this;
  }

  public void unsetPmUserName() {
    this.pmUserName = null;
  }

  /** Returns true if field pmUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserName() {
    return this.pmUserName != null;
  }

  public void setPmUserNameIsSet(boolean value) {
    if (!value) {
      this.pmUserName = null;
    }
  }

  public String getOrgCustomerName() {
    return this.orgCustomerName;
  }

  public BizProjectDTO setOrgCustomerName(String orgCustomerName) {
    this.orgCustomerName = orgCustomerName;
    return this;
  }

  public void unsetOrgCustomerName() {
    this.orgCustomerName = null;
  }

  /** Returns true if field orgCustomerName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCustomerName() {
    return this.orgCustomerName != null;
  }

  public void setOrgCustomerNameIsSet(boolean value) {
    if (!value) {
      this.orgCustomerName = null;
    }
  }

  public String getOrgCustomerPhone() {
    return this.orgCustomerPhone;
  }

  public BizProjectDTO setOrgCustomerPhone(String orgCustomerPhone) {
    this.orgCustomerPhone = orgCustomerPhone;
    return this;
  }

  public void unsetOrgCustomerPhone() {
    this.orgCustomerPhone = null;
  }

  /** Returns true if field orgCustomerPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCustomerPhone() {
    return this.orgCustomerPhone != null;
  }

  public void setOrgCustomerPhoneIsSet(boolean value) {
    if (!value) {
      this.orgCustomerPhone = null;
    }
  }

  public String getOrgCustomerCard() {
    return this.orgCustomerCard;
  }

  public BizProjectDTO setOrgCustomerCard(String orgCustomerCard) {
    this.orgCustomerCard = orgCustomerCard;
    return this;
  }

  public void unsetOrgCustomerCard() {
    this.orgCustomerCard = null;
  }

  /** Returns true if field orgCustomerCard is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCustomerCard() {
    return this.orgCustomerCard != null;
  }

  public void setOrgCustomerCardIsSet(boolean value) {
    if (!value) {
      this.orgCustomerCard = null;
    }
  }

  public int getOrgId() {
    return this.orgId;
  }

  public BizProjectDTO setOrgId(int orgId) {
    this.orgId = orgId;
    setOrgIdIsSet(true);
    return this;
  }

  public void unsetOrgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  public void setOrgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGID_ISSET_ID, value);
  }

  public int getRequestStatus() {
    return this.requestStatus;
  }

  public BizProjectDTO setRequestStatus(int requestStatus) {
    this.requestStatus = requestStatus;
    setRequestStatusIsSet(true);
    return this;
  }

  public void unsetRequestStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID);
  }

  /** Returns true if field requestStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID);
  }

  public void setRequestStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID, value);
  }

  public int getApplyStatus() {
    return this.applyStatus;
  }

  public BizProjectDTO setApplyStatus(int applyStatus) {
    this.applyStatus = applyStatus;
    setApplyStatusIsSet(true);
    return this;
  }

  public void unsetApplyStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYSTATUS_ISSET_ID);
  }

  /** Returns true if field applyStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYSTATUS_ISSET_ID);
  }

  public void setApplyStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYSTATUS_ISSET_ID, value);
  }

  public String getRequestDttm() {
    return this.requestDttm;
  }

  public BizProjectDTO setRequestDttm(String requestDttm) {
    this.requestDttm = requestDttm;
    return this;
  }

  public void unsetRequestDttm() {
    this.requestDttm = null;
  }

  /** Returns true if field requestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestDttm() {
    return this.requestDttm != null;
  }

  public void setRequestDttmIsSet(boolean value) {
    if (!value) {
      this.requestDttm = null;
    }
  }

  public double getPlanLoanMoney() {
    return this.planLoanMoney;
  }

  public BizProjectDTO setPlanLoanMoney(double planLoanMoney) {
    this.planLoanMoney = planLoanMoney;
    setPlanLoanMoneyIsSet(true);
    return this;
  }

  public void unsetPlanLoanMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PLANLOANMONEY_ISSET_ID);
  }

  /** Returns true if field planLoanMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanLoanMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __PLANLOANMONEY_ISSET_ID);
  }

  public void setPlanLoanMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PLANLOANMONEY_ISSET_ID, value);
  }

  public int getIsClosed() {
    return this.isClosed;
  }

  public BizProjectDTO setIsClosed(int isClosed) {
    this.isClosed = isClosed;
    setIsClosedIsSet(true);
    return this;
  }

  public void unsetIsClosed() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISCLOSED_ISSET_ID);
  }

  /** Returns true if field isClosed is set (has been assigned a value) and false otherwise */
  public boolean isSetIsClosed() {
    return EncodingUtils.testBit(__isset_bitfield, __ISCLOSED_ISSET_ID);
  }

  public void setIsClosedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISCLOSED_ISSET_ID, value);
  }

  public String getPlanLoanDate() {
    return this.planLoanDate;
  }

  public BizProjectDTO setPlanLoanDate(String planLoanDate) {
    this.planLoanDate = planLoanDate;
    return this;
  }

  public void unsetPlanLoanDate() {
    this.planLoanDate = null;
  }

  /** Returns true if field planLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanLoanDate() {
    return this.planLoanDate != null;
  }

  public void setPlanLoanDateIsSet(boolean value) {
    if (!value) {
      this.planLoanDate = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public BizProjectDTO setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public BizProjectDTO setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getProjectType() {
    return this.projectType;
  }

  public BizProjectDTO setProjectType(int projectType) {
    this.projectType = projectType;
    setProjectTypeIsSet(true);
    return this;
  }

  public void unsetProjectType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTTYPE_ISSET_ID);
  }

  /** Returns true if field projectType is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectType() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTTYPE_ISSET_ID);
  }

  public void setProjectTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTTYPE_ISSET_ID, value);
  }

  public double getLoanRate() {
    return this.loanRate;
  }

  public BizProjectDTO setLoanRate(double loanRate) {
    this.loanRate = loanRate;
    setLoanRateIsSet(true);
    return this;
  }

  public void unsetLoanRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANRATE_ISSET_ID);
  }

  /** Returns true if field loanRate is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanRate() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANRATE_ISSET_ID);
  }

  public void setLoanRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANRATE_ISSET_ID, value);
  }

  public double getMaxLoanRate() {
    return this.maxLoanRate;
  }

  public BizProjectDTO setMaxLoanRate(double maxLoanRate) {
    this.maxLoanRate = maxLoanRate;
    setMaxLoanRateIsSet(true);
    return this;
  }

  public void unsetMaxLoanRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXLOANRATE_ISSET_ID);
  }

  /** Returns true if field maxLoanRate is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxLoanRate() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXLOANRATE_ISSET_ID);
  }

  public void setMaxLoanRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXLOANRATE_ISSET_ID, value);
  }

  public int getBusinessCategory() {
    return this.businessCategory;
  }

  public BizProjectDTO setBusinessCategory(int businessCategory) {
    this.businessCategory = businessCategory;
    setBusinessCategoryIsSet(true);
    return this;
  }

  public void unsetBusinessCategory() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSCATEGORY_ISSET_ID);
  }

  /** Returns true if field businessCategory is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessCategory() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSCATEGORY_ISSET_ID);
  }

  public void setBusinessCategoryIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSCATEGORY_ISSET_ID, value);
  }

  public String getAreaCode() {
    return this.areaCode;
  }

  public BizProjectDTO setAreaCode(String areaCode) {
    this.areaCode = areaCode;
    return this;
  }

  public void unsetAreaCode() {
    this.areaCode = null;
  }

  /** Returns true if field areaCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaCode() {
    return this.areaCode != null;
  }

  public void setAreaCodeIsSet(boolean value) {
    if (!value) {
      this.areaCode = null;
    }
  }

  public int getAreaCodesSize() {
    return (this.areaCodes == null) ? 0 : this.areaCodes.size();
  }

  public java.util.Iterator<String> getAreaCodesIterator() {
    return (this.areaCodes == null) ? null : this.areaCodes.iterator();
  }

  public void addToAreaCodes(String elem) {
    if (this.areaCodes == null) {
      this.areaCodes = new ArrayList<String>();
    }
    this.areaCodes.add(elem);
  }

  public List<String> getAreaCodes() {
    return this.areaCodes;
  }

  public BizProjectDTO setAreaCodes(List<String> areaCodes) {
    this.areaCodes = areaCodes;
    return this;
  }

  public void unsetAreaCodes() {
    this.areaCodes = null;
  }

  /** Returns true if field areaCodes is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaCodes() {
    return this.areaCodes != null;
  }

  public void setAreaCodesIsSet(boolean value) {
    if (!value) {
      this.areaCodes = null;
    }
  }

  public int getRequestStatuListSize() {
    return (this.requestStatuList == null) ? 0 : this.requestStatuList.size();
  }

  public java.util.Iterator<Integer> getRequestStatuListIterator() {
    return (this.requestStatuList == null) ? null : this.requestStatuList.iterator();
  }

  public void addToRequestStatuList(int elem) {
    if (this.requestStatuList == null) {
      this.requestStatuList = new ArrayList<Integer>();
    }
    this.requestStatuList.add(elem);
  }

  public List<Integer> getRequestStatuList() {
    return this.requestStatuList;
  }

  public BizProjectDTO setRequestStatuList(List<Integer> requestStatuList) {
    this.requestStatuList = requestStatuList;
    return this;
  }

  public void unsetRequestStatuList() {
    this.requestStatuList = null;
  }

  /** Returns true if field requestStatuList is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatuList() {
    return this.requestStatuList != null;
  }

  public void setRequestStatuListIsSet(boolean value) {
    if (!value) {
      this.requestStatuList = null;
    }
  }

  public int getApplyUserId() {
    return this.applyUserId;
  }

  public BizProjectDTO setApplyUserId(int applyUserId) {
    this.applyUserId = applyUserId;
    setApplyUserIdIsSet(true);
    return this;
  }

  public void unsetApplyUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYUSERID_ISSET_ID);
  }

  /** Returns true if field applyUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYUSERID_ISSET_ID);
  }

  public void setApplyUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYUSERID_ISSET_ID, value);
  }

  public int getIsNeedHandle() {
    return this.isNeedHandle;
  }

  public BizProjectDTO setIsNeedHandle(int isNeedHandle) {
    this.isNeedHandle = isNeedHandle;
    setIsNeedHandleIsSet(true);
    return this;
  }

  public void unsetIsNeedHandle() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISNEEDHANDLE_ISSET_ID);
  }

  /** Returns true if field isNeedHandle is set (has been assigned a value) and false otherwise */
  public boolean isSetIsNeedHandle() {
    return EncodingUtils.testBit(__isset_bitfield, __ISNEEDHANDLE_ISSET_ID);
  }

  public void setIsNeedHandleIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISNEEDHANDLE_ISSET_ID, value);
  }

  public int getForeclosureStatus() {
    return this.foreclosureStatus;
  }

  public BizProjectDTO setForeclosureStatus(int foreclosureStatus) {
    this.foreclosureStatus = foreclosureStatus;
    setForeclosureStatusIsSet(true);
    return this;
  }

  public void unsetForeclosureStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FORECLOSURESTATUS_ISSET_ID);
  }

  /** Returns true if field foreclosureStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetForeclosureStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __FORECLOSURESTATUS_ISSET_ID);
  }

  public void setForeclosureStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FORECLOSURESTATUS_ISSET_ID, value);
  }

  public int getIsReject() {
    return this.isReject;
  }

  public BizProjectDTO setIsReject(int isReject) {
    this.isReject = isReject;
    setIsRejectIsSet(true);
    return this;
  }

  public void unsetIsReject() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISREJECT_ISSET_ID);
  }

  /** Returns true if field isReject is set (has been assigned a value) and false otherwise */
  public boolean isSetIsReject() {
    return EncodingUtils.testBit(__isset_bitfield, __ISREJECT_ISSET_ID);
  }

  public void setIsRejectIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISREJECT_ISSET_ID, value);
  }

  public int getIsAssigned() {
    return this.isAssigned;
  }

  public BizProjectDTO setIsAssigned(int isAssigned) {
    this.isAssigned = isAssigned;
    setIsAssignedIsSet(true);
    return this;
  }

  public void unsetIsAssigned() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISASSIGNED_ISSET_ID);
  }

  /** Returns true if field isAssigned is set (has been assigned a value) and false otherwise */
  public boolean isSetIsAssigned() {
    return EncodingUtils.testBit(__isset_bitfield, __ISASSIGNED_ISSET_ID);
  }

  public void setIsAssignedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISASSIGNED_ISSET_ID, value);
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public BizProjectDTO setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public String getApplyUserName() {
    return this.applyUserName;
  }

  public BizProjectDTO setApplyUserName(String applyUserName) {
    this.applyUserName = applyUserName;
    return this;
  }

  public void unsetApplyUserName() {
    this.applyUserName = null;
  }

  /** Returns true if field applyUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyUserName() {
    return this.applyUserName != null;
  }

  public void setApplyUserNameIsSet(boolean value) {
    if (!value) {
      this.applyUserName = null;
    }
  }

  public String getEndRequestDttm() {
    return this.endRequestDttm;
  }

  public BizProjectDTO setEndRequestDttm(String endRequestDttm) {
    this.endRequestDttm = endRequestDttm;
    return this;
  }

  public void unsetEndRequestDttm() {
    this.endRequestDttm = null;
  }

  /** Returns true if field endRequestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetEndRequestDttm() {
    return this.endRequestDttm != null;
  }

  public void setEndRequestDttmIsSet(boolean value) {
    if (!value) {
      this.endRequestDttm = null;
    }
  }

  public int getLoanDays() {
    return this.loanDays;
  }

  public BizProjectDTO setLoanDays(int loanDays) {
    this.loanDays = loanDays;
    setLoanDaysIsSet(true);
    return this;
  }

  public void unsetLoanDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANDAYS_ISSET_ID);
  }

  /** Returns true if field loanDays is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanDays() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANDAYS_ISSET_ID);
  }

  public void setLoanDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANDAYS_ISSET_ID, value);
  }

  public String getProductName() {
    return this.productName;
  }

  public BizProjectDTO setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public int getProductId() {
    return this.productId;
  }

  public BizProjectDTO setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case PM_USER_ID:
      if (value == null) {
        unsetPmUserId();
      } else {
        setPmUserId((Integer)value);
      }
      break;

    case PM_USER_NAME:
      if (value == null) {
        unsetPmUserName();
      } else {
        setPmUserName((String)value);
      }
      break;

    case ORG_CUSTOMER_NAME:
      if (value == null) {
        unsetOrgCustomerName();
      } else {
        setOrgCustomerName((String)value);
      }
      break;

    case ORG_CUSTOMER_PHONE:
      if (value == null) {
        unsetOrgCustomerPhone();
      } else {
        setOrgCustomerPhone((String)value);
      }
      break;

    case ORG_CUSTOMER_CARD:
      if (value == null) {
        unsetOrgCustomerCard();
      } else {
        setOrgCustomerCard((String)value);
      }
      break;

    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((Integer)value);
      }
      break;

    case REQUEST_STATUS:
      if (value == null) {
        unsetRequestStatus();
      } else {
        setRequestStatus((Integer)value);
      }
      break;

    case APPLY_STATUS:
      if (value == null) {
        unsetApplyStatus();
      } else {
        setApplyStatus((Integer)value);
      }
      break;

    case REQUEST_DTTM:
      if (value == null) {
        unsetRequestDttm();
      } else {
        setRequestDttm((String)value);
      }
      break;

    case PLAN_LOAN_MONEY:
      if (value == null) {
        unsetPlanLoanMoney();
      } else {
        setPlanLoanMoney((Double)value);
      }
      break;

    case IS_CLOSED:
      if (value == null) {
        unsetIsClosed();
      } else {
        setIsClosed((Integer)value);
      }
      break;

    case PLAN_LOAN_DATE:
      if (value == null) {
        unsetPlanLoanDate();
      } else {
        setPlanLoanDate((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case PROJECT_TYPE:
      if (value == null) {
        unsetProjectType();
      } else {
        setProjectType((Integer)value);
      }
      break;

    case LOAN_RATE:
      if (value == null) {
        unsetLoanRate();
      } else {
        setLoanRate((Double)value);
      }
      break;

    case MAX_LOAN_RATE:
      if (value == null) {
        unsetMaxLoanRate();
      } else {
        setMaxLoanRate((Double)value);
      }
      break;

    case BUSINESS_CATEGORY:
      if (value == null) {
        unsetBusinessCategory();
      } else {
        setBusinessCategory((Integer)value);
      }
      break;

    case AREA_CODE:
      if (value == null) {
        unsetAreaCode();
      } else {
        setAreaCode((String)value);
      }
      break;

    case AREA_CODES:
      if (value == null) {
        unsetAreaCodes();
      } else {
        setAreaCodes((List<String>)value);
      }
      break;

    case REQUEST_STATU_LIST:
      if (value == null) {
        unsetRequestStatuList();
      } else {
        setRequestStatuList((List<Integer>)value);
      }
      break;

    case APPLY_USER_ID:
      if (value == null) {
        unsetApplyUserId();
      } else {
        setApplyUserId((Integer)value);
      }
      break;

    case IS_NEED_HANDLE:
      if (value == null) {
        unsetIsNeedHandle();
      } else {
        setIsNeedHandle((Integer)value);
      }
      break;

    case FORECLOSURE_STATUS:
      if (value == null) {
        unsetForeclosureStatus();
      } else {
        setForeclosureStatus((Integer)value);
      }
      break;

    case IS_REJECT:
      if (value == null) {
        unsetIsReject();
      } else {
        setIsReject((Integer)value);
      }
      break;

    case IS_ASSIGNED:
      if (value == null) {
        unsetIsAssigned();
      } else {
        setIsAssigned((Integer)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    case APPLY_USER_NAME:
      if (value == null) {
        unsetApplyUserName();
      } else {
        setApplyUserName((String)value);
      }
      break;

    case END_REQUEST_DTTM:
      if (value == null) {
        unsetEndRequestDttm();
      } else {
        setEndRequestDttm((String)value);
      }
      break;

    case LOAN_DAYS:
      if (value == null) {
        unsetLoanDays();
      } else {
        setLoanDays((Integer)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PROJECT_NAME:
      return getProjectName();

    case ORG_NAME:
      return getOrgName();

    case PM_USER_ID:
      return Integer.valueOf(getPmUserId());

    case PM_USER_NAME:
      return getPmUserName();

    case ORG_CUSTOMER_NAME:
      return getOrgCustomerName();

    case ORG_CUSTOMER_PHONE:
      return getOrgCustomerPhone();

    case ORG_CUSTOMER_CARD:
      return getOrgCustomerCard();

    case ORG_ID:
      return Integer.valueOf(getOrgId());

    case REQUEST_STATUS:
      return Integer.valueOf(getRequestStatus());

    case APPLY_STATUS:
      return Integer.valueOf(getApplyStatus());

    case REQUEST_DTTM:
      return getRequestDttm();

    case PLAN_LOAN_MONEY:
      return Double.valueOf(getPlanLoanMoney());

    case IS_CLOSED:
      return Integer.valueOf(getIsClosed());

    case PLAN_LOAN_DATE:
      return getPlanLoanDate();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case PROJECT_TYPE:
      return Integer.valueOf(getProjectType());

    case LOAN_RATE:
      return Double.valueOf(getLoanRate());

    case MAX_LOAN_RATE:
      return Double.valueOf(getMaxLoanRate());

    case BUSINESS_CATEGORY:
      return Integer.valueOf(getBusinessCategory());

    case AREA_CODE:
      return getAreaCode();

    case AREA_CODES:
      return getAreaCodes();

    case REQUEST_STATU_LIST:
      return getRequestStatuList();

    case APPLY_USER_ID:
      return Integer.valueOf(getApplyUserId());

    case IS_NEED_HANDLE:
      return Integer.valueOf(getIsNeedHandle());

    case FORECLOSURE_STATUS:
      return Integer.valueOf(getForeclosureStatus());

    case IS_REJECT:
      return Integer.valueOf(getIsReject());

    case IS_ASSIGNED:
      return Integer.valueOf(getIsAssigned());

    case USER_IDS:
      return getUserIds();

    case APPLY_USER_NAME:
      return getApplyUserName();

    case END_REQUEST_DTTM:
      return getEndRequestDttm();

    case LOAN_DAYS:
      return Integer.valueOf(getLoanDays());

    case PRODUCT_NAME:
      return getProductName();

    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PROJECT_NAME:
      return isSetProjectName();
    case ORG_NAME:
      return isSetOrgName();
    case PM_USER_ID:
      return isSetPmUserId();
    case PM_USER_NAME:
      return isSetPmUserName();
    case ORG_CUSTOMER_NAME:
      return isSetOrgCustomerName();
    case ORG_CUSTOMER_PHONE:
      return isSetOrgCustomerPhone();
    case ORG_CUSTOMER_CARD:
      return isSetOrgCustomerCard();
    case ORG_ID:
      return isSetOrgId();
    case REQUEST_STATUS:
      return isSetRequestStatus();
    case APPLY_STATUS:
      return isSetApplyStatus();
    case REQUEST_DTTM:
      return isSetRequestDttm();
    case PLAN_LOAN_MONEY:
      return isSetPlanLoanMoney();
    case IS_CLOSED:
      return isSetIsClosed();
    case PLAN_LOAN_DATE:
      return isSetPlanLoanDate();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case PROJECT_TYPE:
      return isSetProjectType();
    case LOAN_RATE:
      return isSetLoanRate();
    case MAX_LOAN_RATE:
      return isSetMaxLoanRate();
    case BUSINESS_CATEGORY:
      return isSetBusinessCategory();
    case AREA_CODE:
      return isSetAreaCode();
    case AREA_CODES:
      return isSetAreaCodes();
    case REQUEST_STATU_LIST:
      return isSetRequestStatuList();
    case APPLY_USER_ID:
      return isSetApplyUserId();
    case IS_NEED_HANDLE:
      return isSetIsNeedHandle();
    case FORECLOSURE_STATUS:
      return isSetForeclosureStatus();
    case IS_REJECT:
      return isSetIsReject();
    case IS_ASSIGNED:
      return isSetIsAssigned();
    case USER_IDS:
      return isSetUserIds();
    case APPLY_USER_NAME:
      return isSetApplyUserName();
    case END_REQUEST_DTTM:
      return isSetEndRequestDttm();
    case LOAN_DAYS:
      return isSetLoanDays();
    case PRODUCT_NAME:
      return isSetProductName();
    case PRODUCT_ID:
      return isSetProductId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizProjectDTO)
      return this.equals((BizProjectDTO)that);
    return false;
  }

  public boolean equals(BizProjectDTO that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_pmUserId = true;
    boolean that_present_pmUserId = true;
    if (this_present_pmUserId || that_present_pmUserId) {
      if (!(this_present_pmUserId && that_present_pmUserId))
        return false;
      if (this.pmUserId != that.pmUserId)
        return false;
    }

    boolean this_present_pmUserName = true && this.isSetPmUserName();
    boolean that_present_pmUserName = true && that.isSetPmUserName();
    if (this_present_pmUserName || that_present_pmUserName) {
      if (!(this_present_pmUserName && that_present_pmUserName))
        return false;
      if (!this.pmUserName.equals(that.pmUserName))
        return false;
    }

    boolean this_present_orgCustomerName = true && this.isSetOrgCustomerName();
    boolean that_present_orgCustomerName = true && that.isSetOrgCustomerName();
    if (this_present_orgCustomerName || that_present_orgCustomerName) {
      if (!(this_present_orgCustomerName && that_present_orgCustomerName))
        return false;
      if (!this.orgCustomerName.equals(that.orgCustomerName))
        return false;
    }

    boolean this_present_orgCustomerPhone = true && this.isSetOrgCustomerPhone();
    boolean that_present_orgCustomerPhone = true && that.isSetOrgCustomerPhone();
    if (this_present_orgCustomerPhone || that_present_orgCustomerPhone) {
      if (!(this_present_orgCustomerPhone && that_present_orgCustomerPhone))
        return false;
      if (!this.orgCustomerPhone.equals(that.orgCustomerPhone))
        return false;
    }

    boolean this_present_orgCustomerCard = true && this.isSetOrgCustomerCard();
    boolean that_present_orgCustomerCard = true && that.isSetOrgCustomerCard();
    if (this_present_orgCustomerCard || that_present_orgCustomerCard) {
      if (!(this_present_orgCustomerCard && that_present_orgCustomerCard))
        return false;
      if (!this.orgCustomerCard.equals(that.orgCustomerCard))
        return false;
    }

    boolean this_present_orgId = true;
    boolean that_present_orgId = true;
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (this.orgId != that.orgId)
        return false;
    }

    boolean this_present_requestStatus = true;
    boolean that_present_requestStatus = true;
    if (this_present_requestStatus || that_present_requestStatus) {
      if (!(this_present_requestStatus && that_present_requestStatus))
        return false;
      if (this.requestStatus != that.requestStatus)
        return false;
    }

    boolean this_present_applyStatus = true;
    boolean that_present_applyStatus = true;
    if (this_present_applyStatus || that_present_applyStatus) {
      if (!(this_present_applyStatus && that_present_applyStatus))
        return false;
      if (this.applyStatus != that.applyStatus)
        return false;
    }

    boolean this_present_requestDttm = true && this.isSetRequestDttm();
    boolean that_present_requestDttm = true && that.isSetRequestDttm();
    if (this_present_requestDttm || that_present_requestDttm) {
      if (!(this_present_requestDttm && that_present_requestDttm))
        return false;
      if (!this.requestDttm.equals(that.requestDttm))
        return false;
    }

    boolean this_present_planLoanMoney = true;
    boolean that_present_planLoanMoney = true;
    if (this_present_planLoanMoney || that_present_planLoanMoney) {
      if (!(this_present_planLoanMoney && that_present_planLoanMoney))
        return false;
      if (this.planLoanMoney != that.planLoanMoney)
        return false;
    }

    boolean this_present_isClosed = true;
    boolean that_present_isClosed = true;
    if (this_present_isClosed || that_present_isClosed) {
      if (!(this_present_isClosed && that_present_isClosed))
        return false;
      if (this.isClosed != that.isClosed)
        return false;
    }

    boolean this_present_planLoanDate = true && this.isSetPlanLoanDate();
    boolean that_present_planLoanDate = true && that.isSetPlanLoanDate();
    if (this_present_planLoanDate || that_present_planLoanDate) {
      if (!(this_present_planLoanDate && that_present_planLoanDate))
        return false;
      if (!this.planLoanDate.equals(that.planLoanDate))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_projectType = true;
    boolean that_present_projectType = true;
    if (this_present_projectType || that_present_projectType) {
      if (!(this_present_projectType && that_present_projectType))
        return false;
      if (this.projectType != that.projectType)
        return false;
    }

    boolean this_present_loanRate = true;
    boolean that_present_loanRate = true;
    if (this_present_loanRate || that_present_loanRate) {
      if (!(this_present_loanRate && that_present_loanRate))
        return false;
      if (this.loanRate != that.loanRate)
        return false;
    }

    boolean this_present_maxLoanRate = true;
    boolean that_present_maxLoanRate = true;
    if (this_present_maxLoanRate || that_present_maxLoanRate) {
      if (!(this_present_maxLoanRate && that_present_maxLoanRate))
        return false;
      if (this.maxLoanRate != that.maxLoanRate)
        return false;
    }

    boolean this_present_businessCategory = true;
    boolean that_present_businessCategory = true;
    if (this_present_businessCategory || that_present_businessCategory) {
      if (!(this_present_businessCategory && that_present_businessCategory))
        return false;
      if (this.businessCategory != that.businessCategory)
        return false;
    }

    boolean this_present_areaCode = true && this.isSetAreaCode();
    boolean that_present_areaCode = true && that.isSetAreaCode();
    if (this_present_areaCode || that_present_areaCode) {
      if (!(this_present_areaCode && that_present_areaCode))
        return false;
      if (!this.areaCode.equals(that.areaCode))
        return false;
    }

    boolean this_present_areaCodes = true && this.isSetAreaCodes();
    boolean that_present_areaCodes = true && that.isSetAreaCodes();
    if (this_present_areaCodes || that_present_areaCodes) {
      if (!(this_present_areaCodes && that_present_areaCodes))
        return false;
      if (!this.areaCodes.equals(that.areaCodes))
        return false;
    }

    boolean this_present_requestStatuList = true && this.isSetRequestStatuList();
    boolean that_present_requestStatuList = true && that.isSetRequestStatuList();
    if (this_present_requestStatuList || that_present_requestStatuList) {
      if (!(this_present_requestStatuList && that_present_requestStatuList))
        return false;
      if (!this.requestStatuList.equals(that.requestStatuList))
        return false;
    }

    boolean this_present_applyUserId = true;
    boolean that_present_applyUserId = true;
    if (this_present_applyUserId || that_present_applyUserId) {
      if (!(this_present_applyUserId && that_present_applyUserId))
        return false;
      if (this.applyUserId != that.applyUserId)
        return false;
    }

    boolean this_present_isNeedHandle = true;
    boolean that_present_isNeedHandle = true;
    if (this_present_isNeedHandle || that_present_isNeedHandle) {
      if (!(this_present_isNeedHandle && that_present_isNeedHandle))
        return false;
      if (this.isNeedHandle != that.isNeedHandle)
        return false;
    }

    boolean this_present_foreclosureStatus = true;
    boolean that_present_foreclosureStatus = true;
    if (this_present_foreclosureStatus || that_present_foreclosureStatus) {
      if (!(this_present_foreclosureStatus && that_present_foreclosureStatus))
        return false;
      if (this.foreclosureStatus != that.foreclosureStatus)
        return false;
    }

    boolean this_present_isReject = true;
    boolean that_present_isReject = true;
    if (this_present_isReject || that_present_isReject) {
      if (!(this_present_isReject && that_present_isReject))
        return false;
      if (this.isReject != that.isReject)
        return false;
    }

    boolean this_present_isAssigned = true;
    boolean that_present_isAssigned = true;
    if (this_present_isAssigned || that_present_isAssigned) {
      if (!(this_present_isAssigned && that_present_isAssigned))
        return false;
      if (this.isAssigned != that.isAssigned)
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    boolean this_present_applyUserName = true && this.isSetApplyUserName();
    boolean that_present_applyUserName = true && that.isSetApplyUserName();
    if (this_present_applyUserName || that_present_applyUserName) {
      if (!(this_present_applyUserName && that_present_applyUserName))
        return false;
      if (!this.applyUserName.equals(that.applyUserName))
        return false;
    }

    boolean this_present_endRequestDttm = true && this.isSetEndRequestDttm();
    boolean that_present_endRequestDttm = true && that.isSetEndRequestDttm();
    if (this_present_endRequestDttm || that_present_endRequestDttm) {
      if (!(this_present_endRequestDttm && that_present_endRequestDttm))
        return false;
      if (!this.endRequestDttm.equals(that.endRequestDttm))
        return false;
    }

    boolean this_present_loanDays = true;
    boolean that_present_loanDays = true;
    if (this_present_loanDays || that_present_loanDays) {
      if (!(this_present_loanDays && that_present_loanDays))
        return false;
      if (this.loanDays != that.loanDays)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_productId = true;
    boolean that_present_productId = true;
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_pmUserId = true;
    list.add(present_pmUserId);
    if (present_pmUserId)
      list.add(pmUserId);

    boolean present_pmUserName = true && (isSetPmUserName());
    list.add(present_pmUserName);
    if (present_pmUserName)
      list.add(pmUserName);

    boolean present_orgCustomerName = true && (isSetOrgCustomerName());
    list.add(present_orgCustomerName);
    if (present_orgCustomerName)
      list.add(orgCustomerName);

    boolean present_orgCustomerPhone = true && (isSetOrgCustomerPhone());
    list.add(present_orgCustomerPhone);
    if (present_orgCustomerPhone)
      list.add(orgCustomerPhone);

    boolean present_orgCustomerCard = true && (isSetOrgCustomerCard());
    list.add(present_orgCustomerCard);
    if (present_orgCustomerCard)
      list.add(orgCustomerCard);

    boolean present_orgId = true;
    list.add(present_orgId);
    if (present_orgId)
      list.add(orgId);

    boolean present_requestStatus = true;
    list.add(present_requestStatus);
    if (present_requestStatus)
      list.add(requestStatus);

    boolean present_applyStatus = true;
    list.add(present_applyStatus);
    if (present_applyStatus)
      list.add(applyStatus);

    boolean present_requestDttm = true && (isSetRequestDttm());
    list.add(present_requestDttm);
    if (present_requestDttm)
      list.add(requestDttm);

    boolean present_planLoanMoney = true;
    list.add(present_planLoanMoney);
    if (present_planLoanMoney)
      list.add(planLoanMoney);

    boolean present_isClosed = true;
    list.add(present_isClosed);
    if (present_isClosed)
      list.add(isClosed);

    boolean present_planLoanDate = true && (isSetPlanLoanDate());
    list.add(present_planLoanDate);
    if (present_planLoanDate)
      list.add(planLoanDate);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_projectType = true;
    list.add(present_projectType);
    if (present_projectType)
      list.add(projectType);

    boolean present_loanRate = true;
    list.add(present_loanRate);
    if (present_loanRate)
      list.add(loanRate);

    boolean present_maxLoanRate = true;
    list.add(present_maxLoanRate);
    if (present_maxLoanRate)
      list.add(maxLoanRate);

    boolean present_businessCategory = true;
    list.add(present_businessCategory);
    if (present_businessCategory)
      list.add(businessCategory);

    boolean present_areaCode = true && (isSetAreaCode());
    list.add(present_areaCode);
    if (present_areaCode)
      list.add(areaCode);

    boolean present_areaCodes = true && (isSetAreaCodes());
    list.add(present_areaCodes);
    if (present_areaCodes)
      list.add(areaCodes);

    boolean present_requestStatuList = true && (isSetRequestStatuList());
    list.add(present_requestStatuList);
    if (present_requestStatuList)
      list.add(requestStatuList);

    boolean present_applyUserId = true;
    list.add(present_applyUserId);
    if (present_applyUserId)
      list.add(applyUserId);

    boolean present_isNeedHandle = true;
    list.add(present_isNeedHandle);
    if (present_isNeedHandle)
      list.add(isNeedHandle);

    boolean present_foreclosureStatus = true;
    list.add(present_foreclosureStatus);
    if (present_foreclosureStatus)
      list.add(foreclosureStatus);

    boolean present_isReject = true;
    list.add(present_isReject);
    if (present_isReject)
      list.add(isReject);

    boolean present_isAssigned = true;
    list.add(present_isAssigned);
    if (present_isAssigned)
      list.add(isAssigned);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    boolean present_applyUserName = true && (isSetApplyUserName());
    list.add(present_applyUserName);
    if (present_applyUserName)
      list.add(applyUserName);

    boolean present_endRequestDttm = true && (isSetEndRequestDttm());
    list.add(present_endRequestDttm);
    if (present_endRequestDttm)
      list.add(endRequestDttm);

    boolean present_loanDays = true;
    list.add(present_loanDays);
    if (present_loanDays)
      list.add(loanDays);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_productId = true;
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizProjectDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserId()).compareTo(other.isSetPmUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserId, other.pmUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserName()).compareTo(other.isSetPmUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserName, other.pmUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCustomerName()).compareTo(other.isSetOrgCustomerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCustomerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCustomerName, other.orgCustomerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCustomerPhone()).compareTo(other.isSetOrgCustomerPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCustomerPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCustomerPhone, other.orgCustomerPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCustomerCard()).compareTo(other.isSetOrgCustomerCard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCustomerCard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCustomerCard, other.orgCustomerCard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatus()).compareTo(other.isSetRequestStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatus, other.requestStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyStatus()).compareTo(other.isSetApplyStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyStatus, other.applyStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestDttm()).compareTo(other.isSetRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestDttm, other.requestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanLoanMoney()).compareTo(other.isSetPlanLoanMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanLoanMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planLoanMoney, other.planLoanMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsClosed()).compareTo(other.isSetIsClosed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsClosed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isClosed, other.isClosed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanLoanDate()).compareTo(other.isSetPlanLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planLoanDate, other.planLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectType()).compareTo(other.isSetProjectType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectType, other.projectType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanRate()).compareTo(other.isSetLoanRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanRate, other.loanRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxLoanRate()).compareTo(other.isSetMaxLoanRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxLoanRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxLoanRate, other.maxLoanRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessCategory()).compareTo(other.isSetBusinessCategory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessCategory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessCategory, other.businessCategory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaCode()).compareTo(other.isSetAreaCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaCode, other.areaCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaCodes()).compareTo(other.isSetAreaCodes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaCodes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaCodes, other.areaCodes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatuList()).compareTo(other.isSetRequestStatuList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatuList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatuList, other.requestStatuList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyUserId()).compareTo(other.isSetApplyUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyUserId, other.applyUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsNeedHandle()).compareTo(other.isSetIsNeedHandle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsNeedHandle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isNeedHandle, other.isNeedHandle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetForeclosureStatus()).compareTo(other.isSetForeclosureStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetForeclosureStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.foreclosureStatus, other.foreclosureStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsReject()).compareTo(other.isSetIsReject());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsReject()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isReject, other.isReject);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsAssigned()).compareTo(other.isSetIsAssigned());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsAssigned()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isAssigned, other.isAssigned);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyUserName()).compareTo(other.isSetApplyUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyUserName, other.applyUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndRequestDttm()).compareTo(other.isSetEndRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endRequestDttm, other.endRequestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanDays()).compareTo(other.isSetLoanDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanDays, other.loanDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizProjectDTO(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserId:");
    sb.append(this.pmUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserName:");
    if (this.pmUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.pmUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCustomerName:");
    if (this.orgCustomerName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCustomerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCustomerPhone:");
    if (this.orgCustomerPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCustomerPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCustomerCard:");
    if (this.orgCustomerCard == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCustomerCard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgId:");
    sb.append(this.orgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatus:");
    sb.append(this.requestStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyStatus:");
    sb.append(this.applyStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestDttm:");
    if (this.requestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.requestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planLoanMoney:");
    sb.append(this.planLoanMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isClosed:");
    sb.append(this.isClosed);
    first = false;
    if (!first) sb.append(", ");
    sb.append("planLoanDate:");
    if (this.planLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.planLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectType:");
    sb.append(this.projectType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanRate:");
    sb.append(this.loanRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxLoanRate:");
    sb.append(this.maxLoanRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessCategory:");
    sb.append(this.businessCategory);
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaCode:");
    if (this.areaCode == null) {
      sb.append("null");
    } else {
      sb.append(this.areaCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaCodes:");
    if (this.areaCodes == null) {
      sb.append("null");
    } else {
      sb.append(this.areaCodes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatuList:");
    if (this.requestStatuList == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStatuList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyUserId:");
    sb.append(this.applyUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isNeedHandle:");
    sb.append(this.isNeedHandle);
    first = false;
    if (!first) sb.append(", ");
    sb.append("foreclosureStatus:");
    sb.append(this.foreclosureStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isReject:");
    sb.append(this.isReject);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isAssigned:");
    sb.append(this.isAssigned);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyUserName:");
    if (this.applyUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.applyUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endRequestDttm:");
    if (this.endRequestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.endRequestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanDays:");
    sb.append(this.loanDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    sb.append(this.productId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizProjectDTOStandardSchemeFactory implements SchemeFactory {
    public BizProjectDTOStandardScheme getScheme() {
      return new BizProjectDTOStandardScheme();
    }
  }

  private static class BizProjectDTOStandardScheme extends StandardScheme<BizProjectDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizProjectDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pmUserId = iprot.readI32();
              struct.setPmUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PM_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmUserName = iprot.readString();
              struct.setPmUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORG_CUSTOMER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCustomerName = iprot.readString();
              struct.setOrgCustomerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORG_CUSTOMER_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCustomerPhone = iprot.readString();
              struct.setOrgCustomerPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ORG_CUSTOMER_CARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCustomerCard = iprot.readString();
              struct.setOrgCustomerCardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgId = iprot.readI32();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REQUEST_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.requestStatus = iprot.readI32();
              struct.setRequestStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPLY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.applyStatus = iprot.readI32();
              struct.setApplyStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestDttm = iprot.readString();
              struct.setRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PLAN_LOAN_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.planLoanMoney = iprot.readDouble();
              struct.setPlanLoanMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // IS_CLOSED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isClosed = iprot.readI32();
              struct.setIsClosedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PLAN_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planLoanDate = iprot.readString();
              struct.setPlanLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PROJECT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectType = iprot.readI32();
              struct.setProjectTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LOAN_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanRate = iprot.readDouble();
              struct.setLoanRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // MAX_LOAN_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.maxLoanRate = iprot.readDouble();
              struct.setMaxLoanRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // BUSINESS_CATEGORY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.businessCategory = iprot.readI32();
              struct.setBusinessCategoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // AREA_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaCode = iprot.readString();
              struct.setAreaCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // AREA_CODES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.areaCodes = new ArrayList<String>(_list24.size);
                String _elem25;
                for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                {
                  _elem25 = iprot.readString();
                  struct.areaCodes.add(_elem25);
                }
                iprot.readListEnd();
              }
              struct.setAreaCodesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // REQUEST_STATU_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list27 = iprot.readListBegin();
                struct.requestStatuList = new ArrayList<Integer>(_list27.size);
                int _elem28;
                for (int _i29 = 0; _i29 < _list27.size; ++_i29)
                {
                  _elem28 = iprot.readI32();
                  struct.requestStatuList.add(_elem28);
                }
                iprot.readListEnd();
              }
              struct.setRequestStatuListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // APPLY_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.applyUserId = iprot.readI32();
              struct.setApplyUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // IS_NEED_HANDLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isNeedHandle = iprot.readI32();
              struct.setIsNeedHandleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // FORECLOSURE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.foreclosureStatus = iprot.readI32();
              struct.setForeclosureStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // IS_REJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isReject = iprot.readI32();
              struct.setIsRejectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // IS_ASSIGNED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isAssigned = iprot.readI32();
              struct.setIsAssignedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list30.size);
                int _elem31;
                for (int _i32 = 0; _i32 < _list30.size; ++_i32)
                {
                  _elem31 = iprot.readI32();
                  struct.userIds.add(_elem31);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // APPLY_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applyUserName = iprot.readString();
              struct.setApplyUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // END_REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endRequestDttm = iprot.readString();
              struct.setEndRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // LOAN_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loanDays = iprot.readI32();
              struct.setLoanDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizProjectDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PM_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.pmUserId);
      oprot.writeFieldEnd();
      if (struct.pmUserName != null) {
        oprot.writeFieldBegin(PM_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.pmUserName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCustomerName != null) {
        oprot.writeFieldBegin(ORG_CUSTOMER_NAME_FIELD_DESC);
        oprot.writeString(struct.orgCustomerName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCustomerPhone != null) {
        oprot.writeFieldBegin(ORG_CUSTOMER_PHONE_FIELD_DESC);
        oprot.writeString(struct.orgCustomerPhone);
        oprot.writeFieldEnd();
      }
      if (struct.orgCustomerCard != null) {
        oprot.writeFieldBegin(ORG_CUSTOMER_CARD_FIELD_DESC);
        oprot.writeString(struct.orgCustomerCard);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
      oprot.writeI32(struct.orgId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REQUEST_STATUS_FIELD_DESC);
      oprot.writeI32(struct.requestStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APPLY_STATUS_FIELD_DESC);
      oprot.writeI32(struct.applyStatus);
      oprot.writeFieldEnd();
      if (struct.requestDttm != null) {
        oprot.writeFieldBegin(REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.requestDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PLAN_LOAN_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.planLoanMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_CLOSED_FIELD_DESC);
      oprot.writeI32(struct.isClosed);
      oprot.writeFieldEnd();
      if (struct.planLoanDate != null) {
        oprot.writeFieldBegin(PLAN_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.planLoanDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROJECT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.projectType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_RATE_FIELD_DESC);
      oprot.writeDouble(struct.loanRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_LOAN_RATE_FIELD_DESC);
      oprot.writeDouble(struct.maxLoanRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUSINESS_CATEGORY_FIELD_DESC);
      oprot.writeI32(struct.businessCategory);
      oprot.writeFieldEnd();
      if (struct.areaCode != null) {
        oprot.writeFieldBegin(AREA_CODE_FIELD_DESC);
        oprot.writeString(struct.areaCode);
        oprot.writeFieldEnd();
      }
      if (struct.areaCodes != null) {
        oprot.writeFieldBegin(AREA_CODES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.areaCodes.size()));
          for (String _iter33 : struct.areaCodes)
          {
            oprot.writeString(_iter33);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.requestStatuList != null) {
        oprot.writeFieldBegin(REQUEST_STATU_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.requestStatuList.size()));
          for (int _iter34 : struct.requestStatuList)
          {
            oprot.writeI32(_iter34);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPLY_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.applyUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_NEED_HANDLE_FIELD_DESC);
      oprot.writeI32(struct.isNeedHandle);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FORECLOSURE_STATUS_FIELD_DESC);
      oprot.writeI32(struct.foreclosureStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_REJECT_FIELD_DESC);
      oprot.writeI32(struct.isReject);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ASSIGNED_FIELD_DESC);
      oprot.writeI32(struct.isAssigned);
      oprot.writeFieldEnd();
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter35 : struct.userIds)
          {
            oprot.writeI32(_iter35);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.applyUserName != null) {
        oprot.writeFieldBegin(APPLY_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.applyUserName);
        oprot.writeFieldEnd();
      }
      if (struct.endRequestDttm != null) {
        oprot.writeFieldBegin(END_REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.endRequestDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LOAN_DAYS_FIELD_DESC);
      oprot.writeI32(struct.loanDays);
      oprot.writeFieldEnd();
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeI32(struct.productId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizProjectDTOTupleSchemeFactory implements SchemeFactory {
    public BizProjectDTOTupleScheme getScheme() {
      return new BizProjectDTOTupleScheme();
    }
  }

  private static class BizProjectDTOTupleScheme extends TupleScheme<BizProjectDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizProjectDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(1);
      }
      if (struct.isSetProjectName()) {
        optionals.set(2);
      }
      if (struct.isSetOrgName()) {
        optionals.set(3);
      }
      if (struct.isSetPmUserId()) {
        optionals.set(4);
      }
      if (struct.isSetPmUserName()) {
        optionals.set(5);
      }
      if (struct.isSetOrgCustomerName()) {
        optionals.set(6);
      }
      if (struct.isSetOrgCustomerPhone()) {
        optionals.set(7);
      }
      if (struct.isSetOrgCustomerCard()) {
        optionals.set(8);
      }
      if (struct.isSetOrgId()) {
        optionals.set(9);
      }
      if (struct.isSetRequestStatus()) {
        optionals.set(10);
      }
      if (struct.isSetApplyStatus()) {
        optionals.set(11);
      }
      if (struct.isSetRequestDttm()) {
        optionals.set(12);
      }
      if (struct.isSetPlanLoanMoney()) {
        optionals.set(13);
      }
      if (struct.isSetIsClosed()) {
        optionals.set(14);
      }
      if (struct.isSetPlanLoanDate()) {
        optionals.set(15);
      }
      if (struct.isSetPage()) {
        optionals.set(16);
      }
      if (struct.isSetRows()) {
        optionals.set(17);
      }
      if (struct.isSetProjectType()) {
        optionals.set(18);
      }
      if (struct.isSetLoanRate()) {
        optionals.set(19);
      }
      if (struct.isSetMaxLoanRate()) {
        optionals.set(20);
      }
      if (struct.isSetBusinessCategory()) {
        optionals.set(21);
      }
      if (struct.isSetAreaCode()) {
        optionals.set(22);
      }
      if (struct.isSetAreaCodes()) {
        optionals.set(23);
      }
      if (struct.isSetRequestStatuList()) {
        optionals.set(24);
      }
      if (struct.isSetApplyUserId()) {
        optionals.set(25);
      }
      if (struct.isSetIsNeedHandle()) {
        optionals.set(26);
      }
      if (struct.isSetForeclosureStatus()) {
        optionals.set(27);
      }
      if (struct.isSetIsReject()) {
        optionals.set(28);
      }
      if (struct.isSetIsAssigned()) {
        optionals.set(29);
      }
      if (struct.isSetUserIds()) {
        optionals.set(30);
      }
      if (struct.isSetApplyUserName()) {
        optionals.set(31);
      }
      if (struct.isSetEndRequestDttm()) {
        optionals.set(32);
      }
      if (struct.isSetLoanDays()) {
        optionals.set(33);
      }
      if (struct.isSetProductName()) {
        optionals.set(34);
      }
      if (struct.isSetProductId()) {
        optionals.set(35);
      }
      oprot.writeBitSet(optionals, 36);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetPmUserId()) {
        oprot.writeI32(struct.pmUserId);
      }
      if (struct.isSetPmUserName()) {
        oprot.writeString(struct.pmUserName);
      }
      if (struct.isSetOrgCustomerName()) {
        oprot.writeString(struct.orgCustomerName);
      }
      if (struct.isSetOrgCustomerPhone()) {
        oprot.writeString(struct.orgCustomerPhone);
      }
      if (struct.isSetOrgCustomerCard()) {
        oprot.writeString(struct.orgCustomerCard);
      }
      if (struct.isSetOrgId()) {
        oprot.writeI32(struct.orgId);
      }
      if (struct.isSetRequestStatus()) {
        oprot.writeI32(struct.requestStatus);
      }
      if (struct.isSetApplyStatus()) {
        oprot.writeI32(struct.applyStatus);
      }
      if (struct.isSetRequestDttm()) {
        oprot.writeString(struct.requestDttm);
      }
      if (struct.isSetPlanLoanMoney()) {
        oprot.writeDouble(struct.planLoanMoney);
      }
      if (struct.isSetIsClosed()) {
        oprot.writeI32(struct.isClosed);
      }
      if (struct.isSetPlanLoanDate()) {
        oprot.writeString(struct.planLoanDate);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetProjectType()) {
        oprot.writeI32(struct.projectType);
      }
      if (struct.isSetLoanRate()) {
        oprot.writeDouble(struct.loanRate);
      }
      if (struct.isSetMaxLoanRate()) {
        oprot.writeDouble(struct.maxLoanRate);
      }
      if (struct.isSetBusinessCategory()) {
        oprot.writeI32(struct.businessCategory);
      }
      if (struct.isSetAreaCode()) {
        oprot.writeString(struct.areaCode);
      }
      if (struct.isSetAreaCodes()) {
        {
          oprot.writeI32(struct.areaCodes.size());
          for (String _iter36 : struct.areaCodes)
          {
            oprot.writeString(_iter36);
          }
        }
      }
      if (struct.isSetRequestStatuList()) {
        {
          oprot.writeI32(struct.requestStatuList.size());
          for (int _iter37 : struct.requestStatuList)
          {
            oprot.writeI32(_iter37);
          }
        }
      }
      if (struct.isSetApplyUserId()) {
        oprot.writeI32(struct.applyUserId);
      }
      if (struct.isSetIsNeedHandle()) {
        oprot.writeI32(struct.isNeedHandle);
      }
      if (struct.isSetForeclosureStatus()) {
        oprot.writeI32(struct.foreclosureStatus);
      }
      if (struct.isSetIsReject()) {
        oprot.writeI32(struct.isReject);
      }
      if (struct.isSetIsAssigned()) {
        oprot.writeI32(struct.isAssigned);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter38 : struct.userIds)
          {
            oprot.writeI32(_iter38);
          }
        }
      }
      if (struct.isSetApplyUserName()) {
        oprot.writeString(struct.applyUserName);
      }
      if (struct.isSetEndRequestDttm()) {
        oprot.writeString(struct.endRequestDttm);
      }
      if (struct.isSetLoanDays()) {
        oprot.writeI32(struct.loanDays);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetProductId()) {
        oprot.writeI32(struct.productId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizProjectDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(36);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.pmUserId = iprot.readI32();
        struct.setPmUserIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.pmUserName = iprot.readString();
        struct.setPmUserNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orgCustomerName = iprot.readString();
        struct.setOrgCustomerNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orgCustomerPhone = iprot.readString();
        struct.setOrgCustomerPhoneIsSet(true);
      }
      if (incoming.get(8)) {
        struct.orgCustomerCard = iprot.readString();
        struct.setOrgCustomerCardIsSet(true);
      }
      if (incoming.get(9)) {
        struct.orgId = iprot.readI32();
        struct.setOrgIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.requestStatus = iprot.readI32();
        struct.setRequestStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.applyStatus = iprot.readI32();
        struct.setApplyStatusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.requestDttm = iprot.readString();
        struct.setRequestDttmIsSet(true);
      }
      if (incoming.get(13)) {
        struct.planLoanMoney = iprot.readDouble();
        struct.setPlanLoanMoneyIsSet(true);
      }
      if (incoming.get(14)) {
        struct.isClosed = iprot.readI32();
        struct.setIsClosedIsSet(true);
      }
      if (incoming.get(15)) {
        struct.planLoanDate = iprot.readString();
        struct.setPlanLoanDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(17)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(18)) {
        struct.projectType = iprot.readI32();
        struct.setProjectTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.loanRate = iprot.readDouble();
        struct.setLoanRateIsSet(true);
      }
      if (incoming.get(20)) {
        struct.maxLoanRate = iprot.readDouble();
        struct.setMaxLoanRateIsSet(true);
      }
      if (incoming.get(21)) {
        struct.businessCategory = iprot.readI32();
        struct.setBusinessCategoryIsSet(true);
      }
      if (incoming.get(22)) {
        struct.areaCode = iprot.readString();
        struct.setAreaCodeIsSet(true);
      }
      if (incoming.get(23)) {
        {
          org.apache.thrift.protocol.TList _list39 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.areaCodes = new ArrayList<String>(_list39.size);
          String _elem40;
          for (int _i41 = 0; _i41 < _list39.size; ++_i41)
          {
            _elem40 = iprot.readString();
            struct.areaCodes.add(_elem40);
          }
        }
        struct.setAreaCodesIsSet(true);
      }
      if (incoming.get(24)) {
        {
          org.apache.thrift.protocol.TList _list42 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.requestStatuList = new ArrayList<Integer>(_list42.size);
          int _elem43;
          for (int _i44 = 0; _i44 < _list42.size; ++_i44)
          {
            _elem43 = iprot.readI32();
            struct.requestStatuList.add(_elem43);
          }
        }
        struct.setRequestStatuListIsSet(true);
      }
      if (incoming.get(25)) {
        struct.applyUserId = iprot.readI32();
        struct.setApplyUserIdIsSet(true);
      }
      if (incoming.get(26)) {
        struct.isNeedHandle = iprot.readI32();
        struct.setIsNeedHandleIsSet(true);
      }
      if (incoming.get(27)) {
        struct.foreclosureStatus = iprot.readI32();
        struct.setForeclosureStatusIsSet(true);
      }
      if (incoming.get(28)) {
        struct.isReject = iprot.readI32();
        struct.setIsRejectIsSet(true);
      }
      if (incoming.get(29)) {
        struct.isAssigned = iprot.readI32();
        struct.setIsAssignedIsSet(true);
      }
      if (incoming.get(30)) {
        {
          org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list45.size);
          int _elem46;
          for (int _i47 = 0; _i47 < _list45.size; ++_i47)
          {
            _elem46 = iprot.readI32();
            struct.userIds.add(_elem46);
          }
        }
        struct.setUserIdsIsSet(true);
      }
      if (incoming.get(31)) {
        struct.applyUserName = iprot.readString();
        struct.setApplyUserNameIsSet(true);
      }
      if (incoming.get(32)) {
        struct.endRequestDttm = iprot.readString();
        struct.setEndRequestDttmIsSet(true);
      }
      if (incoming.get(33)) {
        struct.loanDays = iprot.readI32();
        struct.setLoanDaysIsSet(true);
      }
      if (incoming.get(34)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(35)) {
        struct.productId = iprot.readI32();
        struct.setProductIdIsSet(true);
      }
    }
  }

}

