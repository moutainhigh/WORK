/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.org;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-5-22")
public class OrgAssetsCooperationInfo implements org.apache.thrift.TBase<OrgAssetsCooperationInfo, OrgAssetsCooperationInfo._Fields>, java.io.Serializable, Cloneable, Comparable<OrgAssetsCooperationInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgAssetsCooperationInfo");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contact", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField AUDIT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStatus", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField COOPERATE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("cooperateStatus", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField BIZ_ADVISER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bizAdviserId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("level", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField CREATOR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("creatorId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField CREATED_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createdDate", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("updateId", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField UPDATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CUS_COM_BASE_FIELD_DESC = new org.apache.thrift.protocol.TField("cusComBase", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField ORG_COOPERATE_CITYS_FIELD_DESC = new org.apache.thrift.protocol.TField("OrgCooperateCitys", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField PAGE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("pageInfo", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField LOGIN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginName", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField PARTNER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerName", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField ORG_USER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("orgUserInfo", org.apache.thrift.protocol.TType.STRUCT, (short)26);
  private static final org.apache.thrift.protocol.TField AUDIT_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("auditDesc", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField MSG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("msgCode", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField ORG_COOPERATE_CITY_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCooperateCityInfo", org.apache.thrift.protocol.TType.STRUCT, (short)29);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgAssetsCooperationInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgAssetsCooperationInfoTupleSchemeFactory());
  }

  public int pid; // required
  public String orgName; // required
  public String code; // required
  public String address; // required
  public String email; // required
  public String contact; // required
  public String phone; // required
  public int auditStatus; // required
  public int cooperateStatus; // required
  public int bizAdviserId; // required
  public int partnerId; // required
  public int level; // required
  public int creatorId; // required
  public String createdDate; // required
  public int updateId; // required
  public String updateDate; // required
  public String remark; // required
  public com.xlkfinance.bms.rpc.customer.CusComBase cusComBase; // required
  public List<OrgCooperateCityInfo> OrgCooperateCitys; // required
  public com.qfang.xk.aom.rpc.system.PageInfo pageInfo; // required
  public int page; // required
  public int rows; // required
  public String loginName; // required
  public String partnerName; // required
  public int status; // required
  public com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo; // required
  public String auditDesc; // required
  public String msgCode; // required
  public OrgCooperateCityInfo orgCooperateCityInfo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    ORG_NAME((short)2, "orgName"),
    CODE((short)3, "code"),
    ADDRESS((short)4, "address"),
    EMAIL((short)5, "email"),
    CONTACT((short)6, "contact"),
    PHONE((short)7, "phone"),
    AUDIT_STATUS((short)8, "auditStatus"),
    COOPERATE_STATUS((short)9, "cooperateStatus"),
    BIZ_ADVISER_ID((short)10, "bizAdviserId"),
    PARTNER_ID((short)11, "partnerId"),
    LEVEL((short)12, "level"),
    CREATOR_ID((short)13, "creatorId"),
    CREATED_DATE((short)14, "createdDate"),
    UPDATE_ID((short)15, "updateId"),
    UPDATE_DATE((short)16, "updateDate"),
    REMARK((short)17, "remark"),
    CUS_COM_BASE((short)18, "cusComBase"),
    ORG_COOPERATE_CITYS((short)19, "OrgCooperateCitys"),
    PAGE_INFO((short)20, "pageInfo"),
    PAGE((short)21, "page"),
    ROWS((short)22, "rows"),
    LOGIN_NAME((short)23, "loginName"),
    PARTNER_NAME((short)24, "partnerName"),
    STATUS((short)25, "status"),
    ORG_USER_INFO((short)26, "orgUserInfo"),
    AUDIT_DESC((short)27, "auditDesc"),
    MSG_CODE((short)28, "msgCode"),
    ORG_COOPERATE_CITY_INFO((short)29, "orgCooperateCityInfo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // ORG_NAME
          return ORG_NAME;
        case 3: // CODE
          return CODE;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // EMAIL
          return EMAIL;
        case 6: // CONTACT
          return CONTACT;
        case 7: // PHONE
          return PHONE;
        case 8: // AUDIT_STATUS
          return AUDIT_STATUS;
        case 9: // COOPERATE_STATUS
          return COOPERATE_STATUS;
        case 10: // BIZ_ADVISER_ID
          return BIZ_ADVISER_ID;
        case 11: // PARTNER_ID
          return PARTNER_ID;
        case 12: // LEVEL
          return LEVEL;
        case 13: // CREATOR_ID
          return CREATOR_ID;
        case 14: // CREATED_DATE
          return CREATED_DATE;
        case 15: // UPDATE_ID
          return UPDATE_ID;
        case 16: // UPDATE_DATE
          return UPDATE_DATE;
        case 17: // REMARK
          return REMARK;
        case 18: // CUS_COM_BASE
          return CUS_COM_BASE;
        case 19: // ORG_COOPERATE_CITYS
          return ORG_COOPERATE_CITYS;
        case 20: // PAGE_INFO
          return PAGE_INFO;
        case 21: // PAGE
          return PAGE;
        case 22: // ROWS
          return ROWS;
        case 23: // LOGIN_NAME
          return LOGIN_NAME;
        case 24: // PARTNER_NAME
          return PARTNER_NAME;
        case 25: // STATUS
          return STATUS;
        case 26: // ORG_USER_INFO
          return ORG_USER_INFO;
        case 27: // AUDIT_DESC
          return AUDIT_DESC;
        case 28: // MSG_CODE
          return MSG_CODE;
        case 29: // ORG_COOPERATE_CITY_INFO
          return ORG_COOPERATE_CITY_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __AUDITSTATUS_ISSET_ID = 1;
  private static final int __COOPERATESTATUS_ISSET_ID = 2;
  private static final int __BIZADVISERID_ISSET_ID = 3;
  private static final int __PARTNERID_ISSET_ID = 4;
  private static final int __LEVEL_ISSET_ID = 5;
  private static final int __CREATORID_ISSET_ID = 6;
  private static final int __UPDATEID_ISSET_ID = 7;
  private static final int __PAGE_ISSET_ID = 8;
  private static final int __ROWS_ISSET_ID = 9;
  private static final int __STATUS_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODE, new org.apache.thrift.meta_data.FieldMetaData("code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT, new org.apache.thrift.meta_data.FieldMetaData("contact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("auditStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COOPERATE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("cooperateStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BIZ_ADVISER_ID, new org.apache.thrift.meta_data.FieldMetaData("bizAdviserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LEVEL, new org.apache.thrift.meta_data.FieldMetaData("level", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATOR_ID, new org.apache.thrift.meta_data.FieldMetaData("creatorId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATED_DATE, new org.apache.thrift.meta_data.FieldMetaData("createdDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_ID, new org.apache.thrift.meta_data.FieldMetaData("updateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("updateDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_COM_BASE, new org.apache.thrift.meta_data.FieldMetaData("cusComBase", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.xlkfinance.bms.rpc.customer.CusComBase.class)));
    tmpMap.put(_Fields.ORG_COOPERATE_CITYS, new org.apache.thrift.meta_data.FieldMetaData("OrgCooperateCitys", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "OrgCooperateCityInfo"))));
    tmpMap.put(_Fields.PAGE_INFO, new org.apache.thrift.meta_data.FieldMetaData("pageInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.qfang.xk.aom.rpc.system.PageInfo.class)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOGIN_NAME, new org.apache.thrift.meta_data.FieldMetaData("loginName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_NAME, new org.apache.thrift.meta_data.FieldMetaData("partnerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_USER_INFO, new org.apache.thrift.meta_data.FieldMetaData("orgUserInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.qfang.xk.aom.rpc.system.OrgUserInfo.class)));
    tmpMap.put(_Fields.AUDIT_DESC, new org.apache.thrift.meta_data.FieldMetaData("auditDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MSG_CODE, new org.apache.thrift.meta_data.FieldMetaData("msgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_COOPERATE_CITY_INFO, new org.apache.thrift.meta_data.FieldMetaData("orgCooperateCityInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "OrgCooperateCityInfo")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgAssetsCooperationInfo.class, metaDataMap);
  }

  public OrgAssetsCooperationInfo() {
  }

  public OrgAssetsCooperationInfo(
    int pid,
    String orgName,
    String code,
    String address,
    String email,
    String contact,
    String phone,
    int auditStatus,
    int cooperateStatus,
    int bizAdviserId,
    int partnerId,
    int level,
    int creatorId,
    String createdDate,
    int updateId,
    String updateDate,
    String remark,
    com.xlkfinance.bms.rpc.customer.CusComBase cusComBase,
    List<OrgCooperateCityInfo> OrgCooperateCitys,
    com.qfang.xk.aom.rpc.system.PageInfo pageInfo,
    int page,
    int rows,
    String loginName,
    String partnerName,
    int status,
    com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo,
    String auditDesc,
    String msgCode,
    OrgCooperateCityInfo orgCooperateCityInfo)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.orgName = orgName;
    this.code = code;
    this.address = address;
    this.email = email;
    this.contact = contact;
    this.phone = phone;
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    this.cooperateStatus = cooperateStatus;
    setCooperateStatusIsSet(true);
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    this.level = level;
    setLevelIsSet(true);
    this.creatorId = creatorId;
    setCreatorIdIsSet(true);
    this.createdDate = createdDate;
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    this.updateDate = updateDate;
    this.remark = remark;
    this.cusComBase = cusComBase;
    this.OrgCooperateCitys = OrgCooperateCitys;
    this.pageInfo = pageInfo;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.loginName = loginName;
    this.partnerName = partnerName;
    this.status = status;
    setStatusIsSet(true);
    this.orgUserInfo = orgUserInfo;
    this.auditDesc = auditDesc;
    this.msgCode = msgCode;
    this.orgCooperateCityInfo = orgCooperateCityInfo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgAssetsCooperationInfo(OrgAssetsCooperationInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetCode()) {
      this.code = other.code;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetContact()) {
      this.contact = other.contact;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.auditStatus = other.auditStatus;
    this.cooperateStatus = other.cooperateStatus;
    this.bizAdviserId = other.bizAdviserId;
    this.partnerId = other.partnerId;
    this.level = other.level;
    this.creatorId = other.creatorId;
    if (other.isSetCreatedDate()) {
      this.createdDate = other.createdDate;
    }
    this.updateId = other.updateId;
    if (other.isSetUpdateDate()) {
      this.updateDate = other.updateDate;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetCusComBase()) {
      this.cusComBase = new com.xlkfinance.bms.rpc.customer.CusComBase(other.cusComBase);
    }
    if (other.isSetOrgCooperateCitys()) {
      List<OrgCooperateCityInfo> __this__OrgCooperateCitys = new ArrayList<OrgCooperateCityInfo>(other.OrgCooperateCitys.size());
      for (OrgCooperateCityInfo other_element : other.OrgCooperateCitys) {
        __this__OrgCooperateCitys.add(other_element);
      }
      this.OrgCooperateCitys = __this__OrgCooperateCitys;
    }
    if (other.isSetPageInfo()) {
      this.pageInfo = new com.qfang.xk.aom.rpc.system.PageInfo(other.pageInfo);
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetLoginName()) {
      this.loginName = other.loginName;
    }
    if (other.isSetPartnerName()) {
      this.partnerName = other.partnerName;
    }
    this.status = other.status;
    if (other.isSetOrgUserInfo()) {
      this.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo(other.orgUserInfo);
    }
    if (other.isSetAuditDesc()) {
      this.auditDesc = other.auditDesc;
    }
    if (other.isSetMsgCode()) {
      this.msgCode = other.msgCode;
    }
    if (other.isSetOrgCooperateCityInfo()) {
      this.orgCooperateCityInfo = other.orgCooperateCityInfo;
    }
  }

  public OrgAssetsCooperationInfo deepCopy() {
    return new OrgAssetsCooperationInfo(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.orgName = null;
    this.code = null;
    this.address = null;
    this.email = null;
    this.contact = null;
    this.phone = null;
    setAuditStatusIsSet(false);
    this.auditStatus = 0;
    setCooperateStatusIsSet(false);
    this.cooperateStatus = 0;
    setBizAdviserIdIsSet(false);
    this.bizAdviserId = 0;
    setPartnerIdIsSet(false);
    this.partnerId = 0;
    setLevelIsSet(false);
    this.level = 0;
    setCreatorIdIsSet(false);
    this.creatorId = 0;
    this.createdDate = null;
    setUpdateIdIsSet(false);
    this.updateId = 0;
    this.updateDate = null;
    this.remark = null;
    this.cusComBase = null;
    this.OrgCooperateCitys = null;
    this.pageInfo = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.loginName = null;
    this.partnerName = null;
    setStatusIsSet(false);
    this.status = 0;
    this.orgUserInfo = null;
    this.auditDesc = null;
    this.msgCode = null;
    this.orgCooperateCityInfo = null;
  }

  public int getPid() {
    return this.pid;
  }

  public OrgAssetsCooperationInfo setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getOrgName() {
    return this.orgName;
  }

  public OrgAssetsCooperationInfo setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getCode() {
    return this.code;
  }

  public OrgAssetsCooperationInfo setCode(String code) {
    this.code = code;
    return this;
  }

  public void unsetCode() {
    this.code = null;
  }

  /** Returns true if field code is set (has been assigned a value) and false otherwise */
  public boolean isSetCode() {
    return this.code != null;
  }

  public void setCodeIsSet(boolean value) {
    if (!value) {
      this.code = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public OrgAssetsCooperationInfo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public OrgAssetsCooperationInfo setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getContact() {
    return this.contact;
  }

  public OrgAssetsCooperationInfo setContact(String contact) {
    this.contact = contact;
    return this;
  }

  public void unsetContact() {
    this.contact = null;
  }

  /** Returns true if field contact is set (has been assigned a value) and false otherwise */
  public boolean isSetContact() {
    return this.contact != null;
  }

  public void setContactIsSet(boolean value) {
    if (!value) {
      this.contact = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public OrgAssetsCooperationInfo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public int getAuditStatus() {
    return this.auditStatus;
  }

  public OrgAssetsCooperationInfo setAuditStatus(int auditStatus) {
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    return this;
  }

  public void unsetAuditStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  /** Returns true if field auditStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  public void setAuditStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID, value);
  }

  public int getCooperateStatus() {
    return this.cooperateStatus;
  }

  public OrgAssetsCooperationInfo setCooperateStatus(int cooperateStatus) {
    this.cooperateStatus = cooperateStatus;
    setCooperateStatusIsSet(true);
    return this;
  }

  public void unsetCooperateStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID);
  }

  /** Returns true if field cooperateStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCooperateStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID);
  }

  public void setCooperateStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID, value);
  }

  public int getBizAdviserId() {
    return this.bizAdviserId;
  }

  public OrgAssetsCooperationInfo setBizAdviserId(int bizAdviserId) {
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    return this;
  }

  public void unsetBizAdviserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  /** Returns true if field bizAdviserId is set (has been assigned a value) and false otherwise */
  public boolean isSetBizAdviserId() {
    return EncodingUtils.testBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  public void setBizAdviserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIZADVISERID_ISSET_ID, value);
  }

  public int getPartnerId() {
    return this.partnerId;
  }

  public OrgAssetsCooperationInfo setPartnerId(int partnerId) {
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    return this;
  }

  public void unsetPartnerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  public void setPartnerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERID_ISSET_ID, value);
  }

  public int getLevel() {
    return this.level;
  }

  public OrgAssetsCooperationInfo setLevel(int level) {
    this.level = level;
    setLevelIsSet(true);
    return this;
  }

  public void unsetLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  /** Returns true if field level is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  public void setLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LEVEL_ISSET_ID, value);
  }

  public int getCreatorId() {
    return this.creatorId;
  }

  public OrgAssetsCooperationInfo setCreatorId(int creatorId) {
    this.creatorId = creatorId;
    setCreatorIdIsSet(true);
    return this;
  }

  public void unsetCreatorId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATORID_ISSET_ID);
  }

  /** Returns true if field creatorId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatorId() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATORID_ISSET_ID);
  }

  public void setCreatorIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATORID_ISSET_ID, value);
  }

  public String getCreatedDate() {
    return this.createdDate;
  }

  public OrgAssetsCooperationInfo setCreatedDate(String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  public void unsetCreatedDate() {
    this.createdDate = null;
  }

  /** Returns true if field createdDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedDate() {
    return this.createdDate != null;
  }

  public void setCreatedDateIsSet(boolean value) {
    if (!value) {
      this.createdDate = null;
    }
  }

  public int getUpdateId() {
    return this.updateId;
  }

  public OrgAssetsCooperationInfo setUpdateId(int updateId) {
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    return this;
  }

  public void unsetUpdateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  /** Returns true if field updateId is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateId() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  public void setUpdateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEID_ISSET_ID, value);
  }

  public String getUpdateDate() {
    return this.updateDate;
  }

  public OrgAssetsCooperationInfo setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  public void unsetUpdateDate() {
    this.updateDate = null;
  }

  /** Returns true if field updateDate is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateDate() {
    return this.updateDate != null;
  }

  public void setUpdateDateIsSet(boolean value) {
    if (!value) {
      this.updateDate = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public OrgAssetsCooperationInfo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public com.xlkfinance.bms.rpc.customer.CusComBase getCusComBase() {
    return this.cusComBase;
  }

  public OrgAssetsCooperationInfo setCusComBase(com.xlkfinance.bms.rpc.customer.CusComBase cusComBase) {
    this.cusComBase = cusComBase;
    return this;
  }

  public void unsetCusComBase() {
    this.cusComBase = null;
  }

  /** Returns true if field cusComBase is set (has been assigned a value) and false otherwise */
  public boolean isSetCusComBase() {
    return this.cusComBase != null;
  }

  public void setCusComBaseIsSet(boolean value) {
    if (!value) {
      this.cusComBase = null;
    }
  }

  public int getOrgCooperateCitysSize() {
    return (this.OrgCooperateCitys == null) ? 0 : this.OrgCooperateCitys.size();
  }

  public java.util.Iterator<OrgCooperateCityInfo> getOrgCooperateCitysIterator() {
    return (this.OrgCooperateCitys == null) ? null : this.OrgCooperateCitys.iterator();
  }

  public void addToOrgCooperateCitys(OrgCooperateCityInfo elem) {
    if (this.OrgCooperateCitys == null) {
      this.OrgCooperateCitys = new ArrayList<OrgCooperateCityInfo>();
    }
    this.OrgCooperateCitys.add(elem);
  }

  public List<OrgCooperateCityInfo> getOrgCooperateCitys() {
    return this.OrgCooperateCitys;
  }

  public OrgAssetsCooperationInfo setOrgCooperateCitys(List<OrgCooperateCityInfo> OrgCooperateCitys) {
    this.OrgCooperateCitys = OrgCooperateCitys;
    return this;
  }

  public void unsetOrgCooperateCitys() {
    this.OrgCooperateCitys = null;
  }

  /** Returns true if field OrgCooperateCitys is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCooperateCitys() {
    return this.OrgCooperateCitys != null;
  }

  public void setOrgCooperateCitysIsSet(boolean value) {
    if (!value) {
      this.OrgCooperateCitys = null;
    }
  }

  public com.qfang.xk.aom.rpc.system.PageInfo getPageInfo() {
    return this.pageInfo;
  }

  public OrgAssetsCooperationInfo setPageInfo(com.qfang.xk.aom.rpc.system.PageInfo pageInfo) {
    this.pageInfo = pageInfo;
    return this;
  }

  public void unsetPageInfo() {
    this.pageInfo = null;
  }

  /** Returns true if field pageInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetPageInfo() {
    return this.pageInfo != null;
  }

  public void setPageInfoIsSet(boolean value) {
    if (!value) {
      this.pageInfo = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public OrgAssetsCooperationInfo setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public OrgAssetsCooperationInfo setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getLoginName() {
    return this.loginName;
  }

  public OrgAssetsCooperationInfo setLoginName(String loginName) {
    this.loginName = loginName;
    return this;
  }

  public void unsetLoginName() {
    this.loginName = null;
  }

  /** Returns true if field loginName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginName() {
    return this.loginName != null;
  }

  public void setLoginNameIsSet(boolean value) {
    if (!value) {
      this.loginName = null;
    }
  }

  public String getPartnerName() {
    return this.partnerName;
  }

  public OrgAssetsCooperationInfo setPartnerName(String partnerName) {
    this.partnerName = partnerName;
    return this;
  }

  public void unsetPartnerName() {
    this.partnerName = null;
  }

  /** Returns true if field partnerName is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerName() {
    return this.partnerName != null;
  }

  public void setPartnerNameIsSet(boolean value) {
    if (!value) {
      this.partnerName = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public OrgAssetsCooperationInfo setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public com.qfang.xk.aom.rpc.system.OrgUserInfo getOrgUserInfo() {
    return this.orgUserInfo;
  }

  public OrgAssetsCooperationInfo setOrgUserInfo(com.qfang.xk.aom.rpc.system.OrgUserInfo orgUserInfo) {
    this.orgUserInfo = orgUserInfo;
    return this;
  }

  public void unsetOrgUserInfo() {
    this.orgUserInfo = null;
  }

  /** Returns true if field orgUserInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgUserInfo() {
    return this.orgUserInfo != null;
  }

  public void setOrgUserInfoIsSet(boolean value) {
    if (!value) {
      this.orgUserInfo = null;
    }
  }

  public String getAuditDesc() {
    return this.auditDesc;
  }

  public OrgAssetsCooperationInfo setAuditDesc(String auditDesc) {
    this.auditDesc = auditDesc;
    return this;
  }

  public void unsetAuditDesc() {
    this.auditDesc = null;
  }

  /** Returns true if field auditDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditDesc() {
    return this.auditDesc != null;
  }

  public void setAuditDescIsSet(boolean value) {
    if (!value) {
      this.auditDesc = null;
    }
  }

  public String getMsgCode() {
    return this.msgCode;
  }

  public OrgAssetsCooperationInfo setMsgCode(String msgCode) {
    this.msgCode = msgCode;
    return this;
  }

  public void unsetMsgCode() {
    this.msgCode = null;
  }

  /** Returns true if field msgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetMsgCode() {
    return this.msgCode != null;
  }

  public void setMsgCodeIsSet(boolean value) {
    if (!value) {
      this.msgCode = null;
    }
  }

  public OrgCooperateCityInfo getOrgCooperateCityInfo() {
    return this.orgCooperateCityInfo;
  }

  public OrgAssetsCooperationInfo setOrgCooperateCityInfo(OrgCooperateCityInfo orgCooperateCityInfo) {
    this.orgCooperateCityInfo = orgCooperateCityInfo;
    return this;
  }

  public void unsetOrgCooperateCityInfo() {
    this.orgCooperateCityInfo = null;
  }

  /** Returns true if field orgCooperateCityInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCooperateCityInfo() {
    return this.orgCooperateCityInfo != null;
  }

  public void setOrgCooperateCityInfoIsSet(boolean value) {
    if (!value) {
      this.orgCooperateCityInfo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case CODE:
      if (value == null) {
        unsetCode();
      } else {
        setCode((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case CONTACT:
      if (value == null) {
        unsetContact();
      } else {
        setContact((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case AUDIT_STATUS:
      if (value == null) {
        unsetAuditStatus();
      } else {
        setAuditStatus((Integer)value);
      }
      break;

    case COOPERATE_STATUS:
      if (value == null) {
        unsetCooperateStatus();
      } else {
        setCooperateStatus((Integer)value);
      }
      break;

    case BIZ_ADVISER_ID:
      if (value == null) {
        unsetBizAdviserId();
      } else {
        setBizAdviserId((Integer)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((Integer)value);
      }
      break;

    case LEVEL:
      if (value == null) {
        unsetLevel();
      } else {
        setLevel((Integer)value);
      }
      break;

    case CREATOR_ID:
      if (value == null) {
        unsetCreatorId();
      } else {
        setCreatorId((Integer)value);
      }
      break;

    case CREATED_DATE:
      if (value == null) {
        unsetCreatedDate();
      } else {
        setCreatedDate((String)value);
      }
      break;

    case UPDATE_ID:
      if (value == null) {
        unsetUpdateId();
      } else {
        setUpdateId((Integer)value);
      }
      break;

    case UPDATE_DATE:
      if (value == null) {
        unsetUpdateDate();
      } else {
        setUpdateDate((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case CUS_COM_BASE:
      if (value == null) {
        unsetCusComBase();
      } else {
        setCusComBase((com.xlkfinance.bms.rpc.customer.CusComBase)value);
      }
      break;

    case ORG_COOPERATE_CITYS:
      if (value == null) {
        unsetOrgCooperateCitys();
      } else {
        setOrgCooperateCitys((List<OrgCooperateCityInfo>)value);
      }
      break;

    case PAGE_INFO:
      if (value == null) {
        unsetPageInfo();
      } else {
        setPageInfo((com.qfang.xk.aom.rpc.system.PageInfo)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case LOGIN_NAME:
      if (value == null) {
        unsetLoginName();
      } else {
        setLoginName((String)value);
      }
      break;

    case PARTNER_NAME:
      if (value == null) {
        unsetPartnerName();
      } else {
        setPartnerName((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case ORG_USER_INFO:
      if (value == null) {
        unsetOrgUserInfo();
      } else {
        setOrgUserInfo((com.qfang.xk.aom.rpc.system.OrgUserInfo)value);
      }
      break;

    case AUDIT_DESC:
      if (value == null) {
        unsetAuditDesc();
      } else {
        setAuditDesc((String)value);
      }
      break;

    case MSG_CODE:
      if (value == null) {
        unsetMsgCode();
      } else {
        setMsgCode((String)value);
      }
      break;

    case ORG_COOPERATE_CITY_INFO:
      if (value == null) {
        unsetOrgCooperateCityInfo();
      } else {
        setOrgCooperateCityInfo((OrgCooperateCityInfo)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case ORG_NAME:
      return getOrgName();

    case CODE:
      return getCode();

    case ADDRESS:
      return getAddress();

    case EMAIL:
      return getEmail();

    case CONTACT:
      return getContact();

    case PHONE:
      return getPhone();

    case AUDIT_STATUS:
      return Integer.valueOf(getAuditStatus());

    case COOPERATE_STATUS:
      return Integer.valueOf(getCooperateStatus());

    case BIZ_ADVISER_ID:
      return Integer.valueOf(getBizAdviserId());

    case PARTNER_ID:
      return Integer.valueOf(getPartnerId());

    case LEVEL:
      return Integer.valueOf(getLevel());

    case CREATOR_ID:
      return Integer.valueOf(getCreatorId());

    case CREATED_DATE:
      return getCreatedDate();

    case UPDATE_ID:
      return Integer.valueOf(getUpdateId());

    case UPDATE_DATE:
      return getUpdateDate();

    case REMARK:
      return getRemark();

    case CUS_COM_BASE:
      return getCusComBase();

    case ORG_COOPERATE_CITYS:
      return getOrgCooperateCitys();

    case PAGE_INFO:
      return getPageInfo();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case LOGIN_NAME:
      return getLoginName();

    case PARTNER_NAME:
      return getPartnerName();

    case STATUS:
      return Integer.valueOf(getStatus());

    case ORG_USER_INFO:
      return getOrgUserInfo();

    case AUDIT_DESC:
      return getAuditDesc();

    case MSG_CODE:
      return getMsgCode();

    case ORG_COOPERATE_CITY_INFO:
      return getOrgCooperateCityInfo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case ORG_NAME:
      return isSetOrgName();
    case CODE:
      return isSetCode();
    case ADDRESS:
      return isSetAddress();
    case EMAIL:
      return isSetEmail();
    case CONTACT:
      return isSetContact();
    case PHONE:
      return isSetPhone();
    case AUDIT_STATUS:
      return isSetAuditStatus();
    case COOPERATE_STATUS:
      return isSetCooperateStatus();
    case BIZ_ADVISER_ID:
      return isSetBizAdviserId();
    case PARTNER_ID:
      return isSetPartnerId();
    case LEVEL:
      return isSetLevel();
    case CREATOR_ID:
      return isSetCreatorId();
    case CREATED_DATE:
      return isSetCreatedDate();
    case UPDATE_ID:
      return isSetUpdateId();
    case UPDATE_DATE:
      return isSetUpdateDate();
    case REMARK:
      return isSetRemark();
    case CUS_COM_BASE:
      return isSetCusComBase();
    case ORG_COOPERATE_CITYS:
      return isSetOrgCooperateCitys();
    case PAGE_INFO:
      return isSetPageInfo();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case LOGIN_NAME:
      return isSetLoginName();
    case PARTNER_NAME:
      return isSetPartnerName();
    case STATUS:
      return isSetStatus();
    case ORG_USER_INFO:
      return isSetOrgUserInfo();
    case AUDIT_DESC:
      return isSetAuditDesc();
    case MSG_CODE:
      return isSetMsgCode();
    case ORG_COOPERATE_CITY_INFO:
      return isSetOrgCooperateCityInfo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgAssetsCooperationInfo)
      return this.equals((OrgAssetsCooperationInfo)that);
    return false;
  }

  public boolean equals(OrgAssetsCooperationInfo that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_code = true && this.isSetCode();
    boolean that_present_code = true && that.isSetCode();
    if (this_present_code || that_present_code) {
      if (!(this_present_code && that_present_code))
        return false;
      if (!this.code.equals(that.code))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_contact = true && this.isSetContact();
    boolean that_present_contact = true && that.isSetContact();
    if (this_present_contact || that_present_contact) {
      if (!(this_present_contact && that_present_contact))
        return false;
      if (!this.contact.equals(that.contact))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_auditStatus = true;
    boolean that_present_auditStatus = true;
    if (this_present_auditStatus || that_present_auditStatus) {
      if (!(this_present_auditStatus && that_present_auditStatus))
        return false;
      if (this.auditStatus != that.auditStatus)
        return false;
    }

    boolean this_present_cooperateStatus = true;
    boolean that_present_cooperateStatus = true;
    if (this_present_cooperateStatus || that_present_cooperateStatus) {
      if (!(this_present_cooperateStatus && that_present_cooperateStatus))
        return false;
      if (this.cooperateStatus != that.cooperateStatus)
        return false;
    }

    boolean this_present_bizAdviserId = true;
    boolean that_present_bizAdviserId = true;
    if (this_present_bizAdviserId || that_present_bizAdviserId) {
      if (!(this_present_bizAdviserId && that_present_bizAdviserId))
        return false;
      if (this.bizAdviserId != that.bizAdviserId)
        return false;
    }

    boolean this_present_partnerId = true;
    boolean that_present_partnerId = true;
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (this.partnerId != that.partnerId)
        return false;
    }

    boolean this_present_level = true;
    boolean that_present_level = true;
    if (this_present_level || that_present_level) {
      if (!(this_present_level && that_present_level))
        return false;
      if (this.level != that.level)
        return false;
    }

    boolean this_present_creatorId = true;
    boolean that_present_creatorId = true;
    if (this_present_creatorId || that_present_creatorId) {
      if (!(this_present_creatorId && that_present_creatorId))
        return false;
      if (this.creatorId != that.creatorId)
        return false;
    }

    boolean this_present_createdDate = true && this.isSetCreatedDate();
    boolean that_present_createdDate = true && that.isSetCreatedDate();
    if (this_present_createdDate || that_present_createdDate) {
      if (!(this_present_createdDate && that_present_createdDate))
        return false;
      if (!this.createdDate.equals(that.createdDate))
        return false;
    }

    boolean this_present_updateId = true;
    boolean that_present_updateId = true;
    if (this_present_updateId || that_present_updateId) {
      if (!(this_present_updateId && that_present_updateId))
        return false;
      if (this.updateId != that.updateId)
        return false;
    }

    boolean this_present_updateDate = true && this.isSetUpdateDate();
    boolean that_present_updateDate = true && that.isSetUpdateDate();
    if (this_present_updateDate || that_present_updateDate) {
      if (!(this_present_updateDate && that_present_updateDate))
        return false;
      if (!this.updateDate.equals(that.updateDate))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_cusComBase = true && this.isSetCusComBase();
    boolean that_present_cusComBase = true && that.isSetCusComBase();
    if (this_present_cusComBase || that_present_cusComBase) {
      if (!(this_present_cusComBase && that_present_cusComBase))
        return false;
      if (!this.cusComBase.equals(that.cusComBase))
        return false;
    }

    boolean this_present_OrgCooperateCitys = true && this.isSetOrgCooperateCitys();
    boolean that_present_OrgCooperateCitys = true && that.isSetOrgCooperateCitys();
    if (this_present_OrgCooperateCitys || that_present_OrgCooperateCitys) {
      if (!(this_present_OrgCooperateCitys && that_present_OrgCooperateCitys))
        return false;
      if (!this.OrgCooperateCitys.equals(that.OrgCooperateCitys))
        return false;
    }

    boolean this_present_pageInfo = true && this.isSetPageInfo();
    boolean that_present_pageInfo = true && that.isSetPageInfo();
    if (this_present_pageInfo || that_present_pageInfo) {
      if (!(this_present_pageInfo && that_present_pageInfo))
        return false;
      if (!this.pageInfo.equals(that.pageInfo))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_loginName = true && this.isSetLoginName();
    boolean that_present_loginName = true && that.isSetLoginName();
    if (this_present_loginName || that_present_loginName) {
      if (!(this_present_loginName && that_present_loginName))
        return false;
      if (!this.loginName.equals(that.loginName))
        return false;
    }

    boolean this_present_partnerName = true && this.isSetPartnerName();
    boolean that_present_partnerName = true && that.isSetPartnerName();
    if (this_present_partnerName || that_present_partnerName) {
      if (!(this_present_partnerName && that_present_partnerName))
        return false;
      if (!this.partnerName.equals(that.partnerName))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_orgUserInfo = true && this.isSetOrgUserInfo();
    boolean that_present_orgUserInfo = true && that.isSetOrgUserInfo();
    if (this_present_orgUserInfo || that_present_orgUserInfo) {
      if (!(this_present_orgUserInfo && that_present_orgUserInfo))
        return false;
      if (!this.orgUserInfo.equals(that.orgUserInfo))
        return false;
    }

    boolean this_present_auditDesc = true && this.isSetAuditDesc();
    boolean that_present_auditDesc = true && that.isSetAuditDesc();
    if (this_present_auditDesc || that_present_auditDesc) {
      if (!(this_present_auditDesc && that_present_auditDesc))
        return false;
      if (!this.auditDesc.equals(that.auditDesc))
        return false;
    }

    boolean this_present_msgCode = true && this.isSetMsgCode();
    boolean that_present_msgCode = true && that.isSetMsgCode();
    if (this_present_msgCode || that_present_msgCode) {
      if (!(this_present_msgCode && that_present_msgCode))
        return false;
      if (!this.msgCode.equals(that.msgCode))
        return false;
    }

    boolean this_present_orgCooperateCityInfo = true && this.isSetOrgCooperateCityInfo();
    boolean that_present_orgCooperateCityInfo = true && that.isSetOrgCooperateCityInfo();
    if (this_present_orgCooperateCityInfo || that_present_orgCooperateCityInfo) {
      if (!(this_present_orgCooperateCityInfo && that_present_orgCooperateCityInfo))
        return false;
      if (!this.orgCooperateCityInfo.equals(that.orgCooperateCityInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_code = true && (isSetCode());
    list.add(present_code);
    if (present_code)
      list.add(code);

    boolean present_address = true && (isSetAddress());
    list.add(present_address);
    if (present_address)
      list.add(address);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    boolean present_contact = true && (isSetContact());
    list.add(present_contact);
    if (present_contact)
      list.add(contact);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_auditStatus = true;
    list.add(present_auditStatus);
    if (present_auditStatus)
      list.add(auditStatus);

    boolean present_cooperateStatus = true;
    list.add(present_cooperateStatus);
    if (present_cooperateStatus)
      list.add(cooperateStatus);

    boolean present_bizAdviserId = true;
    list.add(present_bizAdviserId);
    if (present_bizAdviserId)
      list.add(bizAdviserId);

    boolean present_partnerId = true;
    list.add(present_partnerId);
    if (present_partnerId)
      list.add(partnerId);

    boolean present_level = true;
    list.add(present_level);
    if (present_level)
      list.add(level);

    boolean present_creatorId = true;
    list.add(present_creatorId);
    if (present_creatorId)
      list.add(creatorId);

    boolean present_createdDate = true && (isSetCreatedDate());
    list.add(present_createdDate);
    if (present_createdDate)
      list.add(createdDate);

    boolean present_updateId = true;
    list.add(present_updateId);
    if (present_updateId)
      list.add(updateId);

    boolean present_updateDate = true && (isSetUpdateDate());
    list.add(present_updateDate);
    if (present_updateDate)
      list.add(updateDate);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_cusComBase = true && (isSetCusComBase());
    list.add(present_cusComBase);
    if (present_cusComBase)
      list.add(cusComBase);

    boolean present_OrgCooperateCitys = true && (isSetOrgCooperateCitys());
    list.add(present_OrgCooperateCitys);
    if (present_OrgCooperateCitys)
      list.add(OrgCooperateCitys);

    boolean present_pageInfo = true && (isSetPageInfo());
    list.add(present_pageInfo);
    if (present_pageInfo)
      list.add(pageInfo);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_loginName = true && (isSetLoginName());
    list.add(present_loginName);
    if (present_loginName)
      list.add(loginName);

    boolean present_partnerName = true && (isSetPartnerName());
    list.add(present_partnerName);
    if (present_partnerName)
      list.add(partnerName);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_orgUserInfo = true && (isSetOrgUserInfo());
    list.add(present_orgUserInfo);
    if (present_orgUserInfo)
      list.add(orgUserInfo);

    boolean present_auditDesc = true && (isSetAuditDesc());
    list.add(present_auditDesc);
    if (present_auditDesc)
      list.add(auditDesc);

    boolean present_msgCode = true && (isSetMsgCode());
    list.add(present_msgCode);
    if (present_msgCode)
      list.add(msgCode);

    boolean present_orgCooperateCityInfo = true && (isSetOrgCooperateCityInfo());
    list.add(present_orgCooperateCityInfo);
    if (present_orgCooperateCityInfo)
      list.add(orgCooperateCityInfo);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgAssetsCooperationInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCode()).compareTo(other.isSetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.code, other.code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContact()).compareTo(other.isSetContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact, other.contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStatus()).compareTo(other.isSetAuditStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStatus, other.auditStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCooperateStatus()).compareTo(other.isSetCooperateStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCooperateStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cooperateStatus, other.cooperateStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBizAdviserId()).compareTo(other.isSetBizAdviserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBizAdviserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizAdviserId, other.bizAdviserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(other.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, other.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevel()).compareTo(other.isSetLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level, other.level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatorId()).compareTo(other.isSetCreatorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatorId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creatorId, other.creatorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedDate()).compareTo(other.isSetCreatedDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdDate, other.createdDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateId()).compareTo(other.isSetUpdateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateId, other.updateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateDate()).compareTo(other.isSetUpdateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateDate, other.updateDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusComBase()).compareTo(other.isSetCusComBase());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusComBase()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusComBase, other.cusComBase);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCooperateCitys()).compareTo(other.isSetOrgCooperateCitys());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCooperateCitys()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.OrgCooperateCitys, other.OrgCooperateCitys);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageInfo()).compareTo(other.isSetPageInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageInfo, other.pageInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginName()).compareTo(other.isSetLoginName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginName, other.loginName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerName()).compareTo(other.isSetPartnerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerName, other.partnerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgUserInfo()).compareTo(other.isSetOrgUserInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgUserInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgUserInfo, other.orgUserInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditDesc()).compareTo(other.isSetAuditDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditDesc, other.auditDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMsgCode()).compareTo(other.isSetMsgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMsgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msgCode, other.msgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCooperateCityInfo()).compareTo(other.isSetOrgCooperateCityInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCooperateCityInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCooperateCityInfo, other.orgCooperateCityInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgAssetsCooperationInfo(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("code:");
    if (this.code == null) {
      sb.append("null");
    } else {
      sb.append(this.code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact:");
    if (this.contact == null) {
      sb.append("null");
    } else {
      sb.append(this.contact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStatus:");
    sb.append(this.auditStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cooperateStatus:");
    sb.append(this.cooperateStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bizAdviserId:");
    sb.append(this.bizAdviserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    sb.append(this.partnerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("level:");
    sb.append(this.level);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creatorId:");
    sb.append(this.creatorId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdDate:");
    if (this.createdDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createdDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateId:");
    sb.append(this.updateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateDate:");
    if (this.updateDate == null) {
      sb.append("null");
    } else {
      sb.append(this.updateDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusComBase:");
    if (this.cusComBase == null) {
      sb.append("null");
    } else {
      sb.append(this.cusComBase);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("OrgCooperateCitys:");
    if (this.OrgCooperateCitys == null) {
      sb.append("null");
    } else {
      sb.append(this.OrgCooperateCitys);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pageInfo:");
    if (this.pageInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.pageInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginName:");
    if (this.loginName == null) {
      sb.append("null");
    } else {
      sb.append(this.loginName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerName:");
    if (this.partnerName == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgUserInfo:");
    if (this.orgUserInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.orgUserInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditDesc:");
    if (this.auditDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.auditDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("msgCode:");
    if (this.msgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.msgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCooperateCityInfo:");
    if (this.orgCooperateCityInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCooperateCityInfo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (cusComBase != null) {
      cusComBase.validate();
    }
    if (pageInfo != null) {
      pageInfo.validate();
    }
    if (orgUserInfo != null) {
      orgUserInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgAssetsCooperationInfoStandardSchemeFactory implements SchemeFactory {
    public OrgAssetsCooperationInfoStandardScheme getScheme() {
      return new OrgAssetsCooperationInfoStandardScheme();
    }
  }

  private static class OrgAssetsCooperationInfoStandardScheme extends StandardScheme<OrgAssetsCooperationInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgAssetsCooperationInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.code = iprot.readString();
              struct.setCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact = iprot.readString();
              struct.setContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AUDIT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.auditStatus = iprot.readI32();
              struct.setAuditStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COOPERATE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cooperateStatus = iprot.readI32();
              struct.setCooperateStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BIZ_ADVISER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bizAdviserId = iprot.readI32();
              struct.setBizAdviserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerId = iprot.readI32();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.level = iprot.readI32();
              struct.setLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATOR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.creatorId = iprot.readI32();
              struct.setCreatorIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATED_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdDate = iprot.readString();
              struct.setCreatedDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateId = iprot.readI32();
              struct.setUpdateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // UPDATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateDate = iprot.readString();
              struct.setUpdateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CUS_COM_BASE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.cusComBase = new com.xlkfinance.bms.rpc.customer.CusComBase();
              struct.cusComBase.read(iprot);
              struct.setCusComBaseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // ORG_COOPERATE_CITYS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.OrgCooperateCitys = new ArrayList<OrgCooperateCityInfo>(_list0.size);
                OrgCooperateCityInfo _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new OrgCooperateCityInfo();
                  _elem1.read(iprot);
                  struct.OrgCooperateCitys.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setOrgCooperateCitysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PAGE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pageInfo = new com.qfang.xk.aom.rpc.system.PageInfo();
              struct.pageInfo.read(iprot);
              struct.setPageInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // LOGIN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginName = iprot.readString();
              struct.setLoginNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // PARTNER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerName = iprot.readString();
              struct.setPartnerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // ORG_USER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo();
              struct.orgUserInfo.read(iprot);
              struct.setOrgUserInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // AUDIT_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditDesc = iprot.readString();
              struct.setAuditDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // MSG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msgCode = iprot.readString();
              struct.setMsgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // ORG_COOPERATE_CITY_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orgCooperateCityInfo = new OrgCooperateCityInfo();
              struct.orgCooperateCityInfo.read(iprot);
              struct.setOrgCooperateCityInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgAssetsCooperationInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.code != null) {
        oprot.writeFieldBegin(CODE_FIELD_DESC);
        oprot.writeString(struct.code);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.contact != null) {
        oprot.writeFieldBegin(CONTACT_FIELD_DESC);
        oprot.writeString(struct.contact);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUDIT_STATUS_FIELD_DESC);
      oprot.writeI32(struct.auditStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COOPERATE_STATUS_FIELD_DESC);
      oprot.writeI32(struct.cooperateStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BIZ_ADVISER_ID_FIELD_DESC);
      oprot.writeI32(struct.bizAdviserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
      oprot.writeI32(struct.partnerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LEVEL_FIELD_DESC);
      oprot.writeI32(struct.level);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATOR_ID_FIELD_DESC);
      oprot.writeI32(struct.creatorId);
      oprot.writeFieldEnd();
      if (struct.createdDate != null) {
        oprot.writeFieldBegin(CREATED_DATE_FIELD_DESC);
        oprot.writeString(struct.createdDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UPDATE_ID_FIELD_DESC);
      oprot.writeI32(struct.updateId);
      oprot.writeFieldEnd();
      if (struct.updateDate != null) {
        oprot.writeFieldBegin(UPDATE_DATE_FIELD_DESC);
        oprot.writeString(struct.updateDate);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      if (struct.cusComBase != null) {
        oprot.writeFieldBegin(CUS_COM_BASE_FIELD_DESC);
        struct.cusComBase.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.OrgCooperateCitys != null) {
        oprot.writeFieldBegin(ORG_COOPERATE_CITYS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.OrgCooperateCitys.size()));
          for (OrgCooperateCityInfo _iter3 : struct.OrgCooperateCitys)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.pageInfo != null) {
        oprot.writeFieldBegin(PAGE_INFO_FIELD_DESC);
        struct.pageInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.loginName != null) {
        oprot.writeFieldBegin(LOGIN_NAME_FIELD_DESC);
        oprot.writeString(struct.loginName);
        oprot.writeFieldEnd();
      }
      if (struct.partnerName != null) {
        oprot.writeFieldBegin(PARTNER_NAME_FIELD_DESC);
        oprot.writeString(struct.partnerName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.orgUserInfo != null) {
        oprot.writeFieldBegin(ORG_USER_INFO_FIELD_DESC);
        struct.orgUserInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.auditDesc != null) {
        oprot.writeFieldBegin(AUDIT_DESC_FIELD_DESC);
        oprot.writeString(struct.auditDesc);
        oprot.writeFieldEnd();
      }
      if (struct.msgCode != null) {
        oprot.writeFieldBegin(MSG_CODE_FIELD_DESC);
        oprot.writeString(struct.msgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgCooperateCityInfo != null) {
        oprot.writeFieldBegin(ORG_COOPERATE_CITY_INFO_FIELD_DESC);
        struct.orgCooperateCityInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgAssetsCooperationInfoTupleSchemeFactory implements SchemeFactory {
    public OrgAssetsCooperationInfoTupleScheme getScheme() {
      return new OrgAssetsCooperationInfoTupleScheme();
    }
  }

  private static class OrgAssetsCooperationInfoTupleScheme extends TupleScheme<OrgAssetsCooperationInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgAssetsCooperationInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetOrgName()) {
        optionals.set(1);
      }
      if (struct.isSetCode()) {
        optionals.set(2);
      }
      if (struct.isSetAddress()) {
        optionals.set(3);
      }
      if (struct.isSetEmail()) {
        optionals.set(4);
      }
      if (struct.isSetContact()) {
        optionals.set(5);
      }
      if (struct.isSetPhone()) {
        optionals.set(6);
      }
      if (struct.isSetAuditStatus()) {
        optionals.set(7);
      }
      if (struct.isSetCooperateStatus()) {
        optionals.set(8);
      }
      if (struct.isSetBizAdviserId()) {
        optionals.set(9);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(10);
      }
      if (struct.isSetLevel()) {
        optionals.set(11);
      }
      if (struct.isSetCreatorId()) {
        optionals.set(12);
      }
      if (struct.isSetCreatedDate()) {
        optionals.set(13);
      }
      if (struct.isSetUpdateId()) {
        optionals.set(14);
      }
      if (struct.isSetUpdateDate()) {
        optionals.set(15);
      }
      if (struct.isSetRemark()) {
        optionals.set(16);
      }
      if (struct.isSetCusComBase()) {
        optionals.set(17);
      }
      if (struct.isSetOrgCooperateCitys()) {
        optionals.set(18);
      }
      if (struct.isSetPageInfo()) {
        optionals.set(19);
      }
      if (struct.isSetPage()) {
        optionals.set(20);
      }
      if (struct.isSetRows()) {
        optionals.set(21);
      }
      if (struct.isSetLoginName()) {
        optionals.set(22);
      }
      if (struct.isSetPartnerName()) {
        optionals.set(23);
      }
      if (struct.isSetStatus()) {
        optionals.set(24);
      }
      if (struct.isSetOrgUserInfo()) {
        optionals.set(25);
      }
      if (struct.isSetAuditDesc()) {
        optionals.set(26);
      }
      if (struct.isSetMsgCode()) {
        optionals.set(27);
      }
      if (struct.isSetOrgCooperateCityInfo()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetCode()) {
        oprot.writeString(struct.code);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetContact()) {
        oprot.writeString(struct.contact);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetAuditStatus()) {
        oprot.writeI32(struct.auditStatus);
      }
      if (struct.isSetCooperateStatus()) {
        oprot.writeI32(struct.cooperateStatus);
      }
      if (struct.isSetBizAdviserId()) {
        oprot.writeI32(struct.bizAdviserId);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeI32(struct.partnerId);
      }
      if (struct.isSetLevel()) {
        oprot.writeI32(struct.level);
      }
      if (struct.isSetCreatorId()) {
        oprot.writeI32(struct.creatorId);
      }
      if (struct.isSetCreatedDate()) {
        oprot.writeString(struct.createdDate);
      }
      if (struct.isSetUpdateId()) {
        oprot.writeI32(struct.updateId);
      }
      if (struct.isSetUpdateDate()) {
        oprot.writeString(struct.updateDate);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetCusComBase()) {
        struct.cusComBase.write(oprot);
      }
      if (struct.isSetOrgCooperateCitys()) {
        {
          oprot.writeI32(struct.OrgCooperateCitys.size());
          for (OrgCooperateCityInfo _iter4 : struct.OrgCooperateCitys)
          {
            _iter4.write(oprot);
          }
        }
      }
      if (struct.isSetPageInfo()) {
        struct.pageInfo.write(oprot);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetLoginName()) {
        oprot.writeString(struct.loginName);
      }
      if (struct.isSetPartnerName()) {
        oprot.writeString(struct.partnerName);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetOrgUserInfo()) {
        struct.orgUserInfo.write(oprot);
      }
      if (struct.isSetAuditDesc()) {
        oprot.writeString(struct.auditDesc);
      }
      if (struct.isSetMsgCode()) {
        oprot.writeString(struct.msgCode);
      }
      if (struct.isSetOrgCooperateCityInfo()) {
        struct.orgCooperateCityInfo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgAssetsCooperationInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.code = iprot.readString();
        struct.setCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(4)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(5)) {
        struct.contact = iprot.readString();
        struct.setContactIsSet(true);
      }
      if (incoming.get(6)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(7)) {
        struct.auditStatus = iprot.readI32();
        struct.setAuditStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cooperateStatus = iprot.readI32();
        struct.setCooperateStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.bizAdviserId = iprot.readI32();
        struct.setBizAdviserIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.partnerId = iprot.readI32();
        struct.setPartnerIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.level = iprot.readI32();
        struct.setLevelIsSet(true);
      }
      if (incoming.get(12)) {
        struct.creatorId = iprot.readI32();
        struct.setCreatorIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createdDate = iprot.readString();
        struct.setCreatedDateIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updateId = iprot.readI32();
        struct.setUpdateIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.updateDate = iprot.readString();
        struct.setUpdateDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cusComBase = new com.xlkfinance.bms.rpc.customer.CusComBase();
        struct.cusComBase.read(iprot);
        struct.setCusComBaseIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.OrgCooperateCitys = new ArrayList<OrgCooperateCityInfo>(_list5.size);
          OrgCooperateCityInfo _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new OrgCooperateCityInfo();
            _elem6.read(iprot);
            struct.OrgCooperateCitys.add(_elem6);
          }
        }
        struct.setOrgCooperateCitysIsSet(true);
      }
      if (incoming.get(19)) {
        struct.pageInfo = new com.qfang.xk.aom.rpc.system.PageInfo();
        struct.pageInfo.read(iprot);
        struct.setPageInfoIsSet(true);
      }
      if (incoming.get(20)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(21)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(22)) {
        struct.loginName = iprot.readString();
        struct.setLoginNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.partnerName = iprot.readString();
        struct.setPartnerNameIsSet(true);
      }
      if (incoming.get(24)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(25)) {
        struct.orgUserInfo = new com.qfang.xk.aom.rpc.system.OrgUserInfo();
        struct.orgUserInfo.read(iprot);
        struct.setOrgUserInfoIsSet(true);
      }
      if (incoming.get(26)) {
        struct.auditDesc = iprot.readString();
        struct.setAuditDescIsSet(true);
      }
      if (incoming.get(27)) {
        struct.msgCode = iprot.readString();
        struct.setMsgCodeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.orgCooperateCityInfo = new OrgCooperateCityInfo();
        struct.orgCooperateCityInfo.read(iprot);
        struct.setOrgCooperateCityInfoIsSet(true);
      }
    }
  }

}

