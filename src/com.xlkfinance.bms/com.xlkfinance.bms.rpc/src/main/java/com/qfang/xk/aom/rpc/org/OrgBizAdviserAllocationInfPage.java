/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.org;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-5-22")
public class OrgBizAdviserAllocationInfPage implements org.apache.thrift.TBase<OrgBizAdviserAllocationInfPage, OrgBizAdviserAllocationInfPage._Fields>, java.io.Serializable, Cloneable, Comparable<OrgBizAdviserAllocationInfPage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgBizAdviserAllocationInfPage");

  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contact", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PARTNER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField AUDIT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("auditStatus", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField COOPERATE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("cooperateStatus", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField ALLOCATION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("allocationType", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField REGISTER_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("registerDate", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField BIZ_ADVISER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bizAdviserId", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField BIZ_ADVISER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bizAdviserName", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ALLOCATION_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("allocationDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ALLOCATION_REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("allocationRemark", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField LOGIN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginName", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgBizAdviserAllocationInfPageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgBizAdviserAllocationInfPageTupleSchemeFactory());
  }

  public int page; // required
  public int rows; // required
  public int orgId; // required
  public int userId; // required
  public String orgName; // required
  public String orgCode; // required
  public String contact; // required
  public String phone; // required
  public String partnerName; // required
  public int auditStatus; // required
  public int cooperateStatus; // required
  public int allocationType; // required
  public String registerDate; // required
  public int bizAdviserId; // required
  public String bizAdviserName; // required
  public String allocationDate; // required
  public String allocationRemark; // required
  public String email; // required
  public int status; // required
  public String loginName; // required
  public List<Integer> userIds; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PAGE((short)1, "page"),
    ROWS((short)2, "rows"),
    ORG_ID((short)3, "orgId"),
    USER_ID((short)4, "userId"),
    ORG_NAME((short)5, "orgName"),
    ORG_CODE((short)6, "orgCode"),
    CONTACT((short)7, "contact"),
    PHONE((short)8, "phone"),
    PARTNER_NAME((short)9, "partnerName"),
    AUDIT_STATUS((short)10, "auditStatus"),
    COOPERATE_STATUS((short)11, "cooperateStatus"),
    ALLOCATION_TYPE((short)12, "allocationType"),
    REGISTER_DATE((short)13, "registerDate"),
    BIZ_ADVISER_ID((short)14, "bizAdviserId"),
    BIZ_ADVISER_NAME((short)15, "bizAdviserName"),
    ALLOCATION_DATE((short)16, "allocationDate"),
    ALLOCATION_REMARK((short)17, "allocationRemark"),
    EMAIL((short)18, "email"),
    STATUS((short)19, "status"),
    LOGIN_NAME((short)20, "loginName"),
    USER_IDS((short)21, "userIds");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PAGE
          return PAGE;
        case 2: // ROWS
          return ROWS;
        case 3: // ORG_ID
          return ORG_ID;
        case 4: // USER_ID
          return USER_ID;
        case 5: // ORG_NAME
          return ORG_NAME;
        case 6: // ORG_CODE
          return ORG_CODE;
        case 7: // CONTACT
          return CONTACT;
        case 8: // PHONE
          return PHONE;
        case 9: // PARTNER_NAME
          return PARTNER_NAME;
        case 10: // AUDIT_STATUS
          return AUDIT_STATUS;
        case 11: // COOPERATE_STATUS
          return COOPERATE_STATUS;
        case 12: // ALLOCATION_TYPE
          return ALLOCATION_TYPE;
        case 13: // REGISTER_DATE
          return REGISTER_DATE;
        case 14: // BIZ_ADVISER_ID
          return BIZ_ADVISER_ID;
        case 15: // BIZ_ADVISER_NAME
          return BIZ_ADVISER_NAME;
        case 16: // ALLOCATION_DATE
          return ALLOCATION_DATE;
        case 17: // ALLOCATION_REMARK
          return ALLOCATION_REMARK;
        case 18: // EMAIL
          return EMAIL;
        case 19: // STATUS
          return STATUS;
        case 20: // LOGIN_NAME
          return LOGIN_NAME;
        case 21: // USER_IDS
          return USER_IDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAGE_ISSET_ID = 0;
  private static final int __ROWS_ISSET_ID = 1;
  private static final int __ORGID_ISSET_ID = 2;
  private static final int __USERID_ISSET_ID = 3;
  private static final int __AUDITSTATUS_ISSET_ID = 4;
  private static final int __COOPERATESTATUS_ISSET_ID = 5;
  private static final int __ALLOCATIONTYPE_ISSET_ID = 6;
  private static final int __BIZADVISERID_ISSET_ID = 7;
  private static final int __STATUS_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT, new org.apache.thrift.meta_data.FieldMetaData("contact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_NAME, new org.apache.thrift.meta_data.FieldMetaData("partnerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("auditStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COOPERATE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("cooperateStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ALLOCATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("allocationType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REGISTER_DATE, new org.apache.thrift.meta_data.FieldMetaData("registerDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIZ_ADVISER_ID, new org.apache.thrift.meta_data.FieldMetaData("bizAdviserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BIZ_ADVISER_NAME, new org.apache.thrift.meta_data.FieldMetaData("bizAdviserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALLOCATION_DATE, new org.apache.thrift.meta_data.FieldMetaData("allocationDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALLOCATION_REMARK, new org.apache.thrift.meta_data.FieldMetaData("allocationRemark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOGIN_NAME, new org.apache.thrift.meta_data.FieldMetaData("loginName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgBizAdviserAllocationInfPage.class, metaDataMap);
  }

  public OrgBizAdviserAllocationInfPage() {
  }

  public OrgBizAdviserAllocationInfPage(
    int page,
    int rows,
    int orgId,
    int userId,
    String orgName,
    String orgCode,
    String contact,
    String phone,
    String partnerName,
    int auditStatus,
    int cooperateStatus,
    int allocationType,
    String registerDate,
    int bizAdviserId,
    String bizAdviserName,
    String allocationDate,
    String allocationRemark,
    String email,
    int status,
    String loginName,
    List<Integer> userIds)
  {
    this();
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.orgId = orgId;
    setOrgIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.orgName = orgName;
    this.orgCode = orgCode;
    this.contact = contact;
    this.phone = phone;
    this.partnerName = partnerName;
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    this.cooperateStatus = cooperateStatus;
    setCooperateStatusIsSet(true);
    this.allocationType = allocationType;
    setAllocationTypeIsSet(true);
    this.registerDate = registerDate;
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    this.bizAdviserName = bizAdviserName;
    this.allocationDate = allocationDate;
    this.allocationRemark = allocationRemark;
    this.email = email;
    this.status = status;
    setStatusIsSet(true);
    this.loginName = loginName;
    this.userIds = userIds;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgBizAdviserAllocationInfPage(OrgBizAdviserAllocationInfPage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.page = other.page;
    this.rows = other.rows;
    this.orgId = other.orgId;
    this.userId = other.userId;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetContact()) {
      this.contact = other.contact;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetPartnerName()) {
      this.partnerName = other.partnerName;
    }
    this.auditStatus = other.auditStatus;
    this.cooperateStatus = other.cooperateStatus;
    this.allocationType = other.allocationType;
    if (other.isSetRegisterDate()) {
      this.registerDate = other.registerDate;
    }
    this.bizAdviserId = other.bizAdviserId;
    if (other.isSetBizAdviserName()) {
      this.bizAdviserName = other.bizAdviserName;
    }
    if (other.isSetAllocationDate()) {
      this.allocationDate = other.allocationDate;
    }
    if (other.isSetAllocationRemark()) {
      this.allocationRemark = other.allocationRemark;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    this.status = other.status;
    if (other.isSetLoginName()) {
      this.loginName = other.loginName;
    }
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
  }

  public OrgBizAdviserAllocationInfPage deepCopy() {
    return new OrgBizAdviserAllocationInfPage(this);
  }

  @Override
  public void clear() {
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setOrgIdIsSet(false);
    this.orgId = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.orgName = null;
    this.orgCode = null;
    this.contact = null;
    this.phone = null;
    this.partnerName = null;
    setAuditStatusIsSet(false);
    this.auditStatus = 0;
    setCooperateStatusIsSet(false);
    this.cooperateStatus = 0;
    setAllocationTypeIsSet(false);
    this.allocationType = 0;
    this.registerDate = null;
    setBizAdviserIdIsSet(false);
    this.bizAdviserId = 0;
    this.bizAdviserName = null;
    this.allocationDate = null;
    this.allocationRemark = null;
    this.email = null;
    setStatusIsSet(false);
    this.status = 0;
    this.loginName = null;
    this.userIds = null;
  }

  public int getPage() {
    return this.page;
  }

  public OrgBizAdviserAllocationInfPage setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public OrgBizAdviserAllocationInfPage setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getOrgId() {
    return this.orgId;
  }

  public OrgBizAdviserAllocationInfPage setOrgId(int orgId) {
    this.orgId = orgId;
    setOrgIdIsSet(true);
    return this;
  }

  public void unsetOrgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  public void setOrgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public OrgBizAdviserAllocationInfPage setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public String getOrgName() {
    return this.orgName;
  }

  public OrgBizAdviserAllocationInfPage setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getOrgCode() {
    return this.orgCode;
  }

  public OrgBizAdviserAllocationInfPage setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  public String getContact() {
    return this.contact;
  }

  public OrgBizAdviserAllocationInfPage setContact(String contact) {
    this.contact = contact;
    return this;
  }

  public void unsetContact() {
    this.contact = null;
  }

  /** Returns true if field contact is set (has been assigned a value) and false otherwise */
  public boolean isSetContact() {
    return this.contact != null;
  }

  public void setContactIsSet(boolean value) {
    if (!value) {
      this.contact = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public OrgBizAdviserAllocationInfPage setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public String getPartnerName() {
    return this.partnerName;
  }

  public OrgBizAdviserAllocationInfPage setPartnerName(String partnerName) {
    this.partnerName = partnerName;
    return this;
  }

  public void unsetPartnerName() {
    this.partnerName = null;
  }

  /** Returns true if field partnerName is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerName() {
    return this.partnerName != null;
  }

  public void setPartnerNameIsSet(boolean value) {
    if (!value) {
      this.partnerName = null;
    }
  }

  public int getAuditStatus() {
    return this.auditStatus;
  }

  public OrgBizAdviserAllocationInfPage setAuditStatus(int auditStatus) {
    this.auditStatus = auditStatus;
    setAuditStatusIsSet(true);
    return this;
  }

  public void unsetAuditStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  /** Returns true if field auditStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID);
  }

  public void setAuditStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUDITSTATUS_ISSET_ID, value);
  }

  public int getCooperateStatus() {
    return this.cooperateStatus;
  }

  public OrgBizAdviserAllocationInfPage setCooperateStatus(int cooperateStatus) {
    this.cooperateStatus = cooperateStatus;
    setCooperateStatusIsSet(true);
    return this;
  }

  public void unsetCooperateStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID);
  }

  /** Returns true if field cooperateStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCooperateStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID);
  }

  public void setCooperateStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COOPERATESTATUS_ISSET_ID, value);
  }

  public int getAllocationType() {
    return this.allocationType;
  }

  public OrgBizAdviserAllocationInfPage setAllocationType(int allocationType) {
    this.allocationType = allocationType;
    setAllocationTypeIsSet(true);
    return this;
  }

  public void unsetAllocationType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ALLOCATIONTYPE_ISSET_ID);
  }

  /** Returns true if field allocationType is set (has been assigned a value) and false otherwise */
  public boolean isSetAllocationType() {
    return EncodingUtils.testBit(__isset_bitfield, __ALLOCATIONTYPE_ISSET_ID);
  }

  public void setAllocationTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ALLOCATIONTYPE_ISSET_ID, value);
  }

  public String getRegisterDate() {
    return this.registerDate;
  }

  public OrgBizAdviserAllocationInfPage setRegisterDate(String registerDate) {
    this.registerDate = registerDate;
    return this;
  }

  public void unsetRegisterDate() {
    this.registerDate = null;
  }

  /** Returns true if field registerDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRegisterDate() {
    return this.registerDate != null;
  }

  public void setRegisterDateIsSet(boolean value) {
    if (!value) {
      this.registerDate = null;
    }
  }

  public int getBizAdviserId() {
    return this.bizAdviserId;
  }

  public OrgBizAdviserAllocationInfPage setBizAdviserId(int bizAdviserId) {
    this.bizAdviserId = bizAdviserId;
    setBizAdviserIdIsSet(true);
    return this;
  }

  public void unsetBizAdviserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  /** Returns true if field bizAdviserId is set (has been assigned a value) and false otherwise */
  public boolean isSetBizAdviserId() {
    return EncodingUtils.testBit(__isset_bitfield, __BIZADVISERID_ISSET_ID);
  }

  public void setBizAdviserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIZADVISERID_ISSET_ID, value);
  }

  public String getBizAdviserName() {
    return this.bizAdviserName;
  }

  public OrgBizAdviserAllocationInfPage setBizAdviserName(String bizAdviserName) {
    this.bizAdviserName = bizAdviserName;
    return this;
  }

  public void unsetBizAdviserName() {
    this.bizAdviserName = null;
  }

  /** Returns true if field bizAdviserName is set (has been assigned a value) and false otherwise */
  public boolean isSetBizAdviserName() {
    return this.bizAdviserName != null;
  }

  public void setBizAdviserNameIsSet(boolean value) {
    if (!value) {
      this.bizAdviserName = null;
    }
  }

  public String getAllocationDate() {
    return this.allocationDate;
  }

  public OrgBizAdviserAllocationInfPage setAllocationDate(String allocationDate) {
    this.allocationDate = allocationDate;
    return this;
  }

  public void unsetAllocationDate() {
    this.allocationDate = null;
  }

  /** Returns true if field allocationDate is set (has been assigned a value) and false otherwise */
  public boolean isSetAllocationDate() {
    return this.allocationDate != null;
  }

  public void setAllocationDateIsSet(boolean value) {
    if (!value) {
      this.allocationDate = null;
    }
  }

  public String getAllocationRemark() {
    return this.allocationRemark;
  }

  public OrgBizAdviserAllocationInfPage setAllocationRemark(String allocationRemark) {
    this.allocationRemark = allocationRemark;
    return this;
  }

  public void unsetAllocationRemark() {
    this.allocationRemark = null;
  }

  /** Returns true if field allocationRemark is set (has been assigned a value) and false otherwise */
  public boolean isSetAllocationRemark() {
    return this.allocationRemark != null;
  }

  public void setAllocationRemarkIsSet(boolean value) {
    if (!value) {
      this.allocationRemark = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public OrgBizAdviserAllocationInfPage setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public OrgBizAdviserAllocationInfPage setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getLoginName() {
    return this.loginName;
  }

  public OrgBizAdviserAllocationInfPage setLoginName(String loginName) {
    this.loginName = loginName;
    return this;
  }

  public void unsetLoginName() {
    this.loginName = null;
  }

  /** Returns true if field loginName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginName() {
    return this.loginName != null;
  }

  public void setLoginNameIsSet(boolean value) {
    if (!value) {
      this.loginName = null;
    }
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public OrgBizAdviserAllocationInfPage setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case CONTACT:
      if (value == null) {
        unsetContact();
      } else {
        setContact((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case PARTNER_NAME:
      if (value == null) {
        unsetPartnerName();
      } else {
        setPartnerName((String)value);
      }
      break;

    case AUDIT_STATUS:
      if (value == null) {
        unsetAuditStatus();
      } else {
        setAuditStatus((Integer)value);
      }
      break;

    case COOPERATE_STATUS:
      if (value == null) {
        unsetCooperateStatus();
      } else {
        setCooperateStatus((Integer)value);
      }
      break;

    case ALLOCATION_TYPE:
      if (value == null) {
        unsetAllocationType();
      } else {
        setAllocationType((Integer)value);
      }
      break;

    case REGISTER_DATE:
      if (value == null) {
        unsetRegisterDate();
      } else {
        setRegisterDate((String)value);
      }
      break;

    case BIZ_ADVISER_ID:
      if (value == null) {
        unsetBizAdviserId();
      } else {
        setBizAdviserId((Integer)value);
      }
      break;

    case BIZ_ADVISER_NAME:
      if (value == null) {
        unsetBizAdviserName();
      } else {
        setBizAdviserName((String)value);
      }
      break;

    case ALLOCATION_DATE:
      if (value == null) {
        unsetAllocationDate();
      } else {
        setAllocationDate((String)value);
      }
      break;

    case ALLOCATION_REMARK:
      if (value == null) {
        unsetAllocationRemark();
      } else {
        setAllocationRemark((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case LOGIN_NAME:
      if (value == null) {
        unsetLoginName();
      } else {
        setLoginName((String)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case ORG_ID:
      return Integer.valueOf(getOrgId());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case ORG_NAME:
      return getOrgName();

    case ORG_CODE:
      return getOrgCode();

    case CONTACT:
      return getContact();

    case PHONE:
      return getPhone();

    case PARTNER_NAME:
      return getPartnerName();

    case AUDIT_STATUS:
      return Integer.valueOf(getAuditStatus());

    case COOPERATE_STATUS:
      return Integer.valueOf(getCooperateStatus());

    case ALLOCATION_TYPE:
      return Integer.valueOf(getAllocationType());

    case REGISTER_DATE:
      return getRegisterDate();

    case BIZ_ADVISER_ID:
      return Integer.valueOf(getBizAdviserId());

    case BIZ_ADVISER_NAME:
      return getBizAdviserName();

    case ALLOCATION_DATE:
      return getAllocationDate();

    case ALLOCATION_REMARK:
      return getAllocationRemark();

    case EMAIL:
      return getEmail();

    case STATUS:
      return Integer.valueOf(getStatus());

    case LOGIN_NAME:
      return getLoginName();

    case USER_IDS:
      return getUserIds();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case ORG_ID:
      return isSetOrgId();
    case USER_ID:
      return isSetUserId();
    case ORG_NAME:
      return isSetOrgName();
    case ORG_CODE:
      return isSetOrgCode();
    case CONTACT:
      return isSetContact();
    case PHONE:
      return isSetPhone();
    case PARTNER_NAME:
      return isSetPartnerName();
    case AUDIT_STATUS:
      return isSetAuditStatus();
    case COOPERATE_STATUS:
      return isSetCooperateStatus();
    case ALLOCATION_TYPE:
      return isSetAllocationType();
    case REGISTER_DATE:
      return isSetRegisterDate();
    case BIZ_ADVISER_ID:
      return isSetBizAdviserId();
    case BIZ_ADVISER_NAME:
      return isSetBizAdviserName();
    case ALLOCATION_DATE:
      return isSetAllocationDate();
    case ALLOCATION_REMARK:
      return isSetAllocationRemark();
    case EMAIL:
      return isSetEmail();
    case STATUS:
      return isSetStatus();
    case LOGIN_NAME:
      return isSetLoginName();
    case USER_IDS:
      return isSetUserIds();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgBizAdviserAllocationInfPage)
      return this.equals((OrgBizAdviserAllocationInfPage)that);
    return false;
  }

  public boolean equals(OrgBizAdviserAllocationInfPage that) {
    if (that == null)
      return false;

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_orgId = true;
    boolean that_present_orgId = true;
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (this.orgId != that.orgId)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_contact = true && this.isSetContact();
    boolean that_present_contact = true && that.isSetContact();
    if (this_present_contact || that_present_contact) {
      if (!(this_present_contact && that_present_contact))
        return false;
      if (!this.contact.equals(that.contact))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_partnerName = true && this.isSetPartnerName();
    boolean that_present_partnerName = true && that.isSetPartnerName();
    if (this_present_partnerName || that_present_partnerName) {
      if (!(this_present_partnerName && that_present_partnerName))
        return false;
      if (!this.partnerName.equals(that.partnerName))
        return false;
    }

    boolean this_present_auditStatus = true;
    boolean that_present_auditStatus = true;
    if (this_present_auditStatus || that_present_auditStatus) {
      if (!(this_present_auditStatus && that_present_auditStatus))
        return false;
      if (this.auditStatus != that.auditStatus)
        return false;
    }

    boolean this_present_cooperateStatus = true;
    boolean that_present_cooperateStatus = true;
    if (this_present_cooperateStatus || that_present_cooperateStatus) {
      if (!(this_present_cooperateStatus && that_present_cooperateStatus))
        return false;
      if (this.cooperateStatus != that.cooperateStatus)
        return false;
    }

    boolean this_present_allocationType = true;
    boolean that_present_allocationType = true;
    if (this_present_allocationType || that_present_allocationType) {
      if (!(this_present_allocationType && that_present_allocationType))
        return false;
      if (this.allocationType != that.allocationType)
        return false;
    }

    boolean this_present_registerDate = true && this.isSetRegisterDate();
    boolean that_present_registerDate = true && that.isSetRegisterDate();
    if (this_present_registerDate || that_present_registerDate) {
      if (!(this_present_registerDate && that_present_registerDate))
        return false;
      if (!this.registerDate.equals(that.registerDate))
        return false;
    }

    boolean this_present_bizAdviserId = true;
    boolean that_present_bizAdviserId = true;
    if (this_present_bizAdviserId || that_present_bizAdviserId) {
      if (!(this_present_bizAdviserId && that_present_bizAdviserId))
        return false;
      if (this.bizAdviserId != that.bizAdviserId)
        return false;
    }

    boolean this_present_bizAdviserName = true && this.isSetBizAdviserName();
    boolean that_present_bizAdviserName = true && that.isSetBizAdviserName();
    if (this_present_bizAdviserName || that_present_bizAdviserName) {
      if (!(this_present_bizAdviserName && that_present_bizAdviserName))
        return false;
      if (!this.bizAdviserName.equals(that.bizAdviserName))
        return false;
    }

    boolean this_present_allocationDate = true && this.isSetAllocationDate();
    boolean that_present_allocationDate = true && that.isSetAllocationDate();
    if (this_present_allocationDate || that_present_allocationDate) {
      if (!(this_present_allocationDate && that_present_allocationDate))
        return false;
      if (!this.allocationDate.equals(that.allocationDate))
        return false;
    }

    boolean this_present_allocationRemark = true && this.isSetAllocationRemark();
    boolean that_present_allocationRemark = true && that.isSetAllocationRemark();
    if (this_present_allocationRemark || that_present_allocationRemark) {
      if (!(this_present_allocationRemark && that_present_allocationRemark))
        return false;
      if (!this.allocationRemark.equals(that.allocationRemark))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_loginName = true && this.isSetLoginName();
    boolean that_present_loginName = true && that.isSetLoginName();
    if (this_present_loginName || that_present_loginName) {
      if (!(this_present_loginName && that_present_loginName))
        return false;
      if (!this.loginName.equals(that.loginName))
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_orgId = true;
    list.add(present_orgId);
    if (present_orgId)
      list.add(orgId);

    boolean present_userId = true;
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_contact = true && (isSetContact());
    list.add(present_contact);
    if (present_contact)
      list.add(contact);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_partnerName = true && (isSetPartnerName());
    list.add(present_partnerName);
    if (present_partnerName)
      list.add(partnerName);

    boolean present_auditStatus = true;
    list.add(present_auditStatus);
    if (present_auditStatus)
      list.add(auditStatus);

    boolean present_cooperateStatus = true;
    list.add(present_cooperateStatus);
    if (present_cooperateStatus)
      list.add(cooperateStatus);

    boolean present_allocationType = true;
    list.add(present_allocationType);
    if (present_allocationType)
      list.add(allocationType);

    boolean present_registerDate = true && (isSetRegisterDate());
    list.add(present_registerDate);
    if (present_registerDate)
      list.add(registerDate);

    boolean present_bizAdviserId = true;
    list.add(present_bizAdviserId);
    if (present_bizAdviserId)
      list.add(bizAdviserId);

    boolean present_bizAdviserName = true && (isSetBizAdviserName());
    list.add(present_bizAdviserName);
    if (present_bizAdviserName)
      list.add(bizAdviserName);

    boolean present_allocationDate = true && (isSetAllocationDate());
    list.add(present_allocationDate);
    if (present_allocationDate)
      list.add(allocationDate);

    boolean present_allocationRemark = true && (isSetAllocationRemark());
    list.add(present_allocationRemark);
    if (present_allocationRemark)
      list.add(allocationRemark);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_loginName = true && (isSetLoginName());
    list.add(present_loginName);
    if (present_loginName)
      list.add(loginName);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgBizAdviserAllocationInfPage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContact()).compareTo(other.isSetContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact, other.contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerName()).compareTo(other.isSetPartnerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerName, other.partnerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuditStatus()).compareTo(other.isSetAuditStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditStatus, other.auditStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCooperateStatus()).compareTo(other.isSetCooperateStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCooperateStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cooperateStatus, other.cooperateStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllocationType()).compareTo(other.isSetAllocationType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllocationType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allocationType, other.allocationType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterDate()).compareTo(other.isSetRegisterDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registerDate, other.registerDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBizAdviserId()).compareTo(other.isSetBizAdviserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBizAdviserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizAdviserId, other.bizAdviserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBizAdviserName()).compareTo(other.isSetBizAdviserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBizAdviserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizAdviserName, other.bizAdviserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllocationDate()).compareTo(other.isSetAllocationDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllocationDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allocationDate, other.allocationDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllocationRemark()).compareTo(other.isSetAllocationRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllocationRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allocationRemark, other.allocationRemark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginName()).compareTo(other.isSetLoginName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginName, other.loginName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgBizAdviserAllocationInfPage(");
    boolean first = true;

    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgId:");
    sb.append(this.orgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact:");
    if (this.contact == null) {
      sb.append("null");
    } else {
      sb.append(this.contact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerName:");
    if (this.partnerName == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditStatus:");
    sb.append(this.auditStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cooperateStatus:");
    sb.append(this.cooperateStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("allocationType:");
    sb.append(this.allocationType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("registerDate:");
    if (this.registerDate == null) {
      sb.append("null");
    } else {
      sb.append(this.registerDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bizAdviserId:");
    sb.append(this.bizAdviserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bizAdviserName:");
    if (this.bizAdviserName == null) {
      sb.append("null");
    } else {
      sb.append(this.bizAdviserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allocationDate:");
    if (this.allocationDate == null) {
      sb.append("null");
    } else {
      sb.append(this.allocationDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allocationRemark:");
    if (this.allocationRemark == null) {
      sb.append("null");
    } else {
      sb.append(this.allocationRemark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginName:");
    if (this.loginName == null) {
      sb.append("null");
    } else {
      sb.append(this.loginName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgBizAdviserAllocationInfPageStandardSchemeFactory implements SchemeFactory {
    public OrgBizAdviserAllocationInfPageStandardScheme getScheme() {
      return new OrgBizAdviserAllocationInfPageStandardScheme();
    }
  }

  private static class OrgBizAdviserAllocationInfPageStandardScheme extends StandardScheme<OrgBizAdviserAllocationInfPage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgBizAdviserAllocationInfPage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgId = iprot.readI32();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact = iprot.readString();
              struct.setContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PARTNER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerName = iprot.readString();
              struct.setPartnerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AUDIT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.auditStatus = iprot.readI32();
              struct.setAuditStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // COOPERATE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cooperateStatus = iprot.readI32();
              struct.setCooperateStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ALLOCATION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.allocationType = iprot.readI32();
              struct.setAllocationTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REGISTER_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registerDate = iprot.readString();
              struct.setRegisterDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BIZ_ADVISER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bizAdviserId = iprot.readI32();
              struct.setBizAdviserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // BIZ_ADVISER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bizAdviserName = iprot.readString();
              struct.setBizAdviserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ALLOCATION_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.allocationDate = iprot.readString();
              struct.setAllocationDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ALLOCATION_REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.allocationRemark = iprot.readString();
              struct.setAllocationRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LOGIN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginName = iprot.readString();
              struct.setLoginNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list48.size);
                int _elem49;
                for (int _i50 = 0; _i50 < _list48.size; ++_i50)
                {
                  _elem49 = iprot.readI32();
                  struct.userIds.add(_elem49);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgBizAdviserAllocationInfPage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
      oprot.writeI32(struct.orgId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.contact != null) {
        oprot.writeFieldBegin(CONTACT_FIELD_DESC);
        oprot.writeString(struct.contact);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.partnerName != null) {
        oprot.writeFieldBegin(PARTNER_NAME_FIELD_DESC);
        oprot.writeString(struct.partnerName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUDIT_STATUS_FIELD_DESC);
      oprot.writeI32(struct.auditStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COOPERATE_STATUS_FIELD_DESC);
      oprot.writeI32(struct.cooperateStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ALLOCATION_TYPE_FIELD_DESC);
      oprot.writeI32(struct.allocationType);
      oprot.writeFieldEnd();
      if (struct.registerDate != null) {
        oprot.writeFieldBegin(REGISTER_DATE_FIELD_DESC);
        oprot.writeString(struct.registerDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BIZ_ADVISER_ID_FIELD_DESC);
      oprot.writeI32(struct.bizAdviserId);
      oprot.writeFieldEnd();
      if (struct.bizAdviserName != null) {
        oprot.writeFieldBegin(BIZ_ADVISER_NAME_FIELD_DESC);
        oprot.writeString(struct.bizAdviserName);
        oprot.writeFieldEnd();
      }
      if (struct.allocationDate != null) {
        oprot.writeFieldBegin(ALLOCATION_DATE_FIELD_DESC);
        oprot.writeString(struct.allocationDate);
        oprot.writeFieldEnd();
      }
      if (struct.allocationRemark != null) {
        oprot.writeFieldBegin(ALLOCATION_REMARK_FIELD_DESC);
        oprot.writeString(struct.allocationRemark);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.loginName != null) {
        oprot.writeFieldBegin(LOGIN_NAME_FIELD_DESC);
        oprot.writeString(struct.loginName);
        oprot.writeFieldEnd();
      }
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter51 : struct.userIds)
          {
            oprot.writeI32(_iter51);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgBizAdviserAllocationInfPageTupleSchemeFactory implements SchemeFactory {
    public OrgBizAdviserAllocationInfPageTupleScheme getScheme() {
      return new OrgBizAdviserAllocationInfPageTupleScheme();
    }
  }

  private static class OrgBizAdviserAllocationInfPageTupleScheme extends TupleScheme<OrgBizAdviserAllocationInfPage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgBizAdviserAllocationInfPage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPage()) {
        optionals.set(0);
      }
      if (struct.isSetRows()) {
        optionals.set(1);
      }
      if (struct.isSetOrgId()) {
        optionals.set(2);
      }
      if (struct.isSetUserId()) {
        optionals.set(3);
      }
      if (struct.isSetOrgName()) {
        optionals.set(4);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(5);
      }
      if (struct.isSetContact()) {
        optionals.set(6);
      }
      if (struct.isSetPhone()) {
        optionals.set(7);
      }
      if (struct.isSetPartnerName()) {
        optionals.set(8);
      }
      if (struct.isSetAuditStatus()) {
        optionals.set(9);
      }
      if (struct.isSetCooperateStatus()) {
        optionals.set(10);
      }
      if (struct.isSetAllocationType()) {
        optionals.set(11);
      }
      if (struct.isSetRegisterDate()) {
        optionals.set(12);
      }
      if (struct.isSetBizAdviserId()) {
        optionals.set(13);
      }
      if (struct.isSetBizAdviserName()) {
        optionals.set(14);
      }
      if (struct.isSetAllocationDate()) {
        optionals.set(15);
      }
      if (struct.isSetAllocationRemark()) {
        optionals.set(16);
      }
      if (struct.isSetEmail()) {
        optionals.set(17);
      }
      if (struct.isSetStatus()) {
        optionals.set(18);
      }
      if (struct.isSetLoginName()) {
        optionals.set(19);
      }
      if (struct.isSetUserIds()) {
        optionals.set(20);
      }
      oprot.writeBitSet(optionals, 21);
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetOrgId()) {
        oprot.writeI32(struct.orgId);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetContact()) {
        oprot.writeString(struct.contact);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetPartnerName()) {
        oprot.writeString(struct.partnerName);
      }
      if (struct.isSetAuditStatus()) {
        oprot.writeI32(struct.auditStatus);
      }
      if (struct.isSetCooperateStatus()) {
        oprot.writeI32(struct.cooperateStatus);
      }
      if (struct.isSetAllocationType()) {
        oprot.writeI32(struct.allocationType);
      }
      if (struct.isSetRegisterDate()) {
        oprot.writeString(struct.registerDate);
      }
      if (struct.isSetBizAdviserId()) {
        oprot.writeI32(struct.bizAdviserId);
      }
      if (struct.isSetBizAdviserName()) {
        oprot.writeString(struct.bizAdviserName);
      }
      if (struct.isSetAllocationDate()) {
        oprot.writeString(struct.allocationDate);
      }
      if (struct.isSetAllocationRemark()) {
        oprot.writeString(struct.allocationRemark);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetLoginName()) {
        oprot.writeString(struct.loginName);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter52 : struct.userIds)
          {
            oprot.writeI32(_iter52);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgBizAdviserAllocationInfPage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(21);
      if (incoming.get(0)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(1)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orgId = iprot.readI32();
        struct.setOrgIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.contact = iprot.readString();
        struct.setContactIsSet(true);
      }
      if (incoming.get(7)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(8)) {
        struct.partnerName = iprot.readString();
        struct.setPartnerNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.auditStatus = iprot.readI32();
        struct.setAuditStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.cooperateStatus = iprot.readI32();
        struct.setCooperateStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.allocationType = iprot.readI32();
        struct.setAllocationTypeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.registerDate = iprot.readString();
        struct.setRegisterDateIsSet(true);
      }
      if (incoming.get(13)) {
        struct.bizAdviserId = iprot.readI32();
        struct.setBizAdviserIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.bizAdviserName = iprot.readString();
        struct.setBizAdviserNameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.allocationDate = iprot.readString();
        struct.setAllocationDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.allocationRemark = iprot.readString();
        struct.setAllocationRemarkIsSet(true);
      }
      if (incoming.get(17)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(18)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(19)) {
        struct.loginName = iprot.readString();
        struct.setLoginNameIsSet(true);
      }
      if (incoming.get(20)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list53.size);
          int _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = iprot.readI32();
            struct.userIds.add(_elem54);
          }
        }
        struct.setUserIdsIsSet(true);
      }
    }
  }

}

