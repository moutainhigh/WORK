/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.fee;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-9-12")
public class OrgFeeSettleDTO implements org.apache.thrift.TBase<OrgFeeSettleDTO, OrgFeeSettleDTO._Fields>, java.io.Serializable, Cloneable, Comparable<OrgFeeSettleDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrgFeeSettleDTO");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField APPLY_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("applyMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField LOAN_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("loanMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField PAYMENT_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField SETTLE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("settleDate", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField REBATE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("rebateRate", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("returnCommRate", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField REFUND_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("refundMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("returnCommTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField CHARGE_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField REBATE_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("rebateMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField REBATE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("rebateType", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField LOAN_DATE_START_FIELD_DESC = new org.apache.thrift.protocol.TField("loanDateStart", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField LOAN_DATE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("loanDateEnd", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PARTNER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerName", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField SETTLE_DATE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("settleDateEnd", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField EXTIMATE_FEE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("extimateFeeRate", org.apache.thrift.protocol.TType.DOUBLE, (short)23);
  private static final org.apache.thrift.protocol.TField ACTUAL_FEE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("actualFeeRate", org.apache.thrift.protocol.TType.DOUBLE, (short)24);
  private static final org.apache.thrift.protocol.TField FUND_SIZE_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("fundSizeMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrgFeeSettleDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrgFeeSettleDTOTupleSchemeFactory());
  }

  public int pid; // required
  public int orgId; // required
  public int partnerId; // required
  public double applyMoneyTotal; // required
  public double loanMoneyTotal; // required
  public double paymentMoneyTotal; // required
  public String settleDate; // required
  public double rebateRate; // required
  public double returnCommRate; // required
  public double refundMoneyTotal; // required
  public double returnCommTotal; // required
  public double chargeMoneyTotal; // required
  public double rebateMoneyTotal; // required
  public int rebateType; // required
  public String loanDateStart; // required
  public String loanDateEnd; // required
  public int page; // required
  public int rows; // required
  public String orgName; // required
  public String partnerName; // required
  public String orgCode; // required
  public String settleDateEnd; // required
  public double extimateFeeRate; // required
  public double actualFeeRate; // required
  public double fundSizeMoney; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    ORG_ID((short)2, "orgId"),
    PARTNER_ID((short)3, "partnerId"),
    APPLY_MONEY_TOTAL((short)4, "applyMoneyTotal"),
    LOAN_MONEY_TOTAL((short)5, "loanMoneyTotal"),
    PAYMENT_MONEY_TOTAL((short)6, "paymentMoneyTotal"),
    SETTLE_DATE((short)7, "settleDate"),
    REBATE_RATE((short)8, "rebateRate"),
    RETURN_COMM_RATE((short)9, "returnCommRate"),
    REFUND_MONEY_TOTAL((short)10, "refundMoneyTotal"),
    RETURN_COMM_TOTAL((short)11, "returnCommTotal"),
    CHARGE_MONEY_TOTAL((short)12, "chargeMoneyTotal"),
    REBATE_MONEY_TOTAL((short)13, "rebateMoneyTotal"),
    REBATE_TYPE((short)14, "rebateType"),
    LOAN_DATE_START((short)15, "loanDateStart"),
    LOAN_DATE_END((short)16, "loanDateEnd"),
    PAGE((short)17, "page"),
    ROWS((short)18, "rows"),
    ORG_NAME((short)19, "orgName"),
    PARTNER_NAME((short)20, "partnerName"),
    ORG_CODE((short)21, "orgCode"),
    SETTLE_DATE_END((short)22, "settleDateEnd"),
    EXTIMATE_FEE_RATE((short)23, "extimateFeeRate"),
    ACTUAL_FEE_RATE((short)24, "actualFeeRate"),
    FUND_SIZE_MONEY((short)25, "fundSizeMoney");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // ORG_ID
          return ORG_ID;
        case 3: // PARTNER_ID
          return PARTNER_ID;
        case 4: // APPLY_MONEY_TOTAL
          return APPLY_MONEY_TOTAL;
        case 5: // LOAN_MONEY_TOTAL
          return LOAN_MONEY_TOTAL;
        case 6: // PAYMENT_MONEY_TOTAL
          return PAYMENT_MONEY_TOTAL;
        case 7: // SETTLE_DATE
          return SETTLE_DATE;
        case 8: // REBATE_RATE
          return REBATE_RATE;
        case 9: // RETURN_COMM_RATE
          return RETURN_COMM_RATE;
        case 10: // REFUND_MONEY_TOTAL
          return REFUND_MONEY_TOTAL;
        case 11: // RETURN_COMM_TOTAL
          return RETURN_COMM_TOTAL;
        case 12: // CHARGE_MONEY_TOTAL
          return CHARGE_MONEY_TOTAL;
        case 13: // REBATE_MONEY_TOTAL
          return REBATE_MONEY_TOTAL;
        case 14: // REBATE_TYPE
          return REBATE_TYPE;
        case 15: // LOAN_DATE_START
          return LOAN_DATE_START;
        case 16: // LOAN_DATE_END
          return LOAN_DATE_END;
        case 17: // PAGE
          return PAGE;
        case 18: // ROWS
          return ROWS;
        case 19: // ORG_NAME
          return ORG_NAME;
        case 20: // PARTNER_NAME
          return PARTNER_NAME;
        case 21: // ORG_CODE
          return ORG_CODE;
        case 22: // SETTLE_DATE_END
          return SETTLE_DATE_END;
        case 23: // EXTIMATE_FEE_RATE
          return EXTIMATE_FEE_RATE;
        case 24: // ACTUAL_FEE_RATE
          return ACTUAL_FEE_RATE;
        case 25: // FUND_SIZE_MONEY
          return FUND_SIZE_MONEY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ORGID_ISSET_ID = 1;
  private static final int __PARTNERID_ISSET_ID = 2;
  private static final int __APPLYMONEYTOTAL_ISSET_ID = 3;
  private static final int __LOANMONEYTOTAL_ISSET_ID = 4;
  private static final int __PAYMENTMONEYTOTAL_ISSET_ID = 5;
  private static final int __REBATERATE_ISSET_ID = 6;
  private static final int __RETURNCOMMRATE_ISSET_ID = 7;
  private static final int __REFUNDMONEYTOTAL_ISSET_ID = 8;
  private static final int __RETURNCOMMTOTAL_ISSET_ID = 9;
  private static final int __CHARGEMONEYTOTAL_ISSET_ID = 10;
  private static final int __REBATEMONEYTOTAL_ISSET_ID = 11;
  private static final int __REBATETYPE_ISSET_ID = 12;
  private static final int __PAGE_ISSET_ID = 13;
  private static final int __ROWS_ISSET_ID = 14;
  private static final int __EXTIMATEFEERATE_ISSET_ID = 15;
  private static final int __ACTUALFEERATE_ISSET_ID = 16;
  private static final int __FUNDSIZEMONEY_ISSET_ID = 17;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLY_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("applyMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("loanMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAYMENT_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("paymentMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SETTLE_DATE, new org.apache.thrift.meta_data.FieldMetaData("settleDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REBATE_RATE, new org.apache.thrift.meta_data.FieldMetaData("rebateRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RETURN_COMM_RATE, new org.apache.thrift.meta_data.FieldMetaData("returnCommRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REFUND_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("refundMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RETURN_COMM_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("returnCommTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CHARGE_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("chargeMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REBATE_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("rebateMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REBATE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("rebateType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOAN_DATE_START, new org.apache.thrift.meta_data.FieldMetaData("loanDateStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_DATE_END, new org.apache.thrift.meta_data.FieldMetaData("loanDateEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_NAME, new org.apache.thrift.meta_data.FieldMetaData("partnerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_DATE_END, new org.apache.thrift.meta_data.FieldMetaData("settleDateEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTIMATE_FEE_RATE, new org.apache.thrift.meta_data.FieldMetaData("extimateFeeRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACTUAL_FEE_RATE, new org.apache.thrift.meta_data.FieldMetaData("actualFeeRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.FUND_SIZE_MONEY, new org.apache.thrift.meta_data.FieldMetaData("fundSizeMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrgFeeSettleDTO.class, metaDataMap);
  }

  public OrgFeeSettleDTO() {
  }

  public OrgFeeSettleDTO(
    int pid,
    int orgId,
    int partnerId,
    double applyMoneyTotal,
    double loanMoneyTotal,
    double paymentMoneyTotal,
    String settleDate,
    double rebateRate,
    double returnCommRate,
    double refundMoneyTotal,
    double returnCommTotal,
    double chargeMoneyTotal,
    double rebateMoneyTotal,
    int rebateType,
    String loanDateStart,
    String loanDateEnd,
    int page,
    int rows,
    String orgName,
    String partnerName,
    String orgCode,
    String settleDateEnd,
    double extimateFeeRate,
    double actualFeeRate,
    double fundSizeMoney)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.orgId = orgId;
    setOrgIdIsSet(true);
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    this.applyMoneyTotal = applyMoneyTotal;
    setApplyMoneyTotalIsSet(true);
    this.loanMoneyTotal = loanMoneyTotal;
    setLoanMoneyTotalIsSet(true);
    this.paymentMoneyTotal = paymentMoneyTotal;
    setPaymentMoneyTotalIsSet(true);
    this.settleDate = settleDate;
    this.rebateRate = rebateRate;
    setRebateRateIsSet(true);
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    this.refundMoneyTotal = refundMoneyTotal;
    setRefundMoneyTotalIsSet(true);
    this.returnCommTotal = returnCommTotal;
    setReturnCommTotalIsSet(true);
    this.chargeMoneyTotal = chargeMoneyTotal;
    setChargeMoneyTotalIsSet(true);
    this.rebateMoneyTotal = rebateMoneyTotal;
    setRebateMoneyTotalIsSet(true);
    this.rebateType = rebateType;
    setRebateTypeIsSet(true);
    this.loanDateStart = loanDateStart;
    this.loanDateEnd = loanDateEnd;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.orgName = orgName;
    this.partnerName = partnerName;
    this.orgCode = orgCode;
    this.settleDateEnd = settleDateEnd;
    this.extimateFeeRate = extimateFeeRate;
    setExtimateFeeRateIsSet(true);
    this.actualFeeRate = actualFeeRate;
    setActualFeeRateIsSet(true);
    this.fundSizeMoney = fundSizeMoney;
    setFundSizeMoneyIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrgFeeSettleDTO(OrgFeeSettleDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    this.orgId = other.orgId;
    this.partnerId = other.partnerId;
    this.applyMoneyTotal = other.applyMoneyTotal;
    this.loanMoneyTotal = other.loanMoneyTotal;
    this.paymentMoneyTotal = other.paymentMoneyTotal;
    if (other.isSetSettleDate()) {
      this.settleDate = other.settleDate;
    }
    this.rebateRate = other.rebateRate;
    this.returnCommRate = other.returnCommRate;
    this.refundMoneyTotal = other.refundMoneyTotal;
    this.returnCommTotal = other.returnCommTotal;
    this.chargeMoneyTotal = other.chargeMoneyTotal;
    this.rebateMoneyTotal = other.rebateMoneyTotal;
    this.rebateType = other.rebateType;
    if (other.isSetLoanDateStart()) {
      this.loanDateStart = other.loanDateStart;
    }
    if (other.isSetLoanDateEnd()) {
      this.loanDateEnd = other.loanDateEnd;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetPartnerName()) {
      this.partnerName = other.partnerName;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetSettleDateEnd()) {
      this.settleDateEnd = other.settleDateEnd;
    }
    this.extimateFeeRate = other.extimateFeeRate;
    this.actualFeeRate = other.actualFeeRate;
    this.fundSizeMoney = other.fundSizeMoney;
  }

  public OrgFeeSettleDTO deepCopy() {
    return new OrgFeeSettleDTO(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    setOrgIdIsSet(false);
    this.orgId = 0;
    setPartnerIdIsSet(false);
    this.partnerId = 0;
    setApplyMoneyTotalIsSet(false);
    this.applyMoneyTotal = 0.0;
    setLoanMoneyTotalIsSet(false);
    this.loanMoneyTotal = 0.0;
    setPaymentMoneyTotalIsSet(false);
    this.paymentMoneyTotal = 0.0;
    this.settleDate = null;
    setRebateRateIsSet(false);
    this.rebateRate = 0.0;
    setReturnCommRateIsSet(false);
    this.returnCommRate = 0.0;
    setRefundMoneyTotalIsSet(false);
    this.refundMoneyTotal = 0.0;
    setReturnCommTotalIsSet(false);
    this.returnCommTotal = 0.0;
    setChargeMoneyTotalIsSet(false);
    this.chargeMoneyTotal = 0.0;
    setRebateMoneyTotalIsSet(false);
    this.rebateMoneyTotal = 0.0;
    setRebateTypeIsSet(false);
    this.rebateType = 0;
    this.loanDateStart = null;
    this.loanDateEnd = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.orgName = null;
    this.partnerName = null;
    this.orgCode = null;
    this.settleDateEnd = null;
    setExtimateFeeRateIsSet(false);
    this.extimateFeeRate = 0.0;
    setActualFeeRateIsSet(false);
    this.actualFeeRate = 0.0;
    setFundSizeMoneyIsSet(false);
    this.fundSizeMoney = 0.0;
  }

  public int getPid() {
    return this.pid;
  }

  public OrgFeeSettleDTO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getOrgId() {
    return this.orgId;
  }

  public OrgFeeSettleDTO setOrgId(int orgId) {
    this.orgId = orgId;
    setOrgIdIsSet(true);
    return this;
  }

  public void unsetOrgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  public void setOrgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGID_ISSET_ID, value);
  }

  public int getPartnerId() {
    return this.partnerId;
  }

  public OrgFeeSettleDTO setPartnerId(int partnerId) {
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    return this;
  }

  public void unsetPartnerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  public void setPartnerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERID_ISSET_ID, value);
  }

  public double getApplyMoneyTotal() {
    return this.applyMoneyTotal;
  }

  public OrgFeeSettleDTO setApplyMoneyTotal(double applyMoneyTotal) {
    this.applyMoneyTotal = applyMoneyTotal;
    setApplyMoneyTotalIsSet(true);
    return this;
  }

  public void unsetApplyMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field applyMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID);
  }

  public void setApplyMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID, value);
  }

  public double getLoanMoneyTotal() {
    return this.loanMoneyTotal;
  }

  public OrgFeeSettleDTO setLoanMoneyTotal(double loanMoneyTotal) {
    this.loanMoneyTotal = loanMoneyTotal;
    setLoanMoneyTotalIsSet(true);
    return this;
  }

  public void unsetLoanMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field loanMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID);
  }

  public void setLoanMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID, value);
  }

  public double getPaymentMoneyTotal() {
    return this.paymentMoneyTotal;
  }

  public OrgFeeSettleDTO setPaymentMoneyTotal(double paymentMoneyTotal) {
    this.paymentMoneyTotal = paymentMoneyTotal;
    setPaymentMoneyTotalIsSet(true);
    return this;
  }

  public void unsetPaymentMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field paymentMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID);
  }

  public void setPaymentMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID, value);
  }

  public String getSettleDate() {
    return this.settleDate;
  }

  public OrgFeeSettleDTO setSettleDate(String settleDate) {
    this.settleDate = settleDate;
    return this;
  }

  public void unsetSettleDate() {
    this.settleDate = null;
  }

  /** Returns true if field settleDate is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleDate() {
    return this.settleDate != null;
  }

  public void setSettleDateIsSet(boolean value) {
    if (!value) {
      this.settleDate = null;
    }
  }

  public double getRebateRate() {
    return this.rebateRate;
  }

  public OrgFeeSettleDTO setRebateRate(double rebateRate) {
    this.rebateRate = rebateRate;
    setRebateRateIsSet(true);
    return this;
  }

  public void unsetRebateRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REBATERATE_ISSET_ID);
  }

  /** Returns true if field rebateRate is set (has been assigned a value) and false otherwise */
  public boolean isSetRebateRate() {
    return EncodingUtils.testBit(__isset_bitfield, __REBATERATE_ISSET_ID);
  }

  public void setRebateRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REBATERATE_ISSET_ID, value);
  }

  public double getReturnCommRate() {
    return this.returnCommRate;
  }

  public OrgFeeSettleDTO setReturnCommRate(double returnCommRate) {
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    return this;
  }

  public void unsetReturnCommRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  /** Returns true if field returnCommRate is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCommRate() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  public void setReturnCommRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID, value);
  }

  public double getRefundMoneyTotal() {
    return this.refundMoneyTotal;
  }

  public OrgFeeSettleDTO setRefundMoneyTotal(double refundMoneyTotal) {
    this.refundMoneyTotal = refundMoneyTotal;
    setRefundMoneyTotalIsSet(true);
    return this;
  }

  public void unsetRefundMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REFUNDMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field refundMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __REFUNDMONEYTOTAL_ISSET_ID);
  }

  public void setRefundMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REFUNDMONEYTOTAL_ISSET_ID, value);
  }

  public double getReturnCommTotal() {
    return this.returnCommTotal;
  }

  public OrgFeeSettleDTO setReturnCommTotal(double returnCommTotal) {
    this.returnCommTotal = returnCommTotal;
    setReturnCommTotalIsSet(true);
    return this;
  }

  public void unsetReturnCommTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID);
  }

  /** Returns true if field returnCommTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCommTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID);
  }

  public void setReturnCommTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID, value);
  }

  public double getChargeMoneyTotal() {
    return this.chargeMoneyTotal;
  }

  public OrgFeeSettleDTO setChargeMoneyTotal(double chargeMoneyTotal) {
    this.chargeMoneyTotal = chargeMoneyTotal;
    setChargeMoneyTotalIsSet(true);
    return this;
  }

  public void unsetChargeMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARGEMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field chargeMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARGEMONEYTOTAL_ISSET_ID);
  }

  public void setChargeMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARGEMONEYTOTAL_ISSET_ID, value);
  }

  public double getRebateMoneyTotal() {
    return this.rebateMoneyTotal;
  }

  public OrgFeeSettleDTO setRebateMoneyTotal(double rebateMoneyTotal) {
    this.rebateMoneyTotal = rebateMoneyTotal;
    setRebateMoneyTotalIsSet(true);
    return this;
  }

  public void unsetRebateMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REBATEMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field rebateMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetRebateMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __REBATEMONEYTOTAL_ISSET_ID);
  }

  public void setRebateMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REBATEMONEYTOTAL_ISSET_ID, value);
  }

  public int getRebateType() {
    return this.rebateType;
  }

  public OrgFeeSettleDTO setRebateType(int rebateType) {
    this.rebateType = rebateType;
    setRebateTypeIsSet(true);
    return this;
  }

  public void unsetRebateType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REBATETYPE_ISSET_ID);
  }

  /** Returns true if field rebateType is set (has been assigned a value) and false otherwise */
  public boolean isSetRebateType() {
    return EncodingUtils.testBit(__isset_bitfield, __REBATETYPE_ISSET_ID);
  }

  public void setRebateTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REBATETYPE_ISSET_ID, value);
  }

  public String getLoanDateStart() {
    return this.loanDateStart;
  }

  public OrgFeeSettleDTO setLoanDateStart(String loanDateStart) {
    this.loanDateStart = loanDateStart;
    return this;
  }

  public void unsetLoanDateStart() {
    this.loanDateStart = null;
  }

  /** Returns true if field loanDateStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanDateStart() {
    return this.loanDateStart != null;
  }

  public void setLoanDateStartIsSet(boolean value) {
    if (!value) {
      this.loanDateStart = null;
    }
  }

  public String getLoanDateEnd() {
    return this.loanDateEnd;
  }

  public OrgFeeSettleDTO setLoanDateEnd(String loanDateEnd) {
    this.loanDateEnd = loanDateEnd;
    return this;
  }

  public void unsetLoanDateEnd() {
    this.loanDateEnd = null;
  }

  /** Returns true if field loanDateEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanDateEnd() {
    return this.loanDateEnd != null;
  }

  public void setLoanDateEndIsSet(boolean value) {
    if (!value) {
      this.loanDateEnd = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public OrgFeeSettleDTO setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public OrgFeeSettleDTO setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getOrgName() {
    return this.orgName;
  }

  public OrgFeeSettleDTO setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getPartnerName() {
    return this.partnerName;
  }

  public OrgFeeSettleDTO setPartnerName(String partnerName) {
    this.partnerName = partnerName;
    return this;
  }

  public void unsetPartnerName() {
    this.partnerName = null;
  }

  /** Returns true if field partnerName is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerName() {
    return this.partnerName != null;
  }

  public void setPartnerNameIsSet(boolean value) {
    if (!value) {
      this.partnerName = null;
    }
  }

  public String getOrgCode() {
    return this.orgCode;
  }

  public OrgFeeSettleDTO setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  public String getSettleDateEnd() {
    return this.settleDateEnd;
  }

  public OrgFeeSettleDTO setSettleDateEnd(String settleDateEnd) {
    this.settleDateEnd = settleDateEnd;
    return this;
  }

  public void unsetSettleDateEnd() {
    this.settleDateEnd = null;
  }

  /** Returns true if field settleDateEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleDateEnd() {
    return this.settleDateEnd != null;
  }

  public void setSettleDateEndIsSet(boolean value) {
    if (!value) {
      this.settleDateEnd = null;
    }
  }

  public double getExtimateFeeRate() {
    return this.extimateFeeRate;
  }

  public OrgFeeSettleDTO setExtimateFeeRate(double extimateFeeRate) {
    this.extimateFeeRate = extimateFeeRate;
    setExtimateFeeRateIsSet(true);
    return this;
  }

  public void unsetExtimateFeeRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXTIMATEFEERATE_ISSET_ID);
  }

  /** Returns true if field extimateFeeRate is set (has been assigned a value) and false otherwise */
  public boolean isSetExtimateFeeRate() {
    return EncodingUtils.testBit(__isset_bitfield, __EXTIMATEFEERATE_ISSET_ID);
  }

  public void setExtimateFeeRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXTIMATEFEERATE_ISSET_ID, value);
  }

  public double getActualFeeRate() {
    return this.actualFeeRate;
  }

  public OrgFeeSettleDTO setActualFeeRate(double actualFeeRate) {
    this.actualFeeRate = actualFeeRate;
    setActualFeeRateIsSet(true);
    return this;
  }

  public void unsetActualFeeRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACTUALFEERATE_ISSET_ID);
  }

  /** Returns true if field actualFeeRate is set (has been assigned a value) and false otherwise */
  public boolean isSetActualFeeRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ACTUALFEERATE_ISSET_ID);
  }

  public void setActualFeeRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACTUALFEERATE_ISSET_ID, value);
  }

  public double getFundSizeMoney() {
    return this.fundSizeMoney;
  }

  public OrgFeeSettleDTO setFundSizeMoney(double fundSizeMoney) {
    this.fundSizeMoney = fundSizeMoney;
    setFundSizeMoneyIsSet(true);
    return this;
  }

  public void unsetFundSizeMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FUNDSIZEMONEY_ISSET_ID);
  }

  /** Returns true if field fundSizeMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetFundSizeMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __FUNDSIZEMONEY_ISSET_ID);
  }

  public void setFundSizeMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FUNDSIZEMONEY_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((Integer)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((Integer)value);
      }
      break;

    case APPLY_MONEY_TOTAL:
      if (value == null) {
        unsetApplyMoneyTotal();
      } else {
        setApplyMoneyTotal((Double)value);
      }
      break;

    case LOAN_MONEY_TOTAL:
      if (value == null) {
        unsetLoanMoneyTotal();
      } else {
        setLoanMoneyTotal((Double)value);
      }
      break;

    case PAYMENT_MONEY_TOTAL:
      if (value == null) {
        unsetPaymentMoneyTotal();
      } else {
        setPaymentMoneyTotal((Double)value);
      }
      break;

    case SETTLE_DATE:
      if (value == null) {
        unsetSettleDate();
      } else {
        setSettleDate((String)value);
      }
      break;

    case REBATE_RATE:
      if (value == null) {
        unsetRebateRate();
      } else {
        setRebateRate((Double)value);
      }
      break;

    case RETURN_COMM_RATE:
      if (value == null) {
        unsetReturnCommRate();
      } else {
        setReturnCommRate((Double)value);
      }
      break;

    case REFUND_MONEY_TOTAL:
      if (value == null) {
        unsetRefundMoneyTotal();
      } else {
        setRefundMoneyTotal((Double)value);
      }
      break;

    case RETURN_COMM_TOTAL:
      if (value == null) {
        unsetReturnCommTotal();
      } else {
        setReturnCommTotal((Double)value);
      }
      break;

    case CHARGE_MONEY_TOTAL:
      if (value == null) {
        unsetChargeMoneyTotal();
      } else {
        setChargeMoneyTotal((Double)value);
      }
      break;

    case REBATE_MONEY_TOTAL:
      if (value == null) {
        unsetRebateMoneyTotal();
      } else {
        setRebateMoneyTotal((Double)value);
      }
      break;

    case REBATE_TYPE:
      if (value == null) {
        unsetRebateType();
      } else {
        setRebateType((Integer)value);
      }
      break;

    case LOAN_DATE_START:
      if (value == null) {
        unsetLoanDateStart();
      } else {
        setLoanDateStart((String)value);
      }
      break;

    case LOAN_DATE_END:
      if (value == null) {
        unsetLoanDateEnd();
      } else {
        setLoanDateEnd((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case PARTNER_NAME:
      if (value == null) {
        unsetPartnerName();
      } else {
        setPartnerName((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case SETTLE_DATE_END:
      if (value == null) {
        unsetSettleDateEnd();
      } else {
        setSettleDateEnd((String)value);
      }
      break;

    case EXTIMATE_FEE_RATE:
      if (value == null) {
        unsetExtimateFeeRate();
      } else {
        setExtimateFeeRate((Double)value);
      }
      break;

    case ACTUAL_FEE_RATE:
      if (value == null) {
        unsetActualFeeRate();
      } else {
        setActualFeeRate((Double)value);
      }
      break;

    case FUND_SIZE_MONEY:
      if (value == null) {
        unsetFundSizeMoney();
      } else {
        setFundSizeMoney((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case ORG_ID:
      return Integer.valueOf(getOrgId());

    case PARTNER_ID:
      return Integer.valueOf(getPartnerId());

    case APPLY_MONEY_TOTAL:
      return Double.valueOf(getApplyMoneyTotal());

    case LOAN_MONEY_TOTAL:
      return Double.valueOf(getLoanMoneyTotal());

    case PAYMENT_MONEY_TOTAL:
      return Double.valueOf(getPaymentMoneyTotal());

    case SETTLE_DATE:
      return getSettleDate();

    case REBATE_RATE:
      return Double.valueOf(getRebateRate());

    case RETURN_COMM_RATE:
      return Double.valueOf(getReturnCommRate());

    case REFUND_MONEY_TOTAL:
      return Double.valueOf(getRefundMoneyTotal());

    case RETURN_COMM_TOTAL:
      return Double.valueOf(getReturnCommTotal());

    case CHARGE_MONEY_TOTAL:
      return Double.valueOf(getChargeMoneyTotal());

    case REBATE_MONEY_TOTAL:
      return Double.valueOf(getRebateMoneyTotal());

    case REBATE_TYPE:
      return Integer.valueOf(getRebateType());

    case LOAN_DATE_START:
      return getLoanDateStart();

    case LOAN_DATE_END:
      return getLoanDateEnd();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case ORG_NAME:
      return getOrgName();

    case PARTNER_NAME:
      return getPartnerName();

    case ORG_CODE:
      return getOrgCode();

    case SETTLE_DATE_END:
      return getSettleDateEnd();

    case EXTIMATE_FEE_RATE:
      return Double.valueOf(getExtimateFeeRate());

    case ACTUAL_FEE_RATE:
      return Double.valueOf(getActualFeeRate());

    case FUND_SIZE_MONEY:
      return Double.valueOf(getFundSizeMoney());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case ORG_ID:
      return isSetOrgId();
    case PARTNER_ID:
      return isSetPartnerId();
    case APPLY_MONEY_TOTAL:
      return isSetApplyMoneyTotal();
    case LOAN_MONEY_TOTAL:
      return isSetLoanMoneyTotal();
    case PAYMENT_MONEY_TOTAL:
      return isSetPaymentMoneyTotal();
    case SETTLE_DATE:
      return isSetSettleDate();
    case REBATE_RATE:
      return isSetRebateRate();
    case RETURN_COMM_RATE:
      return isSetReturnCommRate();
    case REFUND_MONEY_TOTAL:
      return isSetRefundMoneyTotal();
    case RETURN_COMM_TOTAL:
      return isSetReturnCommTotal();
    case CHARGE_MONEY_TOTAL:
      return isSetChargeMoneyTotal();
    case REBATE_MONEY_TOTAL:
      return isSetRebateMoneyTotal();
    case REBATE_TYPE:
      return isSetRebateType();
    case LOAN_DATE_START:
      return isSetLoanDateStart();
    case LOAN_DATE_END:
      return isSetLoanDateEnd();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case ORG_NAME:
      return isSetOrgName();
    case PARTNER_NAME:
      return isSetPartnerName();
    case ORG_CODE:
      return isSetOrgCode();
    case SETTLE_DATE_END:
      return isSetSettleDateEnd();
    case EXTIMATE_FEE_RATE:
      return isSetExtimateFeeRate();
    case ACTUAL_FEE_RATE:
      return isSetActualFeeRate();
    case FUND_SIZE_MONEY:
      return isSetFundSizeMoney();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrgFeeSettleDTO)
      return this.equals((OrgFeeSettleDTO)that);
    return false;
  }

  public boolean equals(OrgFeeSettleDTO that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_orgId = true;
    boolean that_present_orgId = true;
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (this.orgId != that.orgId)
        return false;
    }

    boolean this_present_partnerId = true;
    boolean that_present_partnerId = true;
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (this.partnerId != that.partnerId)
        return false;
    }

    boolean this_present_applyMoneyTotal = true;
    boolean that_present_applyMoneyTotal = true;
    if (this_present_applyMoneyTotal || that_present_applyMoneyTotal) {
      if (!(this_present_applyMoneyTotal && that_present_applyMoneyTotal))
        return false;
      if (this.applyMoneyTotal != that.applyMoneyTotal)
        return false;
    }

    boolean this_present_loanMoneyTotal = true;
    boolean that_present_loanMoneyTotal = true;
    if (this_present_loanMoneyTotal || that_present_loanMoneyTotal) {
      if (!(this_present_loanMoneyTotal && that_present_loanMoneyTotal))
        return false;
      if (this.loanMoneyTotal != that.loanMoneyTotal)
        return false;
    }

    boolean this_present_paymentMoneyTotal = true;
    boolean that_present_paymentMoneyTotal = true;
    if (this_present_paymentMoneyTotal || that_present_paymentMoneyTotal) {
      if (!(this_present_paymentMoneyTotal && that_present_paymentMoneyTotal))
        return false;
      if (this.paymentMoneyTotal != that.paymentMoneyTotal)
        return false;
    }

    boolean this_present_settleDate = true && this.isSetSettleDate();
    boolean that_present_settleDate = true && that.isSetSettleDate();
    if (this_present_settleDate || that_present_settleDate) {
      if (!(this_present_settleDate && that_present_settleDate))
        return false;
      if (!this.settleDate.equals(that.settleDate))
        return false;
    }

    boolean this_present_rebateRate = true;
    boolean that_present_rebateRate = true;
    if (this_present_rebateRate || that_present_rebateRate) {
      if (!(this_present_rebateRate && that_present_rebateRate))
        return false;
      if (this.rebateRate != that.rebateRate)
        return false;
    }

    boolean this_present_returnCommRate = true;
    boolean that_present_returnCommRate = true;
    if (this_present_returnCommRate || that_present_returnCommRate) {
      if (!(this_present_returnCommRate && that_present_returnCommRate))
        return false;
      if (this.returnCommRate != that.returnCommRate)
        return false;
    }

    boolean this_present_refundMoneyTotal = true;
    boolean that_present_refundMoneyTotal = true;
    if (this_present_refundMoneyTotal || that_present_refundMoneyTotal) {
      if (!(this_present_refundMoneyTotal && that_present_refundMoneyTotal))
        return false;
      if (this.refundMoneyTotal != that.refundMoneyTotal)
        return false;
    }

    boolean this_present_returnCommTotal = true;
    boolean that_present_returnCommTotal = true;
    if (this_present_returnCommTotal || that_present_returnCommTotal) {
      if (!(this_present_returnCommTotal && that_present_returnCommTotal))
        return false;
      if (this.returnCommTotal != that.returnCommTotal)
        return false;
    }

    boolean this_present_chargeMoneyTotal = true;
    boolean that_present_chargeMoneyTotal = true;
    if (this_present_chargeMoneyTotal || that_present_chargeMoneyTotal) {
      if (!(this_present_chargeMoneyTotal && that_present_chargeMoneyTotal))
        return false;
      if (this.chargeMoneyTotal != that.chargeMoneyTotal)
        return false;
    }

    boolean this_present_rebateMoneyTotal = true;
    boolean that_present_rebateMoneyTotal = true;
    if (this_present_rebateMoneyTotal || that_present_rebateMoneyTotal) {
      if (!(this_present_rebateMoneyTotal && that_present_rebateMoneyTotal))
        return false;
      if (this.rebateMoneyTotal != that.rebateMoneyTotal)
        return false;
    }

    boolean this_present_rebateType = true;
    boolean that_present_rebateType = true;
    if (this_present_rebateType || that_present_rebateType) {
      if (!(this_present_rebateType && that_present_rebateType))
        return false;
      if (this.rebateType != that.rebateType)
        return false;
    }

    boolean this_present_loanDateStart = true && this.isSetLoanDateStart();
    boolean that_present_loanDateStart = true && that.isSetLoanDateStart();
    if (this_present_loanDateStart || that_present_loanDateStart) {
      if (!(this_present_loanDateStart && that_present_loanDateStart))
        return false;
      if (!this.loanDateStart.equals(that.loanDateStart))
        return false;
    }

    boolean this_present_loanDateEnd = true && this.isSetLoanDateEnd();
    boolean that_present_loanDateEnd = true && that.isSetLoanDateEnd();
    if (this_present_loanDateEnd || that_present_loanDateEnd) {
      if (!(this_present_loanDateEnd && that_present_loanDateEnd))
        return false;
      if (!this.loanDateEnd.equals(that.loanDateEnd))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_partnerName = true && this.isSetPartnerName();
    boolean that_present_partnerName = true && that.isSetPartnerName();
    if (this_present_partnerName || that_present_partnerName) {
      if (!(this_present_partnerName && that_present_partnerName))
        return false;
      if (!this.partnerName.equals(that.partnerName))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_settleDateEnd = true && this.isSetSettleDateEnd();
    boolean that_present_settleDateEnd = true && that.isSetSettleDateEnd();
    if (this_present_settleDateEnd || that_present_settleDateEnd) {
      if (!(this_present_settleDateEnd && that_present_settleDateEnd))
        return false;
      if (!this.settleDateEnd.equals(that.settleDateEnd))
        return false;
    }

    boolean this_present_extimateFeeRate = true;
    boolean that_present_extimateFeeRate = true;
    if (this_present_extimateFeeRate || that_present_extimateFeeRate) {
      if (!(this_present_extimateFeeRate && that_present_extimateFeeRate))
        return false;
      if (this.extimateFeeRate != that.extimateFeeRate)
        return false;
    }

    boolean this_present_actualFeeRate = true;
    boolean that_present_actualFeeRate = true;
    if (this_present_actualFeeRate || that_present_actualFeeRate) {
      if (!(this_present_actualFeeRate && that_present_actualFeeRate))
        return false;
      if (this.actualFeeRate != that.actualFeeRate)
        return false;
    }

    boolean this_present_fundSizeMoney = true;
    boolean that_present_fundSizeMoney = true;
    if (this_present_fundSizeMoney || that_present_fundSizeMoney) {
      if (!(this_present_fundSizeMoney && that_present_fundSizeMoney))
        return false;
      if (this.fundSizeMoney != that.fundSizeMoney)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_orgId = true;
    list.add(present_orgId);
    if (present_orgId)
      list.add(orgId);

    boolean present_partnerId = true;
    list.add(present_partnerId);
    if (present_partnerId)
      list.add(partnerId);

    boolean present_applyMoneyTotal = true;
    list.add(present_applyMoneyTotal);
    if (present_applyMoneyTotal)
      list.add(applyMoneyTotal);

    boolean present_loanMoneyTotal = true;
    list.add(present_loanMoneyTotal);
    if (present_loanMoneyTotal)
      list.add(loanMoneyTotal);

    boolean present_paymentMoneyTotal = true;
    list.add(present_paymentMoneyTotal);
    if (present_paymentMoneyTotal)
      list.add(paymentMoneyTotal);

    boolean present_settleDate = true && (isSetSettleDate());
    list.add(present_settleDate);
    if (present_settleDate)
      list.add(settleDate);

    boolean present_rebateRate = true;
    list.add(present_rebateRate);
    if (present_rebateRate)
      list.add(rebateRate);

    boolean present_returnCommRate = true;
    list.add(present_returnCommRate);
    if (present_returnCommRate)
      list.add(returnCommRate);

    boolean present_refundMoneyTotal = true;
    list.add(present_refundMoneyTotal);
    if (present_refundMoneyTotal)
      list.add(refundMoneyTotal);

    boolean present_returnCommTotal = true;
    list.add(present_returnCommTotal);
    if (present_returnCommTotal)
      list.add(returnCommTotal);

    boolean present_chargeMoneyTotal = true;
    list.add(present_chargeMoneyTotal);
    if (present_chargeMoneyTotal)
      list.add(chargeMoneyTotal);

    boolean present_rebateMoneyTotal = true;
    list.add(present_rebateMoneyTotal);
    if (present_rebateMoneyTotal)
      list.add(rebateMoneyTotal);

    boolean present_rebateType = true;
    list.add(present_rebateType);
    if (present_rebateType)
      list.add(rebateType);

    boolean present_loanDateStart = true && (isSetLoanDateStart());
    list.add(present_loanDateStart);
    if (present_loanDateStart)
      list.add(loanDateStart);

    boolean present_loanDateEnd = true && (isSetLoanDateEnd());
    list.add(present_loanDateEnd);
    if (present_loanDateEnd)
      list.add(loanDateEnd);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_partnerName = true && (isSetPartnerName());
    list.add(present_partnerName);
    if (present_partnerName)
      list.add(partnerName);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_settleDateEnd = true && (isSetSettleDateEnd());
    list.add(present_settleDateEnd);
    if (present_settleDateEnd)
      list.add(settleDateEnd);

    boolean present_extimateFeeRate = true;
    list.add(present_extimateFeeRate);
    if (present_extimateFeeRate)
      list.add(extimateFeeRate);

    boolean present_actualFeeRate = true;
    list.add(present_actualFeeRate);
    if (present_actualFeeRate)
      list.add(actualFeeRate);

    boolean present_fundSizeMoney = true;
    list.add(present_fundSizeMoney);
    if (present_fundSizeMoney)
      list.add(fundSizeMoney);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrgFeeSettleDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(other.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, other.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyMoneyTotal()).compareTo(other.isSetApplyMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyMoneyTotal, other.applyMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanMoneyTotal()).compareTo(other.isSetLoanMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanMoneyTotal, other.loanMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMoneyTotal()).compareTo(other.isSetPaymentMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMoneyTotal, other.paymentMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleDate()).compareTo(other.isSetSettleDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleDate, other.settleDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRebateRate()).compareTo(other.isSetRebateRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRebateRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rebateRate, other.rebateRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnCommRate()).compareTo(other.isSetReturnCommRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCommRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnCommRate, other.returnCommRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundMoneyTotal()).compareTo(other.isSetRefundMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundMoneyTotal, other.refundMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnCommTotal()).compareTo(other.isSetReturnCommTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCommTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnCommTotal, other.returnCommTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeMoneyTotal()).compareTo(other.isSetChargeMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeMoneyTotal, other.chargeMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRebateMoneyTotal()).compareTo(other.isSetRebateMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRebateMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rebateMoneyTotal, other.rebateMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRebateType()).compareTo(other.isSetRebateType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRebateType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rebateType, other.rebateType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanDateStart()).compareTo(other.isSetLoanDateStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanDateStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanDateStart, other.loanDateStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanDateEnd()).compareTo(other.isSetLoanDateEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanDateEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanDateEnd, other.loanDateEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerName()).compareTo(other.isSetPartnerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerName, other.partnerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleDateEnd()).compareTo(other.isSetSettleDateEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleDateEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleDateEnd, other.settleDateEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtimateFeeRate()).compareTo(other.isSetExtimateFeeRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtimateFeeRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extimateFeeRate, other.extimateFeeRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActualFeeRate()).compareTo(other.isSetActualFeeRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActualFeeRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actualFeeRate, other.actualFeeRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFundSizeMoney()).compareTo(other.isSetFundSizeMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFundSizeMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fundSizeMoney, other.fundSizeMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrgFeeSettleDTO(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgId:");
    sb.append(this.orgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    sb.append(this.partnerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyMoneyTotal:");
    sb.append(this.applyMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanMoneyTotal:");
    sb.append(this.loanMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMoneyTotal:");
    sb.append(this.paymentMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleDate:");
    if (this.settleDate == null) {
      sb.append("null");
    } else {
      sb.append(this.settleDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rebateRate:");
    sb.append(this.rebateRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnCommRate:");
    sb.append(this.returnCommRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundMoneyTotal:");
    sb.append(this.refundMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnCommTotal:");
    sb.append(this.returnCommTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeMoneyTotal:");
    sb.append(this.chargeMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rebateMoneyTotal:");
    sb.append(this.rebateMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rebateType:");
    sb.append(this.rebateType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanDateStart:");
    if (this.loanDateStart == null) {
      sb.append("null");
    } else {
      sb.append(this.loanDateStart);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanDateEnd:");
    if (this.loanDateEnd == null) {
      sb.append("null");
    } else {
      sb.append(this.loanDateEnd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerName:");
    if (this.partnerName == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleDateEnd:");
    if (this.settleDateEnd == null) {
      sb.append("null");
    } else {
      sb.append(this.settleDateEnd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extimateFeeRate:");
    sb.append(this.extimateFeeRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("actualFeeRate:");
    sb.append(this.actualFeeRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fundSizeMoney:");
    sb.append(this.fundSizeMoney);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrgFeeSettleDTOStandardSchemeFactory implements SchemeFactory {
    public OrgFeeSettleDTOStandardScheme getScheme() {
      return new OrgFeeSettleDTOStandardScheme();
    }
  }

  private static class OrgFeeSettleDTOStandardScheme extends StandardScheme<OrgFeeSettleDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrgFeeSettleDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgId = iprot.readI32();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerId = iprot.readI32();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APPLY_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.applyMoneyTotal = iprot.readDouble();
              struct.setApplyMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOAN_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanMoneyTotal = iprot.readDouble();
              struct.setLoanMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAYMENT_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.paymentMoneyTotal = iprot.readDouble();
              struct.setPaymentMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SETTLE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleDate = iprot.readString();
              struct.setSettleDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REBATE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rebateRate = iprot.readDouble();
              struct.setRebateRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RETURN_COMM_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnCommRate = iprot.readDouble();
              struct.setReturnCommRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // REFUND_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.refundMoneyTotal = iprot.readDouble();
              struct.setRefundMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RETURN_COMM_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnCommTotal = iprot.readDouble();
              struct.setReturnCommTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CHARGE_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.chargeMoneyTotal = iprot.readDouble();
              struct.setChargeMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REBATE_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rebateMoneyTotal = iprot.readDouble();
              struct.setRebateMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // REBATE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rebateType = iprot.readI32();
              struct.setRebateTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // LOAN_DATE_START
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanDateStart = iprot.readString();
              struct.setLoanDateStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // LOAN_DATE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanDateEnd = iprot.readString();
              struct.setLoanDateEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PARTNER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerName = iprot.readString();
              struct.setPartnerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SETTLE_DATE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleDateEnd = iprot.readString();
              struct.setSettleDateEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // EXTIMATE_FEE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.extimateFeeRate = iprot.readDouble();
              struct.setExtimateFeeRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // ACTUAL_FEE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.actualFeeRate = iprot.readDouble();
              struct.setActualFeeRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // FUND_SIZE_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.fundSizeMoney = iprot.readDouble();
              struct.setFundSizeMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrgFeeSettleDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
      oprot.writeI32(struct.orgId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
      oprot.writeI32(struct.partnerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APPLY_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.applyMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.loanMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.paymentMoneyTotal);
      oprot.writeFieldEnd();
      if (struct.settleDate != null) {
        oprot.writeFieldBegin(SETTLE_DATE_FIELD_DESC);
        oprot.writeString(struct.settleDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REBATE_RATE_FIELD_DESC);
      oprot.writeDouble(struct.rebateRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RETURN_COMM_RATE_FIELD_DESC);
      oprot.writeDouble(struct.returnCommRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REFUND_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.refundMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RETURN_COMM_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.returnCommTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHARGE_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.chargeMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REBATE_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.rebateMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REBATE_TYPE_FIELD_DESC);
      oprot.writeI32(struct.rebateType);
      oprot.writeFieldEnd();
      if (struct.loanDateStart != null) {
        oprot.writeFieldBegin(LOAN_DATE_START_FIELD_DESC);
        oprot.writeString(struct.loanDateStart);
        oprot.writeFieldEnd();
      }
      if (struct.loanDateEnd != null) {
        oprot.writeFieldBegin(LOAN_DATE_END_FIELD_DESC);
        oprot.writeString(struct.loanDateEnd);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.partnerName != null) {
        oprot.writeFieldBegin(PARTNER_NAME_FIELD_DESC);
        oprot.writeString(struct.partnerName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.settleDateEnd != null) {
        oprot.writeFieldBegin(SETTLE_DATE_END_FIELD_DESC);
        oprot.writeString(struct.settleDateEnd);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXTIMATE_FEE_RATE_FIELD_DESC);
      oprot.writeDouble(struct.extimateFeeRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACTUAL_FEE_RATE_FIELD_DESC);
      oprot.writeDouble(struct.actualFeeRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FUND_SIZE_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.fundSizeMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrgFeeSettleDTOTupleSchemeFactory implements SchemeFactory {
    public OrgFeeSettleDTOTupleScheme getScheme() {
      return new OrgFeeSettleDTOTupleScheme();
    }
  }

  private static class OrgFeeSettleDTOTupleScheme extends TupleScheme<OrgFeeSettleDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrgFeeSettleDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetOrgId()) {
        optionals.set(1);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(2);
      }
      if (struct.isSetApplyMoneyTotal()) {
        optionals.set(3);
      }
      if (struct.isSetLoanMoneyTotal()) {
        optionals.set(4);
      }
      if (struct.isSetPaymentMoneyTotal()) {
        optionals.set(5);
      }
      if (struct.isSetSettleDate()) {
        optionals.set(6);
      }
      if (struct.isSetRebateRate()) {
        optionals.set(7);
      }
      if (struct.isSetReturnCommRate()) {
        optionals.set(8);
      }
      if (struct.isSetRefundMoneyTotal()) {
        optionals.set(9);
      }
      if (struct.isSetReturnCommTotal()) {
        optionals.set(10);
      }
      if (struct.isSetChargeMoneyTotal()) {
        optionals.set(11);
      }
      if (struct.isSetRebateMoneyTotal()) {
        optionals.set(12);
      }
      if (struct.isSetRebateType()) {
        optionals.set(13);
      }
      if (struct.isSetLoanDateStart()) {
        optionals.set(14);
      }
      if (struct.isSetLoanDateEnd()) {
        optionals.set(15);
      }
      if (struct.isSetPage()) {
        optionals.set(16);
      }
      if (struct.isSetRows()) {
        optionals.set(17);
      }
      if (struct.isSetOrgName()) {
        optionals.set(18);
      }
      if (struct.isSetPartnerName()) {
        optionals.set(19);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(20);
      }
      if (struct.isSetSettleDateEnd()) {
        optionals.set(21);
      }
      if (struct.isSetExtimateFeeRate()) {
        optionals.set(22);
      }
      if (struct.isSetActualFeeRate()) {
        optionals.set(23);
      }
      if (struct.isSetFundSizeMoney()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetOrgId()) {
        oprot.writeI32(struct.orgId);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeI32(struct.partnerId);
      }
      if (struct.isSetApplyMoneyTotal()) {
        oprot.writeDouble(struct.applyMoneyTotal);
      }
      if (struct.isSetLoanMoneyTotal()) {
        oprot.writeDouble(struct.loanMoneyTotal);
      }
      if (struct.isSetPaymentMoneyTotal()) {
        oprot.writeDouble(struct.paymentMoneyTotal);
      }
      if (struct.isSetSettleDate()) {
        oprot.writeString(struct.settleDate);
      }
      if (struct.isSetRebateRate()) {
        oprot.writeDouble(struct.rebateRate);
      }
      if (struct.isSetReturnCommRate()) {
        oprot.writeDouble(struct.returnCommRate);
      }
      if (struct.isSetRefundMoneyTotal()) {
        oprot.writeDouble(struct.refundMoneyTotal);
      }
      if (struct.isSetReturnCommTotal()) {
        oprot.writeDouble(struct.returnCommTotal);
      }
      if (struct.isSetChargeMoneyTotal()) {
        oprot.writeDouble(struct.chargeMoneyTotal);
      }
      if (struct.isSetRebateMoneyTotal()) {
        oprot.writeDouble(struct.rebateMoneyTotal);
      }
      if (struct.isSetRebateType()) {
        oprot.writeI32(struct.rebateType);
      }
      if (struct.isSetLoanDateStart()) {
        oprot.writeString(struct.loanDateStart);
      }
      if (struct.isSetLoanDateEnd()) {
        oprot.writeString(struct.loanDateEnd);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetPartnerName()) {
        oprot.writeString(struct.partnerName);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetSettleDateEnd()) {
        oprot.writeString(struct.settleDateEnd);
      }
      if (struct.isSetExtimateFeeRate()) {
        oprot.writeDouble(struct.extimateFeeRate);
      }
      if (struct.isSetActualFeeRate()) {
        oprot.writeDouble(struct.actualFeeRate);
      }
      if (struct.isSetFundSizeMoney()) {
        oprot.writeDouble(struct.fundSizeMoney);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrgFeeSettleDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.orgId = iprot.readI32();
        struct.setOrgIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.partnerId = iprot.readI32();
        struct.setPartnerIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.applyMoneyTotal = iprot.readDouble();
        struct.setApplyMoneyTotalIsSet(true);
      }
      if (incoming.get(4)) {
        struct.loanMoneyTotal = iprot.readDouble();
        struct.setLoanMoneyTotalIsSet(true);
      }
      if (incoming.get(5)) {
        struct.paymentMoneyTotal = iprot.readDouble();
        struct.setPaymentMoneyTotalIsSet(true);
      }
      if (incoming.get(6)) {
        struct.settleDate = iprot.readString();
        struct.setSettleDateIsSet(true);
      }
      if (incoming.get(7)) {
        struct.rebateRate = iprot.readDouble();
        struct.setRebateRateIsSet(true);
      }
      if (incoming.get(8)) {
        struct.returnCommRate = iprot.readDouble();
        struct.setReturnCommRateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.refundMoneyTotal = iprot.readDouble();
        struct.setRefundMoneyTotalIsSet(true);
      }
      if (incoming.get(10)) {
        struct.returnCommTotal = iprot.readDouble();
        struct.setReturnCommTotalIsSet(true);
      }
      if (incoming.get(11)) {
        struct.chargeMoneyTotal = iprot.readDouble();
        struct.setChargeMoneyTotalIsSet(true);
      }
      if (incoming.get(12)) {
        struct.rebateMoneyTotal = iprot.readDouble();
        struct.setRebateMoneyTotalIsSet(true);
      }
      if (incoming.get(13)) {
        struct.rebateType = iprot.readI32();
        struct.setRebateTypeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.loanDateStart = iprot.readString();
        struct.setLoanDateStartIsSet(true);
      }
      if (incoming.get(15)) {
        struct.loanDateEnd = iprot.readString();
        struct.setLoanDateEndIsSet(true);
      }
      if (incoming.get(16)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(17)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(18)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(19)) {
        struct.partnerName = iprot.readString();
        struct.setPartnerNameIsSet(true);
      }
      if (incoming.get(20)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.settleDateEnd = iprot.readString();
        struct.setSettleDateEndIsSet(true);
      }
      if (incoming.get(22)) {
        struct.extimateFeeRate = iprot.readDouble();
        struct.setExtimateFeeRateIsSet(true);
      }
      if (incoming.get(23)) {
        struct.actualFeeRate = iprot.readDouble();
        struct.setActualFeeRateIsSet(true);
      }
      if (incoming.get(24)) {
        struct.fundSizeMoney = iprot.readDouble();
        struct.setFundSizeMoneyIsSet(true);
      }
    }
  }

}

