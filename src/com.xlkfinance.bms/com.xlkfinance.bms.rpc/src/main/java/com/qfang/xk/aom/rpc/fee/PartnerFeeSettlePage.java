/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.qfang.xk.aom.rpc.fee;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-9-12")
public class PartnerFeeSettlePage implements org.apache.thrift.TBase<PartnerFeeSettlePage, PartnerFeeSettlePage._Fields>, java.io.Serializable, Cloneable, Comparable<PartnerFeeSettlePage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PartnerFeeSettlePage");

  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FEE_SETTLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("feeSettleId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contact", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SETTLE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("settleDate", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SETTLE_DATE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("settleDateEnd", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("returnCommTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField RETURN_COMM_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("returnCommRate", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField APPLY_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("applyMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField LOAN_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("loanMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField PAYMENT_MONEY_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentMoneyTotal", org.apache.thrift.protocol.TType.DOUBLE, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PartnerFeeSettlePageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PartnerFeeSettlePageTupleSchemeFactory());
  }

  public int page; // required
  public int rows; // required
  public int feeSettleId; // required
  public int orgId; // required
  public String orgName; // required
  public String contact; // required
  public String phone; // required
  public int partnerId; // required
  public String settleDate; // required
  public String settleDateEnd; // required
  public double returnCommTotal; // required
  public double returnCommRate; // required
  public double applyMoneyTotal; // required
  public double loanMoneyTotal; // required
  public double paymentMoneyTotal; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PAGE((short)1, "page"),
    ROWS((short)2, "rows"),
    FEE_SETTLE_ID((short)3, "feeSettleId"),
    ORG_ID((short)4, "orgId"),
    ORG_NAME((short)5, "orgName"),
    CONTACT((short)6, "contact"),
    PHONE((short)7, "phone"),
    PARTNER_ID((short)8, "partnerId"),
    SETTLE_DATE((short)9, "settleDate"),
    SETTLE_DATE_END((short)10, "settleDateEnd"),
    RETURN_COMM_TOTAL((short)11, "returnCommTotal"),
    RETURN_COMM_RATE((short)12, "returnCommRate"),
    APPLY_MONEY_TOTAL((short)13, "applyMoneyTotal"),
    LOAN_MONEY_TOTAL((short)14, "loanMoneyTotal"),
    PAYMENT_MONEY_TOTAL((short)15, "paymentMoneyTotal");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PAGE
          return PAGE;
        case 2: // ROWS
          return ROWS;
        case 3: // FEE_SETTLE_ID
          return FEE_SETTLE_ID;
        case 4: // ORG_ID
          return ORG_ID;
        case 5: // ORG_NAME
          return ORG_NAME;
        case 6: // CONTACT
          return CONTACT;
        case 7: // PHONE
          return PHONE;
        case 8: // PARTNER_ID
          return PARTNER_ID;
        case 9: // SETTLE_DATE
          return SETTLE_DATE;
        case 10: // SETTLE_DATE_END
          return SETTLE_DATE_END;
        case 11: // RETURN_COMM_TOTAL
          return RETURN_COMM_TOTAL;
        case 12: // RETURN_COMM_RATE
          return RETURN_COMM_RATE;
        case 13: // APPLY_MONEY_TOTAL
          return APPLY_MONEY_TOTAL;
        case 14: // LOAN_MONEY_TOTAL
          return LOAN_MONEY_TOTAL;
        case 15: // PAYMENT_MONEY_TOTAL
          return PAYMENT_MONEY_TOTAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAGE_ISSET_ID = 0;
  private static final int __ROWS_ISSET_ID = 1;
  private static final int __FEESETTLEID_ISSET_ID = 2;
  private static final int __ORGID_ISSET_ID = 3;
  private static final int __PARTNERID_ISSET_ID = 4;
  private static final int __RETURNCOMMTOTAL_ISSET_ID = 5;
  private static final int __RETURNCOMMRATE_ISSET_ID = 6;
  private static final int __APPLYMONEYTOTAL_ISSET_ID = 7;
  private static final int __LOANMONEYTOTAL_ISSET_ID = 8;
  private static final int __PAYMENTMONEYTOTAL_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEE_SETTLE_ID, new org.apache.thrift.meta_data.FieldMetaData("feeSettleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT, new org.apache.thrift.meta_data.FieldMetaData("contact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SETTLE_DATE, new org.apache.thrift.meta_data.FieldMetaData("settleDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_DATE_END, new org.apache.thrift.meta_data.FieldMetaData("settleDateEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RETURN_COMM_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("returnCommTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RETURN_COMM_RATE, new org.apache.thrift.meta_data.FieldMetaData("returnCommRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APPLY_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("applyMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("loanMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAYMENT_MONEY_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("paymentMoneyTotal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PartnerFeeSettlePage.class, metaDataMap);
  }

  public PartnerFeeSettlePage() {
  }

  public PartnerFeeSettlePage(
    int page,
    int rows,
    int feeSettleId,
    int orgId,
    String orgName,
    String contact,
    String phone,
    int partnerId,
    String settleDate,
    String settleDateEnd,
    double returnCommTotal,
    double returnCommRate,
    double applyMoneyTotal,
    double loanMoneyTotal,
    double paymentMoneyTotal)
  {
    this();
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.feeSettleId = feeSettleId;
    setFeeSettleIdIsSet(true);
    this.orgId = orgId;
    setOrgIdIsSet(true);
    this.orgName = orgName;
    this.contact = contact;
    this.phone = phone;
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    this.settleDate = settleDate;
    this.settleDateEnd = settleDateEnd;
    this.returnCommTotal = returnCommTotal;
    setReturnCommTotalIsSet(true);
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    this.applyMoneyTotal = applyMoneyTotal;
    setApplyMoneyTotalIsSet(true);
    this.loanMoneyTotal = loanMoneyTotal;
    setLoanMoneyTotalIsSet(true);
    this.paymentMoneyTotal = paymentMoneyTotal;
    setPaymentMoneyTotalIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PartnerFeeSettlePage(PartnerFeeSettlePage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.page = other.page;
    this.rows = other.rows;
    this.feeSettleId = other.feeSettleId;
    this.orgId = other.orgId;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetContact()) {
      this.contact = other.contact;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.partnerId = other.partnerId;
    if (other.isSetSettleDate()) {
      this.settleDate = other.settleDate;
    }
    if (other.isSetSettleDateEnd()) {
      this.settleDateEnd = other.settleDateEnd;
    }
    this.returnCommTotal = other.returnCommTotal;
    this.returnCommRate = other.returnCommRate;
    this.applyMoneyTotal = other.applyMoneyTotal;
    this.loanMoneyTotal = other.loanMoneyTotal;
    this.paymentMoneyTotal = other.paymentMoneyTotal;
  }

  public PartnerFeeSettlePage deepCopy() {
    return new PartnerFeeSettlePage(this);
  }

  @Override
  public void clear() {
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setFeeSettleIdIsSet(false);
    this.feeSettleId = 0;
    setOrgIdIsSet(false);
    this.orgId = 0;
    this.orgName = null;
    this.contact = null;
    this.phone = null;
    setPartnerIdIsSet(false);
    this.partnerId = 0;
    this.settleDate = null;
    this.settleDateEnd = null;
    setReturnCommTotalIsSet(false);
    this.returnCommTotal = 0.0;
    setReturnCommRateIsSet(false);
    this.returnCommRate = 0.0;
    setApplyMoneyTotalIsSet(false);
    this.applyMoneyTotal = 0.0;
    setLoanMoneyTotalIsSet(false);
    this.loanMoneyTotal = 0.0;
    setPaymentMoneyTotalIsSet(false);
    this.paymentMoneyTotal = 0.0;
  }

  public int getPage() {
    return this.page;
  }

  public PartnerFeeSettlePage setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public PartnerFeeSettlePage setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getFeeSettleId() {
    return this.feeSettleId;
  }

  public PartnerFeeSettlePage setFeeSettleId(int feeSettleId) {
    this.feeSettleId = feeSettleId;
    setFeeSettleIdIsSet(true);
    return this;
  }

  public void unsetFeeSettleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FEESETTLEID_ISSET_ID);
  }

  /** Returns true if field feeSettleId is set (has been assigned a value) and false otherwise */
  public boolean isSetFeeSettleId() {
    return EncodingUtils.testBit(__isset_bitfield, __FEESETTLEID_ISSET_ID);
  }

  public void setFeeSettleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FEESETTLEID_ISSET_ID, value);
  }

  public int getOrgId() {
    return this.orgId;
  }

  public PartnerFeeSettlePage setOrgId(int orgId) {
    this.orgId = orgId;
    setOrgIdIsSet(true);
    return this;
  }

  public void unsetOrgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  public void setOrgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGID_ISSET_ID, value);
  }

  public String getOrgName() {
    return this.orgName;
  }

  public PartnerFeeSettlePage setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getContact() {
    return this.contact;
  }

  public PartnerFeeSettlePage setContact(String contact) {
    this.contact = contact;
    return this;
  }

  public void unsetContact() {
    this.contact = null;
  }

  /** Returns true if field contact is set (has been assigned a value) and false otherwise */
  public boolean isSetContact() {
    return this.contact != null;
  }

  public void setContactIsSet(boolean value) {
    if (!value) {
      this.contact = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public PartnerFeeSettlePage setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public int getPartnerId() {
    return this.partnerId;
  }

  public PartnerFeeSettlePage setPartnerId(int partnerId) {
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    return this;
  }

  public void unsetPartnerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERID_ISSET_ID);
  }

  public void setPartnerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERID_ISSET_ID, value);
  }

  public String getSettleDate() {
    return this.settleDate;
  }

  public PartnerFeeSettlePage setSettleDate(String settleDate) {
    this.settleDate = settleDate;
    return this;
  }

  public void unsetSettleDate() {
    this.settleDate = null;
  }

  /** Returns true if field settleDate is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleDate() {
    return this.settleDate != null;
  }

  public void setSettleDateIsSet(boolean value) {
    if (!value) {
      this.settleDate = null;
    }
  }

  public String getSettleDateEnd() {
    return this.settleDateEnd;
  }

  public PartnerFeeSettlePage setSettleDateEnd(String settleDateEnd) {
    this.settleDateEnd = settleDateEnd;
    return this;
  }

  public void unsetSettleDateEnd() {
    this.settleDateEnd = null;
  }

  /** Returns true if field settleDateEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleDateEnd() {
    return this.settleDateEnd != null;
  }

  public void setSettleDateEndIsSet(boolean value) {
    if (!value) {
      this.settleDateEnd = null;
    }
  }

  public double getReturnCommTotal() {
    return this.returnCommTotal;
  }

  public PartnerFeeSettlePage setReturnCommTotal(double returnCommTotal) {
    this.returnCommTotal = returnCommTotal;
    setReturnCommTotalIsSet(true);
    return this;
  }

  public void unsetReturnCommTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID);
  }

  /** Returns true if field returnCommTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCommTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID);
  }

  public void setReturnCommTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMMTOTAL_ISSET_ID, value);
  }

  public double getReturnCommRate() {
    return this.returnCommRate;
  }

  public PartnerFeeSettlePage setReturnCommRate(double returnCommRate) {
    this.returnCommRate = returnCommRate;
    setReturnCommRateIsSet(true);
    return this;
  }

  public void unsetReturnCommRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  /** Returns true if field returnCommRate is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnCommRate() {
    return EncodingUtils.testBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID);
  }

  public void setReturnCommRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RETURNCOMMRATE_ISSET_ID, value);
  }

  public double getApplyMoneyTotal() {
    return this.applyMoneyTotal;
  }

  public PartnerFeeSettlePage setApplyMoneyTotal(double applyMoneyTotal) {
    this.applyMoneyTotal = applyMoneyTotal;
    setApplyMoneyTotalIsSet(true);
    return this;
  }

  public void unsetApplyMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field applyMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID);
  }

  public void setApplyMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYMONEYTOTAL_ISSET_ID, value);
  }

  public double getLoanMoneyTotal() {
    return this.loanMoneyTotal;
  }

  public PartnerFeeSettlePage setLoanMoneyTotal(double loanMoneyTotal) {
    this.loanMoneyTotal = loanMoneyTotal;
    setLoanMoneyTotalIsSet(true);
    return this;
  }

  public void unsetLoanMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field loanMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID);
  }

  public void setLoanMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANMONEYTOTAL_ISSET_ID, value);
  }

  public double getPaymentMoneyTotal() {
    return this.paymentMoneyTotal;
  }

  public PartnerFeeSettlePage setPaymentMoneyTotal(double paymentMoneyTotal) {
    this.paymentMoneyTotal = paymentMoneyTotal;
    setPaymentMoneyTotalIsSet(true);
    return this;
  }

  public void unsetPaymentMoneyTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID);
  }

  /** Returns true if field paymentMoneyTotal is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentMoneyTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID);
  }

  public void setPaymentMoneyTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYMENTMONEYTOTAL_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case FEE_SETTLE_ID:
      if (value == null) {
        unsetFeeSettleId();
      } else {
        setFeeSettleId((Integer)value);
      }
      break;

    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((Integer)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case CONTACT:
      if (value == null) {
        unsetContact();
      } else {
        setContact((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((Integer)value);
      }
      break;

    case SETTLE_DATE:
      if (value == null) {
        unsetSettleDate();
      } else {
        setSettleDate((String)value);
      }
      break;

    case SETTLE_DATE_END:
      if (value == null) {
        unsetSettleDateEnd();
      } else {
        setSettleDateEnd((String)value);
      }
      break;

    case RETURN_COMM_TOTAL:
      if (value == null) {
        unsetReturnCommTotal();
      } else {
        setReturnCommTotal((Double)value);
      }
      break;

    case RETURN_COMM_RATE:
      if (value == null) {
        unsetReturnCommRate();
      } else {
        setReturnCommRate((Double)value);
      }
      break;

    case APPLY_MONEY_TOTAL:
      if (value == null) {
        unsetApplyMoneyTotal();
      } else {
        setApplyMoneyTotal((Double)value);
      }
      break;

    case LOAN_MONEY_TOTAL:
      if (value == null) {
        unsetLoanMoneyTotal();
      } else {
        setLoanMoneyTotal((Double)value);
      }
      break;

    case PAYMENT_MONEY_TOTAL:
      if (value == null) {
        unsetPaymentMoneyTotal();
      } else {
        setPaymentMoneyTotal((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case FEE_SETTLE_ID:
      return Integer.valueOf(getFeeSettleId());

    case ORG_ID:
      return Integer.valueOf(getOrgId());

    case ORG_NAME:
      return getOrgName();

    case CONTACT:
      return getContact();

    case PHONE:
      return getPhone();

    case PARTNER_ID:
      return Integer.valueOf(getPartnerId());

    case SETTLE_DATE:
      return getSettleDate();

    case SETTLE_DATE_END:
      return getSettleDateEnd();

    case RETURN_COMM_TOTAL:
      return Double.valueOf(getReturnCommTotal());

    case RETURN_COMM_RATE:
      return Double.valueOf(getReturnCommRate());

    case APPLY_MONEY_TOTAL:
      return Double.valueOf(getApplyMoneyTotal());

    case LOAN_MONEY_TOTAL:
      return Double.valueOf(getLoanMoneyTotal());

    case PAYMENT_MONEY_TOTAL:
      return Double.valueOf(getPaymentMoneyTotal());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case FEE_SETTLE_ID:
      return isSetFeeSettleId();
    case ORG_ID:
      return isSetOrgId();
    case ORG_NAME:
      return isSetOrgName();
    case CONTACT:
      return isSetContact();
    case PHONE:
      return isSetPhone();
    case PARTNER_ID:
      return isSetPartnerId();
    case SETTLE_DATE:
      return isSetSettleDate();
    case SETTLE_DATE_END:
      return isSetSettleDateEnd();
    case RETURN_COMM_TOTAL:
      return isSetReturnCommTotal();
    case RETURN_COMM_RATE:
      return isSetReturnCommRate();
    case APPLY_MONEY_TOTAL:
      return isSetApplyMoneyTotal();
    case LOAN_MONEY_TOTAL:
      return isSetLoanMoneyTotal();
    case PAYMENT_MONEY_TOTAL:
      return isSetPaymentMoneyTotal();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PartnerFeeSettlePage)
      return this.equals((PartnerFeeSettlePage)that);
    return false;
  }

  public boolean equals(PartnerFeeSettlePage that) {
    if (that == null)
      return false;

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_feeSettleId = true;
    boolean that_present_feeSettleId = true;
    if (this_present_feeSettleId || that_present_feeSettleId) {
      if (!(this_present_feeSettleId && that_present_feeSettleId))
        return false;
      if (this.feeSettleId != that.feeSettleId)
        return false;
    }

    boolean this_present_orgId = true;
    boolean that_present_orgId = true;
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (this.orgId != that.orgId)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_contact = true && this.isSetContact();
    boolean that_present_contact = true && that.isSetContact();
    if (this_present_contact || that_present_contact) {
      if (!(this_present_contact && that_present_contact))
        return false;
      if (!this.contact.equals(that.contact))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_partnerId = true;
    boolean that_present_partnerId = true;
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (this.partnerId != that.partnerId)
        return false;
    }

    boolean this_present_settleDate = true && this.isSetSettleDate();
    boolean that_present_settleDate = true && that.isSetSettleDate();
    if (this_present_settleDate || that_present_settleDate) {
      if (!(this_present_settleDate && that_present_settleDate))
        return false;
      if (!this.settleDate.equals(that.settleDate))
        return false;
    }

    boolean this_present_settleDateEnd = true && this.isSetSettleDateEnd();
    boolean that_present_settleDateEnd = true && that.isSetSettleDateEnd();
    if (this_present_settleDateEnd || that_present_settleDateEnd) {
      if (!(this_present_settleDateEnd && that_present_settleDateEnd))
        return false;
      if (!this.settleDateEnd.equals(that.settleDateEnd))
        return false;
    }

    boolean this_present_returnCommTotal = true;
    boolean that_present_returnCommTotal = true;
    if (this_present_returnCommTotal || that_present_returnCommTotal) {
      if (!(this_present_returnCommTotal && that_present_returnCommTotal))
        return false;
      if (this.returnCommTotal != that.returnCommTotal)
        return false;
    }

    boolean this_present_returnCommRate = true;
    boolean that_present_returnCommRate = true;
    if (this_present_returnCommRate || that_present_returnCommRate) {
      if (!(this_present_returnCommRate && that_present_returnCommRate))
        return false;
      if (this.returnCommRate != that.returnCommRate)
        return false;
    }

    boolean this_present_applyMoneyTotal = true;
    boolean that_present_applyMoneyTotal = true;
    if (this_present_applyMoneyTotal || that_present_applyMoneyTotal) {
      if (!(this_present_applyMoneyTotal && that_present_applyMoneyTotal))
        return false;
      if (this.applyMoneyTotal != that.applyMoneyTotal)
        return false;
    }

    boolean this_present_loanMoneyTotal = true;
    boolean that_present_loanMoneyTotal = true;
    if (this_present_loanMoneyTotal || that_present_loanMoneyTotal) {
      if (!(this_present_loanMoneyTotal && that_present_loanMoneyTotal))
        return false;
      if (this.loanMoneyTotal != that.loanMoneyTotal)
        return false;
    }

    boolean this_present_paymentMoneyTotal = true;
    boolean that_present_paymentMoneyTotal = true;
    if (this_present_paymentMoneyTotal || that_present_paymentMoneyTotal) {
      if (!(this_present_paymentMoneyTotal && that_present_paymentMoneyTotal))
        return false;
      if (this.paymentMoneyTotal != that.paymentMoneyTotal)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_feeSettleId = true;
    list.add(present_feeSettleId);
    if (present_feeSettleId)
      list.add(feeSettleId);

    boolean present_orgId = true;
    list.add(present_orgId);
    if (present_orgId)
      list.add(orgId);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_contact = true && (isSetContact());
    list.add(present_contact);
    if (present_contact)
      list.add(contact);

    boolean present_phone = true && (isSetPhone());
    list.add(present_phone);
    if (present_phone)
      list.add(phone);

    boolean present_partnerId = true;
    list.add(present_partnerId);
    if (present_partnerId)
      list.add(partnerId);

    boolean present_settleDate = true && (isSetSettleDate());
    list.add(present_settleDate);
    if (present_settleDate)
      list.add(settleDate);

    boolean present_settleDateEnd = true && (isSetSettleDateEnd());
    list.add(present_settleDateEnd);
    if (present_settleDateEnd)
      list.add(settleDateEnd);

    boolean present_returnCommTotal = true;
    list.add(present_returnCommTotal);
    if (present_returnCommTotal)
      list.add(returnCommTotal);

    boolean present_returnCommRate = true;
    list.add(present_returnCommRate);
    if (present_returnCommRate)
      list.add(returnCommRate);

    boolean present_applyMoneyTotal = true;
    list.add(present_applyMoneyTotal);
    if (present_applyMoneyTotal)
      list.add(applyMoneyTotal);

    boolean present_loanMoneyTotal = true;
    list.add(present_loanMoneyTotal);
    if (present_loanMoneyTotal)
      list.add(loanMoneyTotal);

    boolean present_paymentMoneyTotal = true;
    list.add(present_paymentMoneyTotal);
    if (present_paymentMoneyTotal)
      list.add(paymentMoneyTotal);

    return list.hashCode();
  }

  @Override
  public int compareTo(PartnerFeeSettlePage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeeSettleId()).compareTo(other.isSetFeeSettleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeeSettleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feeSettleId, other.feeSettleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContact()).compareTo(other.isSetContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact, other.contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(other.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, other.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleDate()).compareTo(other.isSetSettleDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleDate, other.settleDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleDateEnd()).compareTo(other.isSetSettleDateEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleDateEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleDateEnd, other.settleDateEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnCommTotal()).compareTo(other.isSetReturnCommTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCommTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnCommTotal, other.returnCommTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReturnCommRate()).compareTo(other.isSetReturnCommRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnCommRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnCommRate, other.returnCommRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyMoneyTotal()).compareTo(other.isSetApplyMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyMoneyTotal, other.applyMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanMoneyTotal()).compareTo(other.isSetLoanMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanMoneyTotal, other.loanMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentMoneyTotal()).compareTo(other.isSetPaymentMoneyTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentMoneyTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentMoneyTotal, other.paymentMoneyTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PartnerFeeSettlePage(");
    boolean first = true;

    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("feeSettleId:");
    sb.append(this.feeSettleId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgId:");
    sb.append(this.orgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact:");
    if (this.contact == null) {
      sb.append("null");
    } else {
      sb.append(this.contact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    sb.append(this.partnerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleDate:");
    if (this.settleDate == null) {
      sb.append("null");
    } else {
      sb.append(this.settleDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleDateEnd:");
    if (this.settleDateEnd == null) {
      sb.append("null");
    } else {
      sb.append(this.settleDateEnd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnCommTotal:");
    sb.append(this.returnCommTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("returnCommRate:");
    sb.append(this.returnCommRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyMoneyTotal:");
    sb.append(this.applyMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanMoneyTotal:");
    sb.append(this.loanMoneyTotal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentMoneyTotal:");
    sb.append(this.paymentMoneyTotal);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PartnerFeeSettlePageStandardSchemeFactory implements SchemeFactory {
    public PartnerFeeSettlePageStandardScheme getScheme() {
      return new PartnerFeeSettlePageStandardScheme();
    }
  }

  private static class PartnerFeeSettlePageStandardScheme extends StandardScheme<PartnerFeeSettlePage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PartnerFeeSettlePage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FEE_SETTLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.feeSettleId = iprot.readI32();
              struct.setFeeSettleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgId = iprot.readI32();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact = iprot.readString();
              struct.setContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerId = iprot.readI32();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SETTLE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleDate = iprot.readString();
              struct.setSettleDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SETTLE_DATE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleDateEnd = iprot.readString();
              struct.setSettleDateEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RETURN_COMM_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnCommTotal = iprot.readDouble();
              struct.setReturnCommTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RETURN_COMM_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.returnCommRate = iprot.readDouble();
              struct.setReturnCommRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // APPLY_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.applyMoneyTotal = iprot.readDouble();
              struct.setApplyMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // LOAN_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanMoneyTotal = iprot.readDouble();
              struct.setLoanMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PAYMENT_MONEY_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.paymentMoneyTotal = iprot.readDouble();
              struct.setPaymentMoneyTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PartnerFeeSettlePage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FEE_SETTLE_ID_FIELD_DESC);
      oprot.writeI32(struct.feeSettleId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
      oprot.writeI32(struct.orgId);
      oprot.writeFieldEnd();
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.contact != null) {
        oprot.writeFieldBegin(CONTACT_FIELD_DESC);
        oprot.writeString(struct.contact);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
      oprot.writeI32(struct.partnerId);
      oprot.writeFieldEnd();
      if (struct.settleDate != null) {
        oprot.writeFieldBegin(SETTLE_DATE_FIELD_DESC);
        oprot.writeString(struct.settleDate);
        oprot.writeFieldEnd();
      }
      if (struct.settleDateEnd != null) {
        oprot.writeFieldBegin(SETTLE_DATE_END_FIELD_DESC);
        oprot.writeString(struct.settleDateEnd);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RETURN_COMM_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.returnCommTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RETURN_COMM_RATE_FIELD_DESC);
      oprot.writeDouble(struct.returnCommRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APPLY_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.applyMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.loanMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAYMENT_MONEY_TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.paymentMoneyTotal);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PartnerFeeSettlePageTupleSchemeFactory implements SchemeFactory {
    public PartnerFeeSettlePageTupleScheme getScheme() {
      return new PartnerFeeSettlePageTupleScheme();
    }
  }

  private static class PartnerFeeSettlePageTupleScheme extends TupleScheme<PartnerFeeSettlePage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PartnerFeeSettlePage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPage()) {
        optionals.set(0);
      }
      if (struct.isSetRows()) {
        optionals.set(1);
      }
      if (struct.isSetFeeSettleId()) {
        optionals.set(2);
      }
      if (struct.isSetOrgId()) {
        optionals.set(3);
      }
      if (struct.isSetOrgName()) {
        optionals.set(4);
      }
      if (struct.isSetContact()) {
        optionals.set(5);
      }
      if (struct.isSetPhone()) {
        optionals.set(6);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(7);
      }
      if (struct.isSetSettleDate()) {
        optionals.set(8);
      }
      if (struct.isSetSettleDateEnd()) {
        optionals.set(9);
      }
      if (struct.isSetReturnCommTotal()) {
        optionals.set(10);
      }
      if (struct.isSetReturnCommRate()) {
        optionals.set(11);
      }
      if (struct.isSetApplyMoneyTotal()) {
        optionals.set(12);
      }
      if (struct.isSetLoanMoneyTotal()) {
        optionals.set(13);
      }
      if (struct.isSetPaymentMoneyTotal()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetFeeSettleId()) {
        oprot.writeI32(struct.feeSettleId);
      }
      if (struct.isSetOrgId()) {
        oprot.writeI32(struct.orgId);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetContact()) {
        oprot.writeString(struct.contact);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeI32(struct.partnerId);
      }
      if (struct.isSetSettleDate()) {
        oprot.writeString(struct.settleDate);
      }
      if (struct.isSetSettleDateEnd()) {
        oprot.writeString(struct.settleDateEnd);
      }
      if (struct.isSetReturnCommTotal()) {
        oprot.writeDouble(struct.returnCommTotal);
      }
      if (struct.isSetReturnCommRate()) {
        oprot.writeDouble(struct.returnCommRate);
      }
      if (struct.isSetApplyMoneyTotal()) {
        oprot.writeDouble(struct.applyMoneyTotal);
      }
      if (struct.isSetLoanMoneyTotal()) {
        oprot.writeDouble(struct.loanMoneyTotal);
      }
      if (struct.isSetPaymentMoneyTotal()) {
        oprot.writeDouble(struct.paymentMoneyTotal);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PartnerFeeSettlePage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(1)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.feeSettleId = iprot.readI32();
        struct.setFeeSettleIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orgId = iprot.readI32();
        struct.setOrgIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.contact = iprot.readString();
        struct.setContactIsSet(true);
      }
      if (incoming.get(6)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(7)) {
        struct.partnerId = iprot.readI32();
        struct.setPartnerIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.settleDate = iprot.readString();
        struct.setSettleDateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.settleDateEnd = iprot.readString();
        struct.setSettleDateEndIsSet(true);
      }
      if (incoming.get(10)) {
        struct.returnCommTotal = iprot.readDouble();
        struct.setReturnCommTotalIsSet(true);
      }
      if (incoming.get(11)) {
        struct.returnCommRate = iprot.readDouble();
        struct.setReturnCommRateIsSet(true);
      }
      if (incoming.get(12)) {
        struct.applyMoneyTotal = iprot.readDouble();
        struct.setApplyMoneyTotalIsSet(true);
      }
      if (incoming.get(13)) {
        struct.loanMoneyTotal = iprot.readDouble();
        struct.setLoanMoneyTotalIsSet(true);
      }
      if (incoming.get(14)) {
        struct.paymentMoneyTotal = iprot.readDouble();
        struct.setPaymentMoneyTotalIsSet(true);
      }
    }
  }

}

