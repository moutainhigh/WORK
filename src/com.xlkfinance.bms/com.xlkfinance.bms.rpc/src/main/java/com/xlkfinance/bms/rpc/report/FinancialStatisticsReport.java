/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-5-24")
public class FinancialStatisticsReport implements org.apache.thrift.TBase<FinancialStatisticsReport, FinancialStatisticsReport._Fields>, java.io.Serializable, Cloneable, Comparable<FinancialStatisticsReport> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FinancialStatisticsReport");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BUSINESS_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessSource", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField LOAN_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("loanAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField REAL_LOAN_FIELD_DESC = new org.apache.thrift.protocol.TField("realLoan", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("loanDate", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField REC_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("recMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField REC_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("recLoanDate", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField PLAN_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("planLoanDate", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField NEED_REC_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("needRecMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField ORG_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgLoanDate", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ORG_RE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgReDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField POUNDAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("poundage", org.apache.thrift.protocol.TType.DOUBLE, (short)17);
  private static final org.apache.thrift.protocol.TField RE_POUNDAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("rePoundage", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("interest", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
  private static final org.apache.thrift.protocol.TField RE_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("reInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
  private static final org.apache.thrift.protocol.TField PAY_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("payInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)21);
  private static final org.apache.thrift.protocol.TField LOAN_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("loanEndDate", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField PLAN_LOAN_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("planLoanEndDate", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField REC_LOAN_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("recLoanEndDate", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField BUSINESS_SOURCE_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("businessSourceStr", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField PM_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserName", org.apache.thrift.protocol.TType.STRING, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FinancialStatisticsReportStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FinancialStatisticsReportTupleSchemeFactory());
  }

  public int projectId; // required
  public String projectName; // required
  public int businessSource; // required
  public int page; // required
  public int rows; // required
  public List<Integer> userIds; // required
  public double loanAmt; // required
  public double realLoan; // required
  public String loanDate; // required
  public double recMoney; // required
  public String recLoanDate; // required
  public String planLoanDate; // required
  public double needRecMoney; // required
  public String orgName; // required
  public String orgLoanDate; // required
  public String orgReDate; // required
  public double poundage; // required
  public double rePoundage; // required
  public double interest; // required
  public double reInterest; // required
  public double payInterest; // required
  public String loanEndDate; // required
  public String planLoanEndDate; // required
  public String recLoanEndDate; // required
  public String businessSourceStr; // required
  public String projectNumber; // required
  public String pmUserName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    PROJECT_NAME((short)2, "projectName"),
    BUSINESS_SOURCE((short)3, "businessSource"),
    PAGE((short)4, "page"),
    ROWS((short)5, "rows"),
    USER_IDS((short)6, "userIds"),
    LOAN_AMT((short)7, "loanAmt"),
    REAL_LOAN((short)8, "realLoan"),
    LOAN_DATE((short)9, "loanDate"),
    REC_MONEY((short)10, "recMoney"),
    REC_LOAN_DATE((short)11, "recLoanDate"),
    PLAN_LOAN_DATE((short)12, "planLoanDate"),
    NEED_REC_MONEY((short)13, "needRecMoney"),
    ORG_NAME((short)14, "orgName"),
    ORG_LOAN_DATE((short)15, "orgLoanDate"),
    ORG_RE_DATE((short)16, "orgReDate"),
    POUNDAGE((short)17, "poundage"),
    RE_POUNDAGE((short)18, "rePoundage"),
    INTEREST((short)19, "interest"),
    RE_INTEREST((short)20, "reInterest"),
    PAY_INTEREST((short)21, "payInterest"),
    LOAN_END_DATE((short)22, "loanEndDate"),
    PLAN_LOAN_END_DATE((short)23, "planLoanEndDate"),
    REC_LOAN_END_DATE((short)24, "recLoanEndDate"),
    BUSINESS_SOURCE_STR((short)25, "businessSourceStr"),
    PROJECT_NUMBER((short)26, "projectNumber"),
    PM_USER_NAME((short)27, "pmUserName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // PROJECT_NAME
          return PROJECT_NAME;
        case 3: // BUSINESS_SOURCE
          return BUSINESS_SOURCE;
        case 4: // PAGE
          return PAGE;
        case 5: // ROWS
          return ROWS;
        case 6: // USER_IDS
          return USER_IDS;
        case 7: // LOAN_AMT
          return LOAN_AMT;
        case 8: // REAL_LOAN
          return REAL_LOAN;
        case 9: // LOAN_DATE
          return LOAN_DATE;
        case 10: // REC_MONEY
          return REC_MONEY;
        case 11: // REC_LOAN_DATE
          return REC_LOAN_DATE;
        case 12: // PLAN_LOAN_DATE
          return PLAN_LOAN_DATE;
        case 13: // NEED_REC_MONEY
          return NEED_REC_MONEY;
        case 14: // ORG_NAME
          return ORG_NAME;
        case 15: // ORG_LOAN_DATE
          return ORG_LOAN_DATE;
        case 16: // ORG_RE_DATE
          return ORG_RE_DATE;
        case 17: // POUNDAGE
          return POUNDAGE;
        case 18: // RE_POUNDAGE
          return RE_POUNDAGE;
        case 19: // INTEREST
          return INTEREST;
        case 20: // RE_INTEREST
          return RE_INTEREST;
        case 21: // PAY_INTEREST
          return PAY_INTEREST;
        case 22: // LOAN_END_DATE
          return LOAN_END_DATE;
        case 23: // PLAN_LOAN_END_DATE
          return PLAN_LOAN_END_DATE;
        case 24: // REC_LOAN_END_DATE
          return REC_LOAN_END_DATE;
        case 25: // BUSINESS_SOURCE_STR
          return BUSINESS_SOURCE_STR;
        case 26: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 27: // PM_USER_NAME
          return PM_USER_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __BUSINESSSOURCE_ISSET_ID = 1;
  private static final int __PAGE_ISSET_ID = 2;
  private static final int __ROWS_ISSET_ID = 3;
  private static final int __LOANAMT_ISSET_ID = 4;
  private static final int __REALLOAN_ISSET_ID = 5;
  private static final int __RECMONEY_ISSET_ID = 6;
  private static final int __NEEDRECMONEY_ISSET_ID = 7;
  private static final int __POUNDAGE_ISSET_ID = 8;
  private static final int __REPOUNDAGE_ISSET_ID = 9;
  private static final int __INTEREST_ISSET_ID = 10;
  private static final int __REINTEREST_ISSET_ID = 11;
  private static final int __PAYINTEREST_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("businessSource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LOAN_AMT, new org.apache.thrift.meta_data.FieldMetaData("loanAmt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REAL_LOAN, new org.apache.thrift.meta_data.FieldMetaData("realLoan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("loanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REC_MONEY, new org.apache.thrift.meta_data.FieldMetaData("recMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REC_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("recLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("planLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NEED_REC_MONEY, new org.apache.thrift.meta_data.FieldMetaData("needRecMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("orgLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_RE_DATE, new org.apache.thrift.meta_data.FieldMetaData("orgReDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POUNDAGE, new org.apache.thrift.meta_data.FieldMetaData("poundage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RE_POUNDAGE, new org.apache.thrift.meta_data.FieldMetaData("rePoundage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.INTEREST, new org.apache.thrift.meta_data.FieldMetaData("interest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RE_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("reInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAY_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("payInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("loanEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_LOAN_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("planLoanEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REC_LOAN_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("recLoanEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_SOURCE_STR, new org.apache.thrift.meta_data.FieldMetaData("businessSourceStr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PM_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("pmUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FinancialStatisticsReport.class, metaDataMap);
  }

  public FinancialStatisticsReport() {
    this.page = 1;

    this.rows = 10;

  }

  public FinancialStatisticsReport(
    int projectId,
    String projectName,
    int businessSource,
    int page,
    int rows,
    List<Integer> userIds,
    double loanAmt,
    double realLoan,
    String loanDate,
    double recMoney,
    String recLoanDate,
    String planLoanDate,
    double needRecMoney,
    String orgName,
    String orgLoanDate,
    String orgReDate,
    double poundage,
    double rePoundage,
    double interest,
    double reInterest,
    double payInterest,
    String loanEndDate,
    String planLoanEndDate,
    String recLoanEndDate,
    String businessSourceStr,
    String projectNumber,
    String pmUserName)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectName = projectName;
    this.businessSource = businessSource;
    setBusinessSourceIsSet(true);
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.userIds = userIds;
    this.loanAmt = loanAmt;
    setLoanAmtIsSet(true);
    this.realLoan = realLoan;
    setRealLoanIsSet(true);
    this.loanDate = loanDate;
    this.recMoney = recMoney;
    setRecMoneyIsSet(true);
    this.recLoanDate = recLoanDate;
    this.planLoanDate = planLoanDate;
    this.needRecMoney = needRecMoney;
    setNeedRecMoneyIsSet(true);
    this.orgName = orgName;
    this.orgLoanDate = orgLoanDate;
    this.orgReDate = orgReDate;
    this.poundage = poundage;
    setPoundageIsSet(true);
    this.rePoundage = rePoundage;
    setRePoundageIsSet(true);
    this.interest = interest;
    setInterestIsSet(true);
    this.reInterest = reInterest;
    setReInterestIsSet(true);
    this.payInterest = payInterest;
    setPayInterestIsSet(true);
    this.loanEndDate = loanEndDate;
    this.planLoanEndDate = planLoanEndDate;
    this.recLoanEndDate = recLoanEndDate;
    this.businessSourceStr = businessSourceStr;
    this.projectNumber = projectNumber;
    this.pmUserName = pmUserName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FinancialStatisticsReport(FinancialStatisticsReport other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.businessSource = other.businessSource;
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
    this.loanAmt = other.loanAmt;
    this.realLoan = other.realLoan;
    if (other.isSetLoanDate()) {
      this.loanDate = other.loanDate;
    }
    this.recMoney = other.recMoney;
    if (other.isSetRecLoanDate()) {
      this.recLoanDate = other.recLoanDate;
    }
    if (other.isSetPlanLoanDate()) {
      this.planLoanDate = other.planLoanDate;
    }
    this.needRecMoney = other.needRecMoney;
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetOrgLoanDate()) {
      this.orgLoanDate = other.orgLoanDate;
    }
    if (other.isSetOrgReDate()) {
      this.orgReDate = other.orgReDate;
    }
    this.poundage = other.poundage;
    this.rePoundage = other.rePoundage;
    this.interest = other.interest;
    this.reInterest = other.reInterest;
    this.payInterest = other.payInterest;
    if (other.isSetLoanEndDate()) {
      this.loanEndDate = other.loanEndDate;
    }
    if (other.isSetPlanLoanEndDate()) {
      this.planLoanEndDate = other.planLoanEndDate;
    }
    if (other.isSetRecLoanEndDate()) {
      this.recLoanEndDate = other.recLoanEndDate;
    }
    if (other.isSetBusinessSourceStr()) {
      this.businessSourceStr = other.businessSourceStr;
    }
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetPmUserName()) {
      this.pmUserName = other.pmUserName;
    }
  }

  public FinancialStatisticsReport deepCopy() {
    return new FinancialStatisticsReport(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectName = null;
    setBusinessSourceIsSet(false);
    this.businessSource = 0;
    this.page = 1;

    this.rows = 10;

    this.userIds = null;
    setLoanAmtIsSet(false);
    this.loanAmt = 0.0;
    setRealLoanIsSet(false);
    this.realLoan = 0.0;
    this.loanDate = null;
    setRecMoneyIsSet(false);
    this.recMoney = 0.0;
    this.recLoanDate = null;
    this.planLoanDate = null;
    setNeedRecMoneyIsSet(false);
    this.needRecMoney = 0.0;
    this.orgName = null;
    this.orgLoanDate = null;
    this.orgReDate = null;
    setPoundageIsSet(false);
    this.poundage = 0.0;
    setRePoundageIsSet(false);
    this.rePoundage = 0.0;
    setInterestIsSet(false);
    this.interest = 0.0;
    setReInterestIsSet(false);
    this.reInterest = 0.0;
    setPayInterestIsSet(false);
    this.payInterest = 0.0;
    this.loanEndDate = null;
    this.planLoanEndDate = null;
    this.recLoanEndDate = null;
    this.businessSourceStr = null;
    this.projectNumber = null;
    this.pmUserName = null;
  }

  public int getProjectId() {
    return this.projectId;
  }

  public FinancialStatisticsReport setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public FinancialStatisticsReport setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getBusinessSource() {
    return this.businessSource;
  }

  public FinancialStatisticsReport setBusinessSource(int businessSource) {
    this.businessSource = businessSource;
    setBusinessSourceIsSet(true);
    return this;
  }

  public void unsetBusinessSource() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID);
  }

  /** Returns true if field businessSource is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessSource() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID);
  }

  public void setBusinessSourceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID, value);
  }

  public int getPage() {
    return this.page;
  }

  public FinancialStatisticsReport setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public FinancialStatisticsReport setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public FinancialStatisticsReport setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public double getLoanAmt() {
    return this.loanAmt;
  }

  public FinancialStatisticsReport setLoanAmt(double loanAmt) {
    this.loanAmt = loanAmt;
    setLoanAmtIsSet(true);
    return this;
  }

  public void unsetLoanAmt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANAMT_ISSET_ID);
  }

  /** Returns true if field loanAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanAmt() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANAMT_ISSET_ID);
  }

  public void setLoanAmtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANAMT_ISSET_ID, value);
  }

  public double getRealLoan() {
    return this.realLoan;
  }

  public FinancialStatisticsReport setRealLoan(double realLoan) {
    this.realLoan = realLoan;
    setRealLoanIsSet(true);
    return this;
  }

  public void unsetRealLoan() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REALLOAN_ISSET_ID);
  }

  /** Returns true if field realLoan is set (has been assigned a value) and false otherwise */
  public boolean isSetRealLoan() {
    return EncodingUtils.testBit(__isset_bitfield, __REALLOAN_ISSET_ID);
  }

  public void setRealLoanIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REALLOAN_ISSET_ID, value);
  }

  public String getLoanDate() {
    return this.loanDate;
  }

  public FinancialStatisticsReport setLoanDate(String loanDate) {
    this.loanDate = loanDate;
    return this;
  }

  public void unsetLoanDate() {
    this.loanDate = null;
  }

  /** Returns true if field loanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanDate() {
    return this.loanDate != null;
  }

  public void setLoanDateIsSet(boolean value) {
    if (!value) {
      this.loanDate = null;
    }
  }

  public double getRecMoney() {
    return this.recMoney;
  }

  public FinancialStatisticsReport setRecMoney(double recMoney) {
    this.recMoney = recMoney;
    setRecMoneyIsSet(true);
    return this;
  }

  public void unsetRecMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECMONEY_ISSET_ID);
  }

  /** Returns true if field recMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetRecMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __RECMONEY_ISSET_ID);
  }

  public void setRecMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECMONEY_ISSET_ID, value);
  }

  public String getRecLoanDate() {
    return this.recLoanDate;
  }

  public FinancialStatisticsReport setRecLoanDate(String recLoanDate) {
    this.recLoanDate = recLoanDate;
    return this;
  }

  public void unsetRecLoanDate() {
    this.recLoanDate = null;
  }

  /** Returns true if field recLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRecLoanDate() {
    return this.recLoanDate != null;
  }

  public void setRecLoanDateIsSet(boolean value) {
    if (!value) {
      this.recLoanDate = null;
    }
  }

  public String getPlanLoanDate() {
    return this.planLoanDate;
  }

  public FinancialStatisticsReport setPlanLoanDate(String planLoanDate) {
    this.planLoanDate = planLoanDate;
    return this;
  }

  public void unsetPlanLoanDate() {
    this.planLoanDate = null;
  }

  /** Returns true if field planLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanLoanDate() {
    return this.planLoanDate != null;
  }

  public void setPlanLoanDateIsSet(boolean value) {
    if (!value) {
      this.planLoanDate = null;
    }
  }

  public double getNeedRecMoney() {
    return this.needRecMoney;
  }

  public FinancialStatisticsReport setNeedRecMoney(double needRecMoney) {
    this.needRecMoney = needRecMoney;
    setNeedRecMoneyIsSet(true);
    return this;
  }

  public void unsetNeedRecMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEEDRECMONEY_ISSET_ID);
  }

  /** Returns true if field needRecMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetNeedRecMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __NEEDRECMONEY_ISSET_ID);
  }

  public void setNeedRecMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEEDRECMONEY_ISSET_ID, value);
  }

  public String getOrgName() {
    return this.orgName;
  }

  public FinancialStatisticsReport setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getOrgLoanDate() {
    return this.orgLoanDate;
  }

  public FinancialStatisticsReport setOrgLoanDate(String orgLoanDate) {
    this.orgLoanDate = orgLoanDate;
    return this;
  }

  public void unsetOrgLoanDate() {
    this.orgLoanDate = null;
  }

  /** Returns true if field orgLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgLoanDate() {
    return this.orgLoanDate != null;
  }

  public void setOrgLoanDateIsSet(boolean value) {
    if (!value) {
      this.orgLoanDate = null;
    }
  }

  public String getOrgReDate() {
    return this.orgReDate;
  }

  public FinancialStatisticsReport setOrgReDate(String orgReDate) {
    this.orgReDate = orgReDate;
    return this;
  }

  public void unsetOrgReDate() {
    this.orgReDate = null;
  }

  /** Returns true if field orgReDate is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgReDate() {
    return this.orgReDate != null;
  }

  public void setOrgReDateIsSet(boolean value) {
    if (!value) {
      this.orgReDate = null;
    }
  }

  public double getPoundage() {
    return this.poundage;
  }

  public FinancialStatisticsReport setPoundage(double poundage) {
    this.poundage = poundage;
    setPoundageIsSet(true);
    return this;
  }

  public void unsetPoundage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POUNDAGE_ISSET_ID);
  }

  /** Returns true if field poundage is set (has been assigned a value) and false otherwise */
  public boolean isSetPoundage() {
    return EncodingUtils.testBit(__isset_bitfield, __POUNDAGE_ISSET_ID);
  }

  public void setPoundageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POUNDAGE_ISSET_ID, value);
  }

  public double getRePoundage() {
    return this.rePoundage;
  }

  public FinancialStatisticsReport setRePoundage(double rePoundage) {
    this.rePoundage = rePoundage;
    setRePoundageIsSet(true);
    return this;
  }

  public void unsetRePoundage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REPOUNDAGE_ISSET_ID);
  }

  /** Returns true if field rePoundage is set (has been assigned a value) and false otherwise */
  public boolean isSetRePoundage() {
    return EncodingUtils.testBit(__isset_bitfield, __REPOUNDAGE_ISSET_ID);
  }

  public void setRePoundageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REPOUNDAGE_ISSET_ID, value);
  }

  public double getInterest() {
    return this.interest;
  }

  public FinancialStatisticsReport setInterest(double interest) {
    this.interest = interest;
    setInterestIsSet(true);
    return this;
  }

  public void unsetInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INTEREST_ISSET_ID);
  }

  /** Returns true if field interest is set (has been assigned a value) and false otherwise */
  public boolean isSetInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __INTEREST_ISSET_ID);
  }

  public void setInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INTEREST_ISSET_ID, value);
  }

  public double getReInterest() {
    return this.reInterest;
  }

  public FinancialStatisticsReport setReInterest(double reInterest) {
    this.reInterest = reInterest;
    setReInterestIsSet(true);
    return this;
  }

  public void unsetReInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REINTEREST_ISSET_ID);
  }

  /** Returns true if field reInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetReInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __REINTEREST_ISSET_ID);
  }

  public void setReInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REINTEREST_ISSET_ID, value);
  }

  public double getPayInterest() {
    return this.payInterest;
  }

  public FinancialStatisticsReport setPayInterest(double payInterest) {
    this.payInterest = payInterest;
    setPayInterestIsSet(true);
    return this;
  }

  public void unsetPayInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYINTEREST_ISSET_ID);
  }

  /** Returns true if field payInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetPayInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYINTEREST_ISSET_ID);
  }

  public void setPayInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYINTEREST_ISSET_ID, value);
  }

  public String getLoanEndDate() {
    return this.loanEndDate;
  }

  public FinancialStatisticsReport setLoanEndDate(String loanEndDate) {
    this.loanEndDate = loanEndDate;
    return this;
  }

  public void unsetLoanEndDate() {
    this.loanEndDate = null;
  }

  /** Returns true if field loanEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanEndDate() {
    return this.loanEndDate != null;
  }

  public void setLoanEndDateIsSet(boolean value) {
    if (!value) {
      this.loanEndDate = null;
    }
  }

  public String getPlanLoanEndDate() {
    return this.planLoanEndDate;
  }

  public FinancialStatisticsReport setPlanLoanEndDate(String planLoanEndDate) {
    this.planLoanEndDate = planLoanEndDate;
    return this;
  }

  public void unsetPlanLoanEndDate() {
    this.planLoanEndDate = null;
  }

  /** Returns true if field planLoanEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanLoanEndDate() {
    return this.planLoanEndDate != null;
  }

  public void setPlanLoanEndDateIsSet(boolean value) {
    if (!value) {
      this.planLoanEndDate = null;
    }
  }

  public String getRecLoanEndDate() {
    return this.recLoanEndDate;
  }

  public FinancialStatisticsReport setRecLoanEndDate(String recLoanEndDate) {
    this.recLoanEndDate = recLoanEndDate;
    return this;
  }

  public void unsetRecLoanEndDate() {
    this.recLoanEndDate = null;
  }

  /** Returns true if field recLoanEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRecLoanEndDate() {
    return this.recLoanEndDate != null;
  }

  public void setRecLoanEndDateIsSet(boolean value) {
    if (!value) {
      this.recLoanEndDate = null;
    }
  }

  public String getBusinessSourceStr() {
    return this.businessSourceStr;
  }

  public FinancialStatisticsReport setBusinessSourceStr(String businessSourceStr) {
    this.businessSourceStr = businessSourceStr;
    return this;
  }

  public void unsetBusinessSourceStr() {
    this.businessSourceStr = null;
  }

  /** Returns true if field businessSourceStr is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessSourceStr() {
    return this.businessSourceStr != null;
  }

  public void setBusinessSourceStrIsSet(boolean value) {
    if (!value) {
      this.businessSourceStr = null;
    }
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public FinancialStatisticsReport setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getPmUserName() {
    return this.pmUserName;
  }

  public FinancialStatisticsReport setPmUserName(String pmUserName) {
    this.pmUserName = pmUserName;
    return this;
  }

  public void unsetPmUserName() {
    this.pmUserName = null;
  }

  /** Returns true if field pmUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserName() {
    return this.pmUserName != null;
  }

  public void setPmUserNameIsSet(boolean value) {
    if (!value) {
      this.pmUserName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case BUSINESS_SOURCE:
      if (value == null) {
        unsetBusinessSource();
      } else {
        setBusinessSource((Integer)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    case LOAN_AMT:
      if (value == null) {
        unsetLoanAmt();
      } else {
        setLoanAmt((Double)value);
      }
      break;

    case REAL_LOAN:
      if (value == null) {
        unsetRealLoan();
      } else {
        setRealLoan((Double)value);
      }
      break;

    case LOAN_DATE:
      if (value == null) {
        unsetLoanDate();
      } else {
        setLoanDate((String)value);
      }
      break;

    case REC_MONEY:
      if (value == null) {
        unsetRecMoney();
      } else {
        setRecMoney((Double)value);
      }
      break;

    case REC_LOAN_DATE:
      if (value == null) {
        unsetRecLoanDate();
      } else {
        setRecLoanDate((String)value);
      }
      break;

    case PLAN_LOAN_DATE:
      if (value == null) {
        unsetPlanLoanDate();
      } else {
        setPlanLoanDate((String)value);
      }
      break;

    case NEED_REC_MONEY:
      if (value == null) {
        unsetNeedRecMoney();
      } else {
        setNeedRecMoney((Double)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case ORG_LOAN_DATE:
      if (value == null) {
        unsetOrgLoanDate();
      } else {
        setOrgLoanDate((String)value);
      }
      break;

    case ORG_RE_DATE:
      if (value == null) {
        unsetOrgReDate();
      } else {
        setOrgReDate((String)value);
      }
      break;

    case POUNDAGE:
      if (value == null) {
        unsetPoundage();
      } else {
        setPoundage((Double)value);
      }
      break;

    case RE_POUNDAGE:
      if (value == null) {
        unsetRePoundage();
      } else {
        setRePoundage((Double)value);
      }
      break;

    case INTEREST:
      if (value == null) {
        unsetInterest();
      } else {
        setInterest((Double)value);
      }
      break;

    case RE_INTEREST:
      if (value == null) {
        unsetReInterest();
      } else {
        setReInterest((Double)value);
      }
      break;

    case PAY_INTEREST:
      if (value == null) {
        unsetPayInterest();
      } else {
        setPayInterest((Double)value);
      }
      break;

    case LOAN_END_DATE:
      if (value == null) {
        unsetLoanEndDate();
      } else {
        setLoanEndDate((String)value);
      }
      break;

    case PLAN_LOAN_END_DATE:
      if (value == null) {
        unsetPlanLoanEndDate();
      } else {
        setPlanLoanEndDate((String)value);
      }
      break;

    case REC_LOAN_END_DATE:
      if (value == null) {
        unsetRecLoanEndDate();
      } else {
        setRecLoanEndDate((String)value);
      }
      break;

    case BUSINESS_SOURCE_STR:
      if (value == null) {
        unsetBusinessSourceStr();
      } else {
        setBusinessSourceStr((String)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PM_USER_NAME:
      if (value == null) {
        unsetPmUserName();
      } else {
        setPmUserName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NAME:
      return getProjectName();

    case BUSINESS_SOURCE:
      return Integer.valueOf(getBusinessSource());

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case USER_IDS:
      return getUserIds();

    case LOAN_AMT:
      return Double.valueOf(getLoanAmt());

    case REAL_LOAN:
      return Double.valueOf(getRealLoan());

    case LOAN_DATE:
      return getLoanDate();

    case REC_MONEY:
      return Double.valueOf(getRecMoney());

    case REC_LOAN_DATE:
      return getRecLoanDate();

    case PLAN_LOAN_DATE:
      return getPlanLoanDate();

    case NEED_REC_MONEY:
      return Double.valueOf(getNeedRecMoney());

    case ORG_NAME:
      return getOrgName();

    case ORG_LOAN_DATE:
      return getOrgLoanDate();

    case ORG_RE_DATE:
      return getOrgReDate();

    case POUNDAGE:
      return Double.valueOf(getPoundage());

    case RE_POUNDAGE:
      return Double.valueOf(getRePoundage());

    case INTEREST:
      return Double.valueOf(getInterest());

    case RE_INTEREST:
      return Double.valueOf(getReInterest());

    case PAY_INTEREST:
      return Double.valueOf(getPayInterest());

    case LOAN_END_DATE:
      return getLoanEndDate();

    case PLAN_LOAN_END_DATE:
      return getPlanLoanEndDate();

    case REC_LOAN_END_DATE:
      return getRecLoanEndDate();

    case BUSINESS_SOURCE_STR:
      return getBusinessSourceStr();

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PM_USER_NAME:
      return getPmUserName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NAME:
      return isSetProjectName();
    case BUSINESS_SOURCE:
      return isSetBusinessSource();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case USER_IDS:
      return isSetUserIds();
    case LOAN_AMT:
      return isSetLoanAmt();
    case REAL_LOAN:
      return isSetRealLoan();
    case LOAN_DATE:
      return isSetLoanDate();
    case REC_MONEY:
      return isSetRecMoney();
    case REC_LOAN_DATE:
      return isSetRecLoanDate();
    case PLAN_LOAN_DATE:
      return isSetPlanLoanDate();
    case NEED_REC_MONEY:
      return isSetNeedRecMoney();
    case ORG_NAME:
      return isSetOrgName();
    case ORG_LOAN_DATE:
      return isSetOrgLoanDate();
    case ORG_RE_DATE:
      return isSetOrgReDate();
    case POUNDAGE:
      return isSetPoundage();
    case RE_POUNDAGE:
      return isSetRePoundage();
    case INTEREST:
      return isSetInterest();
    case RE_INTEREST:
      return isSetReInterest();
    case PAY_INTEREST:
      return isSetPayInterest();
    case LOAN_END_DATE:
      return isSetLoanEndDate();
    case PLAN_LOAN_END_DATE:
      return isSetPlanLoanEndDate();
    case REC_LOAN_END_DATE:
      return isSetRecLoanEndDate();
    case BUSINESS_SOURCE_STR:
      return isSetBusinessSourceStr();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PM_USER_NAME:
      return isSetPmUserName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FinancialStatisticsReport)
      return this.equals((FinancialStatisticsReport)that);
    return false;
  }

  public boolean equals(FinancialStatisticsReport that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_businessSource = true;
    boolean that_present_businessSource = true;
    if (this_present_businessSource || that_present_businessSource) {
      if (!(this_present_businessSource && that_present_businessSource))
        return false;
      if (this.businessSource != that.businessSource)
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    boolean this_present_loanAmt = true;
    boolean that_present_loanAmt = true;
    if (this_present_loanAmt || that_present_loanAmt) {
      if (!(this_present_loanAmt && that_present_loanAmt))
        return false;
      if (this.loanAmt != that.loanAmt)
        return false;
    }

    boolean this_present_realLoan = true;
    boolean that_present_realLoan = true;
    if (this_present_realLoan || that_present_realLoan) {
      if (!(this_present_realLoan && that_present_realLoan))
        return false;
      if (this.realLoan != that.realLoan)
        return false;
    }

    boolean this_present_loanDate = true && this.isSetLoanDate();
    boolean that_present_loanDate = true && that.isSetLoanDate();
    if (this_present_loanDate || that_present_loanDate) {
      if (!(this_present_loanDate && that_present_loanDate))
        return false;
      if (!this.loanDate.equals(that.loanDate))
        return false;
    }

    boolean this_present_recMoney = true;
    boolean that_present_recMoney = true;
    if (this_present_recMoney || that_present_recMoney) {
      if (!(this_present_recMoney && that_present_recMoney))
        return false;
      if (this.recMoney != that.recMoney)
        return false;
    }

    boolean this_present_recLoanDate = true && this.isSetRecLoanDate();
    boolean that_present_recLoanDate = true && that.isSetRecLoanDate();
    if (this_present_recLoanDate || that_present_recLoanDate) {
      if (!(this_present_recLoanDate && that_present_recLoanDate))
        return false;
      if (!this.recLoanDate.equals(that.recLoanDate))
        return false;
    }

    boolean this_present_planLoanDate = true && this.isSetPlanLoanDate();
    boolean that_present_planLoanDate = true && that.isSetPlanLoanDate();
    if (this_present_planLoanDate || that_present_planLoanDate) {
      if (!(this_present_planLoanDate && that_present_planLoanDate))
        return false;
      if (!this.planLoanDate.equals(that.planLoanDate))
        return false;
    }

    boolean this_present_needRecMoney = true;
    boolean that_present_needRecMoney = true;
    if (this_present_needRecMoney || that_present_needRecMoney) {
      if (!(this_present_needRecMoney && that_present_needRecMoney))
        return false;
      if (this.needRecMoney != that.needRecMoney)
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_orgLoanDate = true && this.isSetOrgLoanDate();
    boolean that_present_orgLoanDate = true && that.isSetOrgLoanDate();
    if (this_present_orgLoanDate || that_present_orgLoanDate) {
      if (!(this_present_orgLoanDate && that_present_orgLoanDate))
        return false;
      if (!this.orgLoanDate.equals(that.orgLoanDate))
        return false;
    }

    boolean this_present_orgReDate = true && this.isSetOrgReDate();
    boolean that_present_orgReDate = true && that.isSetOrgReDate();
    if (this_present_orgReDate || that_present_orgReDate) {
      if (!(this_present_orgReDate && that_present_orgReDate))
        return false;
      if (!this.orgReDate.equals(that.orgReDate))
        return false;
    }

    boolean this_present_poundage = true;
    boolean that_present_poundage = true;
    if (this_present_poundage || that_present_poundage) {
      if (!(this_present_poundage && that_present_poundage))
        return false;
      if (this.poundage != that.poundage)
        return false;
    }

    boolean this_present_rePoundage = true;
    boolean that_present_rePoundage = true;
    if (this_present_rePoundage || that_present_rePoundage) {
      if (!(this_present_rePoundage && that_present_rePoundage))
        return false;
      if (this.rePoundage != that.rePoundage)
        return false;
    }

    boolean this_present_interest = true;
    boolean that_present_interest = true;
    if (this_present_interest || that_present_interest) {
      if (!(this_present_interest && that_present_interest))
        return false;
      if (this.interest != that.interest)
        return false;
    }

    boolean this_present_reInterest = true;
    boolean that_present_reInterest = true;
    if (this_present_reInterest || that_present_reInterest) {
      if (!(this_present_reInterest && that_present_reInterest))
        return false;
      if (this.reInterest != that.reInterest)
        return false;
    }

    boolean this_present_payInterest = true;
    boolean that_present_payInterest = true;
    if (this_present_payInterest || that_present_payInterest) {
      if (!(this_present_payInterest && that_present_payInterest))
        return false;
      if (this.payInterest != that.payInterest)
        return false;
    }

    boolean this_present_loanEndDate = true && this.isSetLoanEndDate();
    boolean that_present_loanEndDate = true && that.isSetLoanEndDate();
    if (this_present_loanEndDate || that_present_loanEndDate) {
      if (!(this_present_loanEndDate && that_present_loanEndDate))
        return false;
      if (!this.loanEndDate.equals(that.loanEndDate))
        return false;
    }

    boolean this_present_planLoanEndDate = true && this.isSetPlanLoanEndDate();
    boolean that_present_planLoanEndDate = true && that.isSetPlanLoanEndDate();
    if (this_present_planLoanEndDate || that_present_planLoanEndDate) {
      if (!(this_present_planLoanEndDate && that_present_planLoanEndDate))
        return false;
      if (!this.planLoanEndDate.equals(that.planLoanEndDate))
        return false;
    }

    boolean this_present_recLoanEndDate = true && this.isSetRecLoanEndDate();
    boolean that_present_recLoanEndDate = true && that.isSetRecLoanEndDate();
    if (this_present_recLoanEndDate || that_present_recLoanEndDate) {
      if (!(this_present_recLoanEndDate && that_present_recLoanEndDate))
        return false;
      if (!this.recLoanEndDate.equals(that.recLoanEndDate))
        return false;
    }

    boolean this_present_businessSourceStr = true && this.isSetBusinessSourceStr();
    boolean that_present_businessSourceStr = true && that.isSetBusinessSourceStr();
    if (this_present_businessSourceStr || that_present_businessSourceStr) {
      if (!(this_present_businessSourceStr && that_present_businessSourceStr))
        return false;
      if (!this.businessSourceStr.equals(that.businessSourceStr))
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_pmUserName = true && this.isSetPmUserName();
    boolean that_present_pmUserName = true && that.isSetPmUserName();
    if (this_present_pmUserName || that_present_pmUserName) {
      if (!(this_present_pmUserName && that_present_pmUserName))
        return false;
      if (!this.pmUserName.equals(that.pmUserName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_businessSource = true;
    list.add(present_businessSource);
    if (present_businessSource)
      list.add(businessSource);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    boolean present_loanAmt = true;
    list.add(present_loanAmt);
    if (present_loanAmt)
      list.add(loanAmt);

    boolean present_realLoan = true;
    list.add(present_realLoan);
    if (present_realLoan)
      list.add(realLoan);

    boolean present_loanDate = true && (isSetLoanDate());
    list.add(present_loanDate);
    if (present_loanDate)
      list.add(loanDate);

    boolean present_recMoney = true;
    list.add(present_recMoney);
    if (present_recMoney)
      list.add(recMoney);

    boolean present_recLoanDate = true && (isSetRecLoanDate());
    list.add(present_recLoanDate);
    if (present_recLoanDate)
      list.add(recLoanDate);

    boolean present_planLoanDate = true && (isSetPlanLoanDate());
    list.add(present_planLoanDate);
    if (present_planLoanDate)
      list.add(planLoanDate);

    boolean present_needRecMoney = true;
    list.add(present_needRecMoney);
    if (present_needRecMoney)
      list.add(needRecMoney);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_orgLoanDate = true && (isSetOrgLoanDate());
    list.add(present_orgLoanDate);
    if (present_orgLoanDate)
      list.add(orgLoanDate);

    boolean present_orgReDate = true && (isSetOrgReDate());
    list.add(present_orgReDate);
    if (present_orgReDate)
      list.add(orgReDate);

    boolean present_poundage = true;
    list.add(present_poundage);
    if (present_poundage)
      list.add(poundage);

    boolean present_rePoundage = true;
    list.add(present_rePoundage);
    if (present_rePoundage)
      list.add(rePoundage);

    boolean present_interest = true;
    list.add(present_interest);
    if (present_interest)
      list.add(interest);

    boolean present_reInterest = true;
    list.add(present_reInterest);
    if (present_reInterest)
      list.add(reInterest);

    boolean present_payInterest = true;
    list.add(present_payInterest);
    if (present_payInterest)
      list.add(payInterest);

    boolean present_loanEndDate = true && (isSetLoanEndDate());
    list.add(present_loanEndDate);
    if (present_loanEndDate)
      list.add(loanEndDate);

    boolean present_planLoanEndDate = true && (isSetPlanLoanEndDate());
    list.add(present_planLoanEndDate);
    if (present_planLoanEndDate)
      list.add(planLoanEndDate);

    boolean present_recLoanEndDate = true && (isSetRecLoanEndDate());
    list.add(present_recLoanEndDate);
    if (present_recLoanEndDate)
      list.add(recLoanEndDate);

    boolean present_businessSourceStr = true && (isSetBusinessSourceStr());
    list.add(present_businessSourceStr);
    if (present_businessSourceStr)
      list.add(businessSourceStr);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_pmUserName = true && (isSetPmUserName());
    list.add(present_pmUserName);
    if (present_pmUserName)
      list.add(pmUserName);

    return list.hashCode();
  }

  @Override
  public int compareTo(FinancialStatisticsReport other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessSource()).compareTo(other.isSetBusinessSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessSource, other.businessSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanAmt()).compareTo(other.isSetLoanAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanAmt, other.loanAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealLoan()).compareTo(other.isSetRealLoan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealLoan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realLoan, other.realLoan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanDate()).compareTo(other.isSetLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanDate, other.loanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecMoney()).compareTo(other.isSetRecMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recMoney, other.recMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecLoanDate()).compareTo(other.isSetRecLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recLoanDate, other.recLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanLoanDate()).compareTo(other.isSetPlanLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planLoanDate, other.planLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNeedRecMoney()).compareTo(other.isSetNeedRecMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNeedRecMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.needRecMoney, other.needRecMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgLoanDate()).compareTo(other.isSetOrgLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgLoanDate, other.orgLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgReDate()).compareTo(other.isSetOrgReDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgReDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgReDate, other.orgReDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoundage()).compareTo(other.isSetPoundage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoundage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poundage, other.poundage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRePoundage()).compareTo(other.isSetRePoundage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRePoundage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rePoundage, other.rePoundage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInterest()).compareTo(other.isSetInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.interest, other.interest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReInterest()).compareTo(other.isSetReInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reInterest, other.reInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayInterest()).compareTo(other.isSetPayInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payInterest, other.payInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanEndDate()).compareTo(other.isSetLoanEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanEndDate, other.loanEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanLoanEndDate()).compareTo(other.isSetPlanLoanEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanLoanEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planLoanEndDate, other.planLoanEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecLoanEndDate()).compareTo(other.isSetRecLoanEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecLoanEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recLoanEndDate, other.recLoanEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessSourceStr()).compareTo(other.isSetBusinessSourceStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessSourceStr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessSourceStr, other.businessSourceStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserName()).compareTo(other.isSetPmUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserName, other.pmUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FinancialStatisticsReport(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessSource:");
    sb.append(this.businessSource);
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanAmt:");
    sb.append(this.loanAmt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("realLoan:");
    sb.append(this.realLoan);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanDate:");
    if (this.loanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.loanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recMoney:");
    sb.append(this.recMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recLoanDate:");
    if (this.recLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.recLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planLoanDate:");
    if (this.planLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.planLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("needRecMoney:");
    sb.append(this.needRecMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgLoanDate:");
    if (this.orgLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.orgLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgReDate:");
    if (this.orgReDate == null) {
      sb.append("null");
    } else {
      sb.append(this.orgReDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("poundage:");
    sb.append(this.poundage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rePoundage:");
    sb.append(this.rePoundage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("interest:");
    sb.append(this.interest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("reInterest:");
    sb.append(this.reInterest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("payInterest:");
    sb.append(this.payInterest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanEndDate:");
    if (this.loanEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.loanEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planLoanEndDate:");
    if (this.planLoanEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.planLoanEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recLoanEndDate:");
    if (this.recLoanEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.recLoanEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessSourceStr:");
    if (this.businessSourceStr == null) {
      sb.append("null");
    } else {
      sb.append(this.businessSourceStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserName:");
    if (this.pmUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.pmUserName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FinancialStatisticsReportStandardSchemeFactory implements SchemeFactory {
    public FinancialStatisticsReportStandardScheme getScheme() {
      return new FinancialStatisticsReportStandardScheme();
    }
  }

  private static class FinancialStatisticsReportStandardScheme extends StandardScheme<FinancialStatisticsReport> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FinancialStatisticsReport struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUSINESS_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.businessSource = iprot.readI32();
              struct.setBusinessSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list64 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list64.size);
                int _elem65;
                for (int _i66 = 0; _i66 < _list64.size; ++_i66)
                {
                  _elem65 = iprot.readI32();
                  struct.userIds.add(_elem65);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LOAN_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanAmt = iprot.readDouble();
              struct.setLoanAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REAL_LOAN
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.realLoan = iprot.readDouble();
              struct.setRealLoanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanDate = iprot.readString();
              struct.setLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // REC_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.recMoney = iprot.readDouble();
              struct.setRecMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REC_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recLoanDate = iprot.readString();
              struct.setRecLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PLAN_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planLoanDate = iprot.readString();
              struct.setPlanLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // NEED_REC_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.needRecMoney = iprot.readDouble();
              struct.setNeedRecMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ORG_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgLoanDate = iprot.readString();
              struct.setOrgLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ORG_RE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgReDate = iprot.readString();
              struct.setOrgReDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // POUNDAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.poundage = iprot.readDouble();
              struct.setPoundageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // RE_POUNDAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rePoundage = iprot.readDouble();
              struct.setRePoundageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.interest = iprot.readDouble();
              struct.setInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // RE_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.reInterest = iprot.readDouble();
              struct.setReInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PAY_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.payInterest = iprot.readDouble();
              struct.setPayInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // LOAN_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanEndDate = iprot.readString();
              struct.setLoanEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // PLAN_LOAN_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planLoanEndDate = iprot.readString();
              struct.setPlanLoanEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // REC_LOAN_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recLoanEndDate = iprot.readString();
              struct.setRecLoanEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BUSINESS_SOURCE_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessSourceStr = iprot.readString();
              struct.setBusinessSourceStrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PM_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmUserName = iprot.readString();
              struct.setPmUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FinancialStatisticsReport struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUSINESS_SOURCE_FIELD_DESC);
      oprot.writeI32(struct.businessSource);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter67 : struct.userIds)
          {
            oprot.writeI32(_iter67);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LOAN_AMT_FIELD_DESC);
      oprot.writeDouble(struct.loanAmt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REAL_LOAN_FIELD_DESC);
      oprot.writeDouble(struct.realLoan);
      oprot.writeFieldEnd();
      if (struct.loanDate != null) {
        oprot.writeFieldBegin(LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.loanDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REC_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.recMoney);
      oprot.writeFieldEnd();
      if (struct.recLoanDate != null) {
        oprot.writeFieldBegin(REC_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.recLoanDate);
        oprot.writeFieldEnd();
      }
      if (struct.planLoanDate != null) {
        oprot.writeFieldBegin(PLAN_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.planLoanDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NEED_REC_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.needRecMoney);
      oprot.writeFieldEnd();
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.orgLoanDate != null) {
        oprot.writeFieldBegin(ORG_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.orgLoanDate);
        oprot.writeFieldEnd();
      }
      if (struct.orgReDate != null) {
        oprot.writeFieldBegin(ORG_RE_DATE_FIELD_DESC);
        oprot.writeString(struct.orgReDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POUNDAGE_FIELD_DESC);
      oprot.writeDouble(struct.poundage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RE_POUNDAGE_FIELD_DESC);
      oprot.writeDouble(struct.rePoundage);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.interest);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RE_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.reInterest);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAY_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.payInterest);
      oprot.writeFieldEnd();
      if (struct.loanEndDate != null) {
        oprot.writeFieldBegin(LOAN_END_DATE_FIELD_DESC);
        oprot.writeString(struct.loanEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.planLoanEndDate != null) {
        oprot.writeFieldBegin(PLAN_LOAN_END_DATE_FIELD_DESC);
        oprot.writeString(struct.planLoanEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.recLoanEndDate != null) {
        oprot.writeFieldBegin(REC_LOAN_END_DATE_FIELD_DESC);
        oprot.writeString(struct.recLoanEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.businessSourceStr != null) {
        oprot.writeFieldBegin(BUSINESS_SOURCE_STR_FIELD_DESC);
        oprot.writeString(struct.businessSourceStr);
        oprot.writeFieldEnd();
      }
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.pmUserName != null) {
        oprot.writeFieldBegin(PM_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.pmUserName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FinancialStatisticsReportTupleSchemeFactory implements SchemeFactory {
    public FinancialStatisticsReportTupleScheme getScheme() {
      return new FinancialStatisticsReportTupleScheme();
    }
  }

  private static class FinancialStatisticsReportTupleScheme extends TupleScheme<FinancialStatisticsReport> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FinancialStatisticsReport struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectName()) {
        optionals.set(1);
      }
      if (struct.isSetBusinessSource()) {
        optionals.set(2);
      }
      if (struct.isSetPage()) {
        optionals.set(3);
      }
      if (struct.isSetRows()) {
        optionals.set(4);
      }
      if (struct.isSetUserIds()) {
        optionals.set(5);
      }
      if (struct.isSetLoanAmt()) {
        optionals.set(6);
      }
      if (struct.isSetRealLoan()) {
        optionals.set(7);
      }
      if (struct.isSetLoanDate()) {
        optionals.set(8);
      }
      if (struct.isSetRecMoney()) {
        optionals.set(9);
      }
      if (struct.isSetRecLoanDate()) {
        optionals.set(10);
      }
      if (struct.isSetPlanLoanDate()) {
        optionals.set(11);
      }
      if (struct.isSetNeedRecMoney()) {
        optionals.set(12);
      }
      if (struct.isSetOrgName()) {
        optionals.set(13);
      }
      if (struct.isSetOrgLoanDate()) {
        optionals.set(14);
      }
      if (struct.isSetOrgReDate()) {
        optionals.set(15);
      }
      if (struct.isSetPoundage()) {
        optionals.set(16);
      }
      if (struct.isSetRePoundage()) {
        optionals.set(17);
      }
      if (struct.isSetInterest()) {
        optionals.set(18);
      }
      if (struct.isSetReInterest()) {
        optionals.set(19);
      }
      if (struct.isSetPayInterest()) {
        optionals.set(20);
      }
      if (struct.isSetLoanEndDate()) {
        optionals.set(21);
      }
      if (struct.isSetPlanLoanEndDate()) {
        optionals.set(22);
      }
      if (struct.isSetRecLoanEndDate()) {
        optionals.set(23);
      }
      if (struct.isSetBusinessSourceStr()) {
        optionals.set(24);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(25);
      }
      if (struct.isSetPmUserName()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetBusinessSource()) {
        oprot.writeI32(struct.businessSource);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter68 : struct.userIds)
          {
            oprot.writeI32(_iter68);
          }
        }
      }
      if (struct.isSetLoanAmt()) {
        oprot.writeDouble(struct.loanAmt);
      }
      if (struct.isSetRealLoan()) {
        oprot.writeDouble(struct.realLoan);
      }
      if (struct.isSetLoanDate()) {
        oprot.writeString(struct.loanDate);
      }
      if (struct.isSetRecMoney()) {
        oprot.writeDouble(struct.recMoney);
      }
      if (struct.isSetRecLoanDate()) {
        oprot.writeString(struct.recLoanDate);
      }
      if (struct.isSetPlanLoanDate()) {
        oprot.writeString(struct.planLoanDate);
      }
      if (struct.isSetNeedRecMoney()) {
        oprot.writeDouble(struct.needRecMoney);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetOrgLoanDate()) {
        oprot.writeString(struct.orgLoanDate);
      }
      if (struct.isSetOrgReDate()) {
        oprot.writeString(struct.orgReDate);
      }
      if (struct.isSetPoundage()) {
        oprot.writeDouble(struct.poundage);
      }
      if (struct.isSetRePoundage()) {
        oprot.writeDouble(struct.rePoundage);
      }
      if (struct.isSetInterest()) {
        oprot.writeDouble(struct.interest);
      }
      if (struct.isSetReInterest()) {
        oprot.writeDouble(struct.reInterest);
      }
      if (struct.isSetPayInterest()) {
        oprot.writeDouble(struct.payInterest);
      }
      if (struct.isSetLoanEndDate()) {
        oprot.writeString(struct.loanEndDate);
      }
      if (struct.isSetPlanLoanEndDate()) {
        oprot.writeString(struct.planLoanEndDate);
      }
      if (struct.isSetRecLoanEndDate()) {
        oprot.writeString(struct.recLoanEndDate);
      }
      if (struct.isSetBusinessSourceStr()) {
        oprot.writeString(struct.businessSourceStr);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetPmUserName()) {
        oprot.writeString(struct.pmUserName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FinancialStatisticsReport struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.businessSource = iprot.readI32();
        struct.setBusinessSourceIsSet(true);
      }
      if (incoming.get(3)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list69.size);
          int _elem70;
          for (int _i71 = 0; _i71 < _list69.size; ++_i71)
          {
            _elem70 = iprot.readI32();
            struct.userIds.add(_elem70);
          }
        }
        struct.setUserIdsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.loanAmt = iprot.readDouble();
        struct.setLoanAmtIsSet(true);
      }
      if (incoming.get(7)) {
        struct.realLoan = iprot.readDouble();
        struct.setRealLoanIsSet(true);
      }
      if (incoming.get(8)) {
        struct.loanDate = iprot.readString();
        struct.setLoanDateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.recMoney = iprot.readDouble();
        struct.setRecMoneyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.recLoanDate = iprot.readString();
        struct.setRecLoanDateIsSet(true);
      }
      if (incoming.get(11)) {
        struct.planLoanDate = iprot.readString();
        struct.setPlanLoanDateIsSet(true);
      }
      if (incoming.get(12)) {
        struct.needRecMoney = iprot.readDouble();
        struct.setNeedRecMoneyIsSet(true);
      }
      if (incoming.get(13)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.orgLoanDate = iprot.readString();
        struct.setOrgLoanDateIsSet(true);
      }
      if (incoming.get(15)) {
        struct.orgReDate = iprot.readString();
        struct.setOrgReDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.poundage = iprot.readDouble();
        struct.setPoundageIsSet(true);
      }
      if (incoming.get(17)) {
        struct.rePoundage = iprot.readDouble();
        struct.setRePoundageIsSet(true);
      }
      if (incoming.get(18)) {
        struct.interest = iprot.readDouble();
        struct.setInterestIsSet(true);
      }
      if (incoming.get(19)) {
        struct.reInterest = iprot.readDouble();
        struct.setReInterestIsSet(true);
      }
      if (incoming.get(20)) {
        struct.payInterest = iprot.readDouble();
        struct.setPayInterestIsSet(true);
      }
      if (incoming.get(21)) {
        struct.loanEndDate = iprot.readString();
        struct.setLoanEndDateIsSet(true);
      }
      if (incoming.get(22)) {
        struct.planLoanEndDate = iprot.readString();
        struct.setPlanLoanEndDateIsSet(true);
      }
      if (incoming.get(23)) {
        struct.recLoanEndDate = iprot.readString();
        struct.setRecLoanEndDateIsSet(true);
      }
      if (incoming.get(24)) {
        struct.businessSourceStr = iprot.readString();
        struct.setBusinessSourceStrIsSet(true);
      }
      if (incoming.get(25)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(26)) {
        struct.pmUserName = iprot.readString();
        struct.setPmUserNameIsSet(true);
      }
    }
  }

}

