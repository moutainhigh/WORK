/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.customer;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-7-25")
public class ExcelCusComBalanceSheet implements org.apache.thrift.TBase<ExcelCusComBalanceSheet, ExcelCusComBalanceSheet._Fields>, java.io.Serializable, Cloneable, Comparable<ExcelCusComBalanceSheet> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ExcelCusComBalanceSheet");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNTS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountsCode", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOUNTS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountsName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LINE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("lineNum", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SHOW_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("showPosition", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField REPORT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reportId", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BEGIN_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("beginVal", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField END_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("endVal", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ExcelCusComBalanceSheetStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ExcelCusComBalanceSheetTupleSchemeFactory());
  }

  public String pid; // required
  public String accountsCode; // required
  public String accountsName; // required
  public String lineNum; // required
  public String showPosition; // required
  public String status; // required
  public String reportId; // required
  public String beginVal; // required
  public String endVal; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    ACCOUNTS_CODE((short)2, "accountsCode"),
    ACCOUNTS_NAME((short)3, "accountsName"),
    LINE_NUM((short)4, "lineNum"),
    SHOW_POSITION((short)5, "showPosition"),
    STATUS((short)6, "status"),
    REPORT_ID((short)7, "reportId"),
    BEGIN_VAL((short)8, "beginVal"),
    END_VAL((short)9, "endVal");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // ACCOUNTS_CODE
          return ACCOUNTS_CODE;
        case 3: // ACCOUNTS_NAME
          return ACCOUNTS_NAME;
        case 4: // LINE_NUM
          return LINE_NUM;
        case 5: // SHOW_POSITION
          return SHOW_POSITION;
        case 6: // STATUS
          return STATUS;
        case 7: // REPORT_ID
          return REPORT_ID;
        case 8: // BEGIN_VAL
          return BEGIN_VAL;
        case 9: // END_VAL
          return END_VAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNTS_CODE, new org.apache.thrift.meta_data.FieldMetaData("accountsCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNTS_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountsName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LINE_NUM, new org.apache.thrift.meta_data.FieldMetaData("lineNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHOW_POSITION, new org.apache.thrift.meta_data.FieldMetaData("showPosition", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REPORT_ID, new org.apache.thrift.meta_data.FieldMetaData("reportId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BEGIN_VAL, new org.apache.thrift.meta_data.FieldMetaData("beginVal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_VAL, new org.apache.thrift.meta_data.FieldMetaData("endVal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ExcelCusComBalanceSheet.class, metaDataMap);
  }

  public ExcelCusComBalanceSheet() {
  }

  public ExcelCusComBalanceSheet(
    String pid,
    String accountsCode,
    String accountsName,
    String lineNum,
    String showPosition,
    String status,
    String reportId,
    String beginVal,
    String endVal)
  {
    this();
    this.pid = pid;
    this.accountsCode = accountsCode;
    this.accountsName = accountsName;
    this.lineNum = lineNum;
    this.showPosition = showPosition;
    this.status = status;
    this.reportId = reportId;
    this.beginVal = beginVal;
    this.endVal = endVal;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExcelCusComBalanceSheet(ExcelCusComBalanceSheet other) {
    if (other.isSetPid()) {
      this.pid = other.pid;
    }
    if (other.isSetAccountsCode()) {
      this.accountsCode = other.accountsCode;
    }
    if (other.isSetAccountsName()) {
      this.accountsName = other.accountsName;
    }
    if (other.isSetLineNum()) {
      this.lineNum = other.lineNum;
    }
    if (other.isSetShowPosition()) {
      this.showPosition = other.showPosition;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetReportId()) {
      this.reportId = other.reportId;
    }
    if (other.isSetBeginVal()) {
      this.beginVal = other.beginVal;
    }
    if (other.isSetEndVal()) {
      this.endVal = other.endVal;
    }
  }

  public ExcelCusComBalanceSheet deepCopy() {
    return new ExcelCusComBalanceSheet(this);
  }

  @Override
  public void clear() {
    this.pid = null;
    this.accountsCode = null;
    this.accountsName = null;
    this.lineNum = null;
    this.showPosition = null;
    this.status = null;
    this.reportId = null;
    this.beginVal = null;
    this.endVal = null;
  }

  public String getPid() {
    return this.pid;
  }

  public ExcelCusComBalanceSheet setPid(String pid) {
    this.pid = pid;
    return this;
  }

  public void unsetPid() {
    this.pid = null;
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return this.pid != null;
  }

  public void setPidIsSet(boolean value) {
    if (!value) {
      this.pid = null;
    }
  }

  public String getAccountsCode() {
    return this.accountsCode;
  }

  public ExcelCusComBalanceSheet setAccountsCode(String accountsCode) {
    this.accountsCode = accountsCode;
    return this;
  }

  public void unsetAccountsCode() {
    this.accountsCode = null;
  }

  /** Returns true if field accountsCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountsCode() {
    return this.accountsCode != null;
  }

  public void setAccountsCodeIsSet(boolean value) {
    if (!value) {
      this.accountsCode = null;
    }
  }

  public String getAccountsName() {
    return this.accountsName;
  }

  public ExcelCusComBalanceSheet setAccountsName(String accountsName) {
    this.accountsName = accountsName;
    return this;
  }

  public void unsetAccountsName() {
    this.accountsName = null;
  }

  /** Returns true if field accountsName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountsName() {
    return this.accountsName != null;
  }

  public void setAccountsNameIsSet(boolean value) {
    if (!value) {
      this.accountsName = null;
    }
  }

  public String getLineNum() {
    return this.lineNum;
  }

  public ExcelCusComBalanceSheet setLineNum(String lineNum) {
    this.lineNum = lineNum;
    return this;
  }

  public void unsetLineNum() {
    this.lineNum = null;
  }

  /** Returns true if field lineNum is set (has been assigned a value) and false otherwise */
  public boolean isSetLineNum() {
    return this.lineNum != null;
  }

  public void setLineNumIsSet(boolean value) {
    if (!value) {
      this.lineNum = null;
    }
  }

  public String getShowPosition() {
    return this.showPosition;
  }

  public ExcelCusComBalanceSheet setShowPosition(String showPosition) {
    this.showPosition = showPosition;
    return this;
  }

  public void unsetShowPosition() {
    this.showPosition = null;
  }

  /** Returns true if field showPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetShowPosition() {
    return this.showPosition != null;
  }

  public void setShowPositionIsSet(boolean value) {
    if (!value) {
      this.showPosition = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public ExcelCusComBalanceSheet setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getReportId() {
    return this.reportId;
  }

  public ExcelCusComBalanceSheet setReportId(String reportId) {
    this.reportId = reportId;
    return this;
  }

  public void unsetReportId() {
    this.reportId = null;
  }

  /** Returns true if field reportId is set (has been assigned a value) and false otherwise */
  public boolean isSetReportId() {
    return this.reportId != null;
  }

  public void setReportIdIsSet(boolean value) {
    if (!value) {
      this.reportId = null;
    }
  }

  public String getBeginVal() {
    return this.beginVal;
  }

  public ExcelCusComBalanceSheet setBeginVal(String beginVal) {
    this.beginVal = beginVal;
    return this;
  }

  public void unsetBeginVal() {
    this.beginVal = null;
  }

  /** Returns true if field beginVal is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginVal() {
    return this.beginVal != null;
  }

  public void setBeginValIsSet(boolean value) {
    if (!value) {
      this.beginVal = null;
    }
  }

  public String getEndVal() {
    return this.endVal;
  }

  public ExcelCusComBalanceSheet setEndVal(String endVal) {
    this.endVal = endVal;
    return this;
  }

  public void unsetEndVal() {
    this.endVal = null;
  }

  /** Returns true if field endVal is set (has been assigned a value) and false otherwise */
  public boolean isSetEndVal() {
    return this.endVal != null;
  }

  public void setEndValIsSet(boolean value) {
    if (!value) {
      this.endVal = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((String)value);
      }
      break;

    case ACCOUNTS_CODE:
      if (value == null) {
        unsetAccountsCode();
      } else {
        setAccountsCode((String)value);
      }
      break;

    case ACCOUNTS_NAME:
      if (value == null) {
        unsetAccountsName();
      } else {
        setAccountsName((String)value);
      }
      break;

    case LINE_NUM:
      if (value == null) {
        unsetLineNum();
      } else {
        setLineNum((String)value);
      }
      break;

    case SHOW_POSITION:
      if (value == null) {
        unsetShowPosition();
      } else {
        setShowPosition((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case REPORT_ID:
      if (value == null) {
        unsetReportId();
      } else {
        setReportId((String)value);
      }
      break;

    case BEGIN_VAL:
      if (value == null) {
        unsetBeginVal();
      } else {
        setBeginVal((String)value);
      }
      break;

    case END_VAL:
      if (value == null) {
        unsetEndVal();
      } else {
        setEndVal((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return getPid();

    case ACCOUNTS_CODE:
      return getAccountsCode();

    case ACCOUNTS_NAME:
      return getAccountsName();

    case LINE_NUM:
      return getLineNum();

    case SHOW_POSITION:
      return getShowPosition();

    case STATUS:
      return getStatus();

    case REPORT_ID:
      return getReportId();

    case BEGIN_VAL:
      return getBeginVal();

    case END_VAL:
      return getEndVal();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case ACCOUNTS_CODE:
      return isSetAccountsCode();
    case ACCOUNTS_NAME:
      return isSetAccountsName();
    case LINE_NUM:
      return isSetLineNum();
    case SHOW_POSITION:
      return isSetShowPosition();
    case STATUS:
      return isSetStatus();
    case REPORT_ID:
      return isSetReportId();
    case BEGIN_VAL:
      return isSetBeginVal();
    case END_VAL:
      return isSetEndVal();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ExcelCusComBalanceSheet)
      return this.equals((ExcelCusComBalanceSheet)that);
    return false;
  }

  public boolean equals(ExcelCusComBalanceSheet that) {
    if (that == null)
      return false;

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (!this.pid.equals(that.pid))
        return false;
    }

    boolean this_present_accountsCode = true && this.isSetAccountsCode();
    boolean that_present_accountsCode = true && that.isSetAccountsCode();
    if (this_present_accountsCode || that_present_accountsCode) {
      if (!(this_present_accountsCode && that_present_accountsCode))
        return false;
      if (!this.accountsCode.equals(that.accountsCode))
        return false;
    }

    boolean this_present_accountsName = true && this.isSetAccountsName();
    boolean that_present_accountsName = true && that.isSetAccountsName();
    if (this_present_accountsName || that_present_accountsName) {
      if (!(this_present_accountsName && that_present_accountsName))
        return false;
      if (!this.accountsName.equals(that.accountsName))
        return false;
    }

    boolean this_present_lineNum = true && this.isSetLineNum();
    boolean that_present_lineNum = true && that.isSetLineNum();
    if (this_present_lineNum || that_present_lineNum) {
      if (!(this_present_lineNum && that_present_lineNum))
        return false;
      if (!this.lineNum.equals(that.lineNum))
        return false;
    }

    boolean this_present_showPosition = true && this.isSetShowPosition();
    boolean that_present_showPosition = true && that.isSetShowPosition();
    if (this_present_showPosition || that_present_showPosition) {
      if (!(this_present_showPosition && that_present_showPosition))
        return false;
      if (!this.showPosition.equals(that.showPosition))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_reportId = true && this.isSetReportId();
    boolean that_present_reportId = true && that.isSetReportId();
    if (this_present_reportId || that_present_reportId) {
      if (!(this_present_reportId && that_present_reportId))
        return false;
      if (!this.reportId.equals(that.reportId))
        return false;
    }

    boolean this_present_beginVal = true && this.isSetBeginVal();
    boolean that_present_beginVal = true && that.isSetBeginVal();
    if (this_present_beginVal || that_present_beginVal) {
      if (!(this_present_beginVal && that_present_beginVal))
        return false;
      if (!this.beginVal.equals(that.beginVal))
        return false;
    }

    boolean this_present_endVal = true && this.isSetEndVal();
    boolean that_present_endVal = true && that.isSetEndVal();
    if (this_present_endVal || that_present_endVal) {
      if (!(this_present_endVal && that_present_endVal))
        return false;
      if (!this.endVal.equals(that.endVal))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true && (isSetPid());
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_accountsCode = true && (isSetAccountsCode());
    list.add(present_accountsCode);
    if (present_accountsCode)
      list.add(accountsCode);

    boolean present_accountsName = true && (isSetAccountsName());
    list.add(present_accountsName);
    if (present_accountsName)
      list.add(accountsName);

    boolean present_lineNum = true && (isSetLineNum());
    list.add(present_lineNum);
    if (present_lineNum)
      list.add(lineNum);

    boolean present_showPosition = true && (isSetShowPosition());
    list.add(present_showPosition);
    if (present_showPosition)
      list.add(showPosition);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_reportId = true && (isSetReportId());
    list.add(present_reportId);
    if (present_reportId)
      list.add(reportId);

    boolean present_beginVal = true && (isSetBeginVal());
    list.add(present_beginVal);
    if (present_beginVal)
      list.add(beginVal);

    boolean present_endVal = true && (isSetEndVal());
    list.add(present_endVal);
    if (present_endVal)
      list.add(endVal);

    return list.hashCode();
  }

  @Override
  public int compareTo(ExcelCusComBalanceSheet other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountsCode()).compareTo(other.isSetAccountsCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountsCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountsCode, other.accountsCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountsName()).compareTo(other.isSetAccountsName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountsName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountsName, other.accountsName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLineNum()).compareTo(other.isSetLineNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLineNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lineNum, other.lineNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShowPosition()).compareTo(other.isSetShowPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showPosition, other.showPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReportId()).compareTo(other.isSetReportId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReportId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reportId, other.reportId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBeginVal()).compareTo(other.isSetBeginVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginVal, other.beginVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndVal()).compareTo(other.isSetEndVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endVal, other.endVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ExcelCusComBalanceSheet(");
    boolean first = true;

    sb.append("pid:");
    if (this.pid == null) {
      sb.append("null");
    } else {
      sb.append(this.pid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountsCode:");
    if (this.accountsCode == null) {
      sb.append("null");
    } else {
      sb.append(this.accountsCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountsName:");
    if (this.accountsName == null) {
      sb.append("null");
    } else {
      sb.append(this.accountsName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lineNum:");
    if (this.lineNum == null) {
      sb.append("null");
    } else {
      sb.append(this.lineNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("showPosition:");
    if (this.showPosition == null) {
      sb.append("null");
    } else {
      sb.append(this.showPosition);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reportId:");
    if (this.reportId == null) {
      sb.append("null");
    } else {
      sb.append(this.reportId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("beginVal:");
    if (this.beginVal == null) {
      sb.append("null");
    } else {
      sb.append(this.beginVal);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endVal:");
    if (this.endVal == null) {
      sb.append("null");
    } else {
      sb.append(this.endVal);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ExcelCusComBalanceSheetStandardSchemeFactory implements SchemeFactory {
    public ExcelCusComBalanceSheetStandardScheme getScheme() {
      return new ExcelCusComBalanceSheetStandardScheme();
    }
  }

  private static class ExcelCusComBalanceSheetStandardScheme extends StandardScheme<ExcelCusComBalanceSheet> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ExcelCusComBalanceSheet struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pid = iprot.readString();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNTS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountsCode = iprot.readString();
              struct.setAccountsCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOUNTS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountsName = iprot.readString();
              struct.setAccountsNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LINE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lineNum = iprot.readString();
              struct.setLineNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SHOW_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.showPosition = iprot.readString();
              struct.setShowPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REPORT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reportId = iprot.readString();
              struct.setReportIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BEGIN_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.beginVal = iprot.readString();
              struct.setBeginValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // END_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endVal = iprot.readString();
              struct.setEndValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ExcelCusComBalanceSheet struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.pid != null) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeString(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.accountsCode != null) {
        oprot.writeFieldBegin(ACCOUNTS_CODE_FIELD_DESC);
        oprot.writeString(struct.accountsCode);
        oprot.writeFieldEnd();
      }
      if (struct.accountsName != null) {
        oprot.writeFieldBegin(ACCOUNTS_NAME_FIELD_DESC);
        oprot.writeString(struct.accountsName);
        oprot.writeFieldEnd();
      }
      if (struct.lineNum != null) {
        oprot.writeFieldBegin(LINE_NUM_FIELD_DESC);
        oprot.writeString(struct.lineNum);
        oprot.writeFieldEnd();
      }
      if (struct.showPosition != null) {
        oprot.writeFieldBegin(SHOW_POSITION_FIELD_DESC);
        oprot.writeString(struct.showPosition);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.reportId != null) {
        oprot.writeFieldBegin(REPORT_ID_FIELD_DESC);
        oprot.writeString(struct.reportId);
        oprot.writeFieldEnd();
      }
      if (struct.beginVal != null) {
        oprot.writeFieldBegin(BEGIN_VAL_FIELD_DESC);
        oprot.writeString(struct.beginVal);
        oprot.writeFieldEnd();
      }
      if (struct.endVal != null) {
        oprot.writeFieldBegin(END_VAL_FIELD_DESC);
        oprot.writeString(struct.endVal);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ExcelCusComBalanceSheetTupleSchemeFactory implements SchemeFactory {
    public ExcelCusComBalanceSheetTupleScheme getScheme() {
      return new ExcelCusComBalanceSheetTupleScheme();
    }
  }

  private static class ExcelCusComBalanceSheetTupleScheme extends TupleScheme<ExcelCusComBalanceSheet> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ExcelCusComBalanceSheet struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetAccountsCode()) {
        optionals.set(1);
      }
      if (struct.isSetAccountsName()) {
        optionals.set(2);
      }
      if (struct.isSetLineNum()) {
        optionals.set(3);
      }
      if (struct.isSetShowPosition()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      if (struct.isSetReportId()) {
        optionals.set(6);
      }
      if (struct.isSetBeginVal()) {
        optionals.set(7);
      }
      if (struct.isSetEndVal()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetPid()) {
        oprot.writeString(struct.pid);
      }
      if (struct.isSetAccountsCode()) {
        oprot.writeString(struct.accountsCode);
      }
      if (struct.isSetAccountsName()) {
        oprot.writeString(struct.accountsName);
      }
      if (struct.isSetLineNum()) {
        oprot.writeString(struct.lineNum);
      }
      if (struct.isSetShowPosition()) {
        oprot.writeString(struct.showPosition);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetReportId()) {
        oprot.writeString(struct.reportId);
      }
      if (struct.isSetBeginVal()) {
        oprot.writeString(struct.beginVal);
      }
      if (struct.isSetEndVal()) {
        oprot.writeString(struct.endVal);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ExcelCusComBalanceSheet struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.pid = iprot.readString();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountsCode = iprot.readString();
        struct.setAccountsCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accountsName = iprot.readString();
        struct.setAccountsNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.lineNum = iprot.readString();
        struct.setLineNumIsSet(true);
      }
      if (incoming.get(4)) {
        struct.showPosition = iprot.readString();
        struct.setShowPositionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.reportId = iprot.readString();
        struct.setReportIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.beginVal = iprot.readString();
        struct.setBeginValIsSet(true);
      }
      if (incoming.get(8)) {
        struct.endVal = iprot.readString();
        struct.setEndValIsSet(true);
      }
    }
  }

}

