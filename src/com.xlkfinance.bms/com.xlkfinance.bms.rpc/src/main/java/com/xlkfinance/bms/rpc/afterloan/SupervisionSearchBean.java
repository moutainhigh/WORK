/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.afterloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-7-18")
public class SupervisionSearchBean implements org.apache.thrift.TBase<SupervisionSearchBean, SupervisionSearchBean._Fields>, java.io.Serializable, Cloneable, Comparable<SupervisionSearchBean> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SupervisionSearchBean");

  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cusName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CUS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cusType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField START_REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("startRequestDttm", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField END_REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("endRequestDttm", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField OUT_REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("outRequestDttm", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField START_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("startDttm", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField END_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("endDttm", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField START_APPLY_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("startApplyDttm", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField END_APPLY_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("endApplyDttm", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SUPERVISION_PEOPLE_FIELD_DESC = new org.apache.thrift.protocol.TField("supervisionPeople", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField START_SUPERVISION_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("startSupervisionDttm", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField END_SUPERVISION_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("endSupervisionDttm", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DISTRIBUTION_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("distributionStatus", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField ECO_TRADE_FIELD_DESC = new org.apache.thrift.protocol.TField("ecoTrade", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField REGULATORY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("regulatoryStatus", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField REGULATORY_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("regulatoryUserName", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SupervisionSearchBeanStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SupervisionSearchBeanTupleSchemeFactory());
  }

  public String projectName; // required
  public String projectNumber; // required
  public String cusName; // required
  public int cusType; // required
  public String startRequestDttm; // required
  public String endRequestDttm; // required
  public String outRequestDttm; // required
  public String startDttm; // required
  public String endDttm; // required
  public String startApplyDttm; // required
  public String endApplyDttm; // required
  public String supervisionPeople; // required
  public String startSupervisionDttm; // required
  public String endSupervisionDttm; // required
  public int distributionStatus; // required
  public int ecoTrade; // required
  public int id; // required
  public String userName; // required
  public int page; // required
  public int rows; // required
  public int projectId; // required
  public int pid; // required
  public int regulatoryStatus; // required
  public String regulatoryUserName; // required
  public int userId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_NAME((short)1, "projectName"),
    PROJECT_NUMBER((short)2, "projectNumber"),
    CUS_NAME((short)3, "cusName"),
    CUS_TYPE((short)4, "cusType"),
    START_REQUEST_DTTM((short)5, "startRequestDttm"),
    END_REQUEST_DTTM((short)6, "endRequestDttm"),
    OUT_REQUEST_DTTM((short)7, "outRequestDttm"),
    START_DTTM((short)8, "startDttm"),
    END_DTTM((short)9, "endDttm"),
    START_APPLY_DTTM((short)10, "startApplyDttm"),
    END_APPLY_DTTM((short)11, "endApplyDttm"),
    SUPERVISION_PEOPLE((short)12, "supervisionPeople"),
    START_SUPERVISION_DTTM((short)13, "startSupervisionDttm"),
    END_SUPERVISION_DTTM((short)14, "endSupervisionDttm"),
    DISTRIBUTION_STATUS((short)15, "distributionStatus"),
    ECO_TRADE((short)16, "ecoTrade"),
    ID((short)17, "id"),
    USER_NAME((short)18, "userName"),
    PAGE((short)19, "page"),
    ROWS((short)20, "rows"),
    PROJECT_ID((short)21, "projectId"),
    PID((short)22, "pid"),
    REGULATORY_STATUS((short)23, "regulatoryStatus"),
    REGULATORY_USER_NAME((short)24, "regulatoryUserName"),
    USER_ID((short)25, "userId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_NAME
          return PROJECT_NAME;
        case 2: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 3: // CUS_NAME
          return CUS_NAME;
        case 4: // CUS_TYPE
          return CUS_TYPE;
        case 5: // START_REQUEST_DTTM
          return START_REQUEST_DTTM;
        case 6: // END_REQUEST_DTTM
          return END_REQUEST_DTTM;
        case 7: // OUT_REQUEST_DTTM
          return OUT_REQUEST_DTTM;
        case 8: // START_DTTM
          return START_DTTM;
        case 9: // END_DTTM
          return END_DTTM;
        case 10: // START_APPLY_DTTM
          return START_APPLY_DTTM;
        case 11: // END_APPLY_DTTM
          return END_APPLY_DTTM;
        case 12: // SUPERVISION_PEOPLE
          return SUPERVISION_PEOPLE;
        case 13: // START_SUPERVISION_DTTM
          return START_SUPERVISION_DTTM;
        case 14: // END_SUPERVISION_DTTM
          return END_SUPERVISION_DTTM;
        case 15: // DISTRIBUTION_STATUS
          return DISTRIBUTION_STATUS;
        case 16: // ECO_TRADE
          return ECO_TRADE;
        case 17: // ID
          return ID;
        case 18: // USER_NAME
          return USER_NAME;
        case 19: // PAGE
          return PAGE;
        case 20: // ROWS
          return ROWS;
        case 21: // PROJECT_ID
          return PROJECT_ID;
        case 22: // PID
          return PID;
        case 23: // REGULATORY_STATUS
          return REGULATORY_STATUS;
        case 24: // REGULATORY_USER_NAME
          return REGULATORY_USER_NAME;
        case 25: // USER_ID
          return USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CUSTYPE_ISSET_ID = 0;
  private static final int __DISTRIBUTIONSTATUS_ISSET_ID = 1;
  private static final int __ECOTRADE_ISSET_ID = 2;
  private static final int __ID_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private static final int __PROJECTID_ISSET_ID = 6;
  private static final int __PID_ISSET_ID = 7;
  private static final int __REGULATORYSTATUS_ISSET_ID = 8;
  private static final int __USERID_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("cusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cusType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("startRequestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("endRequestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUT_REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("outRequestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_DTTM, new org.apache.thrift.meta_data.FieldMetaData("startDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DTTM, new org.apache.thrift.meta_data.FieldMetaData("endDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_APPLY_DTTM, new org.apache.thrift.meta_data.FieldMetaData("startApplyDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_APPLY_DTTM, new org.apache.thrift.meta_data.FieldMetaData("endApplyDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUPERVISION_PEOPLE, new org.apache.thrift.meta_data.FieldMetaData("supervisionPeople", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_SUPERVISION_DTTM, new org.apache.thrift.meta_data.FieldMetaData("startSupervisionDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_SUPERVISION_DTTM, new org.apache.thrift.meta_data.FieldMetaData("endSupervisionDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISTRIBUTION_STATUS, new org.apache.thrift.meta_data.FieldMetaData("distributionStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ECO_TRADE, new org.apache.thrift.meta_data.FieldMetaData("ecoTrade", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REGULATORY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("regulatoryStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REGULATORY_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("regulatoryUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SupervisionSearchBean.class, metaDataMap);
  }

  public SupervisionSearchBean() {
  }

  public SupervisionSearchBean(
    String projectName,
    String projectNumber,
    String cusName,
    int cusType,
    String startRequestDttm,
    String endRequestDttm,
    String outRequestDttm,
    String startDttm,
    String endDttm,
    String startApplyDttm,
    String endApplyDttm,
    String supervisionPeople,
    String startSupervisionDttm,
    String endSupervisionDttm,
    int distributionStatus,
    int ecoTrade,
    int id,
    String userName,
    int page,
    int rows,
    int projectId,
    int pid,
    int regulatoryStatus,
    String regulatoryUserName,
    int userId)
  {
    this();
    this.projectName = projectName;
    this.projectNumber = projectNumber;
    this.cusName = cusName;
    this.cusType = cusType;
    setCusTypeIsSet(true);
    this.startRequestDttm = startRequestDttm;
    this.endRequestDttm = endRequestDttm;
    this.outRequestDttm = outRequestDttm;
    this.startDttm = startDttm;
    this.endDttm = endDttm;
    this.startApplyDttm = startApplyDttm;
    this.endApplyDttm = endApplyDttm;
    this.supervisionPeople = supervisionPeople;
    this.startSupervisionDttm = startSupervisionDttm;
    this.endSupervisionDttm = endSupervisionDttm;
    this.distributionStatus = distributionStatus;
    setDistributionStatusIsSet(true);
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    this.id = id;
    setIdIsSet(true);
    this.userName = userName;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.pid = pid;
    setPidIsSet(true);
    this.regulatoryStatus = regulatoryStatus;
    setRegulatoryStatusIsSet(true);
    this.regulatoryUserName = regulatoryUserName;
    this.userId = userId;
    setUserIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SupervisionSearchBean(SupervisionSearchBean other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetCusName()) {
      this.cusName = other.cusName;
    }
    this.cusType = other.cusType;
    if (other.isSetStartRequestDttm()) {
      this.startRequestDttm = other.startRequestDttm;
    }
    if (other.isSetEndRequestDttm()) {
      this.endRequestDttm = other.endRequestDttm;
    }
    if (other.isSetOutRequestDttm()) {
      this.outRequestDttm = other.outRequestDttm;
    }
    if (other.isSetStartDttm()) {
      this.startDttm = other.startDttm;
    }
    if (other.isSetEndDttm()) {
      this.endDttm = other.endDttm;
    }
    if (other.isSetStartApplyDttm()) {
      this.startApplyDttm = other.startApplyDttm;
    }
    if (other.isSetEndApplyDttm()) {
      this.endApplyDttm = other.endApplyDttm;
    }
    if (other.isSetSupervisionPeople()) {
      this.supervisionPeople = other.supervisionPeople;
    }
    if (other.isSetStartSupervisionDttm()) {
      this.startSupervisionDttm = other.startSupervisionDttm;
    }
    if (other.isSetEndSupervisionDttm()) {
      this.endSupervisionDttm = other.endSupervisionDttm;
    }
    this.distributionStatus = other.distributionStatus;
    this.ecoTrade = other.ecoTrade;
    this.id = other.id;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    this.page = other.page;
    this.rows = other.rows;
    this.projectId = other.projectId;
    this.pid = other.pid;
    this.regulatoryStatus = other.regulatoryStatus;
    if (other.isSetRegulatoryUserName()) {
      this.regulatoryUserName = other.regulatoryUserName;
    }
    this.userId = other.userId;
  }

  public SupervisionSearchBean deepCopy() {
    return new SupervisionSearchBean(this);
  }

  @Override
  public void clear() {
    this.projectName = null;
    this.projectNumber = null;
    this.cusName = null;
    setCusTypeIsSet(false);
    this.cusType = 0;
    this.startRequestDttm = null;
    this.endRequestDttm = null;
    this.outRequestDttm = null;
    this.startDttm = null;
    this.endDttm = null;
    this.startApplyDttm = null;
    this.endApplyDttm = null;
    this.supervisionPeople = null;
    this.startSupervisionDttm = null;
    this.endSupervisionDttm = null;
    setDistributionStatusIsSet(false);
    this.distributionStatus = 0;
    setEcoTradeIsSet(false);
    this.ecoTrade = 0;
    setIdIsSet(false);
    this.id = 0;
    this.userName = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setProjectIdIsSet(false);
    this.projectId = 0;
    setPidIsSet(false);
    this.pid = 0;
    setRegulatoryStatusIsSet(false);
    this.regulatoryStatus = 0;
    this.regulatoryUserName = null;
    setUserIdIsSet(false);
    this.userId = 0;
  }

  public String getProjectName() {
    return this.projectName;
  }

  public SupervisionSearchBean setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public SupervisionSearchBean setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getCusName() {
    return this.cusName;
  }

  public SupervisionSearchBean setCusName(String cusName) {
    this.cusName = cusName;
    return this;
  }

  public void unsetCusName() {
    this.cusName = null;
  }

  /** Returns true if field cusName is set (has been assigned a value) and false otherwise */
  public boolean isSetCusName() {
    return this.cusName != null;
  }

  public void setCusNameIsSet(boolean value) {
    if (!value) {
      this.cusName = null;
    }
  }

  public int getCusType() {
    return this.cusType;
  }

  public SupervisionSearchBean setCusType(int cusType) {
    this.cusType = cusType;
    setCusTypeIsSet(true);
    return this;
  }

  public void unsetCusType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUSTYPE_ISSET_ID);
  }

  /** Returns true if field cusType is set (has been assigned a value) and false otherwise */
  public boolean isSetCusType() {
    return EncodingUtils.testBit(__isset_bitfield, __CUSTYPE_ISSET_ID);
  }

  public void setCusTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUSTYPE_ISSET_ID, value);
  }

  public String getStartRequestDttm() {
    return this.startRequestDttm;
  }

  public SupervisionSearchBean setStartRequestDttm(String startRequestDttm) {
    this.startRequestDttm = startRequestDttm;
    return this;
  }

  public void unsetStartRequestDttm() {
    this.startRequestDttm = null;
  }

  /** Returns true if field startRequestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetStartRequestDttm() {
    return this.startRequestDttm != null;
  }

  public void setStartRequestDttmIsSet(boolean value) {
    if (!value) {
      this.startRequestDttm = null;
    }
  }

  public String getEndRequestDttm() {
    return this.endRequestDttm;
  }

  public SupervisionSearchBean setEndRequestDttm(String endRequestDttm) {
    this.endRequestDttm = endRequestDttm;
    return this;
  }

  public void unsetEndRequestDttm() {
    this.endRequestDttm = null;
  }

  /** Returns true if field endRequestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetEndRequestDttm() {
    return this.endRequestDttm != null;
  }

  public void setEndRequestDttmIsSet(boolean value) {
    if (!value) {
      this.endRequestDttm = null;
    }
  }

  public String getOutRequestDttm() {
    return this.outRequestDttm;
  }

  public SupervisionSearchBean setOutRequestDttm(String outRequestDttm) {
    this.outRequestDttm = outRequestDttm;
    return this;
  }

  public void unsetOutRequestDttm() {
    this.outRequestDttm = null;
  }

  /** Returns true if field outRequestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetOutRequestDttm() {
    return this.outRequestDttm != null;
  }

  public void setOutRequestDttmIsSet(boolean value) {
    if (!value) {
      this.outRequestDttm = null;
    }
  }

  public String getStartDttm() {
    return this.startDttm;
  }

  public SupervisionSearchBean setStartDttm(String startDttm) {
    this.startDttm = startDttm;
    return this;
  }

  public void unsetStartDttm() {
    this.startDttm = null;
  }

  /** Returns true if field startDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetStartDttm() {
    return this.startDttm != null;
  }

  public void setStartDttmIsSet(boolean value) {
    if (!value) {
      this.startDttm = null;
    }
  }

  public String getEndDttm() {
    return this.endDttm;
  }

  public SupervisionSearchBean setEndDttm(String endDttm) {
    this.endDttm = endDttm;
    return this;
  }

  public void unsetEndDttm() {
    this.endDttm = null;
  }

  /** Returns true if field endDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDttm() {
    return this.endDttm != null;
  }

  public void setEndDttmIsSet(boolean value) {
    if (!value) {
      this.endDttm = null;
    }
  }

  public String getStartApplyDttm() {
    return this.startApplyDttm;
  }

  public SupervisionSearchBean setStartApplyDttm(String startApplyDttm) {
    this.startApplyDttm = startApplyDttm;
    return this;
  }

  public void unsetStartApplyDttm() {
    this.startApplyDttm = null;
  }

  /** Returns true if field startApplyDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetStartApplyDttm() {
    return this.startApplyDttm != null;
  }

  public void setStartApplyDttmIsSet(boolean value) {
    if (!value) {
      this.startApplyDttm = null;
    }
  }

  public String getEndApplyDttm() {
    return this.endApplyDttm;
  }

  public SupervisionSearchBean setEndApplyDttm(String endApplyDttm) {
    this.endApplyDttm = endApplyDttm;
    return this;
  }

  public void unsetEndApplyDttm() {
    this.endApplyDttm = null;
  }

  /** Returns true if field endApplyDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetEndApplyDttm() {
    return this.endApplyDttm != null;
  }

  public void setEndApplyDttmIsSet(boolean value) {
    if (!value) {
      this.endApplyDttm = null;
    }
  }

  public String getSupervisionPeople() {
    return this.supervisionPeople;
  }

  public SupervisionSearchBean setSupervisionPeople(String supervisionPeople) {
    this.supervisionPeople = supervisionPeople;
    return this;
  }

  public void unsetSupervisionPeople() {
    this.supervisionPeople = null;
  }

  /** Returns true if field supervisionPeople is set (has been assigned a value) and false otherwise */
  public boolean isSetSupervisionPeople() {
    return this.supervisionPeople != null;
  }

  public void setSupervisionPeopleIsSet(boolean value) {
    if (!value) {
      this.supervisionPeople = null;
    }
  }

  public String getStartSupervisionDttm() {
    return this.startSupervisionDttm;
  }

  public SupervisionSearchBean setStartSupervisionDttm(String startSupervisionDttm) {
    this.startSupervisionDttm = startSupervisionDttm;
    return this;
  }

  public void unsetStartSupervisionDttm() {
    this.startSupervisionDttm = null;
  }

  /** Returns true if field startSupervisionDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetStartSupervisionDttm() {
    return this.startSupervisionDttm != null;
  }

  public void setStartSupervisionDttmIsSet(boolean value) {
    if (!value) {
      this.startSupervisionDttm = null;
    }
  }

  public String getEndSupervisionDttm() {
    return this.endSupervisionDttm;
  }

  public SupervisionSearchBean setEndSupervisionDttm(String endSupervisionDttm) {
    this.endSupervisionDttm = endSupervisionDttm;
    return this;
  }

  public void unsetEndSupervisionDttm() {
    this.endSupervisionDttm = null;
  }

  /** Returns true if field endSupervisionDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetEndSupervisionDttm() {
    return this.endSupervisionDttm != null;
  }

  public void setEndSupervisionDttmIsSet(boolean value) {
    if (!value) {
      this.endSupervisionDttm = null;
    }
  }

  public int getDistributionStatus() {
    return this.distributionStatus;
  }

  public SupervisionSearchBean setDistributionStatus(int distributionStatus) {
    this.distributionStatus = distributionStatus;
    setDistributionStatusIsSet(true);
    return this;
  }

  public void unsetDistributionStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISTRIBUTIONSTATUS_ISSET_ID);
  }

  /** Returns true if field distributionStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetDistributionStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __DISTRIBUTIONSTATUS_ISSET_ID);
  }

  public void setDistributionStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISTRIBUTIONSTATUS_ISSET_ID, value);
  }

  public int getEcoTrade() {
    return this.ecoTrade;
  }

  public SupervisionSearchBean setEcoTrade(int ecoTrade) {
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    return this;
  }

  public void unsetEcoTrade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  /** Returns true if field ecoTrade is set (has been assigned a value) and false otherwise */
  public boolean isSetEcoTrade() {
    return EncodingUtils.testBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  public void setEcoTradeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ECOTRADE_ISSET_ID, value);
  }

  public int getId() {
    return this.id;
  }

  public SupervisionSearchBean setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getUserName() {
    return this.userName;
  }

  public SupervisionSearchBean setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public SupervisionSearchBean setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public SupervisionSearchBean setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getProjectId() {
    return this.projectId;
  }

  public SupervisionSearchBean setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public int getPid() {
    return this.pid;
  }

  public SupervisionSearchBean setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getRegulatoryStatus() {
    return this.regulatoryStatus;
  }

  public SupervisionSearchBean setRegulatoryStatus(int regulatoryStatus) {
    this.regulatoryStatus = regulatoryStatus;
    setRegulatoryStatusIsSet(true);
    return this;
  }

  public void unsetRegulatoryStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REGULATORYSTATUS_ISSET_ID);
  }

  /** Returns true if field regulatoryStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRegulatoryStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REGULATORYSTATUS_ISSET_ID);
  }

  public void setRegulatoryStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REGULATORYSTATUS_ISSET_ID, value);
  }

  public String getRegulatoryUserName() {
    return this.regulatoryUserName;
  }

  public SupervisionSearchBean setRegulatoryUserName(String regulatoryUserName) {
    this.regulatoryUserName = regulatoryUserName;
    return this;
  }

  public void unsetRegulatoryUserName() {
    this.regulatoryUserName = null;
  }

  /** Returns true if field regulatoryUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetRegulatoryUserName() {
    return this.regulatoryUserName != null;
  }

  public void setRegulatoryUserNameIsSet(boolean value) {
    if (!value) {
      this.regulatoryUserName = null;
    }
  }

  public int getUserId() {
    return this.userId;
  }

  public SupervisionSearchBean setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case CUS_NAME:
      if (value == null) {
        unsetCusName();
      } else {
        setCusName((String)value);
      }
      break;

    case CUS_TYPE:
      if (value == null) {
        unsetCusType();
      } else {
        setCusType((Integer)value);
      }
      break;

    case START_REQUEST_DTTM:
      if (value == null) {
        unsetStartRequestDttm();
      } else {
        setStartRequestDttm((String)value);
      }
      break;

    case END_REQUEST_DTTM:
      if (value == null) {
        unsetEndRequestDttm();
      } else {
        setEndRequestDttm((String)value);
      }
      break;

    case OUT_REQUEST_DTTM:
      if (value == null) {
        unsetOutRequestDttm();
      } else {
        setOutRequestDttm((String)value);
      }
      break;

    case START_DTTM:
      if (value == null) {
        unsetStartDttm();
      } else {
        setStartDttm((String)value);
      }
      break;

    case END_DTTM:
      if (value == null) {
        unsetEndDttm();
      } else {
        setEndDttm((String)value);
      }
      break;

    case START_APPLY_DTTM:
      if (value == null) {
        unsetStartApplyDttm();
      } else {
        setStartApplyDttm((String)value);
      }
      break;

    case END_APPLY_DTTM:
      if (value == null) {
        unsetEndApplyDttm();
      } else {
        setEndApplyDttm((String)value);
      }
      break;

    case SUPERVISION_PEOPLE:
      if (value == null) {
        unsetSupervisionPeople();
      } else {
        setSupervisionPeople((String)value);
      }
      break;

    case START_SUPERVISION_DTTM:
      if (value == null) {
        unsetStartSupervisionDttm();
      } else {
        setStartSupervisionDttm((String)value);
      }
      break;

    case END_SUPERVISION_DTTM:
      if (value == null) {
        unsetEndSupervisionDttm();
      } else {
        setEndSupervisionDttm((String)value);
      }
      break;

    case DISTRIBUTION_STATUS:
      if (value == null) {
        unsetDistributionStatus();
      } else {
        setDistributionStatus((Integer)value);
      }
      break;

    case ECO_TRADE:
      if (value == null) {
        unsetEcoTrade();
      } else {
        setEcoTrade((Integer)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case REGULATORY_STATUS:
      if (value == null) {
        unsetRegulatoryStatus();
      } else {
        setRegulatoryStatus((Integer)value);
      }
      break;

    case REGULATORY_USER_NAME:
      if (value == null) {
        unsetRegulatoryUserName();
      } else {
        setRegulatoryUserName((String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_NAME:
      return getProjectName();

    case PROJECT_NUMBER:
      return getProjectNumber();

    case CUS_NAME:
      return getCusName();

    case CUS_TYPE:
      return Integer.valueOf(getCusType());

    case START_REQUEST_DTTM:
      return getStartRequestDttm();

    case END_REQUEST_DTTM:
      return getEndRequestDttm();

    case OUT_REQUEST_DTTM:
      return getOutRequestDttm();

    case START_DTTM:
      return getStartDttm();

    case END_DTTM:
      return getEndDttm();

    case START_APPLY_DTTM:
      return getStartApplyDttm();

    case END_APPLY_DTTM:
      return getEndApplyDttm();

    case SUPERVISION_PEOPLE:
      return getSupervisionPeople();

    case START_SUPERVISION_DTTM:
      return getStartSupervisionDttm();

    case END_SUPERVISION_DTTM:
      return getEndSupervisionDttm();

    case DISTRIBUTION_STATUS:
      return Integer.valueOf(getDistributionStatus());

    case ECO_TRADE:
      return Integer.valueOf(getEcoTrade());

    case ID:
      return Integer.valueOf(getId());

    case USER_NAME:
      return getUserName();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PID:
      return Integer.valueOf(getPid());

    case REGULATORY_STATUS:
      return Integer.valueOf(getRegulatoryStatus());

    case REGULATORY_USER_NAME:
      return getRegulatoryUserName();

    case USER_ID:
      return Integer.valueOf(getUserId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_NAME:
      return isSetProjectName();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case CUS_NAME:
      return isSetCusName();
    case CUS_TYPE:
      return isSetCusType();
    case START_REQUEST_DTTM:
      return isSetStartRequestDttm();
    case END_REQUEST_DTTM:
      return isSetEndRequestDttm();
    case OUT_REQUEST_DTTM:
      return isSetOutRequestDttm();
    case START_DTTM:
      return isSetStartDttm();
    case END_DTTM:
      return isSetEndDttm();
    case START_APPLY_DTTM:
      return isSetStartApplyDttm();
    case END_APPLY_DTTM:
      return isSetEndApplyDttm();
    case SUPERVISION_PEOPLE:
      return isSetSupervisionPeople();
    case START_SUPERVISION_DTTM:
      return isSetStartSupervisionDttm();
    case END_SUPERVISION_DTTM:
      return isSetEndSupervisionDttm();
    case DISTRIBUTION_STATUS:
      return isSetDistributionStatus();
    case ECO_TRADE:
      return isSetEcoTrade();
    case ID:
      return isSetId();
    case USER_NAME:
      return isSetUserName();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case PROJECT_ID:
      return isSetProjectId();
    case PID:
      return isSetPid();
    case REGULATORY_STATUS:
      return isSetRegulatoryStatus();
    case REGULATORY_USER_NAME:
      return isSetRegulatoryUserName();
    case USER_ID:
      return isSetUserId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SupervisionSearchBean)
      return this.equals((SupervisionSearchBean)that);
    return false;
  }

  public boolean equals(SupervisionSearchBean that) {
    if (that == null)
      return false;

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_cusName = true && this.isSetCusName();
    boolean that_present_cusName = true && that.isSetCusName();
    if (this_present_cusName || that_present_cusName) {
      if (!(this_present_cusName && that_present_cusName))
        return false;
      if (!this.cusName.equals(that.cusName))
        return false;
    }

    boolean this_present_cusType = true;
    boolean that_present_cusType = true;
    if (this_present_cusType || that_present_cusType) {
      if (!(this_present_cusType && that_present_cusType))
        return false;
      if (this.cusType != that.cusType)
        return false;
    }

    boolean this_present_startRequestDttm = true && this.isSetStartRequestDttm();
    boolean that_present_startRequestDttm = true && that.isSetStartRequestDttm();
    if (this_present_startRequestDttm || that_present_startRequestDttm) {
      if (!(this_present_startRequestDttm && that_present_startRequestDttm))
        return false;
      if (!this.startRequestDttm.equals(that.startRequestDttm))
        return false;
    }

    boolean this_present_endRequestDttm = true && this.isSetEndRequestDttm();
    boolean that_present_endRequestDttm = true && that.isSetEndRequestDttm();
    if (this_present_endRequestDttm || that_present_endRequestDttm) {
      if (!(this_present_endRequestDttm && that_present_endRequestDttm))
        return false;
      if (!this.endRequestDttm.equals(that.endRequestDttm))
        return false;
    }

    boolean this_present_outRequestDttm = true && this.isSetOutRequestDttm();
    boolean that_present_outRequestDttm = true && that.isSetOutRequestDttm();
    if (this_present_outRequestDttm || that_present_outRequestDttm) {
      if (!(this_present_outRequestDttm && that_present_outRequestDttm))
        return false;
      if (!this.outRequestDttm.equals(that.outRequestDttm))
        return false;
    }

    boolean this_present_startDttm = true && this.isSetStartDttm();
    boolean that_present_startDttm = true && that.isSetStartDttm();
    if (this_present_startDttm || that_present_startDttm) {
      if (!(this_present_startDttm && that_present_startDttm))
        return false;
      if (!this.startDttm.equals(that.startDttm))
        return false;
    }

    boolean this_present_endDttm = true && this.isSetEndDttm();
    boolean that_present_endDttm = true && that.isSetEndDttm();
    if (this_present_endDttm || that_present_endDttm) {
      if (!(this_present_endDttm && that_present_endDttm))
        return false;
      if (!this.endDttm.equals(that.endDttm))
        return false;
    }

    boolean this_present_startApplyDttm = true && this.isSetStartApplyDttm();
    boolean that_present_startApplyDttm = true && that.isSetStartApplyDttm();
    if (this_present_startApplyDttm || that_present_startApplyDttm) {
      if (!(this_present_startApplyDttm && that_present_startApplyDttm))
        return false;
      if (!this.startApplyDttm.equals(that.startApplyDttm))
        return false;
    }

    boolean this_present_endApplyDttm = true && this.isSetEndApplyDttm();
    boolean that_present_endApplyDttm = true && that.isSetEndApplyDttm();
    if (this_present_endApplyDttm || that_present_endApplyDttm) {
      if (!(this_present_endApplyDttm && that_present_endApplyDttm))
        return false;
      if (!this.endApplyDttm.equals(that.endApplyDttm))
        return false;
    }

    boolean this_present_supervisionPeople = true && this.isSetSupervisionPeople();
    boolean that_present_supervisionPeople = true && that.isSetSupervisionPeople();
    if (this_present_supervisionPeople || that_present_supervisionPeople) {
      if (!(this_present_supervisionPeople && that_present_supervisionPeople))
        return false;
      if (!this.supervisionPeople.equals(that.supervisionPeople))
        return false;
    }

    boolean this_present_startSupervisionDttm = true && this.isSetStartSupervisionDttm();
    boolean that_present_startSupervisionDttm = true && that.isSetStartSupervisionDttm();
    if (this_present_startSupervisionDttm || that_present_startSupervisionDttm) {
      if (!(this_present_startSupervisionDttm && that_present_startSupervisionDttm))
        return false;
      if (!this.startSupervisionDttm.equals(that.startSupervisionDttm))
        return false;
    }

    boolean this_present_endSupervisionDttm = true && this.isSetEndSupervisionDttm();
    boolean that_present_endSupervisionDttm = true && that.isSetEndSupervisionDttm();
    if (this_present_endSupervisionDttm || that_present_endSupervisionDttm) {
      if (!(this_present_endSupervisionDttm && that_present_endSupervisionDttm))
        return false;
      if (!this.endSupervisionDttm.equals(that.endSupervisionDttm))
        return false;
    }

    boolean this_present_distributionStatus = true;
    boolean that_present_distributionStatus = true;
    if (this_present_distributionStatus || that_present_distributionStatus) {
      if (!(this_present_distributionStatus && that_present_distributionStatus))
        return false;
      if (this.distributionStatus != that.distributionStatus)
        return false;
    }

    boolean this_present_ecoTrade = true;
    boolean that_present_ecoTrade = true;
    if (this_present_ecoTrade || that_present_ecoTrade) {
      if (!(this_present_ecoTrade && that_present_ecoTrade))
        return false;
      if (this.ecoTrade != that.ecoTrade)
        return false;
    }

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_regulatoryStatus = true;
    boolean that_present_regulatoryStatus = true;
    if (this_present_regulatoryStatus || that_present_regulatoryStatus) {
      if (!(this_present_regulatoryStatus && that_present_regulatoryStatus))
        return false;
      if (this.regulatoryStatus != that.regulatoryStatus)
        return false;
    }

    boolean this_present_regulatoryUserName = true && this.isSetRegulatoryUserName();
    boolean that_present_regulatoryUserName = true && that.isSetRegulatoryUserName();
    if (this_present_regulatoryUserName || that_present_regulatoryUserName) {
      if (!(this_present_regulatoryUserName && that_present_regulatoryUserName))
        return false;
      if (!this.regulatoryUserName.equals(that.regulatoryUserName))
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_cusName = true && (isSetCusName());
    list.add(present_cusName);
    if (present_cusName)
      list.add(cusName);

    boolean present_cusType = true;
    list.add(present_cusType);
    if (present_cusType)
      list.add(cusType);

    boolean present_startRequestDttm = true && (isSetStartRequestDttm());
    list.add(present_startRequestDttm);
    if (present_startRequestDttm)
      list.add(startRequestDttm);

    boolean present_endRequestDttm = true && (isSetEndRequestDttm());
    list.add(present_endRequestDttm);
    if (present_endRequestDttm)
      list.add(endRequestDttm);

    boolean present_outRequestDttm = true && (isSetOutRequestDttm());
    list.add(present_outRequestDttm);
    if (present_outRequestDttm)
      list.add(outRequestDttm);

    boolean present_startDttm = true && (isSetStartDttm());
    list.add(present_startDttm);
    if (present_startDttm)
      list.add(startDttm);

    boolean present_endDttm = true && (isSetEndDttm());
    list.add(present_endDttm);
    if (present_endDttm)
      list.add(endDttm);

    boolean present_startApplyDttm = true && (isSetStartApplyDttm());
    list.add(present_startApplyDttm);
    if (present_startApplyDttm)
      list.add(startApplyDttm);

    boolean present_endApplyDttm = true && (isSetEndApplyDttm());
    list.add(present_endApplyDttm);
    if (present_endApplyDttm)
      list.add(endApplyDttm);

    boolean present_supervisionPeople = true && (isSetSupervisionPeople());
    list.add(present_supervisionPeople);
    if (present_supervisionPeople)
      list.add(supervisionPeople);

    boolean present_startSupervisionDttm = true && (isSetStartSupervisionDttm());
    list.add(present_startSupervisionDttm);
    if (present_startSupervisionDttm)
      list.add(startSupervisionDttm);

    boolean present_endSupervisionDttm = true && (isSetEndSupervisionDttm());
    list.add(present_endSupervisionDttm);
    if (present_endSupervisionDttm)
      list.add(endSupervisionDttm);

    boolean present_distributionStatus = true;
    list.add(present_distributionStatus);
    if (present_distributionStatus)
      list.add(distributionStatus);

    boolean present_ecoTrade = true;
    list.add(present_ecoTrade);
    if (present_ecoTrade)
      list.add(ecoTrade);

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_userName = true && (isSetUserName());
    list.add(present_userName);
    if (present_userName)
      list.add(userName);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_regulatoryStatus = true;
    list.add(present_regulatoryStatus);
    if (present_regulatoryStatus)
      list.add(regulatoryStatus);

    boolean present_regulatoryUserName = true && (isSetRegulatoryUserName());
    list.add(present_regulatoryUserName);
    if (present_regulatoryUserName)
      list.add(regulatoryUserName);

    boolean present_userId = true;
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    return list.hashCode();
  }

  @Override
  public int compareTo(SupervisionSearchBean other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusName()).compareTo(other.isSetCusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusName, other.cusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusType()).compareTo(other.isSetCusType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusType, other.cusType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartRequestDttm()).compareTo(other.isSetStartRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startRequestDttm, other.startRequestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndRequestDttm()).compareTo(other.isSetEndRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endRequestDttm, other.endRequestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutRequestDttm()).compareTo(other.isSetOutRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outRequestDttm, other.outRequestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartDttm()).compareTo(other.isSetStartDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startDttm, other.startDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDttm()).compareTo(other.isSetEndDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDttm, other.endDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartApplyDttm()).compareTo(other.isSetStartApplyDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartApplyDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startApplyDttm, other.startApplyDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndApplyDttm()).compareTo(other.isSetEndApplyDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndApplyDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endApplyDttm, other.endApplyDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSupervisionPeople()).compareTo(other.isSetSupervisionPeople());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSupervisionPeople()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.supervisionPeople, other.supervisionPeople);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartSupervisionDttm()).compareTo(other.isSetStartSupervisionDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartSupervisionDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startSupervisionDttm, other.startSupervisionDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndSupervisionDttm()).compareTo(other.isSetEndSupervisionDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndSupervisionDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endSupervisionDttm, other.endSupervisionDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistributionStatus()).compareTo(other.isSetDistributionStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistributionStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distributionStatus, other.distributionStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEcoTrade()).compareTo(other.isSetEcoTrade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEcoTrade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ecoTrade, other.ecoTrade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(other.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, other.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegulatoryStatus()).compareTo(other.isSetRegulatoryStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegulatoryStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regulatoryStatus, other.regulatoryStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegulatoryUserName()).compareTo(other.isSetRegulatoryUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegulatoryUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regulatoryUserName, other.regulatoryUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SupervisionSearchBean(");
    boolean first = true;

    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusName:");
    if (this.cusName == null) {
      sb.append("null");
    } else {
      sb.append(this.cusName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusType:");
    sb.append(this.cusType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startRequestDttm:");
    if (this.startRequestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.startRequestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endRequestDttm:");
    if (this.endRequestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.endRequestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outRequestDttm:");
    if (this.outRequestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.outRequestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startDttm:");
    if (this.startDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.startDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDttm:");
    if (this.endDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.endDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startApplyDttm:");
    if (this.startApplyDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.startApplyDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endApplyDttm:");
    if (this.endApplyDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.endApplyDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("supervisionPeople:");
    if (this.supervisionPeople == null) {
      sb.append("null");
    } else {
      sb.append(this.supervisionPeople);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startSupervisionDttm:");
    if (this.startSupervisionDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.startSupervisionDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endSupervisionDttm:");
    if (this.endSupervisionDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.endSupervisionDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("distributionStatus:");
    sb.append(this.distributionStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ecoTrade:");
    sb.append(this.ecoTrade);
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("regulatoryStatus:");
    sb.append(this.regulatoryStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("regulatoryUserName:");
    if (this.regulatoryUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.regulatoryUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SupervisionSearchBeanStandardSchemeFactory implements SchemeFactory {
    public SupervisionSearchBeanStandardScheme getScheme() {
      return new SupervisionSearchBeanStandardScheme();
    }
  }

  private static class SupervisionSearchBeanStandardScheme extends StandardScheme<SupervisionSearchBean> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SupervisionSearchBean struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cusName = iprot.readString();
              struct.setCusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CUS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cusType = iprot.readI32();
              struct.setCusTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startRequestDttm = iprot.readString();
              struct.setStartRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endRequestDttm = iprot.readString();
              struct.setEndRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OUT_REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outRequestDttm = iprot.readString();
              struct.setOutRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // START_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startDttm = iprot.readString();
              struct.setStartDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // END_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDttm = iprot.readString();
              struct.setEndDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // START_APPLY_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startApplyDttm = iprot.readString();
              struct.setStartApplyDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // END_APPLY_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endApplyDttm = iprot.readString();
              struct.setEndApplyDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SUPERVISION_PEOPLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.supervisionPeople = iprot.readString();
              struct.setSupervisionPeopleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // START_SUPERVISION_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startSupervisionDttm = iprot.readString();
              struct.setStartSupervisionDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // END_SUPERVISION_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endSupervisionDttm = iprot.readString();
              struct.setEndSupervisionDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DISTRIBUTION_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.distributionStatus = iprot.readI32();
              struct.setDistributionStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ECO_TRADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ecoTrade = iprot.readI32();
              struct.setEcoTradeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // REGULATORY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.regulatoryStatus = iprot.readI32();
              struct.setRegulatoryStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // REGULATORY_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regulatoryUserName = iprot.readString();
              struct.setRegulatoryUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SupervisionSearchBean struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.cusName != null) {
        oprot.writeFieldBegin(CUS_NAME_FIELD_DESC);
        oprot.writeString(struct.cusName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUS_TYPE_FIELD_DESC);
      oprot.writeI32(struct.cusType);
      oprot.writeFieldEnd();
      if (struct.startRequestDttm != null) {
        oprot.writeFieldBegin(START_REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.startRequestDttm);
        oprot.writeFieldEnd();
      }
      if (struct.endRequestDttm != null) {
        oprot.writeFieldBegin(END_REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.endRequestDttm);
        oprot.writeFieldEnd();
      }
      if (struct.outRequestDttm != null) {
        oprot.writeFieldBegin(OUT_REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.outRequestDttm);
        oprot.writeFieldEnd();
      }
      if (struct.startDttm != null) {
        oprot.writeFieldBegin(START_DTTM_FIELD_DESC);
        oprot.writeString(struct.startDttm);
        oprot.writeFieldEnd();
      }
      if (struct.endDttm != null) {
        oprot.writeFieldBegin(END_DTTM_FIELD_DESC);
        oprot.writeString(struct.endDttm);
        oprot.writeFieldEnd();
      }
      if (struct.startApplyDttm != null) {
        oprot.writeFieldBegin(START_APPLY_DTTM_FIELD_DESC);
        oprot.writeString(struct.startApplyDttm);
        oprot.writeFieldEnd();
      }
      if (struct.endApplyDttm != null) {
        oprot.writeFieldBegin(END_APPLY_DTTM_FIELD_DESC);
        oprot.writeString(struct.endApplyDttm);
        oprot.writeFieldEnd();
      }
      if (struct.supervisionPeople != null) {
        oprot.writeFieldBegin(SUPERVISION_PEOPLE_FIELD_DESC);
        oprot.writeString(struct.supervisionPeople);
        oprot.writeFieldEnd();
      }
      if (struct.startSupervisionDttm != null) {
        oprot.writeFieldBegin(START_SUPERVISION_DTTM_FIELD_DESC);
        oprot.writeString(struct.startSupervisionDttm);
        oprot.writeFieldEnd();
      }
      if (struct.endSupervisionDttm != null) {
        oprot.writeFieldBegin(END_SUPERVISION_DTTM_FIELD_DESC);
        oprot.writeString(struct.endSupervisionDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DISTRIBUTION_STATUS_FIELD_DESC);
      oprot.writeI32(struct.distributionStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ECO_TRADE_FIELD_DESC);
      oprot.writeI32(struct.ecoTrade);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REGULATORY_STATUS_FIELD_DESC);
      oprot.writeI32(struct.regulatoryStatus);
      oprot.writeFieldEnd();
      if (struct.regulatoryUserName != null) {
        oprot.writeFieldBegin(REGULATORY_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.regulatoryUserName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SupervisionSearchBeanTupleSchemeFactory implements SchemeFactory {
    public SupervisionSearchBeanTupleScheme getScheme() {
      return new SupervisionSearchBeanTupleScheme();
    }
  }

  private static class SupervisionSearchBeanTupleScheme extends TupleScheme<SupervisionSearchBean> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SupervisionSearchBean struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectName()) {
        optionals.set(0);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(1);
      }
      if (struct.isSetCusName()) {
        optionals.set(2);
      }
      if (struct.isSetCusType()) {
        optionals.set(3);
      }
      if (struct.isSetStartRequestDttm()) {
        optionals.set(4);
      }
      if (struct.isSetEndRequestDttm()) {
        optionals.set(5);
      }
      if (struct.isSetOutRequestDttm()) {
        optionals.set(6);
      }
      if (struct.isSetStartDttm()) {
        optionals.set(7);
      }
      if (struct.isSetEndDttm()) {
        optionals.set(8);
      }
      if (struct.isSetStartApplyDttm()) {
        optionals.set(9);
      }
      if (struct.isSetEndApplyDttm()) {
        optionals.set(10);
      }
      if (struct.isSetSupervisionPeople()) {
        optionals.set(11);
      }
      if (struct.isSetStartSupervisionDttm()) {
        optionals.set(12);
      }
      if (struct.isSetEndSupervisionDttm()) {
        optionals.set(13);
      }
      if (struct.isSetDistributionStatus()) {
        optionals.set(14);
      }
      if (struct.isSetEcoTrade()) {
        optionals.set(15);
      }
      if (struct.isSetId()) {
        optionals.set(16);
      }
      if (struct.isSetUserName()) {
        optionals.set(17);
      }
      if (struct.isSetPage()) {
        optionals.set(18);
      }
      if (struct.isSetRows()) {
        optionals.set(19);
      }
      if (struct.isSetProjectId()) {
        optionals.set(20);
      }
      if (struct.isSetPid()) {
        optionals.set(21);
      }
      if (struct.isSetRegulatoryStatus()) {
        optionals.set(22);
      }
      if (struct.isSetRegulatoryUserName()) {
        optionals.set(23);
      }
      if (struct.isSetUserId()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetCusName()) {
        oprot.writeString(struct.cusName);
      }
      if (struct.isSetCusType()) {
        oprot.writeI32(struct.cusType);
      }
      if (struct.isSetStartRequestDttm()) {
        oprot.writeString(struct.startRequestDttm);
      }
      if (struct.isSetEndRequestDttm()) {
        oprot.writeString(struct.endRequestDttm);
      }
      if (struct.isSetOutRequestDttm()) {
        oprot.writeString(struct.outRequestDttm);
      }
      if (struct.isSetStartDttm()) {
        oprot.writeString(struct.startDttm);
      }
      if (struct.isSetEndDttm()) {
        oprot.writeString(struct.endDttm);
      }
      if (struct.isSetStartApplyDttm()) {
        oprot.writeString(struct.startApplyDttm);
      }
      if (struct.isSetEndApplyDttm()) {
        oprot.writeString(struct.endApplyDttm);
      }
      if (struct.isSetSupervisionPeople()) {
        oprot.writeString(struct.supervisionPeople);
      }
      if (struct.isSetStartSupervisionDttm()) {
        oprot.writeString(struct.startSupervisionDttm);
      }
      if (struct.isSetEndSupervisionDttm()) {
        oprot.writeString(struct.endSupervisionDttm);
      }
      if (struct.isSetDistributionStatus()) {
        oprot.writeI32(struct.distributionStatus);
      }
      if (struct.isSetEcoTrade()) {
        oprot.writeI32(struct.ecoTrade);
      }
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetRegulatoryStatus()) {
        oprot.writeI32(struct.regulatoryStatus);
      }
      if (struct.isSetRegulatoryUserName()) {
        oprot.writeString(struct.regulatoryUserName);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SupervisionSearchBean struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.cusName = iprot.readString();
        struct.setCusNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cusType = iprot.readI32();
        struct.setCusTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startRequestDttm = iprot.readString();
        struct.setStartRequestDttmIsSet(true);
      }
      if (incoming.get(5)) {
        struct.endRequestDttm = iprot.readString();
        struct.setEndRequestDttmIsSet(true);
      }
      if (incoming.get(6)) {
        struct.outRequestDttm = iprot.readString();
        struct.setOutRequestDttmIsSet(true);
      }
      if (incoming.get(7)) {
        struct.startDttm = iprot.readString();
        struct.setStartDttmIsSet(true);
      }
      if (incoming.get(8)) {
        struct.endDttm = iprot.readString();
        struct.setEndDttmIsSet(true);
      }
      if (incoming.get(9)) {
        struct.startApplyDttm = iprot.readString();
        struct.setStartApplyDttmIsSet(true);
      }
      if (incoming.get(10)) {
        struct.endApplyDttm = iprot.readString();
        struct.setEndApplyDttmIsSet(true);
      }
      if (incoming.get(11)) {
        struct.supervisionPeople = iprot.readString();
        struct.setSupervisionPeopleIsSet(true);
      }
      if (incoming.get(12)) {
        struct.startSupervisionDttm = iprot.readString();
        struct.setStartSupervisionDttmIsSet(true);
      }
      if (incoming.get(13)) {
        struct.endSupervisionDttm = iprot.readString();
        struct.setEndSupervisionDttmIsSet(true);
      }
      if (incoming.get(14)) {
        struct.distributionStatus = iprot.readI32();
        struct.setDistributionStatusIsSet(true);
      }
      if (incoming.get(15)) {
        struct.ecoTrade = iprot.readI32();
        struct.setEcoTradeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(17)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(19)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(20)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(21)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(22)) {
        struct.regulatoryStatus = iprot.readI32();
        struct.setRegulatoryStatusIsSet(true);
      }
      if (incoming.get(23)) {
        struct.regulatoryUserName = iprot.readString();
        struct.setRegulatoryUserNameIsSet(true);
      }
      if (incoming.get(24)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
    }
  }

}

