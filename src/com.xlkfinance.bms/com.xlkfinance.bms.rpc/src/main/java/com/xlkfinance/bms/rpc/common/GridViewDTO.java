/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.common;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-7-17")
public class GridViewDTO implements org.apache.thrift.TBase<GridViewDTO, GridViewDTO._Fields>, java.io.Serializable, Cloneable, Comparable<GridViewDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GridViewDTO");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField VALUE1_FIELD_DESC = new org.apache.thrift.protocol.TField("value1", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField VALUE2_FIELD_DESC = new org.apache.thrift.protocol.TField("value2", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VALUE3_FIELD_DESC = new org.apache.thrift.protocol.TField("value3", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField VALUE4_FIELD_DESC = new org.apache.thrift.protocol.TField("value4", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField VALUE5_FIELD_DESC = new org.apache.thrift.protocol.TField("value5", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField VALUE6_FIELD_DESC = new org.apache.thrift.protocol.TField("value6", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField VALUE7_FIELD_DESC = new org.apache.thrift.protocol.TField("value7", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField VALUE8_FIELD_DESC = new org.apache.thrift.protocol.TField("value8", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField VALUE9_FIELD_DESC = new org.apache.thrift.protocol.TField("value9", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField VALUE10_FIELD_DESC = new org.apache.thrift.protocol.TField("value10", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField VALUE11_FIELD_DESC = new org.apache.thrift.protocol.TField("value11", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField VALUE12_FIELD_DESC = new org.apache.thrift.protocol.TField("value12", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField VALUE13_FIELD_DESC = new org.apache.thrift.protocol.TField("value13", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField VALUE14_FIELD_DESC = new org.apache.thrift.protocol.TField("value14", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField VALUE15_FIELD_DESC = new org.apache.thrift.protocol.TField("value15", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField VALUE16_FIELD_DESC = new org.apache.thrift.protocol.TField("value16", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField VALUE17_FIELD_DESC = new org.apache.thrift.protocol.TField("value17", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField VALUE18_FIELD_DESC = new org.apache.thrift.protocol.TField("value18", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField VALUE19_FIELD_DESC = new org.apache.thrift.protocol.TField("value19", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField VALUE20_FIELD_DESC = new org.apache.thrift.protocol.TField("value20", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField VALUE21_FIELD_DESC = new org.apache.thrift.protocol.TField("value21", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField VALUE22_FIELD_DESC = new org.apache.thrift.protocol.TField("value22", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField VALUE23_FIELD_DESC = new org.apache.thrift.protocol.TField("value23", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField VALUE24_FIELD_DESC = new org.apache.thrift.protocol.TField("value24", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField VALUE25_FIELD_DESC = new org.apache.thrift.protocol.TField("value25", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField VALUE26_FIELD_DESC = new org.apache.thrift.protocol.TField("value26", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField VALUE27_FIELD_DESC = new org.apache.thrift.protocol.TField("value27", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField VALUE28_FIELD_DESC = new org.apache.thrift.protocol.TField("value28", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField VALUE29_FIELD_DESC = new org.apache.thrift.protocol.TField("value29", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField VALUE30_FIELD_DESC = new org.apache.thrift.protocol.TField("value30", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField VALUE31_FIELD_DESC = new org.apache.thrift.protocol.TField("value31", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField VALUE32_FIELD_DESC = new org.apache.thrift.protocol.TField("value32", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField VALUE33_FIELD_DESC = new org.apache.thrift.protocol.TField("value33", org.apache.thrift.protocol.TType.STRING, (short)34);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GridViewDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GridViewDTOTupleSchemeFactory());
  }

  public String pid; // required
  public String value1; // required
  public String value2; // required
  public String value3; // required
  public String value4; // required
  public String value5; // required
  public String value6; // required
  public String value7; // required
  public String value8; // required
  public String value9; // required
  public String value10; // required
  public String value11; // required
  public String value12; // required
  public String value13; // required
  public String value14; // required
  public String value15; // required
  public String value16; // required
  public String value17; // required
  public String value18; // required
  public String value19; // required
  public String value20; // required
  public String value21; // required
  public String value22; // required
  public String value23; // required
  public String value24; // required
  public String value25; // required
  public String value26; // required
  public String value27; // required
  public String value28; // required
  public String value29; // required
  public String value30; // required
  public String value31; // required
  public String value32; // required
  public String value33; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    VALUE1((short)2, "value1"),
    VALUE2((short)3, "value2"),
    VALUE3((short)4, "value3"),
    VALUE4((short)5, "value4"),
    VALUE5((short)6, "value5"),
    VALUE6((short)7, "value6"),
    VALUE7((short)8, "value7"),
    VALUE8((short)9, "value8"),
    VALUE9((short)10, "value9"),
    VALUE10((short)11, "value10"),
    VALUE11((short)12, "value11"),
    VALUE12((short)13, "value12"),
    VALUE13((short)14, "value13"),
    VALUE14((short)15, "value14"),
    VALUE15((short)16, "value15"),
    VALUE16((short)17, "value16"),
    VALUE17((short)18, "value17"),
    VALUE18((short)19, "value18"),
    VALUE19((short)20, "value19"),
    VALUE20((short)21, "value20"),
    VALUE21((short)22, "value21"),
    VALUE22((short)23, "value22"),
    VALUE23((short)24, "value23"),
    VALUE24((short)25, "value24"),
    VALUE25((short)26, "value25"),
    VALUE26((short)27, "value26"),
    VALUE27((short)28, "value27"),
    VALUE28((short)29, "value28"),
    VALUE29((short)30, "value29"),
    VALUE30((short)31, "value30"),
    VALUE31((short)32, "value31"),
    VALUE32((short)33, "value32"),
    VALUE33((short)34, "value33");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // VALUE1
          return VALUE1;
        case 3: // VALUE2
          return VALUE2;
        case 4: // VALUE3
          return VALUE3;
        case 5: // VALUE4
          return VALUE4;
        case 6: // VALUE5
          return VALUE5;
        case 7: // VALUE6
          return VALUE6;
        case 8: // VALUE7
          return VALUE7;
        case 9: // VALUE8
          return VALUE8;
        case 10: // VALUE9
          return VALUE9;
        case 11: // VALUE10
          return VALUE10;
        case 12: // VALUE11
          return VALUE11;
        case 13: // VALUE12
          return VALUE12;
        case 14: // VALUE13
          return VALUE13;
        case 15: // VALUE14
          return VALUE14;
        case 16: // VALUE15
          return VALUE15;
        case 17: // VALUE16
          return VALUE16;
        case 18: // VALUE17
          return VALUE17;
        case 19: // VALUE18
          return VALUE18;
        case 20: // VALUE19
          return VALUE19;
        case 21: // VALUE20
          return VALUE20;
        case 22: // VALUE21
          return VALUE21;
        case 23: // VALUE22
          return VALUE22;
        case 24: // VALUE23
          return VALUE23;
        case 25: // VALUE24
          return VALUE24;
        case 26: // VALUE25
          return VALUE25;
        case 27: // VALUE26
          return VALUE26;
        case 28: // VALUE27
          return VALUE27;
        case 29: // VALUE28
          return VALUE28;
        case 30: // VALUE29
          return VALUE29;
        case 31: // VALUE30
          return VALUE30;
        case 32: // VALUE31
          return VALUE31;
        case 33: // VALUE32
          return VALUE32;
        case 34: // VALUE33
          return VALUE33;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE1, new org.apache.thrift.meta_data.FieldMetaData("value1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE2, new org.apache.thrift.meta_data.FieldMetaData("value2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE3, new org.apache.thrift.meta_data.FieldMetaData("value3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE4, new org.apache.thrift.meta_data.FieldMetaData("value4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE5, new org.apache.thrift.meta_data.FieldMetaData("value5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE6, new org.apache.thrift.meta_data.FieldMetaData("value6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE7, new org.apache.thrift.meta_data.FieldMetaData("value7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE8, new org.apache.thrift.meta_data.FieldMetaData("value8", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE9, new org.apache.thrift.meta_data.FieldMetaData("value9", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE10, new org.apache.thrift.meta_data.FieldMetaData("value10", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE11, new org.apache.thrift.meta_data.FieldMetaData("value11", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE12, new org.apache.thrift.meta_data.FieldMetaData("value12", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE13, new org.apache.thrift.meta_data.FieldMetaData("value13", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE14, new org.apache.thrift.meta_data.FieldMetaData("value14", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE15, new org.apache.thrift.meta_data.FieldMetaData("value15", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE16, new org.apache.thrift.meta_data.FieldMetaData("value16", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE17, new org.apache.thrift.meta_data.FieldMetaData("value17", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE18, new org.apache.thrift.meta_data.FieldMetaData("value18", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE19, new org.apache.thrift.meta_data.FieldMetaData("value19", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE20, new org.apache.thrift.meta_data.FieldMetaData("value20", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE21, new org.apache.thrift.meta_data.FieldMetaData("value21", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE22, new org.apache.thrift.meta_data.FieldMetaData("value22", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE23, new org.apache.thrift.meta_data.FieldMetaData("value23", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE24, new org.apache.thrift.meta_data.FieldMetaData("value24", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE25, new org.apache.thrift.meta_data.FieldMetaData("value25", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE26, new org.apache.thrift.meta_data.FieldMetaData("value26", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE27, new org.apache.thrift.meta_data.FieldMetaData("value27", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE28, new org.apache.thrift.meta_data.FieldMetaData("value28", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE29, new org.apache.thrift.meta_data.FieldMetaData("value29", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE30, new org.apache.thrift.meta_data.FieldMetaData("value30", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE31, new org.apache.thrift.meta_data.FieldMetaData("value31", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE32, new org.apache.thrift.meta_data.FieldMetaData("value32", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALUE33, new org.apache.thrift.meta_data.FieldMetaData("value33", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GridViewDTO.class, metaDataMap);
  }

  public GridViewDTO() {
  }

  public GridViewDTO(
    String pid,
    String value1,
    String value2,
    String value3,
    String value4,
    String value5,
    String value6,
    String value7,
    String value8,
    String value9,
    String value10,
    String value11,
    String value12,
    String value13,
    String value14,
    String value15,
    String value16,
    String value17,
    String value18,
    String value19,
    String value20,
    String value21,
    String value22,
    String value23,
    String value24,
    String value25,
    String value26,
    String value27,
    String value28,
    String value29,
    String value30,
    String value31,
    String value32,
    String value33)
  {
    this();
    this.pid = pid;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
    this.value14 = value14;
    this.value15 = value15;
    this.value16 = value16;
    this.value17 = value17;
    this.value18 = value18;
    this.value19 = value19;
    this.value20 = value20;
    this.value21 = value21;
    this.value22 = value22;
    this.value23 = value23;
    this.value24 = value24;
    this.value25 = value25;
    this.value26 = value26;
    this.value27 = value27;
    this.value28 = value28;
    this.value29 = value29;
    this.value30 = value30;
    this.value31 = value31;
    this.value32 = value32;
    this.value33 = value33;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GridViewDTO(GridViewDTO other) {
    if (other.isSetPid()) {
      this.pid = other.pid;
    }
    if (other.isSetValue1()) {
      this.value1 = other.value1;
    }
    if (other.isSetValue2()) {
      this.value2 = other.value2;
    }
    if (other.isSetValue3()) {
      this.value3 = other.value3;
    }
    if (other.isSetValue4()) {
      this.value4 = other.value4;
    }
    if (other.isSetValue5()) {
      this.value5 = other.value5;
    }
    if (other.isSetValue6()) {
      this.value6 = other.value6;
    }
    if (other.isSetValue7()) {
      this.value7 = other.value7;
    }
    if (other.isSetValue8()) {
      this.value8 = other.value8;
    }
    if (other.isSetValue9()) {
      this.value9 = other.value9;
    }
    if (other.isSetValue10()) {
      this.value10 = other.value10;
    }
    if (other.isSetValue11()) {
      this.value11 = other.value11;
    }
    if (other.isSetValue12()) {
      this.value12 = other.value12;
    }
    if (other.isSetValue13()) {
      this.value13 = other.value13;
    }
    if (other.isSetValue14()) {
      this.value14 = other.value14;
    }
    if (other.isSetValue15()) {
      this.value15 = other.value15;
    }
    if (other.isSetValue16()) {
      this.value16 = other.value16;
    }
    if (other.isSetValue17()) {
      this.value17 = other.value17;
    }
    if (other.isSetValue18()) {
      this.value18 = other.value18;
    }
    if (other.isSetValue19()) {
      this.value19 = other.value19;
    }
    if (other.isSetValue20()) {
      this.value20 = other.value20;
    }
    if (other.isSetValue21()) {
      this.value21 = other.value21;
    }
    if (other.isSetValue22()) {
      this.value22 = other.value22;
    }
    if (other.isSetValue23()) {
      this.value23 = other.value23;
    }
    if (other.isSetValue24()) {
      this.value24 = other.value24;
    }
    if (other.isSetValue25()) {
      this.value25 = other.value25;
    }
    if (other.isSetValue26()) {
      this.value26 = other.value26;
    }
    if (other.isSetValue27()) {
      this.value27 = other.value27;
    }
    if (other.isSetValue28()) {
      this.value28 = other.value28;
    }
    if (other.isSetValue29()) {
      this.value29 = other.value29;
    }
    if (other.isSetValue30()) {
      this.value30 = other.value30;
    }
    if (other.isSetValue31()) {
      this.value31 = other.value31;
    }
    if (other.isSetValue32()) {
      this.value32 = other.value32;
    }
    if (other.isSetValue33()) {
      this.value33 = other.value33;
    }
  }

  public GridViewDTO deepCopy() {
    return new GridViewDTO(this);
  }

  @Override
  public void clear() {
    this.pid = null;
    this.value1 = null;
    this.value2 = null;
    this.value3 = null;
    this.value4 = null;
    this.value5 = null;
    this.value6 = null;
    this.value7 = null;
    this.value8 = null;
    this.value9 = null;
    this.value10 = null;
    this.value11 = null;
    this.value12 = null;
    this.value13 = null;
    this.value14 = null;
    this.value15 = null;
    this.value16 = null;
    this.value17 = null;
    this.value18 = null;
    this.value19 = null;
    this.value20 = null;
    this.value21 = null;
    this.value22 = null;
    this.value23 = null;
    this.value24 = null;
    this.value25 = null;
    this.value26 = null;
    this.value27 = null;
    this.value28 = null;
    this.value29 = null;
    this.value30 = null;
    this.value31 = null;
    this.value32 = null;
    this.value33 = null;
  }

  public String getPid() {
    return this.pid;
  }

  public GridViewDTO setPid(String pid) {
    this.pid = pid;
    return this;
  }

  public void unsetPid() {
    this.pid = null;
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return this.pid != null;
  }

  public void setPidIsSet(boolean value) {
    if (!value) {
      this.pid = null;
    }
  }

  public String getValue1() {
    return this.value1;
  }

  public GridViewDTO setValue1(String value1) {
    this.value1 = value1;
    return this;
  }

  public void unsetValue1() {
    this.value1 = null;
  }

  /** Returns true if field value1 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue1() {
    return this.value1 != null;
  }

  public void setValue1IsSet(boolean value) {
    if (!value) {
      this.value1 = null;
    }
  }

  public String getValue2() {
    return this.value2;
  }

  public GridViewDTO setValue2(String value2) {
    this.value2 = value2;
    return this;
  }

  public void unsetValue2() {
    this.value2 = null;
  }

  /** Returns true if field value2 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue2() {
    return this.value2 != null;
  }

  public void setValue2IsSet(boolean value) {
    if (!value) {
      this.value2 = null;
    }
  }

  public String getValue3() {
    return this.value3;
  }

  public GridViewDTO setValue3(String value3) {
    this.value3 = value3;
    return this;
  }

  public void unsetValue3() {
    this.value3 = null;
  }

  /** Returns true if field value3 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue3() {
    return this.value3 != null;
  }

  public void setValue3IsSet(boolean value) {
    if (!value) {
      this.value3 = null;
    }
  }

  public String getValue4() {
    return this.value4;
  }

  public GridViewDTO setValue4(String value4) {
    this.value4 = value4;
    return this;
  }

  public void unsetValue4() {
    this.value4 = null;
  }

  /** Returns true if field value4 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue4() {
    return this.value4 != null;
  }

  public void setValue4IsSet(boolean value) {
    if (!value) {
      this.value4 = null;
    }
  }

  public String getValue5() {
    return this.value5;
  }

  public GridViewDTO setValue5(String value5) {
    this.value5 = value5;
    return this;
  }

  public void unsetValue5() {
    this.value5 = null;
  }

  /** Returns true if field value5 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue5() {
    return this.value5 != null;
  }

  public void setValue5IsSet(boolean value) {
    if (!value) {
      this.value5 = null;
    }
  }

  public String getValue6() {
    return this.value6;
  }

  public GridViewDTO setValue6(String value6) {
    this.value6 = value6;
    return this;
  }

  public void unsetValue6() {
    this.value6 = null;
  }

  /** Returns true if field value6 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue6() {
    return this.value6 != null;
  }

  public void setValue6IsSet(boolean value) {
    if (!value) {
      this.value6 = null;
    }
  }

  public String getValue7() {
    return this.value7;
  }

  public GridViewDTO setValue7(String value7) {
    this.value7 = value7;
    return this;
  }

  public void unsetValue7() {
    this.value7 = null;
  }

  /** Returns true if field value7 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue7() {
    return this.value7 != null;
  }

  public void setValue7IsSet(boolean value) {
    if (!value) {
      this.value7 = null;
    }
  }

  public String getValue8() {
    return this.value8;
  }

  public GridViewDTO setValue8(String value8) {
    this.value8 = value8;
    return this;
  }

  public void unsetValue8() {
    this.value8 = null;
  }

  /** Returns true if field value8 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue8() {
    return this.value8 != null;
  }

  public void setValue8IsSet(boolean value) {
    if (!value) {
      this.value8 = null;
    }
  }

  public String getValue9() {
    return this.value9;
  }

  public GridViewDTO setValue9(String value9) {
    this.value9 = value9;
    return this;
  }

  public void unsetValue9() {
    this.value9 = null;
  }

  /** Returns true if field value9 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue9() {
    return this.value9 != null;
  }

  public void setValue9IsSet(boolean value) {
    if (!value) {
      this.value9 = null;
    }
  }

  public String getValue10() {
    return this.value10;
  }

  public GridViewDTO setValue10(String value10) {
    this.value10 = value10;
    return this;
  }

  public void unsetValue10() {
    this.value10 = null;
  }

  /** Returns true if field value10 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue10() {
    return this.value10 != null;
  }

  public void setValue10IsSet(boolean value) {
    if (!value) {
      this.value10 = null;
    }
  }

  public String getValue11() {
    return this.value11;
  }

  public GridViewDTO setValue11(String value11) {
    this.value11 = value11;
    return this;
  }

  public void unsetValue11() {
    this.value11 = null;
  }

  /** Returns true if field value11 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue11() {
    return this.value11 != null;
  }

  public void setValue11IsSet(boolean value) {
    if (!value) {
      this.value11 = null;
    }
  }

  public String getValue12() {
    return this.value12;
  }

  public GridViewDTO setValue12(String value12) {
    this.value12 = value12;
    return this;
  }

  public void unsetValue12() {
    this.value12 = null;
  }

  /** Returns true if field value12 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue12() {
    return this.value12 != null;
  }

  public void setValue12IsSet(boolean value) {
    if (!value) {
      this.value12 = null;
    }
  }

  public String getValue13() {
    return this.value13;
  }

  public GridViewDTO setValue13(String value13) {
    this.value13 = value13;
    return this;
  }

  public void unsetValue13() {
    this.value13 = null;
  }

  /** Returns true if field value13 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue13() {
    return this.value13 != null;
  }

  public void setValue13IsSet(boolean value) {
    if (!value) {
      this.value13 = null;
    }
  }

  public String getValue14() {
    return this.value14;
  }

  public GridViewDTO setValue14(String value14) {
    this.value14 = value14;
    return this;
  }

  public void unsetValue14() {
    this.value14 = null;
  }

  /** Returns true if field value14 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue14() {
    return this.value14 != null;
  }

  public void setValue14IsSet(boolean value) {
    if (!value) {
      this.value14 = null;
    }
  }

  public String getValue15() {
    return this.value15;
  }

  public GridViewDTO setValue15(String value15) {
    this.value15 = value15;
    return this;
  }

  public void unsetValue15() {
    this.value15 = null;
  }

  /** Returns true if field value15 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue15() {
    return this.value15 != null;
  }

  public void setValue15IsSet(boolean value) {
    if (!value) {
      this.value15 = null;
    }
  }

  public String getValue16() {
    return this.value16;
  }

  public GridViewDTO setValue16(String value16) {
    this.value16 = value16;
    return this;
  }

  public void unsetValue16() {
    this.value16 = null;
  }

  /** Returns true if field value16 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue16() {
    return this.value16 != null;
  }

  public void setValue16IsSet(boolean value) {
    if (!value) {
      this.value16 = null;
    }
  }

  public String getValue17() {
    return this.value17;
  }

  public GridViewDTO setValue17(String value17) {
    this.value17 = value17;
    return this;
  }

  public void unsetValue17() {
    this.value17 = null;
  }

  /** Returns true if field value17 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue17() {
    return this.value17 != null;
  }

  public void setValue17IsSet(boolean value) {
    if (!value) {
      this.value17 = null;
    }
  }

  public String getValue18() {
    return this.value18;
  }

  public GridViewDTO setValue18(String value18) {
    this.value18 = value18;
    return this;
  }

  public void unsetValue18() {
    this.value18 = null;
  }

  /** Returns true if field value18 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue18() {
    return this.value18 != null;
  }

  public void setValue18IsSet(boolean value) {
    if (!value) {
      this.value18 = null;
    }
  }

  public String getValue19() {
    return this.value19;
  }

  public GridViewDTO setValue19(String value19) {
    this.value19 = value19;
    return this;
  }

  public void unsetValue19() {
    this.value19 = null;
  }

  /** Returns true if field value19 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue19() {
    return this.value19 != null;
  }

  public void setValue19IsSet(boolean value) {
    if (!value) {
      this.value19 = null;
    }
  }

  public String getValue20() {
    return this.value20;
  }

  public GridViewDTO setValue20(String value20) {
    this.value20 = value20;
    return this;
  }

  public void unsetValue20() {
    this.value20 = null;
  }

  /** Returns true if field value20 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue20() {
    return this.value20 != null;
  }

  public void setValue20IsSet(boolean value) {
    if (!value) {
      this.value20 = null;
    }
  }

  public String getValue21() {
    return this.value21;
  }

  public GridViewDTO setValue21(String value21) {
    this.value21 = value21;
    return this;
  }

  public void unsetValue21() {
    this.value21 = null;
  }

  /** Returns true if field value21 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue21() {
    return this.value21 != null;
  }

  public void setValue21IsSet(boolean value) {
    if (!value) {
      this.value21 = null;
    }
  }

  public String getValue22() {
    return this.value22;
  }

  public GridViewDTO setValue22(String value22) {
    this.value22 = value22;
    return this;
  }

  public void unsetValue22() {
    this.value22 = null;
  }

  /** Returns true if field value22 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue22() {
    return this.value22 != null;
  }

  public void setValue22IsSet(boolean value) {
    if (!value) {
      this.value22 = null;
    }
  }

  public String getValue23() {
    return this.value23;
  }

  public GridViewDTO setValue23(String value23) {
    this.value23 = value23;
    return this;
  }

  public void unsetValue23() {
    this.value23 = null;
  }

  /** Returns true if field value23 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue23() {
    return this.value23 != null;
  }

  public void setValue23IsSet(boolean value) {
    if (!value) {
      this.value23 = null;
    }
  }

  public String getValue24() {
    return this.value24;
  }

  public GridViewDTO setValue24(String value24) {
    this.value24 = value24;
    return this;
  }

  public void unsetValue24() {
    this.value24 = null;
  }

  /** Returns true if field value24 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue24() {
    return this.value24 != null;
  }

  public void setValue24IsSet(boolean value) {
    if (!value) {
      this.value24 = null;
    }
  }

  public String getValue25() {
    return this.value25;
  }

  public GridViewDTO setValue25(String value25) {
    this.value25 = value25;
    return this;
  }

  public void unsetValue25() {
    this.value25 = null;
  }

  /** Returns true if field value25 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue25() {
    return this.value25 != null;
  }

  public void setValue25IsSet(boolean value) {
    if (!value) {
      this.value25 = null;
    }
  }

  public String getValue26() {
    return this.value26;
  }

  public GridViewDTO setValue26(String value26) {
    this.value26 = value26;
    return this;
  }

  public void unsetValue26() {
    this.value26 = null;
  }

  /** Returns true if field value26 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue26() {
    return this.value26 != null;
  }

  public void setValue26IsSet(boolean value) {
    if (!value) {
      this.value26 = null;
    }
  }

  public String getValue27() {
    return this.value27;
  }

  public GridViewDTO setValue27(String value27) {
    this.value27 = value27;
    return this;
  }

  public void unsetValue27() {
    this.value27 = null;
  }

  /** Returns true if field value27 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue27() {
    return this.value27 != null;
  }

  public void setValue27IsSet(boolean value) {
    if (!value) {
      this.value27 = null;
    }
  }

  public String getValue28() {
    return this.value28;
  }

  public GridViewDTO setValue28(String value28) {
    this.value28 = value28;
    return this;
  }

  public void unsetValue28() {
    this.value28 = null;
  }

  /** Returns true if field value28 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue28() {
    return this.value28 != null;
  }

  public void setValue28IsSet(boolean value) {
    if (!value) {
      this.value28 = null;
    }
  }

  public String getValue29() {
    return this.value29;
  }

  public GridViewDTO setValue29(String value29) {
    this.value29 = value29;
    return this;
  }

  public void unsetValue29() {
    this.value29 = null;
  }

  /** Returns true if field value29 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue29() {
    return this.value29 != null;
  }

  public void setValue29IsSet(boolean value) {
    if (!value) {
      this.value29 = null;
    }
  }

  public String getValue30() {
    return this.value30;
  }

  public GridViewDTO setValue30(String value30) {
    this.value30 = value30;
    return this;
  }

  public void unsetValue30() {
    this.value30 = null;
  }

  /** Returns true if field value30 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue30() {
    return this.value30 != null;
  }

  public void setValue30IsSet(boolean value) {
    if (!value) {
      this.value30 = null;
    }
  }

  public String getValue31() {
    return this.value31;
  }

  public GridViewDTO setValue31(String value31) {
    this.value31 = value31;
    return this;
  }

  public void unsetValue31() {
    this.value31 = null;
  }

  /** Returns true if field value31 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue31() {
    return this.value31 != null;
  }

  public void setValue31IsSet(boolean value) {
    if (!value) {
      this.value31 = null;
    }
  }

  public String getValue32() {
    return this.value32;
  }

  public GridViewDTO setValue32(String value32) {
    this.value32 = value32;
    return this;
  }

  public void unsetValue32() {
    this.value32 = null;
  }

  /** Returns true if field value32 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue32() {
    return this.value32 != null;
  }

  public void setValue32IsSet(boolean value) {
    if (!value) {
      this.value32 = null;
    }
  }

  public String getValue33() {
    return this.value33;
  }

  public GridViewDTO setValue33(String value33) {
    this.value33 = value33;
    return this;
  }

  public void unsetValue33() {
    this.value33 = null;
  }

  /** Returns true if field value33 is set (has been assigned a value) and false otherwise */
  public boolean isSetValue33() {
    return this.value33 != null;
  }

  public void setValue33IsSet(boolean value) {
    if (!value) {
      this.value33 = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((String)value);
      }
      break;

    case VALUE1:
      if (value == null) {
        unsetValue1();
      } else {
        setValue1((String)value);
      }
      break;

    case VALUE2:
      if (value == null) {
        unsetValue2();
      } else {
        setValue2((String)value);
      }
      break;

    case VALUE3:
      if (value == null) {
        unsetValue3();
      } else {
        setValue3((String)value);
      }
      break;

    case VALUE4:
      if (value == null) {
        unsetValue4();
      } else {
        setValue4((String)value);
      }
      break;

    case VALUE5:
      if (value == null) {
        unsetValue5();
      } else {
        setValue5((String)value);
      }
      break;

    case VALUE6:
      if (value == null) {
        unsetValue6();
      } else {
        setValue6((String)value);
      }
      break;

    case VALUE7:
      if (value == null) {
        unsetValue7();
      } else {
        setValue7((String)value);
      }
      break;

    case VALUE8:
      if (value == null) {
        unsetValue8();
      } else {
        setValue8((String)value);
      }
      break;

    case VALUE9:
      if (value == null) {
        unsetValue9();
      } else {
        setValue9((String)value);
      }
      break;

    case VALUE10:
      if (value == null) {
        unsetValue10();
      } else {
        setValue10((String)value);
      }
      break;

    case VALUE11:
      if (value == null) {
        unsetValue11();
      } else {
        setValue11((String)value);
      }
      break;

    case VALUE12:
      if (value == null) {
        unsetValue12();
      } else {
        setValue12((String)value);
      }
      break;

    case VALUE13:
      if (value == null) {
        unsetValue13();
      } else {
        setValue13((String)value);
      }
      break;

    case VALUE14:
      if (value == null) {
        unsetValue14();
      } else {
        setValue14((String)value);
      }
      break;

    case VALUE15:
      if (value == null) {
        unsetValue15();
      } else {
        setValue15((String)value);
      }
      break;

    case VALUE16:
      if (value == null) {
        unsetValue16();
      } else {
        setValue16((String)value);
      }
      break;

    case VALUE17:
      if (value == null) {
        unsetValue17();
      } else {
        setValue17((String)value);
      }
      break;

    case VALUE18:
      if (value == null) {
        unsetValue18();
      } else {
        setValue18((String)value);
      }
      break;

    case VALUE19:
      if (value == null) {
        unsetValue19();
      } else {
        setValue19((String)value);
      }
      break;

    case VALUE20:
      if (value == null) {
        unsetValue20();
      } else {
        setValue20((String)value);
      }
      break;

    case VALUE21:
      if (value == null) {
        unsetValue21();
      } else {
        setValue21((String)value);
      }
      break;

    case VALUE22:
      if (value == null) {
        unsetValue22();
      } else {
        setValue22((String)value);
      }
      break;

    case VALUE23:
      if (value == null) {
        unsetValue23();
      } else {
        setValue23((String)value);
      }
      break;

    case VALUE24:
      if (value == null) {
        unsetValue24();
      } else {
        setValue24((String)value);
      }
      break;

    case VALUE25:
      if (value == null) {
        unsetValue25();
      } else {
        setValue25((String)value);
      }
      break;

    case VALUE26:
      if (value == null) {
        unsetValue26();
      } else {
        setValue26((String)value);
      }
      break;

    case VALUE27:
      if (value == null) {
        unsetValue27();
      } else {
        setValue27((String)value);
      }
      break;

    case VALUE28:
      if (value == null) {
        unsetValue28();
      } else {
        setValue28((String)value);
      }
      break;

    case VALUE29:
      if (value == null) {
        unsetValue29();
      } else {
        setValue29((String)value);
      }
      break;

    case VALUE30:
      if (value == null) {
        unsetValue30();
      } else {
        setValue30((String)value);
      }
      break;

    case VALUE31:
      if (value == null) {
        unsetValue31();
      } else {
        setValue31((String)value);
      }
      break;

    case VALUE32:
      if (value == null) {
        unsetValue32();
      } else {
        setValue32((String)value);
      }
      break;

    case VALUE33:
      if (value == null) {
        unsetValue33();
      } else {
        setValue33((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return getPid();

    case VALUE1:
      return getValue1();

    case VALUE2:
      return getValue2();

    case VALUE3:
      return getValue3();

    case VALUE4:
      return getValue4();

    case VALUE5:
      return getValue5();

    case VALUE6:
      return getValue6();

    case VALUE7:
      return getValue7();

    case VALUE8:
      return getValue8();

    case VALUE9:
      return getValue9();

    case VALUE10:
      return getValue10();

    case VALUE11:
      return getValue11();

    case VALUE12:
      return getValue12();

    case VALUE13:
      return getValue13();

    case VALUE14:
      return getValue14();

    case VALUE15:
      return getValue15();

    case VALUE16:
      return getValue16();

    case VALUE17:
      return getValue17();

    case VALUE18:
      return getValue18();

    case VALUE19:
      return getValue19();

    case VALUE20:
      return getValue20();

    case VALUE21:
      return getValue21();

    case VALUE22:
      return getValue22();

    case VALUE23:
      return getValue23();

    case VALUE24:
      return getValue24();

    case VALUE25:
      return getValue25();

    case VALUE26:
      return getValue26();

    case VALUE27:
      return getValue27();

    case VALUE28:
      return getValue28();

    case VALUE29:
      return getValue29();

    case VALUE30:
      return getValue30();

    case VALUE31:
      return getValue31();

    case VALUE32:
      return getValue32();

    case VALUE33:
      return getValue33();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case VALUE1:
      return isSetValue1();
    case VALUE2:
      return isSetValue2();
    case VALUE3:
      return isSetValue3();
    case VALUE4:
      return isSetValue4();
    case VALUE5:
      return isSetValue5();
    case VALUE6:
      return isSetValue6();
    case VALUE7:
      return isSetValue7();
    case VALUE8:
      return isSetValue8();
    case VALUE9:
      return isSetValue9();
    case VALUE10:
      return isSetValue10();
    case VALUE11:
      return isSetValue11();
    case VALUE12:
      return isSetValue12();
    case VALUE13:
      return isSetValue13();
    case VALUE14:
      return isSetValue14();
    case VALUE15:
      return isSetValue15();
    case VALUE16:
      return isSetValue16();
    case VALUE17:
      return isSetValue17();
    case VALUE18:
      return isSetValue18();
    case VALUE19:
      return isSetValue19();
    case VALUE20:
      return isSetValue20();
    case VALUE21:
      return isSetValue21();
    case VALUE22:
      return isSetValue22();
    case VALUE23:
      return isSetValue23();
    case VALUE24:
      return isSetValue24();
    case VALUE25:
      return isSetValue25();
    case VALUE26:
      return isSetValue26();
    case VALUE27:
      return isSetValue27();
    case VALUE28:
      return isSetValue28();
    case VALUE29:
      return isSetValue29();
    case VALUE30:
      return isSetValue30();
    case VALUE31:
      return isSetValue31();
    case VALUE32:
      return isSetValue32();
    case VALUE33:
      return isSetValue33();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GridViewDTO)
      return this.equals((GridViewDTO)that);
    return false;
  }

  public boolean equals(GridViewDTO that) {
    if (that == null)
      return false;

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (!this.pid.equals(that.pid))
        return false;
    }

    boolean this_present_value1 = true && this.isSetValue1();
    boolean that_present_value1 = true && that.isSetValue1();
    if (this_present_value1 || that_present_value1) {
      if (!(this_present_value1 && that_present_value1))
        return false;
      if (!this.value1.equals(that.value1))
        return false;
    }

    boolean this_present_value2 = true && this.isSetValue2();
    boolean that_present_value2 = true && that.isSetValue2();
    if (this_present_value2 || that_present_value2) {
      if (!(this_present_value2 && that_present_value2))
        return false;
      if (!this.value2.equals(that.value2))
        return false;
    }

    boolean this_present_value3 = true && this.isSetValue3();
    boolean that_present_value3 = true && that.isSetValue3();
    if (this_present_value3 || that_present_value3) {
      if (!(this_present_value3 && that_present_value3))
        return false;
      if (!this.value3.equals(that.value3))
        return false;
    }

    boolean this_present_value4 = true && this.isSetValue4();
    boolean that_present_value4 = true && that.isSetValue4();
    if (this_present_value4 || that_present_value4) {
      if (!(this_present_value4 && that_present_value4))
        return false;
      if (!this.value4.equals(that.value4))
        return false;
    }

    boolean this_present_value5 = true && this.isSetValue5();
    boolean that_present_value5 = true && that.isSetValue5();
    if (this_present_value5 || that_present_value5) {
      if (!(this_present_value5 && that_present_value5))
        return false;
      if (!this.value5.equals(that.value5))
        return false;
    }

    boolean this_present_value6 = true && this.isSetValue6();
    boolean that_present_value6 = true && that.isSetValue6();
    if (this_present_value6 || that_present_value6) {
      if (!(this_present_value6 && that_present_value6))
        return false;
      if (!this.value6.equals(that.value6))
        return false;
    }

    boolean this_present_value7 = true && this.isSetValue7();
    boolean that_present_value7 = true && that.isSetValue7();
    if (this_present_value7 || that_present_value7) {
      if (!(this_present_value7 && that_present_value7))
        return false;
      if (!this.value7.equals(that.value7))
        return false;
    }

    boolean this_present_value8 = true && this.isSetValue8();
    boolean that_present_value8 = true && that.isSetValue8();
    if (this_present_value8 || that_present_value8) {
      if (!(this_present_value8 && that_present_value8))
        return false;
      if (!this.value8.equals(that.value8))
        return false;
    }

    boolean this_present_value9 = true && this.isSetValue9();
    boolean that_present_value9 = true && that.isSetValue9();
    if (this_present_value9 || that_present_value9) {
      if (!(this_present_value9 && that_present_value9))
        return false;
      if (!this.value9.equals(that.value9))
        return false;
    }

    boolean this_present_value10 = true && this.isSetValue10();
    boolean that_present_value10 = true && that.isSetValue10();
    if (this_present_value10 || that_present_value10) {
      if (!(this_present_value10 && that_present_value10))
        return false;
      if (!this.value10.equals(that.value10))
        return false;
    }

    boolean this_present_value11 = true && this.isSetValue11();
    boolean that_present_value11 = true && that.isSetValue11();
    if (this_present_value11 || that_present_value11) {
      if (!(this_present_value11 && that_present_value11))
        return false;
      if (!this.value11.equals(that.value11))
        return false;
    }

    boolean this_present_value12 = true && this.isSetValue12();
    boolean that_present_value12 = true && that.isSetValue12();
    if (this_present_value12 || that_present_value12) {
      if (!(this_present_value12 && that_present_value12))
        return false;
      if (!this.value12.equals(that.value12))
        return false;
    }

    boolean this_present_value13 = true && this.isSetValue13();
    boolean that_present_value13 = true && that.isSetValue13();
    if (this_present_value13 || that_present_value13) {
      if (!(this_present_value13 && that_present_value13))
        return false;
      if (!this.value13.equals(that.value13))
        return false;
    }

    boolean this_present_value14 = true && this.isSetValue14();
    boolean that_present_value14 = true && that.isSetValue14();
    if (this_present_value14 || that_present_value14) {
      if (!(this_present_value14 && that_present_value14))
        return false;
      if (!this.value14.equals(that.value14))
        return false;
    }

    boolean this_present_value15 = true && this.isSetValue15();
    boolean that_present_value15 = true && that.isSetValue15();
    if (this_present_value15 || that_present_value15) {
      if (!(this_present_value15 && that_present_value15))
        return false;
      if (!this.value15.equals(that.value15))
        return false;
    }

    boolean this_present_value16 = true && this.isSetValue16();
    boolean that_present_value16 = true && that.isSetValue16();
    if (this_present_value16 || that_present_value16) {
      if (!(this_present_value16 && that_present_value16))
        return false;
      if (!this.value16.equals(that.value16))
        return false;
    }

    boolean this_present_value17 = true && this.isSetValue17();
    boolean that_present_value17 = true && that.isSetValue17();
    if (this_present_value17 || that_present_value17) {
      if (!(this_present_value17 && that_present_value17))
        return false;
      if (!this.value17.equals(that.value17))
        return false;
    }

    boolean this_present_value18 = true && this.isSetValue18();
    boolean that_present_value18 = true && that.isSetValue18();
    if (this_present_value18 || that_present_value18) {
      if (!(this_present_value18 && that_present_value18))
        return false;
      if (!this.value18.equals(that.value18))
        return false;
    }

    boolean this_present_value19 = true && this.isSetValue19();
    boolean that_present_value19 = true && that.isSetValue19();
    if (this_present_value19 || that_present_value19) {
      if (!(this_present_value19 && that_present_value19))
        return false;
      if (!this.value19.equals(that.value19))
        return false;
    }

    boolean this_present_value20 = true && this.isSetValue20();
    boolean that_present_value20 = true && that.isSetValue20();
    if (this_present_value20 || that_present_value20) {
      if (!(this_present_value20 && that_present_value20))
        return false;
      if (!this.value20.equals(that.value20))
        return false;
    }

    boolean this_present_value21 = true && this.isSetValue21();
    boolean that_present_value21 = true && that.isSetValue21();
    if (this_present_value21 || that_present_value21) {
      if (!(this_present_value21 && that_present_value21))
        return false;
      if (!this.value21.equals(that.value21))
        return false;
    }

    boolean this_present_value22 = true && this.isSetValue22();
    boolean that_present_value22 = true && that.isSetValue22();
    if (this_present_value22 || that_present_value22) {
      if (!(this_present_value22 && that_present_value22))
        return false;
      if (!this.value22.equals(that.value22))
        return false;
    }

    boolean this_present_value23 = true && this.isSetValue23();
    boolean that_present_value23 = true && that.isSetValue23();
    if (this_present_value23 || that_present_value23) {
      if (!(this_present_value23 && that_present_value23))
        return false;
      if (!this.value23.equals(that.value23))
        return false;
    }

    boolean this_present_value24 = true && this.isSetValue24();
    boolean that_present_value24 = true && that.isSetValue24();
    if (this_present_value24 || that_present_value24) {
      if (!(this_present_value24 && that_present_value24))
        return false;
      if (!this.value24.equals(that.value24))
        return false;
    }

    boolean this_present_value25 = true && this.isSetValue25();
    boolean that_present_value25 = true && that.isSetValue25();
    if (this_present_value25 || that_present_value25) {
      if (!(this_present_value25 && that_present_value25))
        return false;
      if (!this.value25.equals(that.value25))
        return false;
    }

    boolean this_present_value26 = true && this.isSetValue26();
    boolean that_present_value26 = true && that.isSetValue26();
    if (this_present_value26 || that_present_value26) {
      if (!(this_present_value26 && that_present_value26))
        return false;
      if (!this.value26.equals(that.value26))
        return false;
    }

    boolean this_present_value27 = true && this.isSetValue27();
    boolean that_present_value27 = true && that.isSetValue27();
    if (this_present_value27 || that_present_value27) {
      if (!(this_present_value27 && that_present_value27))
        return false;
      if (!this.value27.equals(that.value27))
        return false;
    }

    boolean this_present_value28 = true && this.isSetValue28();
    boolean that_present_value28 = true && that.isSetValue28();
    if (this_present_value28 || that_present_value28) {
      if (!(this_present_value28 && that_present_value28))
        return false;
      if (!this.value28.equals(that.value28))
        return false;
    }

    boolean this_present_value29 = true && this.isSetValue29();
    boolean that_present_value29 = true && that.isSetValue29();
    if (this_present_value29 || that_present_value29) {
      if (!(this_present_value29 && that_present_value29))
        return false;
      if (!this.value29.equals(that.value29))
        return false;
    }

    boolean this_present_value30 = true && this.isSetValue30();
    boolean that_present_value30 = true && that.isSetValue30();
    if (this_present_value30 || that_present_value30) {
      if (!(this_present_value30 && that_present_value30))
        return false;
      if (!this.value30.equals(that.value30))
        return false;
    }

    boolean this_present_value31 = true && this.isSetValue31();
    boolean that_present_value31 = true && that.isSetValue31();
    if (this_present_value31 || that_present_value31) {
      if (!(this_present_value31 && that_present_value31))
        return false;
      if (!this.value31.equals(that.value31))
        return false;
    }

    boolean this_present_value32 = true && this.isSetValue32();
    boolean that_present_value32 = true && that.isSetValue32();
    if (this_present_value32 || that_present_value32) {
      if (!(this_present_value32 && that_present_value32))
        return false;
      if (!this.value32.equals(that.value32))
        return false;
    }

    boolean this_present_value33 = true && this.isSetValue33();
    boolean that_present_value33 = true && that.isSetValue33();
    if (this_present_value33 || that_present_value33) {
      if (!(this_present_value33 && that_present_value33))
        return false;
      if (!this.value33.equals(that.value33))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true && (isSetPid());
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_value1 = true && (isSetValue1());
    list.add(present_value1);
    if (present_value1)
      list.add(value1);

    boolean present_value2 = true && (isSetValue2());
    list.add(present_value2);
    if (present_value2)
      list.add(value2);

    boolean present_value3 = true && (isSetValue3());
    list.add(present_value3);
    if (present_value3)
      list.add(value3);

    boolean present_value4 = true && (isSetValue4());
    list.add(present_value4);
    if (present_value4)
      list.add(value4);

    boolean present_value5 = true && (isSetValue5());
    list.add(present_value5);
    if (present_value5)
      list.add(value5);

    boolean present_value6 = true && (isSetValue6());
    list.add(present_value6);
    if (present_value6)
      list.add(value6);

    boolean present_value7 = true && (isSetValue7());
    list.add(present_value7);
    if (present_value7)
      list.add(value7);

    boolean present_value8 = true && (isSetValue8());
    list.add(present_value8);
    if (present_value8)
      list.add(value8);

    boolean present_value9 = true && (isSetValue9());
    list.add(present_value9);
    if (present_value9)
      list.add(value9);

    boolean present_value10 = true && (isSetValue10());
    list.add(present_value10);
    if (present_value10)
      list.add(value10);

    boolean present_value11 = true && (isSetValue11());
    list.add(present_value11);
    if (present_value11)
      list.add(value11);

    boolean present_value12 = true && (isSetValue12());
    list.add(present_value12);
    if (present_value12)
      list.add(value12);

    boolean present_value13 = true && (isSetValue13());
    list.add(present_value13);
    if (present_value13)
      list.add(value13);

    boolean present_value14 = true && (isSetValue14());
    list.add(present_value14);
    if (present_value14)
      list.add(value14);

    boolean present_value15 = true && (isSetValue15());
    list.add(present_value15);
    if (present_value15)
      list.add(value15);

    boolean present_value16 = true && (isSetValue16());
    list.add(present_value16);
    if (present_value16)
      list.add(value16);

    boolean present_value17 = true && (isSetValue17());
    list.add(present_value17);
    if (present_value17)
      list.add(value17);

    boolean present_value18 = true && (isSetValue18());
    list.add(present_value18);
    if (present_value18)
      list.add(value18);

    boolean present_value19 = true && (isSetValue19());
    list.add(present_value19);
    if (present_value19)
      list.add(value19);

    boolean present_value20 = true && (isSetValue20());
    list.add(present_value20);
    if (present_value20)
      list.add(value20);

    boolean present_value21 = true && (isSetValue21());
    list.add(present_value21);
    if (present_value21)
      list.add(value21);

    boolean present_value22 = true && (isSetValue22());
    list.add(present_value22);
    if (present_value22)
      list.add(value22);

    boolean present_value23 = true && (isSetValue23());
    list.add(present_value23);
    if (present_value23)
      list.add(value23);

    boolean present_value24 = true && (isSetValue24());
    list.add(present_value24);
    if (present_value24)
      list.add(value24);

    boolean present_value25 = true && (isSetValue25());
    list.add(present_value25);
    if (present_value25)
      list.add(value25);

    boolean present_value26 = true && (isSetValue26());
    list.add(present_value26);
    if (present_value26)
      list.add(value26);

    boolean present_value27 = true && (isSetValue27());
    list.add(present_value27);
    if (present_value27)
      list.add(value27);

    boolean present_value28 = true && (isSetValue28());
    list.add(present_value28);
    if (present_value28)
      list.add(value28);

    boolean present_value29 = true && (isSetValue29());
    list.add(present_value29);
    if (present_value29)
      list.add(value29);

    boolean present_value30 = true && (isSetValue30());
    list.add(present_value30);
    if (present_value30)
      list.add(value30);

    boolean present_value31 = true && (isSetValue31());
    list.add(present_value31);
    if (present_value31)
      list.add(value31);

    boolean present_value32 = true && (isSetValue32());
    list.add(present_value32);
    if (present_value32)
      list.add(value32);

    boolean present_value33 = true && (isSetValue33());
    list.add(present_value33);
    if (present_value33)
      list.add(value33);

    return list.hashCode();
  }

  @Override
  public int compareTo(GridViewDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue1()).compareTo(other.isSetValue1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value1, other.value1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue2()).compareTo(other.isSetValue2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value2, other.value2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue3()).compareTo(other.isSetValue3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value3, other.value3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue4()).compareTo(other.isSetValue4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value4, other.value4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue5()).compareTo(other.isSetValue5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value5, other.value5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue6()).compareTo(other.isSetValue6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value6, other.value6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue7()).compareTo(other.isSetValue7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value7, other.value7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue8()).compareTo(other.isSetValue8());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue8()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value8, other.value8);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue9()).compareTo(other.isSetValue9());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue9()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value9, other.value9);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue10()).compareTo(other.isSetValue10());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue10()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value10, other.value10);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue11()).compareTo(other.isSetValue11());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue11()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value11, other.value11);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue12()).compareTo(other.isSetValue12());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue12()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value12, other.value12);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue13()).compareTo(other.isSetValue13());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue13()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value13, other.value13);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue14()).compareTo(other.isSetValue14());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue14()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value14, other.value14);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue15()).compareTo(other.isSetValue15());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue15()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value15, other.value15);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue16()).compareTo(other.isSetValue16());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue16()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value16, other.value16);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue17()).compareTo(other.isSetValue17());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue17()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value17, other.value17);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue18()).compareTo(other.isSetValue18());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue18()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value18, other.value18);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue19()).compareTo(other.isSetValue19());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue19()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value19, other.value19);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue20()).compareTo(other.isSetValue20());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue20()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value20, other.value20);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue21()).compareTo(other.isSetValue21());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue21()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value21, other.value21);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue22()).compareTo(other.isSetValue22());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue22()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value22, other.value22);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue23()).compareTo(other.isSetValue23());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue23()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value23, other.value23);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue24()).compareTo(other.isSetValue24());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue24()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value24, other.value24);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue25()).compareTo(other.isSetValue25());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue25()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value25, other.value25);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue26()).compareTo(other.isSetValue26());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue26()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value26, other.value26);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue27()).compareTo(other.isSetValue27());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue27()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value27, other.value27);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue28()).compareTo(other.isSetValue28());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue28()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value28, other.value28);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue29()).compareTo(other.isSetValue29());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue29()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value29, other.value29);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue30()).compareTo(other.isSetValue30());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue30()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value30, other.value30);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue31()).compareTo(other.isSetValue31());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue31()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value31, other.value31);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue32()).compareTo(other.isSetValue32());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue32()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value32, other.value32);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue33()).compareTo(other.isSetValue33());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue33()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value33, other.value33);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GridViewDTO(");
    boolean first = true;

    sb.append("pid:");
    if (this.pid == null) {
      sb.append("null");
    } else {
      sb.append(this.pid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value1:");
    if (this.value1 == null) {
      sb.append("null");
    } else {
      sb.append(this.value1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value2:");
    if (this.value2 == null) {
      sb.append("null");
    } else {
      sb.append(this.value2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value3:");
    if (this.value3 == null) {
      sb.append("null");
    } else {
      sb.append(this.value3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value4:");
    if (this.value4 == null) {
      sb.append("null");
    } else {
      sb.append(this.value4);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value5:");
    if (this.value5 == null) {
      sb.append("null");
    } else {
      sb.append(this.value5);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value6:");
    if (this.value6 == null) {
      sb.append("null");
    } else {
      sb.append(this.value6);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value7:");
    if (this.value7 == null) {
      sb.append("null");
    } else {
      sb.append(this.value7);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value8:");
    if (this.value8 == null) {
      sb.append("null");
    } else {
      sb.append(this.value8);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value9:");
    if (this.value9 == null) {
      sb.append("null");
    } else {
      sb.append(this.value9);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value10:");
    if (this.value10 == null) {
      sb.append("null");
    } else {
      sb.append(this.value10);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value11:");
    if (this.value11 == null) {
      sb.append("null");
    } else {
      sb.append(this.value11);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value12:");
    if (this.value12 == null) {
      sb.append("null");
    } else {
      sb.append(this.value12);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value13:");
    if (this.value13 == null) {
      sb.append("null");
    } else {
      sb.append(this.value13);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value14:");
    if (this.value14 == null) {
      sb.append("null");
    } else {
      sb.append(this.value14);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value15:");
    if (this.value15 == null) {
      sb.append("null");
    } else {
      sb.append(this.value15);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value16:");
    if (this.value16 == null) {
      sb.append("null");
    } else {
      sb.append(this.value16);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value17:");
    if (this.value17 == null) {
      sb.append("null");
    } else {
      sb.append(this.value17);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value18:");
    if (this.value18 == null) {
      sb.append("null");
    } else {
      sb.append(this.value18);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value19:");
    if (this.value19 == null) {
      sb.append("null");
    } else {
      sb.append(this.value19);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value20:");
    if (this.value20 == null) {
      sb.append("null");
    } else {
      sb.append(this.value20);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value21:");
    if (this.value21 == null) {
      sb.append("null");
    } else {
      sb.append(this.value21);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value22:");
    if (this.value22 == null) {
      sb.append("null");
    } else {
      sb.append(this.value22);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value23:");
    if (this.value23 == null) {
      sb.append("null");
    } else {
      sb.append(this.value23);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value24:");
    if (this.value24 == null) {
      sb.append("null");
    } else {
      sb.append(this.value24);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value25:");
    if (this.value25 == null) {
      sb.append("null");
    } else {
      sb.append(this.value25);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value26:");
    if (this.value26 == null) {
      sb.append("null");
    } else {
      sb.append(this.value26);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value27:");
    if (this.value27 == null) {
      sb.append("null");
    } else {
      sb.append(this.value27);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value28:");
    if (this.value28 == null) {
      sb.append("null");
    } else {
      sb.append(this.value28);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value29:");
    if (this.value29 == null) {
      sb.append("null");
    } else {
      sb.append(this.value29);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value30:");
    if (this.value30 == null) {
      sb.append("null");
    } else {
      sb.append(this.value30);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value31:");
    if (this.value31 == null) {
      sb.append("null");
    } else {
      sb.append(this.value31);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value32:");
    if (this.value32 == null) {
      sb.append("null");
    } else {
      sb.append(this.value32);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("value33:");
    if (this.value33 == null) {
      sb.append("null");
    } else {
      sb.append(this.value33);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GridViewDTOStandardSchemeFactory implements SchemeFactory {
    public GridViewDTOStandardScheme getScheme() {
      return new GridViewDTOStandardScheme();
    }
  }

  private static class GridViewDTOStandardScheme extends StandardScheme<GridViewDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GridViewDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pid = iprot.readString();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VALUE1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value1 = iprot.readString();
              struct.setValue1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VALUE2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value2 = iprot.readString();
              struct.setValue2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VALUE3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value3 = iprot.readString();
              struct.setValue3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VALUE4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value4 = iprot.readString();
              struct.setValue4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VALUE5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value5 = iprot.readString();
              struct.setValue5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // VALUE6
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value6 = iprot.readString();
              struct.setValue6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // VALUE7
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value7 = iprot.readString();
              struct.setValue7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VALUE8
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value8 = iprot.readString();
              struct.setValue8IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VALUE9
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value9 = iprot.readString();
              struct.setValue9IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // VALUE10
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value10 = iprot.readString();
              struct.setValue10IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // VALUE11
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value11 = iprot.readString();
              struct.setValue11IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // VALUE12
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value12 = iprot.readString();
              struct.setValue12IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // VALUE13
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value13 = iprot.readString();
              struct.setValue13IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // VALUE14
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value14 = iprot.readString();
              struct.setValue14IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // VALUE15
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value15 = iprot.readString();
              struct.setValue15IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // VALUE16
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value16 = iprot.readString();
              struct.setValue16IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VALUE17
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value17 = iprot.readString();
              struct.setValue17IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // VALUE18
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value18 = iprot.readString();
              struct.setValue18IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // VALUE19
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value19 = iprot.readString();
              struct.setValue19IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // VALUE20
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value20 = iprot.readString();
              struct.setValue20IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // VALUE21
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value21 = iprot.readString();
              struct.setValue21IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // VALUE22
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value22 = iprot.readString();
              struct.setValue22IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // VALUE23
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value23 = iprot.readString();
              struct.setValue23IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // VALUE24
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value24 = iprot.readString();
              struct.setValue24IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // VALUE25
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value25 = iprot.readString();
              struct.setValue25IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // VALUE26
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value26 = iprot.readString();
              struct.setValue26IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // VALUE27
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value27 = iprot.readString();
              struct.setValue27IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // VALUE28
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value28 = iprot.readString();
              struct.setValue28IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // VALUE29
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value29 = iprot.readString();
              struct.setValue29IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // VALUE30
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value30 = iprot.readString();
              struct.setValue30IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // VALUE31
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value31 = iprot.readString();
              struct.setValue31IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // VALUE32
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value32 = iprot.readString();
              struct.setValue32IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // VALUE33
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.value33 = iprot.readString();
              struct.setValue33IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GridViewDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.pid != null) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeString(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.value1 != null) {
        oprot.writeFieldBegin(VALUE1_FIELD_DESC);
        oprot.writeString(struct.value1);
        oprot.writeFieldEnd();
      }
      if (struct.value2 != null) {
        oprot.writeFieldBegin(VALUE2_FIELD_DESC);
        oprot.writeString(struct.value2);
        oprot.writeFieldEnd();
      }
      if (struct.value3 != null) {
        oprot.writeFieldBegin(VALUE3_FIELD_DESC);
        oprot.writeString(struct.value3);
        oprot.writeFieldEnd();
      }
      if (struct.value4 != null) {
        oprot.writeFieldBegin(VALUE4_FIELD_DESC);
        oprot.writeString(struct.value4);
        oprot.writeFieldEnd();
      }
      if (struct.value5 != null) {
        oprot.writeFieldBegin(VALUE5_FIELD_DESC);
        oprot.writeString(struct.value5);
        oprot.writeFieldEnd();
      }
      if (struct.value6 != null) {
        oprot.writeFieldBegin(VALUE6_FIELD_DESC);
        oprot.writeString(struct.value6);
        oprot.writeFieldEnd();
      }
      if (struct.value7 != null) {
        oprot.writeFieldBegin(VALUE7_FIELD_DESC);
        oprot.writeString(struct.value7);
        oprot.writeFieldEnd();
      }
      if (struct.value8 != null) {
        oprot.writeFieldBegin(VALUE8_FIELD_DESC);
        oprot.writeString(struct.value8);
        oprot.writeFieldEnd();
      }
      if (struct.value9 != null) {
        oprot.writeFieldBegin(VALUE9_FIELD_DESC);
        oprot.writeString(struct.value9);
        oprot.writeFieldEnd();
      }
      if (struct.value10 != null) {
        oprot.writeFieldBegin(VALUE10_FIELD_DESC);
        oprot.writeString(struct.value10);
        oprot.writeFieldEnd();
      }
      if (struct.value11 != null) {
        oprot.writeFieldBegin(VALUE11_FIELD_DESC);
        oprot.writeString(struct.value11);
        oprot.writeFieldEnd();
      }
      if (struct.value12 != null) {
        oprot.writeFieldBegin(VALUE12_FIELD_DESC);
        oprot.writeString(struct.value12);
        oprot.writeFieldEnd();
      }
      if (struct.value13 != null) {
        oprot.writeFieldBegin(VALUE13_FIELD_DESC);
        oprot.writeString(struct.value13);
        oprot.writeFieldEnd();
      }
      if (struct.value14 != null) {
        oprot.writeFieldBegin(VALUE14_FIELD_DESC);
        oprot.writeString(struct.value14);
        oprot.writeFieldEnd();
      }
      if (struct.value15 != null) {
        oprot.writeFieldBegin(VALUE15_FIELD_DESC);
        oprot.writeString(struct.value15);
        oprot.writeFieldEnd();
      }
      if (struct.value16 != null) {
        oprot.writeFieldBegin(VALUE16_FIELD_DESC);
        oprot.writeString(struct.value16);
        oprot.writeFieldEnd();
      }
      if (struct.value17 != null) {
        oprot.writeFieldBegin(VALUE17_FIELD_DESC);
        oprot.writeString(struct.value17);
        oprot.writeFieldEnd();
      }
      if (struct.value18 != null) {
        oprot.writeFieldBegin(VALUE18_FIELD_DESC);
        oprot.writeString(struct.value18);
        oprot.writeFieldEnd();
      }
      if (struct.value19 != null) {
        oprot.writeFieldBegin(VALUE19_FIELD_DESC);
        oprot.writeString(struct.value19);
        oprot.writeFieldEnd();
      }
      if (struct.value20 != null) {
        oprot.writeFieldBegin(VALUE20_FIELD_DESC);
        oprot.writeString(struct.value20);
        oprot.writeFieldEnd();
      }
      if (struct.value21 != null) {
        oprot.writeFieldBegin(VALUE21_FIELD_DESC);
        oprot.writeString(struct.value21);
        oprot.writeFieldEnd();
      }
      if (struct.value22 != null) {
        oprot.writeFieldBegin(VALUE22_FIELD_DESC);
        oprot.writeString(struct.value22);
        oprot.writeFieldEnd();
      }
      if (struct.value23 != null) {
        oprot.writeFieldBegin(VALUE23_FIELD_DESC);
        oprot.writeString(struct.value23);
        oprot.writeFieldEnd();
      }
      if (struct.value24 != null) {
        oprot.writeFieldBegin(VALUE24_FIELD_DESC);
        oprot.writeString(struct.value24);
        oprot.writeFieldEnd();
      }
      if (struct.value25 != null) {
        oprot.writeFieldBegin(VALUE25_FIELD_DESC);
        oprot.writeString(struct.value25);
        oprot.writeFieldEnd();
      }
      if (struct.value26 != null) {
        oprot.writeFieldBegin(VALUE26_FIELD_DESC);
        oprot.writeString(struct.value26);
        oprot.writeFieldEnd();
      }
      if (struct.value27 != null) {
        oprot.writeFieldBegin(VALUE27_FIELD_DESC);
        oprot.writeString(struct.value27);
        oprot.writeFieldEnd();
      }
      if (struct.value28 != null) {
        oprot.writeFieldBegin(VALUE28_FIELD_DESC);
        oprot.writeString(struct.value28);
        oprot.writeFieldEnd();
      }
      if (struct.value29 != null) {
        oprot.writeFieldBegin(VALUE29_FIELD_DESC);
        oprot.writeString(struct.value29);
        oprot.writeFieldEnd();
      }
      if (struct.value30 != null) {
        oprot.writeFieldBegin(VALUE30_FIELD_DESC);
        oprot.writeString(struct.value30);
        oprot.writeFieldEnd();
      }
      if (struct.value31 != null) {
        oprot.writeFieldBegin(VALUE31_FIELD_DESC);
        oprot.writeString(struct.value31);
        oprot.writeFieldEnd();
      }
      if (struct.value32 != null) {
        oprot.writeFieldBegin(VALUE32_FIELD_DESC);
        oprot.writeString(struct.value32);
        oprot.writeFieldEnd();
      }
      if (struct.value33 != null) {
        oprot.writeFieldBegin(VALUE33_FIELD_DESC);
        oprot.writeString(struct.value33);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GridViewDTOTupleSchemeFactory implements SchemeFactory {
    public GridViewDTOTupleScheme getScheme() {
      return new GridViewDTOTupleScheme();
    }
  }

  private static class GridViewDTOTupleScheme extends TupleScheme<GridViewDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GridViewDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetValue1()) {
        optionals.set(1);
      }
      if (struct.isSetValue2()) {
        optionals.set(2);
      }
      if (struct.isSetValue3()) {
        optionals.set(3);
      }
      if (struct.isSetValue4()) {
        optionals.set(4);
      }
      if (struct.isSetValue5()) {
        optionals.set(5);
      }
      if (struct.isSetValue6()) {
        optionals.set(6);
      }
      if (struct.isSetValue7()) {
        optionals.set(7);
      }
      if (struct.isSetValue8()) {
        optionals.set(8);
      }
      if (struct.isSetValue9()) {
        optionals.set(9);
      }
      if (struct.isSetValue10()) {
        optionals.set(10);
      }
      if (struct.isSetValue11()) {
        optionals.set(11);
      }
      if (struct.isSetValue12()) {
        optionals.set(12);
      }
      if (struct.isSetValue13()) {
        optionals.set(13);
      }
      if (struct.isSetValue14()) {
        optionals.set(14);
      }
      if (struct.isSetValue15()) {
        optionals.set(15);
      }
      if (struct.isSetValue16()) {
        optionals.set(16);
      }
      if (struct.isSetValue17()) {
        optionals.set(17);
      }
      if (struct.isSetValue18()) {
        optionals.set(18);
      }
      if (struct.isSetValue19()) {
        optionals.set(19);
      }
      if (struct.isSetValue20()) {
        optionals.set(20);
      }
      if (struct.isSetValue21()) {
        optionals.set(21);
      }
      if (struct.isSetValue22()) {
        optionals.set(22);
      }
      if (struct.isSetValue23()) {
        optionals.set(23);
      }
      if (struct.isSetValue24()) {
        optionals.set(24);
      }
      if (struct.isSetValue25()) {
        optionals.set(25);
      }
      if (struct.isSetValue26()) {
        optionals.set(26);
      }
      if (struct.isSetValue27()) {
        optionals.set(27);
      }
      if (struct.isSetValue28()) {
        optionals.set(28);
      }
      if (struct.isSetValue29()) {
        optionals.set(29);
      }
      if (struct.isSetValue30()) {
        optionals.set(30);
      }
      if (struct.isSetValue31()) {
        optionals.set(31);
      }
      if (struct.isSetValue32()) {
        optionals.set(32);
      }
      if (struct.isSetValue33()) {
        optionals.set(33);
      }
      oprot.writeBitSet(optionals, 34);
      if (struct.isSetPid()) {
        oprot.writeString(struct.pid);
      }
      if (struct.isSetValue1()) {
        oprot.writeString(struct.value1);
      }
      if (struct.isSetValue2()) {
        oprot.writeString(struct.value2);
      }
      if (struct.isSetValue3()) {
        oprot.writeString(struct.value3);
      }
      if (struct.isSetValue4()) {
        oprot.writeString(struct.value4);
      }
      if (struct.isSetValue5()) {
        oprot.writeString(struct.value5);
      }
      if (struct.isSetValue6()) {
        oprot.writeString(struct.value6);
      }
      if (struct.isSetValue7()) {
        oprot.writeString(struct.value7);
      }
      if (struct.isSetValue8()) {
        oprot.writeString(struct.value8);
      }
      if (struct.isSetValue9()) {
        oprot.writeString(struct.value9);
      }
      if (struct.isSetValue10()) {
        oprot.writeString(struct.value10);
      }
      if (struct.isSetValue11()) {
        oprot.writeString(struct.value11);
      }
      if (struct.isSetValue12()) {
        oprot.writeString(struct.value12);
      }
      if (struct.isSetValue13()) {
        oprot.writeString(struct.value13);
      }
      if (struct.isSetValue14()) {
        oprot.writeString(struct.value14);
      }
      if (struct.isSetValue15()) {
        oprot.writeString(struct.value15);
      }
      if (struct.isSetValue16()) {
        oprot.writeString(struct.value16);
      }
      if (struct.isSetValue17()) {
        oprot.writeString(struct.value17);
      }
      if (struct.isSetValue18()) {
        oprot.writeString(struct.value18);
      }
      if (struct.isSetValue19()) {
        oprot.writeString(struct.value19);
      }
      if (struct.isSetValue20()) {
        oprot.writeString(struct.value20);
      }
      if (struct.isSetValue21()) {
        oprot.writeString(struct.value21);
      }
      if (struct.isSetValue22()) {
        oprot.writeString(struct.value22);
      }
      if (struct.isSetValue23()) {
        oprot.writeString(struct.value23);
      }
      if (struct.isSetValue24()) {
        oprot.writeString(struct.value24);
      }
      if (struct.isSetValue25()) {
        oprot.writeString(struct.value25);
      }
      if (struct.isSetValue26()) {
        oprot.writeString(struct.value26);
      }
      if (struct.isSetValue27()) {
        oprot.writeString(struct.value27);
      }
      if (struct.isSetValue28()) {
        oprot.writeString(struct.value28);
      }
      if (struct.isSetValue29()) {
        oprot.writeString(struct.value29);
      }
      if (struct.isSetValue30()) {
        oprot.writeString(struct.value30);
      }
      if (struct.isSetValue31()) {
        oprot.writeString(struct.value31);
      }
      if (struct.isSetValue32()) {
        oprot.writeString(struct.value32);
      }
      if (struct.isSetValue33()) {
        oprot.writeString(struct.value33);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GridViewDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(34);
      if (incoming.get(0)) {
        struct.pid = iprot.readString();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.value1 = iprot.readString();
        struct.setValue1IsSet(true);
      }
      if (incoming.get(2)) {
        struct.value2 = iprot.readString();
        struct.setValue2IsSet(true);
      }
      if (incoming.get(3)) {
        struct.value3 = iprot.readString();
        struct.setValue3IsSet(true);
      }
      if (incoming.get(4)) {
        struct.value4 = iprot.readString();
        struct.setValue4IsSet(true);
      }
      if (incoming.get(5)) {
        struct.value5 = iprot.readString();
        struct.setValue5IsSet(true);
      }
      if (incoming.get(6)) {
        struct.value6 = iprot.readString();
        struct.setValue6IsSet(true);
      }
      if (incoming.get(7)) {
        struct.value7 = iprot.readString();
        struct.setValue7IsSet(true);
      }
      if (incoming.get(8)) {
        struct.value8 = iprot.readString();
        struct.setValue8IsSet(true);
      }
      if (incoming.get(9)) {
        struct.value9 = iprot.readString();
        struct.setValue9IsSet(true);
      }
      if (incoming.get(10)) {
        struct.value10 = iprot.readString();
        struct.setValue10IsSet(true);
      }
      if (incoming.get(11)) {
        struct.value11 = iprot.readString();
        struct.setValue11IsSet(true);
      }
      if (incoming.get(12)) {
        struct.value12 = iprot.readString();
        struct.setValue12IsSet(true);
      }
      if (incoming.get(13)) {
        struct.value13 = iprot.readString();
        struct.setValue13IsSet(true);
      }
      if (incoming.get(14)) {
        struct.value14 = iprot.readString();
        struct.setValue14IsSet(true);
      }
      if (incoming.get(15)) {
        struct.value15 = iprot.readString();
        struct.setValue15IsSet(true);
      }
      if (incoming.get(16)) {
        struct.value16 = iprot.readString();
        struct.setValue16IsSet(true);
      }
      if (incoming.get(17)) {
        struct.value17 = iprot.readString();
        struct.setValue17IsSet(true);
      }
      if (incoming.get(18)) {
        struct.value18 = iprot.readString();
        struct.setValue18IsSet(true);
      }
      if (incoming.get(19)) {
        struct.value19 = iprot.readString();
        struct.setValue19IsSet(true);
      }
      if (incoming.get(20)) {
        struct.value20 = iprot.readString();
        struct.setValue20IsSet(true);
      }
      if (incoming.get(21)) {
        struct.value21 = iprot.readString();
        struct.setValue21IsSet(true);
      }
      if (incoming.get(22)) {
        struct.value22 = iprot.readString();
        struct.setValue22IsSet(true);
      }
      if (incoming.get(23)) {
        struct.value23 = iprot.readString();
        struct.setValue23IsSet(true);
      }
      if (incoming.get(24)) {
        struct.value24 = iprot.readString();
        struct.setValue24IsSet(true);
      }
      if (incoming.get(25)) {
        struct.value25 = iprot.readString();
        struct.setValue25IsSet(true);
      }
      if (incoming.get(26)) {
        struct.value26 = iprot.readString();
        struct.setValue26IsSet(true);
      }
      if (incoming.get(27)) {
        struct.value27 = iprot.readString();
        struct.setValue27IsSet(true);
      }
      if (incoming.get(28)) {
        struct.value28 = iprot.readString();
        struct.setValue28IsSet(true);
      }
      if (incoming.get(29)) {
        struct.value29 = iprot.readString();
        struct.setValue29IsSet(true);
      }
      if (incoming.get(30)) {
        struct.value30 = iprot.readString();
        struct.setValue30IsSet(true);
      }
      if (incoming.get(31)) {
        struct.value31 = iprot.readString();
        struct.setValue31IsSet(true);
      }
      if (incoming.get(32)) {
        struct.value32 = iprot.readString();
        struct.setValue32IsSet(true);
      }
      if (incoming.get(33)) {
        struct.value33 = iprot.readString();
        struct.setValue33IsSet(true);
      }
    }
  }

}

