/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.customer;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-7-25")
public class CusComBase implements org.apache.thrift.TBase<CusComBase, CusComBase._Fields>, java.io.Serializable, Cloneable, Comparable<CusComBase> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CusComBase");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CUS_ACCT_FIELD_DESC = new org.apache.thrift.protocol.TField("cusAcct", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField CPY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cpyName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CPY_ENG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cpyEngName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CPY_ABBR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cpyAbbrName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CPY_SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("cpyScale", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ECO_TRADE_FIELD_DESC = new org.apache.thrift.protocol.TField("ecoTrade", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField STAFF_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("staffNum", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField BAS_HOU_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("basHouStatus", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ORG_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("orgStatus", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField BUS_LIC_CERT_FIELD_DESC = new org.apache.thrift.protocol.TField("busLicCert", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BUS_LIC_CERT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("busLicCertUrl", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ORG_CODE_CERT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCodeCertUrl", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField NAT_CERT_FIELD_DESC = new org.apache.thrift.protocol.TField("natCert", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField LAND_CERT_FIELD_DESC = new org.apache.thrift.protocol.TField("landCert", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField TAX_CERT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("taxCertUrl", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CREDIT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("creditCode", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField EXIT_CERT_FIELD_DESC = new org.apache.thrift.protocol.TField("exitCert", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField REG_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("regAddr", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField REG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("regCode", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField REG_PLAN_FIELD_DESC = new org.apache.thrift.protocol.TField("regPlan", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField REG_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("regMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)23);
  private static final org.apache.thrift.protocol.TField REG_CURRENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("regCurrency", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField MGE_SITE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("mgeSiteType", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField MGE_SITE_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("mgeSiteValue", org.apache.thrift.protocol.TType.DOUBLE, (short)26);
  private static final org.apache.thrift.protocol.TField AREA_FIELD_DESC = new org.apache.thrift.protocol.TField("area", org.apache.thrift.protocol.TType.DOUBLE, (short)27);
  private static final org.apache.thrift.protocol.TField RENT_FIELD_DESC = new org.apache.thrift.protocol.TField("rent", org.apache.thrift.protocol.TType.I32, (short)28);
  private static final org.apache.thrift.protocol.TField FOUND_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("foundDate", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField SHARE_RATIO_FIELD_DESC = new org.apache.thrift.protocol.TField("shareRatio", org.apache.thrift.protocol.TType.DOUBLE, (short)30);
  private static final org.apache.thrift.protocol.TField MGE_CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("mgeCity", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField ACT_BIZ_ADD_FIELD_DESC = new org.apache.thrift.protocol.TField("actBizAdd", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField ACT_BIZ_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("actBizCode", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField COMM_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("commAddr", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField COMM_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("commCode", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField REC_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("recPerson", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField MAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("mail", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField CUS_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("cusLevel", org.apache.thrift.protocol.TType.I32, (short)38);
  private static final org.apache.thrift.protocol.TField CPY_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("cpyUrl", org.apache.thrift.protocol.TType.STRING, (short)39);
  private static final org.apache.thrift.protocol.TField CUS_INTRO_FIELD_DESC = new org.apache.thrift.protocol.TField("cusIntro", org.apache.thrift.protocol.TType.STRING, (short)40);
  private static final org.apache.thrift.protocol.TField TELEPHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("telephone", org.apache.thrift.protocol.TType.STRING, (short)41);
  private static final org.apache.thrift.protocol.TField FAX_FIELD_DESC = new org.apache.thrift.protocol.TField("fax", org.apache.thrift.protocol.TType.STRING, (short)42);
  private static final org.apache.thrift.protocol.TField LOAN_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("loanNo", org.apache.thrift.protocol.TType.STRING, (short)43);
  private static final org.apache.thrift.protocol.TField LOAN_CARD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("loanCardUrl", org.apache.thrift.protocol.TType.STRING, (short)44);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)45);
  private static final org.apache.thrift.protocol.TField COM_OWN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("comOwnId", org.apache.thrift.protocol.TType.I32, (short)46);
  private static final org.apache.thrift.protocol.TField COM_ALL_NATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("comAllNature", org.apache.thrift.protocol.TType.I32, (short)47);
  private static final org.apache.thrift.protocol.TField UNIT_NATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("unitNature", org.apache.thrift.protocol.TType.I32, (short)48);
  private static final org.apache.thrift.protocol.TField CUS_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("cusStatus", org.apache.thrift.protocol.TType.I32, (short)49);
  private static final org.apache.thrift.protocol.TField CUS_ACCT_MANAGER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cusAcctManagerName", org.apache.thrift.protocol.TType.STRING, (short)50);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)51);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)52);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)53);
  private static final org.apache.thrift.protocol.TField ORG_CODE_CREITS_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCodeCreits", org.apache.thrift.protocol.TType.STRING, (short)54);
  private static final org.apache.thrift.protocol.TField ORG_CODE_CREITS_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCodeCreitsUrl", org.apache.thrift.protocol.TType.STRING, (short)55);
  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.I32, (short)56);
  private static final org.apache.thrift.protocol.TField COM_OWN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("comOwnName", org.apache.thrift.protocol.TType.STRING, (short)57);
  private static final org.apache.thrift.protocol.TField COM_OWN_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("comOwnPhone", org.apache.thrift.protocol.TType.STRING, (short)58);
  private static final org.apache.thrift.protocol.TField COM_OWN_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("comOwnCard", org.apache.thrift.protocol.TType.STRING, (short)59);
  private static final org.apache.thrift.protocol.TField CUS_COM_SHARES_FIELD_DESC = new org.apache.thrift.protocol.TField("cusComShares", org.apache.thrift.protocol.TType.LIST, (short)60);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CusComBaseStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CusComBaseTupleSchemeFactory());
  }

  public int pid; // required
  public CusAcct cusAcct; // required
  public String cpyName; // required
  public String cpyEngName; // required
  public String cpyAbbrName; // required
  public int cpyScale; // required
  public int ecoTrade; // required
  public int staffNum; // required
  public int basHouStatus; // required
  public int orgStatus; // required
  public String busLicCert; // required
  public String busLicCertUrl; // required
  public String orgCode; // required
  public String orgCodeCertUrl; // required
  public String natCert; // required
  public String landCert; // required
  public String taxCertUrl; // required
  public String creditCode; // required
  public String exitCert; // required
  public String regAddr; // required
  public String regCode; // required
  public String regPlan; // required
  public double regMoney; // required
  public int regCurrency; // required
  public String mgeSiteType; // required
  public double mgeSiteValue; // required
  public double area; // required
  public int rent; // required
  public String foundDate; // required
  public double shareRatio; // required
  public String mgeCity; // required
  public String actBizAdd; // required
  public String actBizCode; // required
  public String commAddr; // required
  public String commCode; // required
  public String recPerson; // required
  public String mail; // required
  public int cusLevel; // required
  public String cpyUrl; // required
  public String cusIntro; // required
  public String telephone; // required
  public String fax; // required
  public String loanNo; // required
  public String loanCardUrl; // required
  public int status; // required
  public int comOwnId; // required
  public int comAllNature; // required
  public int unitNature; // required
  public int cusStatus; // required
  public String cusAcctManagerName; // required
  public int page; // required
  public int rows; // required
  public int userId; // required
  public String orgCodeCreits; // required
  public String orgCodeCreitsUrl; // required
  public int orgId; // required
  public String comOwnName; // required
  public String comOwnPhone; // required
  public String comOwnCard; // required
  public List<CusComShare> cusComShares; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    CUS_ACCT((short)2, "cusAcct"),
    CPY_NAME((short)3, "cpyName"),
    CPY_ENG_NAME((short)4, "cpyEngName"),
    CPY_ABBR_NAME((short)5, "cpyAbbrName"),
    CPY_SCALE((short)6, "cpyScale"),
    ECO_TRADE((short)7, "ecoTrade"),
    STAFF_NUM((short)8, "staffNum"),
    BAS_HOU_STATUS((short)9, "basHouStatus"),
    ORG_STATUS((short)10, "orgStatus"),
    BUS_LIC_CERT((short)11, "busLicCert"),
    BUS_LIC_CERT_URL((short)12, "busLicCertUrl"),
    ORG_CODE((short)13, "orgCode"),
    ORG_CODE_CERT_URL((short)14, "orgCodeCertUrl"),
    NAT_CERT((short)15, "natCert"),
    LAND_CERT((short)16, "landCert"),
    TAX_CERT_URL((short)17, "taxCertUrl"),
    CREDIT_CODE((short)18, "creditCode"),
    EXIT_CERT((short)19, "exitCert"),
    REG_ADDR((short)20, "regAddr"),
    REG_CODE((short)21, "regCode"),
    REG_PLAN((short)22, "regPlan"),
    REG_MONEY((short)23, "regMoney"),
    REG_CURRENCY((short)24, "regCurrency"),
    MGE_SITE_TYPE((short)25, "mgeSiteType"),
    MGE_SITE_VALUE((short)26, "mgeSiteValue"),
    AREA((short)27, "area"),
    RENT((short)28, "rent"),
    FOUND_DATE((short)29, "foundDate"),
    SHARE_RATIO((short)30, "shareRatio"),
    MGE_CITY((short)31, "mgeCity"),
    ACT_BIZ_ADD((short)32, "actBizAdd"),
    ACT_BIZ_CODE((short)33, "actBizCode"),
    COMM_ADDR((short)34, "commAddr"),
    COMM_CODE((short)35, "commCode"),
    REC_PERSON((short)36, "recPerson"),
    MAIL((short)37, "mail"),
    CUS_LEVEL((short)38, "cusLevel"),
    CPY_URL((short)39, "cpyUrl"),
    CUS_INTRO((short)40, "cusIntro"),
    TELEPHONE((short)41, "telephone"),
    FAX((short)42, "fax"),
    LOAN_NO((short)43, "loanNo"),
    LOAN_CARD_URL((short)44, "loanCardUrl"),
    STATUS((short)45, "status"),
    COM_OWN_ID((short)46, "comOwnId"),
    COM_ALL_NATURE((short)47, "comAllNature"),
    UNIT_NATURE((short)48, "unitNature"),
    CUS_STATUS((short)49, "cusStatus"),
    CUS_ACCT_MANAGER_NAME((short)50, "cusAcctManagerName"),
    PAGE((short)51, "page"),
    ROWS((short)52, "rows"),
    USER_ID((short)53, "userId"),
    ORG_CODE_CREITS((short)54, "orgCodeCreits"),
    ORG_CODE_CREITS_URL((short)55, "orgCodeCreitsUrl"),
    ORG_ID((short)56, "orgId"),
    COM_OWN_NAME((short)57, "comOwnName"),
    COM_OWN_PHONE((short)58, "comOwnPhone"),
    COM_OWN_CARD((short)59, "comOwnCard"),
    CUS_COM_SHARES((short)60, "cusComShares");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // CUS_ACCT
          return CUS_ACCT;
        case 3: // CPY_NAME
          return CPY_NAME;
        case 4: // CPY_ENG_NAME
          return CPY_ENG_NAME;
        case 5: // CPY_ABBR_NAME
          return CPY_ABBR_NAME;
        case 6: // CPY_SCALE
          return CPY_SCALE;
        case 7: // ECO_TRADE
          return ECO_TRADE;
        case 8: // STAFF_NUM
          return STAFF_NUM;
        case 9: // BAS_HOU_STATUS
          return BAS_HOU_STATUS;
        case 10: // ORG_STATUS
          return ORG_STATUS;
        case 11: // BUS_LIC_CERT
          return BUS_LIC_CERT;
        case 12: // BUS_LIC_CERT_URL
          return BUS_LIC_CERT_URL;
        case 13: // ORG_CODE
          return ORG_CODE;
        case 14: // ORG_CODE_CERT_URL
          return ORG_CODE_CERT_URL;
        case 15: // NAT_CERT
          return NAT_CERT;
        case 16: // LAND_CERT
          return LAND_CERT;
        case 17: // TAX_CERT_URL
          return TAX_CERT_URL;
        case 18: // CREDIT_CODE
          return CREDIT_CODE;
        case 19: // EXIT_CERT
          return EXIT_CERT;
        case 20: // REG_ADDR
          return REG_ADDR;
        case 21: // REG_CODE
          return REG_CODE;
        case 22: // REG_PLAN
          return REG_PLAN;
        case 23: // REG_MONEY
          return REG_MONEY;
        case 24: // REG_CURRENCY
          return REG_CURRENCY;
        case 25: // MGE_SITE_TYPE
          return MGE_SITE_TYPE;
        case 26: // MGE_SITE_VALUE
          return MGE_SITE_VALUE;
        case 27: // AREA
          return AREA;
        case 28: // RENT
          return RENT;
        case 29: // FOUND_DATE
          return FOUND_DATE;
        case 30: // SHARE_RATIO
          return SHARE_RATIO;
        case 31: // MGE_CITY
          return MGE_CITY;
        case 32: // ACT_BIZ_ADD
          return ACT_BIZ_ADD;
        case 33: // ACT_BIZ_CODE
          return ACT_BIZ_CODE;
        case 34: // COMM_ADDR
          return COMM_ADDR;
        case 35: // COMM_CODE
          return COMM_CODE;
        case 36: // REC_PERSON
          return REC_PERSON;
        case 37: // MAIL
          return MAIL;
        case 38: // CUS_LEVEL
          return CUS_LEVEL;
        case 39: // CPY_URL
          return CPY_URL;
        case 40: // CUS_INTRO
          return CUS_INTRO;
        case 41: // TELEPHONE
          return TELEPHONE;
        case 42: // FAX
          return FAX;
        case 43: // LOAN_NO
          return LOAN_NO;
        case 44: // LOAN_CARD_URL
          return LOAN_CARD_URL;
        case 45: // STATUS
          return STATUS;
        case 46: // COM_OWN_ID
          return COM_OWN_ID;
        case 47: // COM_ALL_NATURE
          return COM_ALL_NATURE;
        case 48: // UNIT_NATURE
          return UNIT_NATURE;
        case 49: // CUS_STATUS
          return CUS_STATUS;
        case 50: // CUS_ACCT_MANAGER_NAME
          return CUS_ACCT_MANAGER_NAME;
        case 51: // PAGE
          return PAGE;
        case 52: // ROWS
          return ROWS;
        case 53: // USER_ID
          return USER_ID;
        case 54: // ORG_CODE_CREITS
          return ORG_CODE_CREITS;
        case 55: // ORG_CODE_CREITS_URL
          return ORG_CODE_CREITS_URL;
        case 56: // ORG_ID
          return ORG_ID;
        case 57: // COM_OWN_NAME
          return COM_OWN_NAME;
        case 58: // COM_OWN_PHONE
          return COM_OWN_PHONE;
        case 59: // COM_OWN_CARD
          return COM_OWN_CARD;
        case 60: // CUS_COM_SHARES
          return CUS_COM_SHARES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __CPYSCALE_ISSET_ID = 1;
  private static final int __ECOTRADE_ISSET_ID = 2;
  private static final int __STAFFNUM_ISSET_ID = 3;
  private static final int __BASHOUSTATUS_ISSET_ID = 4;
  private static final int __ORGSTATUS_ISSET_ID = 5;
  private static final int __REGMONEY_ISSET_ID = 6;
  private static final int __REGCURRENCY_ISSET_ID = 7;
  private static final int __MGESITEVALUE_ISSET_ID = 8;
  private static final int __AREA_ISSET_ID = 9;
  private static final int __RENT_ISSET_ID = 10;
  private static final int __SHARERATIO_ISSET_ID = 11;
  private static final int __CUSLEVEL_ISSET_ID = 12;
  private static final int __STATUS_ISSET_ID = 13;
  private static final int __COMOWNID_ISSET_ID = 14;
  private static final int __COMALLNATURE_ISSET_ID = 15;
  private static final int __UNITNATURE_ISSET_ID = 16;
  private static final int __CUSSTATUS_ISSET_ID = 17;
  private static final int __PAGE_ISSET_ID = 18;
  private static final int __ROWS_ISSET_ID = 19;
  private static final int __USERID_ISSET_ID = 20;
  private static final int __ORGID_ISSET_ID = 21;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUS_ACCT, new org.apache.thrift.meta_data.FieldMetaData("cusAcct", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CusAcct.class)));
    tmpMap.put(_Fields.CPY_NAME, new org.apache.thrift.meta_data.FieldMetaData("cpyName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPY_ENG_NAME, new org.apache.thrift.meta_data.FieldMetaData("cpyEngName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPY_ABBR_NAME, new org.apache.thrift.meta_data.FieldMetaData("cpyAbbrName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPY_SCALE, new org.apache.thrift.meta_data.FieldMetaData("cpyScale", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ECO_TRADE, new org.apache.thrift.meta_data.FieldMetaData("ecoTrade", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STAFF_NUM, new org.apache.thrift.meta_data.FieldMetaData("staffNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BAS_HOU_STATUS, new org.apache.thrift.meta_data.FieldMetaData("basHouStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_STATUS, new org.apache.thrift.meta_data.FieldMetaData("orgStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUS_LIC_CERT, new org.apache.thrift.meta_data.FieldMetaData("busLicCert", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUS_LIC_CERT_URL, new org.apache.thrift.meta_data.FieldMetaData("busLicCertUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE_CERT_URL, new org.apache.thrift.meta_data.FieldMetaData("orgCodeCertUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAT_CERT, new org.apache.thrift.meta_data.FieldMetaData("natCert", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAND_CERT, new org.apache.thrift.meta_data.FieldMetaData("landCert", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAX_CERT_URL, new org.apache.thrift.meta_data.FieldMetaData("taxCertUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREDIT_CODE, new org.apache.thrift.meta_data.FieldMetaData("creditCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXIT_CERT, new org.apache.thrift.meta_data.FieldMetaData("exitCert", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_ADDR, new org.apache.thrift.meta_data.FieldMetaData("regAddr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_CODE, new org.apache.thrift.meta_data.FieldMetaData("regCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_PLAN, new org.apache.thrift.meta_data.FieldMetaData("regPlan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_MONEY, new org.apache.thrift.meta_data.FieldMetaData("regMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REG_CURRENCY, new org.apache.thrift.meta_data.FieldMetaData("regCurrency", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MGE_SITE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("mgeSiteType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MGE_SITE_VALUE, new org.apache.thrift.meta_data.FieldMetaData("mgeSiteValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.AREA, new org.apache.thrift.meta_data.FieldMetaData("area", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RENT, new org.apache.thrift.meta_data.FieldMetaData("rent", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOUND_DATE, new org.apache.thrift.meta_data.FieldMetaData("foundDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHARE_RATIO, new org.apache.thrift.meta_data.FieldMetaData("shareRatio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.MGE_CITY, new org.apache.thrift.meta_data.FieldMetaData("mgeCity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACT_BIZ_ADD, new org.apache.thrift.meta_data.FieldMetaData("actBizAdd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACT_BIZ_CODE, new org.apache.thrift.meta_data.FieldMetaData("actBizCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMM_ADDR, new org.apache.thrift.meta_data.FieldMetaData("commAddr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMM_CODE, new org.apache.thrift.meta_data.FieldMetaData("commCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REC_PERSON, new org.apache.thrift.meta_data.FieldMetaData("recPerson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAIL, new org.apache.thrift.meta_data.FieldMetaData("mail", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("cusLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CPY_URL, new org.apache.thrift.meta_data.FieldMetaData("cpyUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_INTRO, new org.apache.thrift.meta_data.FieldMetaData("cusIntro", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TELEPHONE, new org.apache.thrift.meta_data.FieldMetaData("telephone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAX, new org.apache.thrift.meta_data.FieldMetaData("fax", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_NO, new org.apache.thrift.meta_data.FieldMetaData("loanNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_CARD_URL, new org.apache.thrift.meta_data.FieldMetaData("loanCardUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COM_OWN_ID, new org.apache.thrift.meta_data.FieldMetaData("comOwnId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COM_ALL_NATURE, new org.apache.thrift.meta_data.FieldMetaData("comAllNature", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UNIT_NATURE, new org.apache.thrift.meta_data.FieldMetaData("unitNature", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUS_STATUS, new org.apache.thrift.meta_data.FieldMetaData("cusStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUS_ACCT_MANAGER_NAME, new org.apache.thrift.meta_data.FieldMetaData("cusAcctManagerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORG_CODE_CREITS, new org.apache.thrift.meta_data.FieldMetaData("orgCodeCreits", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE_CREITS_URL, new org.apache.thrift.meta_data.FieldMetaData("orgCodeCreitsUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COM_OWN_NAME, new org.apache.thrift.meta_data.FieldMetaData("comOwnName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COM_OWN_PHONE, new org.apache.thrift.meta_data.FieldMetaData("comOwnPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COM_OWN_CARD, new org.apache.thrift.meta_data.FieldMetaData("comOwnCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_COM_SHARES, new org.apache.thrift.meta_data.FieldMetaData("cusComShares", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "CusComShare"))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CusComBase.class, metaDataMap);
  }

  public CusComBase() {
  }

  public CusComBase(
    int pid,
    CusAcct cusAcct,
    String cpyName,
    String cpyEngName,
    String cpyAbbrName,
    int cpyScale,
    int ecoTrade,
    int staffNum,
    int basHouStatus,
    int orgStatus,
    String busLicCert,
    String busLicCertUrl,
    String orgCode,
    String orgCodeCertUrl,
    String natCert,
    String landCert,
    String taxCertUrl,
    String creditCode,
    String exitCert,
    String regAddr,
    String regCode,
    String regPlan,
    double regMoney,
    int regCurrency,
    String mgeSiteType,
    double mgeSiteValue,
    double area,
    int rent,
    String foundDate,
    double shareRatio,
    String mgeCity,
    String actBizAdd,
    String actBizCode,
    String commAddr,
    String commCode,
    String recPerson,
    String mail,
    int cusLevel,
    String cpyUrl,
    String cusIntro,
    String telephone,
    String fax,
    String loanNo,
    String loanCardUrl,
    int status,
    int comOwnId,
    int comAllNature,
    int unitNature,
    int cusStatus,
    String cusAcctManagerName,
    int page,
    int rows,
    int userId,
    String orgCodeCreits,
    String orgCodeCreitsUrl,
    int orgId,
    String comOwnName,
    String comOwnPhone,
    String comOwnCard,
    List<CusComShare> cusComShares)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.cusAcct = cusAcct;
    this.cpyName = cpyName;
    this.cpyEngName = cpyEngName;
    this.cpyAbbrName = cpyAbbrName;
    this.cpyScale = cpyScale;
    setCpyScaleIsSet(true);
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    this.staffNum = staffNum;
    setStaffNumIsSet(true);
    this.basHouStatus = basHouStatus;
    setBasHouStatusIsSet(true);
    this.orgStatus = orgStatus;
    setOrgStatusIsSet(true);
    this.busLicCert = busLicCert;
    this.busLicCertUrl = busLicCertUrl;
    this.orgCode = orgCode;
    this.orgCodeCertUrl = orgCodeCertUrl;
    this.natCert = natCert;
    this.landCert = landCert;
    this.taxCertUrl = taxCertUrl;
    this.creditCode = creditCode;
    this.exitCert = exitCert;
    this.regAddr = regAddr;
    this.regCode = regCode;
    this.regPlan = regPlan;
    this.regMoney = regMoney;
    setRegMoneyIsSet(true);
    this.regCurrency = regCurrency;
    setRegCurrencyIsSet(true);
    this.mgeSiteType = mgeSiteType;
    this.mgeSiteValue = mgeSiteValue;
    setMgeSiteValueIsSet(true);
    this.area = area;
    setAreaIsSet(true);
    this.rent = rent;
    setRentIsSet(true);
    this.foundDate = foundDate;
    this.shareRatio = shareRatio;
    setShareRatioIsSet(true);
    this.mgeCity = mgeCity;
    this.actBizAdd = actBizAdd;
    this.actBizCode = actBizCode;
    this.commAddr = commAddr;
    this.commCode = commCode;
    this.recPerson = recPerson;
    this.mail = mail;
    this.cusLevel = cusLevel;
    setCusLevelIsSet(true);
    this.cpyUrl = cpyUrl;
    this.cusIntro = cusIntro;
    this.telephone = telephone;
    this.fax = fax;
    this.loanNo = loanNo;
    this.loanCardUrl = loanCardUrl;
    this.status = status;
    setStatusIsSet(true);
    this.comOwnId = comOwnId;
    setComOwnIdIsSet(true);
    this.comAllNature = comAllNature;
    setComAllNatureIsSet(true);
    this.unitNature = unitNature;
    setUnitNatureIsSet(true);
    this.cusStatus = cusStatus;
    setCusStatusIsSet(true);
    this.cusAcctManagerName = cusAcctManagerName;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.orgCodeCreits = orgCodeCreits;
    this.orgCodeCreitsUrl = orgCodeCreitsUrl;
    this.orgId = orgId;
    setOrgIdIsSet(true);
    this.comOwnName = comOwnName;
    this.comOwnPhone = comOwnPhone;
    this.comOwnCard = comOwnCard;
    this.cusComShares = cusComShares;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CusComBase(CusComBase other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetCusAcct()) {
      this.cusAcct = new CusAcct(other.cusAcct);
    }
    if (other.isSetCpyName()) {
      this.cpyName = other.cpyName;
    }
    if (other.isSetCpyEngName()) {
      this.cpyEngName = other.cpyEngName;
    }
    if (other.isSetCpyAbbrName()) {
      this.cpyAbbrName = other.cpyAbbrName;
    }
    this.cpyScale = other.cpyScale;
    this.ecoTrade = other.ecoTrade;
    this.staffNum = other.staffNum;
    this.basHouStatus = other.basHouStatus;
    this.orgStatus = other.orgStatus;
    if (other.isSetBusLicCert()) {
      this.busLicCert = other.busLicCert;
    }
    if (other.isSetBusLicCertUrl()) {
      this.busLicCertUrl = other.busLicCertUrl;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    if (other.isSetOrgCodeCertUrl()) {
      this.orgCodeCertUrl = other.orgCodeCertUrl;
    }
    if (other.isSetNatCert()) {
      this.natCert = other.natCert;
    }
    if (other.isSetLandCert()) {
      this.landCert = other.landCert;
    }
    if (other.isSetTaxCertUrl()) {
      this.taxCertUrl = other.taxCertUrl;
    }
    if (other.isSetCreditCode()) {
      this.creditCode = other.creditCode;
    }
    if (other.isSetExitCert()) {
      this.exitCert = other.exitCert;
    }
    if (other.isSetRegAddr()) {
      this.regAddr = other.regAddr;
    }
    if (other.isSetRegCode()) {
      this.regCode = other.regCode;
    }
    if (other.isSetRegPlan()) {
      this.regPlan = other.regPlan;
    }
    this.regMoney = other.regMoney;
    this.regCurrency = other.regCurrency;
    if (other.isSetMgeSiteType()) {
      this.mgeSiteType = other.mgeSiteType;
    }
    this.mgeSiteValue = other.mgeSiteValue;
    this.area = other.area;
    this.rent = other.rent;
    if (other.isSetFoundDate()) {
      this.foundDate = other.foundDate;
    }
    this.shareRatio = other.shareRatio;
    if (other.isSetMgeCity()) {
      this.mgeCity = other.mgeCity;
    }
    if (other.isSetActBizAdd()) {
      this.actBizAdd = other.actBizAdd;
    }
    if (other.isSetActBizCode()) {
      this.actBizCode = other.actBizCode;
    }
    if (other.isSetCommAddr()) {
      this.commAddr = other.commAddr;
    }
    if (other.isSetCommCode()) {
      this.commCode = other.commCode;
    }
    if (other.isSetRecPerson()) {
      this.recPerson = other.recPerson;
    }
    if (other.isSetMail()) {
      this.mail = other.mail;
    }
    this.cusLevel = other.cusLevel;
    if (other.isSetCpyUrl()) {
      this.cpyUrl = other.cpyUrl;
    }
    if (other.isSetCusIntro()) {
      this.cusIntro = other.cusIntro;
    }
    if (other.isSetTelephone()) {
      this.telephone = other.telephone;
    }
    if (other.isSetFax()) {
      this.fax = other.fax;
    }
    if (other.isSetLoanNo()) {
      this.loanNo = other.loanNo;
    }
    if (other.isSetLoanCardUrl()) {
      this.loanCardUrl = other.loanCardUrl;
    }
    this.status = other.status;
    this.comOwnId = other.comOwnId;
    this.comAllNature = other.comAllNature;
    this.unitNature = other.unitNature;
    this.cusStatus = other.cusStatus;
    if (other.isSetCusAcctManagerName()) {
      this.cusAcctManagerName = other.cusAcctManagerName;
    }
    this.page = other.page;
    this.rows = other.rows;
    this.userId = other.userId;
    if (other.isSetOrgCodeCreits()) {
      this.orgCodeCreits = other.orgCodeCreits;
    }
    if (other.isSetOrgCodeCreitsUrl()) {
      this.orgCodeCreitsUrl = other.orgCodeCreitsUrl;
    }
    this.orgId = other.orgId;
    if (other.isSetComOwnName()) {
      this.comOwnName = other.comOwnName;
    }
    if (other.isSetComOwnPhone()) {
      this.comOwnPhone = other.comOwnPhone;
    }
    if (other.isSetComOwnCard()) {
      this.comOwnCard = other.comOwnCard;
    }
    if (other.isSetCusComShares()) {
      List<CusComShare> __this__cusComShares = new ArrayList<CusComShare>(other.cusComShares.size());
      for (CusComShare other_element : other.cusComShares) {
        __this__cusComShares.add(other_element);
      }
      this.cusComShares = __this__cusComShares;
    }
  }

  public CusComBase deepCopy() {
    return new CusComBase(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.cusAcct = null;
    this.cpyName = null;
    this.cpyEngName = null;
    this.cpyAbbrName = null;
    setCpyScaleIsSet(false);
    this.cpyScale = 0;
    setEcoTradeIsSet(false);
    this.ecoTrade = 0;
    setStaffNumIsSet(false);
    this.staffNum = 0;
    setBasHouStatusIsSet(false);
    this.basHouStatus = 0;
    setOrgStatusIsSet(false);
    this.orgStatus = 0;
    this.busLicCert = null;
    this.busLicCertUrl = null;
    this.orgCode = null;
    this.orgCodeCertUrl = null;
    this.natCert = null;
    this.landCert = null;
    this.taxCertUrl = null;
    this.creditCode = null;
    this.exitCert = null;
    this.regAddr = null;
    this.regCode = null;
    this.regPlan = null;
    setRegMoneyIsSet(false);
    this.regMoney = 0.0;
    setRegCurrencyIsSet(false);
    this.regCurrency = 0;
    this.mgeSiteType = null;
    setMgeSiteValueIsSet(false);
    this.mgeSiteValue = 0.0;
    setAreaIsSet(false);
    this.area = 0.0;
    setRentIsSet(false);
    this.rent = 0;
    this.foundDate = null;
    setShareRatioIsSet(false);
    this.shareRatio = 0.0;
    this.mgeCity = null;
    this.actBizAdd = null;
    this.actBizCode = null;
    this.commAddr = null;
    this.commCode = null;
    this.recPerson = null;
    this.mail = null;
    setCusLevelIsSet(false);
    this.cusLevel = 0;
    this.cpyUrl = null;
    this.cusIntro = null;
    this.telephone = null;
    this.fax = null;
    this.loanNo = null;
    this.loanCardUrl = null;
    setStatusIsSet(false);
    this.status = 0;
    setComOwnIdIsSet(false);
    this.comOwnId = 0;
    setComAllNatureIsSet(false);
    this.comAllNature = 0;
    setUnitNatureIsSet(false);
    this.unitNature = 0;
    setCusStatusIsSet(false);
    this.cusStatus = 0;
    this.cusAcctManagerName = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.orgCodeCreits = null;
    this.orgCodeCreitsUrl = null;
    setOrgIdIsSet(false);
    this.orgId = 0;
    this.comOwnName = null;
    this.comOwnPhone = null;
    this.comOwnCard = null;
    this.cusComShares = null;
  }

  public int getPid() {
    return this.pid;
  }

  public CusComBase setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public CusAcct getCusAcct() {
    return this.cusAcct;
  }

  public CusComBase setCusAcct(CusAcct cusAcct) {
    this.cusAcct = cusAcct;
    return this;
  }

  public void unsetCusAcct() {
    this.cusAcct = null;
  }

  /** Returns true if field cusAcct is set (has been assigned a value) and false otherwise */
  public boolean isSetCusAcct() {
    return this.cusAcct != null;
  }

  public void setCusAcctIsSet(boolean value) {
    if (!value) {
      this.cusAcct = null;
    }
  }

  public String getCpyName() {
    return this.cpyName;
  }

  public CusComBase setCpyName(String cpyName) {
    this.cpyName = cpyName;
    return this;
  }

  public void unsetCpyName() {
    this.cpyName = null;
  }

  /** Returns true if field cpyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCpyName() {
    return this.cpyName != null;
  }

  public void setCpyNameIsSet(boolean value) {
    if (!value) {
      this.cpyName = null;
    }
  }

  public String getCpyEngName() {
    return this.cpyEngName;
  }

  public CusComBase setCpyEngName(String cpyEngName) {
    this.cpyEngName = cpyEngName;
    return this;
  }

  public void unsetCpyEngName() {
    this.cpyEngName = null;
  }

  /** Returns true if field cpyEngName is set (has been assigned a value) and false otherwise */
  public boolean isSetCpyEngName() {
    return this.cpyEngName != null;
  }

  public void setCpyEngNameIsSet(boolean value) {
    if (!value) {
      this.cpyEngName = null;
    }
  }

  public String getCpyAbbrName() {
    return this.cpyAbbrName;
  }

  public CusComBase setCpyAbbrName(String cpyAbbrName) {
    this.cpyAbbrName = cpyAbbrName;
    return this;
  }

  public void unsetCpyAbbrName() {
    this.cpyAbbrName = null;
  }

  /** Returns true if field cpyAbbrName is set (has been assigned a value) and false otherwise */
  public boolean isSetCpyAbbrName() {
    return this.cpyAbbrName != null;
  }

  public void setCpyAbbrNameIsSet(boolean value) {
    if (!value) {
      this.cpyAbbrName = null;
    }
  }

  public int getCpyScale() {
    return this.cpyScale;
  }

  public CusComBase setCpyScale(int cpyScale) {
    this.cpyScale = cpyScale;
    setCpyScaleIsSet(true);
    return this;
  }

  public void unsetCpyScale() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CPYSCALE_ISSET_ID);
  }

  /** Returns true if field cpyScale is set (has been assigned a value) and false otherwise */
  public boolean isSetCpyScale() {
    return EncodingUtils.testBit(__isset_bitfield, __CPYSCALE_ISSET_ID);
  }

  public void setCpyScaleIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CPYSCALE_ISSET_ID, value);
  }

  public int getEcoTrade() {
    return this.ecoTrade;
  }

  public CusComBase setEcoTrade(int ecoTrade) {
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    return this;
  }

  public void unsetEcoTrade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  /** Returns true if field ecoTrade is set (has been assigned a value) and false otherwise */
  public boolean isSetEcoTrade() {
    return EncodingUtils.testBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  public void setEcoTradeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ECOTRADE_ISSET_ID, value);
  }

  public int getStaffNum() {
    return this.staffNum;
  }

  public CusComBase setStaffNum(int staffNum) {
    this.staffNum = staffNum;
    setStaffNumIsSet(true);
    return this;
  }

  public void unsetStaffNum() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STAFFNUM_ISSET_ID);
  }

  /** Returns true if field staffNum is set (has been assigned a value) and false otherwise */
  public boolean isSetStaffNum() {
    return EncodingUtils.testBit(__isset_bitfield, __STAFFNUM_ISSET_ID);
  }

  public void setStaffNumIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STAFFNUM_ISSET_ID, value);
  }

  public int getBasHouStatus() {
    return this.basHouStatus;
  }

  public CusComBase setBasHouStatus(int basHouStatus) {
    this.basHouStatus = basHouStatus;
    setBasHouStatusIsSet(true);
    return this;
  }

  public void unsetBasHouStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BASHOUSTATUS_ISSET_ID);
  }

  /** Returns true if field basHouStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetBasHouStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __BASHOUSTATUS_ISSET_ID);
  }

  public void setBasHouStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BASHOUSTATUS_ISSET_ID, value);
  }

  public int getOrgStatus() {
    return this.orgStatus;
  }

  public CusComBase setOrgStatus(int orgStatus) {
    this.orgStatus = orgStatus;
    setOrgStatusIsSet(true);
    return this;
  }

  public void unsetOrgStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGSTATUS_ISSET_ID);
  }

  /** Returns true if field orgStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGSTATUS_ISSET_ID);
  }

  public void setOrgStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGSTATUS_ISSET_ID, value);
  }

  public String getBusLicCert() {
    return this.busLicCert;
  }

  public CusComBase setBusLicCert(String busLicCert) {
    this.busLicCert = busLicCert;
    return this;
  }

  public void unsetBusLicCert() {
    this.busLicCert = null;
  }

  /** Returns true if field busLicCert is set (has been assigned a value) and false otherwise */
  public boolean isSetBusLicCert() {
    return this.busLicCert != null;
  }

  public void setBusLicCertIsSet(boolean value) {
    if (!value) {
      this.busLicCert = null;
    }
  }

  public String getBusLicCertUrl() {
    return this.busLicCertUrl;
  }

  public CusComBase setBusLicCertUrl(String busLicCertUrl) {
    this.busLicCertUrl = busLicCertUrl;
    return this;
  }

  public void unsetBusLicCertUrl() {
    this.busLicCertUrl = null;
  }

  /** Returns true if field busLicCertUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetBusLicCertUrl() {
    return this.busLicCertUrl != null;
  }

  public void setBusLicCertUrlIsSet(boolean value) {
    if (!value) {
      this.busLicCertUrl = null;
    }
  }

  public String getOrgCode() {
    return this.orgCode;
  }

  public CusComBase setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  public String getOrgCodeCertUrl() {
    return this.orgCodeCertUrl;
  }

  public CusComBase setOrgCodeCertUrl(String orgCodeCertUrl) {
    this.orgCodeCertUrl = orgCodeCertUrl;
    return this;
  }

  public void unsetOrgCodeCertUrl() {
    this.orgCodeCertUrl = null;
  }

  /** Returns true if field orgCodeCertUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCodeCertUrl() {
    return this.orgCodeCertUrl != null;
  }

  public void setOrgCodeCertUrlIsSet(boolean value) {
    if (!value) {
      this.orgCodeCertUrl = null;
    }
  }

  public String getNatCert() {
    return this.natCert;
  }

  public CusComBase setNatCert(String natCert) {
    this.natCert = natCert;
    return this;
  }

  public void unsetNatCert() {
    this.natCert = null;
  }

  /** Returns true if field natCert is set (has been assigned a value) and false otherwise */
  public boolean isSetNatCert() {
    return this.natCert != null;
  }

  public void setNatCertIsSet(boolean value) {
    if (!value) {
      this.natCert = null;
    }
  }

  public String getLandCert() {
    return this.landCert;
  }

  public CusComBase setLandCert(String landCert) {
    this.landCert = landCert;
    return this;
  }

  public void unsetLandCert() {
    this.landCert = null;
  }

  /** Returns true if field landCert is set (has been assigned a value) and false otherwise */
  public boolean isSetLandCert() {
    return this.landCert != null;
  }

  public void setLandCertIsSet(boolean value) {
    if (!value) {
      this.landCert = null;
    }
  }

  public String getTaxCertUrl() {
    return this.taxCertUrl;
  }

  public CusComBase setTaxCertUrl(String taxCertUrl) {
    this.taxCertUrl = taxCertUrl;
    return this;
  }

  public void unsetTaxCertUrl() {
    this.taxCertUrl = null;
  }

  /** Returns true if field taxCertUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetTaxCertUrl() {
    return this.taxCertUrl != null;
  }

  public void setTaxCertUrlIsSet(boolean value) {
    if (!value) {
      this.taxCertUrl = null;
    }
  }

  public String getCreditCode() {
    return this.creditCode;
  }

  public CusComBase setCreditCode(String creditCode) {
    this.creditCode = creditCode;
    return this;
  }

  public void unsetCreditCode() {
    this.creditCode = null;
  }

  /** Returns true if field creditCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditCode() {
    return this.creditCode != null;
  }

  public void setCreditCodeIsSet(boolean value) {
    if (!value) {
      this.creditCode = null;
    }
  }

  public String getExitCert() {
    return this.exitCert;
  }

  public CusComBase setExitCert(String exitCert) {
    this.exitCert = exitCert;
    return this;
  }

  public void unsetExitCert() {
    this.exitCert = null;
  }

  /** Returns true if field exitCert is set (has been assigned a value) and false otherwise */
  public boolean isSetExitCert() {
    return this.exitCert != null;
  }

  public void setExitCertIsSet(boolean value) {
    if (!value) {
      this.exitCert = null;
    }
  }

  public String getRegAddr() {
    return this.regAddr;
  }

  public CusComBase setRegAddr(String regAddr) {
    this.regAddr = regAddr;
    return this;
  }

  public void unsetRegAddr() {
    this.regAddr = null;
  }

  /** Returns true if field regAddr is set (has been assigned a value) and false otherwise */
  public boolean isSetRegAddr() {
    return this.regAddr != null;
  }

  public void setRegAddrIsSet(boolean value) {
    if (!value) {
      this.regAddr = null;
    }
  }

  public String getRegCode() {
    return this.regCode;
  }

  public CusComBase setRegCode(String regCode) {
    this.regCode = regCode;
    return this;
  }

  public void unsetRegCode() {
    this.regCode = null;
  }

  /** Returns true if field regCode is set (has been assigned a value) and false otherwise */
  public boolean isSetRegCode() {
    return this.regCode != null;
  }

  public void setRegCodeIsSet(boolean value) {
    if (!value) {
      this.regCode = null;
    }
  }

  public String getRegPlan() {
    return this.regPlan;
  }

  public CusComBase setRegPlan(String regPlan) {
    this.regPlan = regPlan;
    return this;
  }

  public void unsetRegPlan() {
    this.regPlan = null;
  }

  /** Returns true if field regPlan is set (has been assigned a value) and false otherwise */
  public boolean isSetRegPlan() {
    return this.regPlan != null;
  }

  public void setRegPlanIsSet(boolean value) {
    if (!value) {
      this.regPlan = null;
    }
  }

  public double getRegMoney() {
    return this.regMoney;
  }

  public CusComBase setRegMoney(double regMoney) {
    this.regMoney = regMoney;
    setRegMoneyIsSet(true);
    return this;
  }

  public void unsetRegMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REGMONEY_ISSET_ID);
  }

  /** Returns true if field regMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetRegMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __REGMONEY_ISSET_ID);
  }

  public void setRegMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REGMONEY_ISSET_ID, value);
  }

  public int getRegCurrency() {
    return this.regCurrency;
  }

  public CusComBase setRegCurrency(int regCurrency) {
    this.regCurrency = regCurrency;
    setRegCurrencyIsSet(true);
    return this;
  }

  public void unsetRegCurrency() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REGCURRENCY_ISSET_ID);
  }

  /** Returns true if field regCurrency is set (has been assigned a value) and false otherwise */
  public boolean isSetRegCurrency() {
    return EncodingUtils.testBit(__isset_bitfield, __REGCURRENCY_ISSET_ID);
  }

  public void setRegCurrencyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REGCURRENCY_ISSET_ID, value);
  }

  public String getMgeSiteType() {
    return this.mgeSiteType;
  }

  public CusComBase setMgeSiteType(String mgeSiteType) {
    this.mgeSiteType = mgeSiteType;
    return this;
  }

  public void unsetMgeSiteType() {
    this.mgeSiteType = null;
  }

  /** Returns true if field mgeSiteType is set (has been assigned a value) and false otherwise */
  public boolean isSetMgeSiteType() {
    return this.mgeSiteType != null;
  }

  public void setMgeSiteTypeIsSet(boolean value) {
    if (!value) {
      this.mgeSiteType = null;
    }
  }

  public double getMgeSiteValue() {
    return this.mgeSiteValue;
  }

  public CusComBase setMgeSiteValue(double mgeSiteValue) {
    this.mgeSiteValue = mgeSiteValue;
    setMgeSiteValueIsSet(true);
    return this;
  }

  public void unsetMgeSiteValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MGESITEVALUE_ISSET_ID);
  }

  /** Returns true if field mgeSiteValue is set (has been assigned a value) and false otherwise */
  public boolean isSetMgeSiteValue() {
    return EncodingUtils.testBit(__isset_bitfield, __MGESITEVALUE_ISSET_ID);
  }

  public void setMgeSiteValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MGESITEVALUE_ISSET_ID, value);
  }

  public double getArea() {
    return this.area;
  }

  public CusComBase setArea(double area) {
    this.area = area;
    setAreaIsSet(true);
    return this;
  }

  public void unsetArea() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREA_ISSET_ID);
  }

  /** Returns true if field area is set (has been assigned a value) and false otherwise */
  public boolean isSetArea() {
    return EncodingUtils.testBit(__isset_bitfield, __AREA_ISSET_ID);
  }

  public void setAreaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREA_ISSET_ID, value);
  }

  public int getRent() {
    return this.rent;
  }

  public CusComBase setRent(int rent) {
    this.rent = rent;
    setRentIsSet(true);
    return this;
  }

  public void unsetRent() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RENT_ISSET_ID);
  }

  /** Returns true if field rent is set (has been assigned a value) and false otherwise */
  public boolean isSetRent() {
    return EncodingUtils.testBit(__isset_bitfield, __RENT_ISSET_ID);
  }

  public void setRentIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RENT_ISSET_ID, value);
  }

  public String getFoundDate() {
    return this.foundDate;
  }

  public CusComBase setFoundDate(String foundDate) {
    this.foundDate = foundDate;
    return this;
  }

  public void unsetFoundDate() {
    this.foundDate = null;
  }

  /** Returns true if field foundDate is set (has been assigned a value) and false otherwise */
  public boolean isSetFoundDate() {
    return this.foundDate != null;
  }

  public void setFoundDateIsSet(boolean value) {
    if (!value) {
      this.foundDate = null;
    }
  }

  public double getShareRatio() {
    return this.shareRatio;
  }

  public CusComBase setShareRatio(double shareRatio) {
    this.shareRatio = shareRatio;
    setShareRatioIsSet(true);
    return this;
  }

  public void unsetShareRatio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHARERATIO_ISSET_ID);
  }

  /** Returns true if field shareRatio is set (has been assigned a value) and false otherwise */
  public boolean isSetShareRatio() {
    return EncodingUtils.testBit(__isset_bitfield, __SHARERATIO_ISSET_ID);
  }

  public void setShareRatioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHARERATIO_ISSET_ID, value);
  }

  public String getMgeCity() {
    return this.mgeCity;
  }

  public CusComBase setMgeCity(String mgeCity) {
    this.mgeCity = mgeCity;
    return this;
  }

  public void unsetMgeCity() {
    this.mgeCity = null;
  }

  /** Returns true if field mgeCity is set (has been assigned a value) and false otherwise */
  public boolean isSetMgeCity() {
    return this.mgeCity != null;
  }

  public void setMgeCityIsSet(boolean value) {
    if (!value) {
      this.mgeCity = null;
    }
  }

  public String getActBizAdd() {
    return this.actBizAdd;
  }

  public CusComBase setActBizAdd(String actBizAdd) {
    this.actBizAdd = actBizAdd;
    return this;
  }

  public void unsetActBizAdd() {
    this.actBizAdd = null;
  }

  /** Returns true if field actBizAdd is set (has been assigned a value) and false otherwise */
  public boolean isSetActBizAdd() {
    return this.actBizAdd != null;
  }

  public void setActBizAddIsSet(boolean value) {
    if (!value) {
      this.actBizAdd = null;
    }
  }

  public String getActBizCode() {
    return this.actBizCode;
  }

  public CusComBase setActBizCode(String actBizCode) {
    this.actBizCode = actBizCode;
    return this;
  }

  public void unsetActBizCode() {
    this.actBizCode = null;
  }

  /** Returns true if field actBizCode is set (has been assigned a value) and false otherwise */
  public boolean isSetActBizCode() {
    return this.actBizCode != null;
  }

  public void setActBizCodeIsSet(boolean value) {
    if (!value) {
      this.actBizCode = null;
    }
  }

  public String getCommAddr() {
    return this.commAddr;
  }

  public CusComBase setCommAddr(String commAddr) {
    this.commAddr = commAddr;
    return this;
  }

  public void unsetCommAddr() {
    this.commAddr = null;
  }

  /** Returns true if field commAddr is set (has been assigned a value) and false otherwise */
  public boolean isSetCommAddr() {
    return this.commAddr != null;
  }

  public void setCommAddrIsSet(boolean value) {
    if (!value) {
      this.commAddr = null;
    }
  }

  public String getCommCode() {
    return this.commCode;
  }

  public CusComBase setCommCode(String commCode) {
    this.commCode = commCode;
    return this;
  }

  public void unsetCommCode() {
    this.commCode = null;
  }

  /** Returns true if field commCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCommCode() {
    return this.commCode != null;
  }

  public void setCommCodeIsSet(boolean value) {
    if (!value) {
      this.commCode = null;
    }
  }

  public String getRecPerson() {
    return this.recPerson;
  }

  public CusComBase setRecPerson(String recPerson) {
    this.recPerson = recPerson;
    return this;
  }

  public void unsetRecPerson() {
    this.recPerson = null;
  }

  /** Returns true if field recPerson is set (has been assigned a value) and false otherwise */
  public boolean isSetRecPerson() {
    return this.recPerson != null;
  }

  public void setRecPersonIsSet(boolean value) {
    if (!value) {
      this.recPerson = null;
    }
  }

  public String getMail() {
    return this.mail;
  }

  public CusComBase setMail(String mail) {
    this.mail = mail;
    return this;
  }

  public void unsetMail() {
    this.mail = null;
  }

  /** Returns true if field mail is set (has been assigned a value) and false otherwise */
  public boolean isSetMail() {
    return this.mail != null;
  }

  public void setMailIsSet(boolean value) {
    if (!value) {
      this.mail = null;
    }
  }

  public int getCusLevel() {
    return this.cusLevel;
  }

  public CusComBase setCusLevel(int cusLevel) {
    this.cusLevel = cusLevel;
    setCusLevelIsSet(true);
    return this;
  }

  public void unsetCusLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUSLEVEL_ISSET_ID);
  }

  /** Returns true if field cusLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetCusLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __CUSLEVEL_ISSET_ID);
  }

  public void setCusLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUSLEVEL_ISSET_ID, value);
  }

  public String getCpyUrl() {
    return this.cpyUrl;
  }

  public CusComBase setCpyUrl(String cpyUrl) {
    this.cpyUrl = cpyUrl;
    return this;
  }

  public void unsetCpyUrl() {
    this.cpyUrl = null;
  }

  /** Returns true if field cpyUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetCpyUrl() {
    return this.cpyUrl != null;
  }

  public void setCpyUrlIsSet(boolean value) {
    if (!value) {
      this.cpyUrl = null;
    }
  }

  public String getCusIntro() {
    return this.cusIntro;
  }

  public CusComBase setCusIntro(String cusIntro) {
    this.cusIntro = cusIntro;
    return this;
  }

  public void unsetCusIntro() {
    this.cusIntro = null;
  }

  /** Returns true if field cusIntro is set (has been assigned a value) and false otherwise */
  public boolean isSetCusIntro() {
    return this.cusIntro != null;
  }

  public void setCusIntroIsSet(boolean value) {
    if (!value) {
      this.cusIntro = null;
    }
  }

  public String getTelephone() {
    return this.telephone;
  }

  public CusComBase setTelephone(String telephone) {
    this.telephone = telephone;
    return this;
  }

  public void unsetTelephone() {
    this.telephone = null;
  }

  /** Returns true if field telephone is set (has been assigned a value) and false otherwise */
  public boolean isSetTelephone() {
    return this.telephone != null;
  }

  public void setTelephoneIsSet(boolean value) {
    if (!value) {
      this.telephone = null;
    }
  }

  public String getFax() {
    return this.fax;
  }

  public CusComBase setFax(String fax) {
    this.fax = fax;
    return this;
  }

  public void unsetFax() {
    this.fax = null;
  }

  /** Returns true if field fax is set (has been assigned a value) and false otherwise */
  public boolean isSetFax() {
    return this.fax != null;
  }

  public void setFaxIsSet(boolean value) {
    if (!value) {
      this.fax = null;
    }
  }

  public String getLoanNo() {
    return this.loanNo;
  }

  public CusComBase setLoanNo(String loanNo) {
    this.loanNo = loanNo;
    return this;
  }

  public void unsetLoanNo() {
    this.loanNo = null;
  }

  /** Returns true if field loanNo is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanNo() {
    return this.loanNo != null;
  }

  public void setLoanNoIsSet(boolean value) {
    if (!value) {
      this.loanNo = null;
    }
  }

  public String getLoanCardUrl() {
    return this.loanCardUrl;
  }

  public CusComBase setLoanCardUrl(String loanCardUrl) {
    this.loanCardUrl = loanCardUrl;
    return this;
  }

  public void unsetLoanCardUrl() {
    this.loanCardUrl = null;
  }

  /** Returns true if field loanCardUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanCardUrl() {
    return this.loanCardUrl != null;
  }

  public void setLoanCardUrlIsSet(boolean value) {
    if (!value) {
      this.loanCardUrl = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public CusComBase setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getComOwnId() {
    return this.comOwnId;
  }

  public CusComBase setComOwnId(int comOwnId) {
    this.comOwnId = comOwnId;
    setComOwnIdIsSet(true);
    return this;
  }

  public void unsetComOwnId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMOWNID_ISSET_ID);
  }

  /** Returns true if field comOwnId is set (has been assigned a value) and false otherwise */
  public boolean isSetComOwnId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMOWNID_ISSET_ID);
  }

  public void setComOwnIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMOWNID_ISSET_ID, value);
  }

  public int getComAllNature() {
    return this.comAllNature;
  }

  public CusComBase setComAllNature(int comAllNature) {
    this.comAllNature = comAllNature;
    setComAllNatureIsSet(true);
    return this;
  }

  public void unsetComAllNature() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMALLNATURE_ISSET_ID);
  }

  /** Returns true if field comAllNature is set (has been assigned a value) and false otherwise */
  public boolean isSetComAllNature() {
    return EncodingUtils.testBit(__isset_bitfield, __COMALLNATURE_ISSET_ID);
  }

  public void setComAllNatureIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMALLNATURE_ISSET_ID, value);
  }

  public int getUnitNature() {
    return this.unitNature;
  }

  public CusComBase setUnitNature(int unitNature) {
    this.unitNature = unitNature;
    setUnitNatureIsSet(true);
    return this;
  }

  public void unsetUnitNature() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UNITNATURE_ISSET_ID);
  }

  /** Returns true if field unitNature is set (has been assigned a value) and false otherwise */
  public boolean isSetUnitNature() {
    return EncodingUtils.testBit(__isset_bitfield, __UNITNATURE_ISSET_ID);
  }

  public void setUnitNatureIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UNITNATURE_ISSET_ID, value);
  }

  public int getCusStatus() {
    return this.cusStatus;
  }

  public CusComBase setCusStatus(int cusStatus) {
    this.cusStatus = cusStatus;
    setCusStatusIsSet(true);
    return this;
  }

  public void unsetCusStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUSSTATUS_ISSET_ID);
  }

  /** Returns true if field cusStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCusStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __CUSSTATUS_ISSET_ID);
  }

  public void setCusStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUSSTATUS_ISSET_ID, value);
  }

  public String getCusAcctManagerName() {
    return this.cusAcctManagerName;
  }

  public CusComBase setCusAcctManagerName(String cusAcctManagerName) {
    this.cusAcctManagerName = cusAcctManagerName;
    return this;
  }

  public void unsetCusAcctManagerName() {
    this.cusAcctManagerName = null;
  }

  /** Returns true if field cusAcctManagerName is set (has been assigned a value) and false otherwise */
  public boolean isSetCusAcctManagerName() {
    return this.cusAcctManagerName != null;
  }

  public void setCusAcctManagerNameIsSet(boolean value) {
    if (!value) {
      this.cusAcctManagerName = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public CusComBase setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public CusComBase setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public CusComBase setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public String getOrgCodeCreits() {
    return this.orgCodeCreits;
  }

  public CusComBase setOrgCodeCreits(String orgCodeCreits) {
    this.orgCodeCreits = orgCodeCreits;
    return this;
  }

  public void unsetOrgCodeCreits() {
    this.orgCodeCreits = null;
  }

  /** Returns true if field orgCodeCreits is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCodeCreits() {
    return this.orgCodeCreits != null;
  }

  public void setOrgCodeCreitsIsSet(boolean value) {
    if (!value) {
      this.orgCodeCreits = null;
    }
  }

  public String getOrgCodeCreitsUrl() {
    return this.orgCodeCreitsUrl;
  }

  public CusComBase setOrgCodeCreitsUrl(String orgCodeCreitsUrl) {
    this.orgCodeCreitsUrl = orgCodeCreitsUrl;
    return this;
  }

  public void unsetOrgCodeCreitsUrl() {
    this.orgCodeCreitsUrl = null;
  }

  /** Returns true if field orgCodeCreitsUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCodeCreitsUrl() {
    return this.orgCodeCreitsUrl != null;
  }

  public void setOrgCodeCreitsUrlIsSet(boolean value) {
    if (!value) {
      this.orgCodeCreitsUrl = null;
    }
  }

  public int getOrgId() {
    return this.orgId;
  }

  public CusComBase setOrgId(int orgId) {
    this.orgId = orgId;
    setOrgIdIsSet(true);
    return this;
  }

  public void unsetOrgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORGID_ISSET_ID);
  }

  public void setOrgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORGID_ISSET_ID, value);
  }

  public String getComOwnName() {
    return this.comOwnName;
  }

  public CusComBase setComOwnName(String comOwnName) {
    this.comOwnName = comOwnName;
    return this;
  }

  public void unsetComOwnName() {
    this.comOwnName = null;
  }

  /** Returns true if field comOwnName is set (has been assigned a value) and false otherwise */
  public boolean isSetComOwnName() {
    return this.comOwnName != null;
  }

  public void setComOwnNameIsSet(boolean value) {
    if (!value) {
      this.comOwnName = null;
    }
  }

  public String getComOwnPhone() {
    return this.comOwnPhone;
  }

  public CusComBase setComOwnPhone(String comOwnPhone) {
    this.comOwnPhone = comOwnPhone;
    return this;
  }

  public void unsetComOwnPhone() {
    this.comOwnPhone = null;
  }

  /** Returns true if field comOwnPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetComOwnPhone() {
    return this.comOwnPhone != null;
  }

  public void setComOwnPhoneIsSet(boolean value) {
    if (!value) {
      this.comOwnPhone = null;
    }
  }

  public String getComOwnCard() {
    return this.comOwnCard;
  }

  public CusComBase setComOwnCard(String comOwnCard) {
    this.comOwnCard = comOwnCard;
    return this;
  }

  public void unsetComOwnCard() {
    this.comOwnCard = null;
  }

  /** Returns true if field comOwnCard is set (has been assigned a value) and false otherwise */
  public boolean isSetComOwnCard() {
    return this.comOwnCard != null;
  }

  public void setComOwnCardIsSet(boolean value) {
    if (!value) {
      this.comOwnCard = null;
    }
  }

  public int getCusComSharesSize() {
    return (this.cusComShares == null) ? 0 : this.cusComShares.size();
  }

  public java.util.Iterator<CusComShare> getCusComSharesIterator() {
    return (this.cusComShares == null) ? null : this.cusComShares.iterator();
  }

  public void addToCusComShares(CusComShare elem) {
    if (this.cusComShares == null) {
      this.cusComShares = new ArrayList<CusComShare>();
    }
    this.cusComShares.add(elem);
  }

  public List<CusComShare> getCusComShares() {
    return this.cusComShares;
  }

  public CusComBase setCusComShares(List<CusComShare> cusComShares) {
    this.cusComShares = cusComShares;
    return this;
  }

  public void unsetCusComShares() {
    this.cusComShares = null;
  }

  /** Returns true if field cusComShares is set (has been assigned a value) and false otherwise */
  public boolean isSetCusComShares() {
    return this.cusComShares != null;
  }

  public void setCusComSharesIsSet(boolean value) {
    if (!value) {
      this.cusComShares = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case CUS_ACCT:
      if (value == null) {
        unsetCusAcct();
      } else {
        setCusAcct((CusAcct)value);
      }
      break;

    case CPY_NAME:
      if (value == null) {
        unsetCpyName();
      } else {
        setCpyName((String)value);
      }
      break;

    case CPY_ENG_NAME:
      if (value == null) {
        unsetCpyEngName();
      } else {
        setCpyEngName((String)value);
      }
      break;

    case CPY_ABBR_NAME:
      if (value == null) {
        unsetCpyAbbrName();
      } else {
        setCpyAbbrName((String)value);
      }
      break;

    case CPY_SCALE:
      if (value == null) {
        unsetCpyScale();
      } else {
        setCpyScale((Integer)value);
      }
      break;

    case ECO_TRADE:
      if (value == null) {
        unsetEcoTrade();
      } else {
        setEcoTrade((Integer)value);
      }
      break;

    case STAFF_NUM:
      if (value == null) {
        unsetStaffNum();
      } else {
        setStaffNum((Integer)value);
      }
      break;

    case BAS_HOU_STATUS:
      if (value == null) {
        unsetBasHouStatus();
      } else {
        setBasHouStatus((Integer)value);
      }
      break;

    case ORG_STATUS:
      if (value == null) {
        unsetOrgStatus();
      } else {
        setOrgStatus((Integer)value);
      }
      break;

    case BUS_LIC_CERT:
      if (value == null) {
        unsetBusLicCert();
      } else {
        setBusLicCert((String)value);
      }
      break;

    case BUS_LIC_CERT_URL:
      if (value == null) {
        unsetBusLicCertUrl();
      } else {
        setBusLicCertUrl((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case ORG_CODE_CERT_URL:
      if (value == null) {
        unsetOrgCodeCertUrl();
      } else {
        setOrgCodeCertUrl((String)value);
      }
      break;

    case NAT_CERT:
      if (value == null) {
        unsetNatCert();
      } else {
        setNatCert((String)value);
      }
      break;

    case LAND_CERT:
      if (value == null) {
        unsetLandCert();
      } else {
        setLandCert((String)value);
      }
      break;

    case TAX_CERT_URL:
      if (value == null) {
        unsetTaxCertUrl();
      } else {
        setTaxCertUrl((String)value);
      }
      break;

    case CREDIT_CODE:
      if (value == null) {
        unsetCreditCode();
      } else {
        setCreditCode((String)value);
      }
      break;

    case EXIT_CERT:
      if (value == null) {
        unsetExitCert();
      } else {
        setExitCert((String)value);
      }
      break;

    case REG_ADDR:
      if (value == null) {
        unsetRegAddr();
      } else {
        setRegAddr((String)value);
      }
      break;

    case REG_CODE:
      if (value == null) {
        unsetRegCode();
      } else {
        setRegCode((String)value);
      }
      break;

    case REG_PLAN:
      if (value == null) {
        unsetRegPlan();
      } else {
        setRegPlan((String)value);
      }
      break;

    case REG_MONEY:
      if (value == null) {
        unsetRegMoney();
      } else {
        setRegMoney((Double)value);
      }
      break;

    case REG_CURRENCY:
      if (value == null) {
        unsetRegCurrency();
      } else {
        setRegCurrency((Integer)value);
      }
      break;

    case MGE_SITE_TYPE:
      if (value == null) {
        unsetMgeSiteType();
      } else {
        setMgeSiteType((String)value);
      }
      break;

    case MGE_SITE_VALUE:
      if (value == null) {
        unsetMgeSiteValue();
      } else {
        setMgeSiteValue((Double)value);
      }
      break;

    case AREA:
      if (value == null) {
        unsetArea();
      } else {
        setArea((Double)value);
      }
      break;

    case RENT:
      if (value == null) {
        unsetRent();
      } else {
        setRent((Integer)value);
      }
      break;

    case FOUND_DATE:
      if (value == null) {
        unsetFoundDate();
      } else {
        setFoundDate((String)value);
      }
      break;

    case SHARE_RATIO:
      if (value == null) {
        unsetShareRatio();
      } else {
        setShareRatio((Double)value);
      }
      break;

    case MGE_CITY:
      if (value == null) {
        unsetMgeCity();
      } else {
        setMgeCity((String)value);
      }
      break;

    case ACT_BIZ_ADD:
      if (value == null) {
        unsetActBizAdd();
      } else {
        setActBizAdd((String)value);
      }
      break;

    case ACT_BIZ_CODE:
      if (value == null) {
        unsetActBizCode();
      } else {
        setActBizCode((String)value);
      }
      break;

    case COMM_ADDR:
      if (value == null) {
        unsetCommAddr();
      } else {
        setCommAddr((String)value);
      }
      break;

    case COMM_CODE:
      if (value == null) {
        unsetCommCode();
      } else {
        setCommCode((String)value);
      }
      break;

    case REC_PERSON:
      if (value == null) {
        unsetRecPerson();
      } else {
        setRecPerson((String)value);
      }
      break;

    case MAIL:
      if (value == null) {
        unsetMail();
      } else {
        setMail((String)value);
      }
      break;

    case CUS_LEVEL:
      if (value == null) {
        unsetCusLevel();
      } else {
        setCusLevel((Integer)value);
      }
      break;

    case CPY_URL:
      if (value == null) {
        unsetCpyUrl();
      } else {
        setCpyUrl((String)value);
      }
      break;

    case CUS_INTRO:
      if (value == null) {
        unsetCusIntro();
      } else {
        setCusIntro((String)value);
      }
      break;

    case TELEPHONE:
      if (value == null) {
        unsetTelephone();
      } else {
        setTelephone((String)value);
      }
      break;

    case FAX:
      if (value == null) {
        unsetFax();
      } else {
        setFax((String)value);
      }
      break;

    case LOAN_NO:
      if (value == null) {
        unsetLoanNo();
      } else {
        setLoanNo((String)value);
      }
      break;

    case LOAN_CARD_URL:
      if (value == null) {
        unsetLoanCardUrl();
      } else {
        setLoanCardUrl((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case COM_OWN_ID:
      if (value == null) {
        unsetComOwnId();
      } else {
        setComOwnId((Integer)value);
      }
      break;

    case COM_ALL_NATURE:
      if (value == null) {
        unsetComAllNature();
      } else {
        setComAllNature((Integer)value);
      }
      break;

    case UNIT_NATURE:
      if (value == null) {
        unsetUnitNature();
      } else {
        setUnitNature((Integer)value);
      }
      break;

    case CUS_STATUS:
      if (value == null) {
        unsetCusStatus();
      } else {
        setCusStatus((Integer)value);
      }
      break;

    case CUS_ACCT_MANAGER_NAME:
      if (value == null) {
        unsetCusAcctManagerName();
      } else {
        setCusAcctManagerName((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case ORG_CODE_CREITS:
      if (value == null) {
        unsetOrgCodeCreits();
      } else {
        setOrgCodeCreits((String)value);
      }
      break;

    case ORG_CODE_CREITS_URL:
      if (value == null) {
        unsetOrgCodeCreitsUrl();
      } else {
        setOrgCodeCreitsUrl((String)value);
      }
      break;

    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((Integer)value);
      }
      break;

    case COM_OWN_NAME:
      if (value == null) {
        unsetComOwnName();
      } else {
        setComOwnName((String)value);
      }
      break;

    case COM_OWN_PHONE:
      if (value == null) {
        unsetComOwnPhone();
      } else {
        setComOwnPhone((String)value);
      }
      break;

    case COM_OWN_CARD:
      if (value == null) {
        unsetComOwnCard();
      } else {
        setComOwnCard((String)value);
      }
      break;

    case CUS_COM_SHARES:
      if (value == null) {
        unsetCusComShares();
      } else {
        setCusComShares((List<CusComShare>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case CUS_ACCT:
      return getCusAcct();

    case CPY_NAME:
      return getCpyName();

    case CPY_ENG_NAME:
      return getCpyEngName();

    case CPY_ABBR_NAME:
      return getCpyAbbrName();

    case CPY_SCALE:
      return Integer.valueOf(getCpyScale());

    case ECO_TRADE:
      return Integer.valueOf(getEcoTrade());

    case STAFF_NUM:
      return Integer.valueOf(getStaffNum());

    case BAS_HOU_STATUS:
      return Integer.valueOf(getBasHouStatus());

    case ORG_STATUS:
      return Integer.valueOf(getOrgStatus());

    case BUS_LIC_CERT:
      return getBusLicCert();

    case BUS_LIC_CERT_URL:
      return getBusLicCertUrl();

    case ORG_CODE:
      return getOrgCode();

    case ORG_CODE_CERT_URL:
      return getOrgCodeCertUrl();

    case NAT_CERT:
      return getNatCert();

    case LAND_CERT:
      return getLandCert();

    case TAX_CERT_URL:
      return getTaxCertUrl();

    case CREDIT_CODE:
      return getCreditCode();

    case EXIT_CERT:
      return getExitCert();

    case REG_ADDR:
      return getRegAddr();

    case REG_CODE:
      return getRegCode();

    case REG_PLAN:
      return getRegPlan();

    case REG_MONEY:
      return Double.valueOf(getRegMoney());

    case REG_CURRENCY:
      return Integer.valueOf(getRegCurrency());

    case MGE_SITE_TYPE:
      return getMgeSiteType();

    case MGE_SITE_VALUE:
      return Double.valueOf(getMgeSiteValue());

    case AREA:
      return Double.valueOf(getArea());

    case RENT:
      return Integer.valueOf(getRent());

    case FOUND_DATE:
      return getFoundDate();

    case SHARE_RATIO:
      return Double.valueOf(getShareRatio());

    case MGE_CITY:
      return getMgeCity();

    case ACT_BIZ_ADD:
      return getActBizAdd();

    case ACT_BIZ_CODE:
      return getActBizCode();

    case COMM_ADDR:
      return getCommAddr();

    case COMM_CODE:
      return getCommCode();

    case REC_PERSON:
      return getRecPerson();

    case MAIL:
      return getMail();

    case CUS_LEVEL:
      return Integer.valueOf(getCusLevel());

    case CPY_URL:
      return getCpyUrl();

    case CUS_INTRO:
      return getCusIntro();

    case TELEPHONE:
      return getTelephone();

    case FAX:
      return getFax();

    case LOAN_NO:
      return getLoanNo();

    case LOAN_CARD_URL:
      return getLoanCardUrl();

    case STATUS:
      return Integer.valueOf(getStatus());

    case COM_OWN_ID:
      return Integer.valueOf(getComOwnId());

    case COM_ALL_NATURE:
      return Integer.valueOf(getComAllNature());

    case UNIT_NATURE:
      return Integer.valueOf(getUnitNature());

    case CUS_STATUS:
      return Integer.valueOf(getCusStatus());

    case CUS_ACCT_MANAGER_NAME:
      return getCusAcctManagerName();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case ORG_CODE_CREITS:
      return getOrgCodeCreits();

    case ORG_CODE_CREITS_URL:
      return getOrgCodeCreitsUrl();

    case ORG_ID:
      return Integer.valueOf(getOrgId());

    case COM_OWN_NAME:
      return getComOwnName();

    case COM_OWN_PHONE:
      return getComOwnPhone();

    case COM_OWN_CARD:
      return getComOwnCard();

    case CUS_COM_SHARES:
      return getCusComShares();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case CUS_ACCT:
      return isSetCusAcct();
    case CPY_NAME:
      return isSetCpyName();
    case CPY_ENG_NAME:
      return isSetCpyEngName();
    case CPY_ABBR_NAME:
      return isSetCpyAbbrName();
    case CPY_SCALE:
      return isSetCpyScale();
    case ECO_TRADE:
      return isSetEcoTrade();
    case STAFF_NUM:
      return isSetStaffNum();
    case BAS_HOU_STATUS:
      return isSetBasHouStatus();
    case ORG_STATUS:
      return isSetOrgStatus();
    case BUS_LIC_CERT:
      return isSetBusLicCert();
    case BUS_LIC_CERT_URL:
      return isSetBusLicCertUrl();
    case ORG_CODE:
      return isSetOrgCode();
    case ORG_CODE_CERT_URL:
      return isSetOrgCodeCertUrl();
    case NAT_CERT:
      return isSetNatCert();
    case LAND_CERT:
      return isSetLandCert();
    case TAX_CERT_URL:
      return isSetTaxCertUrl();
    case CREDIT_CODE:
      return isSetCreditCode();
    case EXIT_CERT:
      return isSetExitCert();
    case REG_ADDR:
      return isSetRegAddr();
    case REG_CODE:
      return isSetRegCode();
    case REG_PLAN:
      return isSetRegPlan();
    case REG_MONEY:
      return isSetRegMoney();
    case REG_CURRENCY:
      return isSetRegCurrency();
    case MGE_SITE_TYPE:
      return isSetMgeSiteType();
    case MGE_SITE_VALUE:
      return isSetMgeSiteValue();
    case AREA:
      return isSetArea();
    case RENT:
      return isSetRent();
    case FOUND_DATE:
      return isSetFoundDate();
    case SHARE_RATIO:
      return isSetShareRatio();
    case MGE_CITY:
      return isSetMgeCity();
    case ACT_BIZ_ADD:
      return isSetActBizAdd();
    case ACT_BIZ_CODE:
      return isSetActBizCode();
    case COMM_ADDR:
      return isSetCommAddr();
    case COMM_CODE:
      return isSetCommCode();
    case REC_PERSON:
      return isSetRecPerson();
    case MAIL:
      return isSetMail();
    case CUS_LEVEL:
      return isSetCusLevel();
    case CPY_URL:
      return isSetCpyUrl();
    case CUS_INTRO:
      return isSetCusIntro();
    case TELEPHONE:
      return isSetTelephone();
    case FAX:
      return isSetFax();
    case LOAN_NO:
      return isSetLoanNo();
    case LOAN_CARD_URL:
      return isSetLoanCardUrl();
    case STATUS:
      return isSetStatus();
    case COM_OWN_ID:
      return isSetComOwnId();
    case COM_ALL_NATURE:
      return isSetComAllNature();
    case UNIT_NATURE:
      return isSetUnitNature();
    case CUS_STATUS:
      return isSetCusStatus();
    case CUS_ACCT_MANAGER_NAME:
      return isSetCusAcctManagerName();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case USER_ID:
      return isSetUserId();
    case ORG_CODE_CREITS:
      return isSetOrgCodeCreits();
    case ORG_CODE_CREITS_URL:
      return isSetOrgCodeCreitsUrl();
    case ORG_ID:
      return isSetOrgId();
    case COM_OWN_NAME:
      return isSetComOwnName();
    case COM_OWN_PHONE:
      return isSetComOwnPhone();
    case COM_OWN_CARD:
      return isSetComOwnCard();
    case CUS_COM_SHARES:
      return isSetCusComShares();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CusComBase)
      return this.equals((CusComBase)that);
    return false;
  }

  public boolean equals(CusComBase that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_cusAcct = true && this.isSetCusAcct();
    boolean that_present_cusAcct = true && that.isSetCusAcct();
    if (this_present_cusAcct || that_present_cusAcct) {
      if (!(this_present_cusAcct && that_present_cusAcct))
        return false;
      if (!this.cusAcct.equals(that.cusAcct))
        return false;
    }

    boolean this_present_cpyName = true && this.isSetCpyName();
    boolean that_present_cpyName = true && that.isSetCpyName();
    if (this_present_cpyName || that_present_cpyName) {
      if (!(this_present_cpyName && that_present_cpyName))
        return false;
      if (!this.cpyName.equals(that.cpyName))
        return false;
    }

    boolean this_present_cpyEngName = true && this.isSetCpyEngName();
    boolean that_present_cpyEngName = true && that.isSetCpyEngName();
    if (this_present_cpyEngName || that_present_cpyEngName) {
      if (!(this_present_cpyEngName && that_present_cpyEngName))
        return false;
      if (!this.cpyEngName.equals(that.cpyEngName))
        return false;
    }

    boolean this_present_cpyAbbrName = true && this.isSetCpyAbbrName();
    boolean that_present_cpyAbbrName = true && that.isSetCpyAbbrName();
    if (this_present_cpyAbbrName || that_present_cpyAbbrName) {
      if (!(this_present_cpyAbbrName && that_present_cpyAbbrName))
        return false;
      if (!this.cpyAbbrName.equals(that.cpyAbbrName))
        return false;
    }

    boolean this_present_cpyScale = true;
    boolean that_present_cpyScale = true;
    if (this_present_cpyScale || that_present_cpyScale) {
      if (!(this_present_cpyScale && that_present_cpyScale))
        return false;
      if (this.cpyScale != that.cpyScale)
        return false;
    }

    boolean this_present_ecoTrade = true;
    boolean that_present_ecoTrade = true;
    if (this_present_ecoTrade || that_present_ecoTrade) {
      if (!(this_present_ecoTrade && that_present_ecoTrade))
        return false;
      if (this.ecoTrade != that.ecoTrade)
        return false;
    }

    boolean this_present_staffNum = true;
    boolean that_present_staffNum = true;
    if (this_present_staffNum || that_present_staffNum) {
      if (!(this_present_staffNum && that_present_staffNum))
        return false;
      if (this.staffNum != that.staffNum)
        return false;
    }

    boolean this_present_basHouStatus = true;
    boolean that_present_basHouStatus = true;
    if (this_present_basHouStatus || that_present_basHouStatus) {
      if (!(this_present_basHouStatus && that_present_basHouStatus))
        return false;
      if (this.basHouStatus != that.basHouStatus)
        return false;
    }

    boolean this_present_orgStatus = true;
    boolean that_present_orgStatus = true;
    if (this_present_orgStatus || that_present_orgStatus) {
      if (!(this_present_orgStatus && that_present_orgStatus))
        return false;
      if (this.orgStatus != that.orgStatus)
        return false;
    }

    boolean this_present_busLicCert = true && this.isSetBusLicCert();
    boolean that_present_busLicCert = true && that.isSetBusLicCert();
    if (this_present_busLicCert || that_present_busLicCert) {
      if (!(this_present_busLicCert && that_present_busLicCert))
        return false;
      if (!this.busLicCert.equals(that.busLicCert))
        return false;
    }

    boolean this_present_busLicCertUrl = true && this.isSetBusLicCertUrl();
    boolean that_present_busLicCertUrl = true && that.isSetBusLicCertUrl();
    if (this_present_busLicCertUrl || that_present_busLicCertUrl) {
      if (!(this_present_busLicCertUrl && that_present_busLicCertUrl))
        return false;
      if (!this.busLicCertUrl.equals(that.busLicCertUrl))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_orgCodeCertUrl = true && this.isSetOrgCodeCertUrl();
    boolean that_present_orgCodeCertUrl = true && that.isSetOrgCodeCertUrl();
    if (this_present_orgCodeCertUrl || that_present_orgCodeCertUrl) {
      if (!(this_present_orgCodeCertUrl && that_present_orgCodeCertUrl))
        return false;
      if (!this.orgCodeCertUrl.equals(that.orgCodeCertUrl))
        return false;
    }

    boolean this_present_natCert = true && this.isSetNatCert();
    boolean that_present_natCert = true && that.isSetNatCert();
    if (this_present_natCert || that_present_natCert) {
      if (!(this_present_natCert && that_present_natCert))
        return false;
      if (!this.natCert.equals(that.natCert))
        return false;
    }

    boolean this_present_landCert = true && this.isSetLandCert();
    boolean that_present_landCert = true && that.isSetLandCert();
    if (this_present_landCert || that_present_landCert) {
      if (!(this_present_landCert && that_present_landCert))
        return false;
      if (!this.landCert.equals(that.landCert))
        return false;
    }

    boolean this_present_taxCertUrl = true && this.isSetTaxCertUrl();
    boolean that_present_taxCertUrl = true && that.isSetTaxCertUrl();
    if (this_present_taxCertUrl || that_present_taxCertUrl) {
      if (!(this_present_taxCertUrl && that_present_taxCertUrl))
        return false;
      if (!this.taxCertUrl.equals(that.taxCertUrl))
        return false;
    }

    boolean this_present_creditCode = true && this.isSetCreditCode();
    boolean that_present_creditCode = true && that.isSetCreditCode();
    if (this_present_creditCode || that_present_creditCode) {
      if (!(this_present_creditCode && that_present_creditCode))
        return false;
      if (!this.creditCode.equals(that.creditCode))
        return false;
    }

    boolean this_present_exitCert = true && this.isSetExitCert();
    boolean that_present_exitCert = true && that.isSetExitCert();
    if (this_present_exitCert || that_present_exitCert) {
      if (!(this_present_exitCert && that_present_exitCert))
        return false;
      if (!this.exitCert.equals(that.exitCert))
        return false;
    }

    boolean this_present_regAddr = true && this.isSetRegAddr();
    boolean that_present_regAddr = true && that.isSetRegAddr();
    if (this_present_regAddr || that_present_regAddr) {
      if (!(this_present_regAddr && that_present_regAddr))
        return false;
      if (!this.regAddr.equals(that.regAddr))
        return false;
    }

    boolean this_present_regCode = true && this.isSetRegCode();
    boolean that_present_regCode = true && that.isSetRegCode();
    if (this_present_regCode || that_present_regCode) {
      if (!(this_present_regCode && that_present_regCode))
        return false;
      if (!this.regCode.equals(that.regCode))
        return false;
    }

    boolean this_present_regPlan = true && this.isSetRegPlan();
    boolean that_present_regPlan = true && that.isSetRegPlan();
    if (this_present_regPlan || that_present_regPlan) {
      if (!(this_present_regPlan && that_present_regPlan))
        return false;
      if (!this.regPlan.equals(that.regPlan))
        return false;
    }

    boolean this_present_regMoney = true;
    boolean that_present_regMoney = true;
    if (this_present_regMoney || that_present_regMoney) {
      if (!(this_present_regMoney && that_present_regMoney))
        return false;
      if (this.regMoney != that.regMoney)
        return false;
    }

    boolean this_present_regCurrency = true;
    boolean that_present_regCurrency = true;
    if (this_present_regCurrency || that_present_regCurrency) {
      if (!(this_present_regCurrency && that_present_regCurrency))
        return false;
      if (this.regCurrency != that.regCurrency)
        return false;
    }

    boolean this_present_mgeSiteType = true && this.isSetMgeSiteType();
    boolean that_present_mgeSiteType = true && that.isSetMgeSiteType();
    if (this_present_mgeSiteType || that_present_mgeSiteType) {
      if (!(this_present_mgeSiteType && that_present_mgeSiteType))
        return false;
      if (!this.mgeSiteType.equals(that.mgeSiteType))
        return false;
    }

    boolean this_present_mgeSiteValue = true;
    boolean that_present_mgeSiteValue = true;
    if (this_present_mgeSiteValue || that_present_mgeSiteValue) {
      if (!(this_present_mgeSiteValue && that_present_mgeSiteValue))
        return false;
      if (this.mgeSiteValue != that.mgeSiteValue)
        return false;
    }

    boolean this_present_area = true;
    boolean that_present_area = true;
    if (this_present_area || that_present_area) {
      if (!(this_present_area && that_present_area))
        return false;
      if (this.area != that.area)
        return false;
    }

    boolean this_present_rent = true;
    boolean that_present_rent = true;
    if (this_present_rent || that_present_rent) {
      if (!(this_present_rent && that_present_rent))
        return false;
      if (this.rent != that.rent)
        return false;
    }

    boolean this_present_foundDate = true && this.isSetFoundDate();
    boolean that_present_foundDate = true && that.isSetFoundDate();
    if (this_present_foundDate || that_present_foundDate) {
      if (!(this_present_foundDate && that_present_foundDate))
        return false;
      if (!this.foundDate.equals(that.foundDate))
        return false;
    }

    boolean this_present_shareRatio = true;
    boolean that_present_shareRatio = true;
    if (this_present_shareRatio || that_present_shareRatio) {
      if (!(this_present_shareRatio && that_present_shareRatio))
        return false;
      if (this.shareRatio != that.shareRatio)
        return false;
    }

    boolean this_present_mgeCity = true && this.isSetMgeCity();
    boolean that_present_mgeCity = true && that.isSetMgeCity();
    if (this_present_mgeCity || that_present_mgeCity) {
      if (!(this_present_mgeCity && that_present_mgeCity))
        return false;
      if (!this.mgeCity.equals(that.mgeCity))
        return false;
    }

    boolean this_present_actBizAdd = true && this.isSetActBizAdd();
    boolean that_present_actBizAdd = true && that.isSetActBizAdd();
    if (this_present_actBizAdd || that_present_actBizAdd) {
      if (!(this_present_actBizAdd && that_present_actBizAdd))
        return false;
      if (!this.actBizAdd.equals(that.actBizAdd))
        return false;
    }

    boolean this_present_actBizCode = true && this.isSetActBizCode();
    boolean that_present_actBizCode = true && that.isSetActBizCode();
    if (this_present_actBizCode || that_present_actBizCode) {
      if (!(this_present_actBizCode && that_present_actBizCode))
        return false;
      if (!this.actBizCode.equals(that.actBizCode))
        return false;
    }

    boolean this_present_commAddr = true && this.isSetCommAddr();
    boolean that_present_commAddr = true && that.isSetCommAddr();
    if (this_present_commAddr || that_present_commAddr) {
      if (!(this_present_commAddr && that_present_commAddr))
        return false;
      if (!this.commAddr.equals(that.commAddr))
        return false;
    }

    boolean this_present_commCode = true && this.isSetCommCode();
    boolean that_present_commCode = true && that.isSetCommCode();
    if (this_present_commCode || that_present_commCode) {
      if (!(this_present_commCode && that_present_commCode))
        return false;
      if (!this.commCode.equals(that.commCode))
        return false;
    }

    boolean this_present_recPerson = true && this.isSetRecPerson();
    boolean that_present_recPerson = true && that.isSetRecPerson();
    if (this_present_recPerson || that_present_recPerson) {
      if (!(this_present_recPerson && that_present_recPerson))
        return false;
      if (!this.recPerson.equals(that.recPerson))
        return false;
    }

    boolean this_present_mail = true && this.isSetMail();
    boolean that_present_mail = true && that.isSetMail();
    if (this_present_mail || that_present_mail) {
      if (!(this_present_mail && that_present_mail))
        return false;
      if (!this.mail.equals(that.mail))
        return false;
    }

    boolean this_present_cusLevel = true;
    boolean that_present_cusLevel = true;
    if (this_present_cusLevel || that_present_cusLevel) {
      if (!(this_present_cusLevel && that_present_cusLevel))
        return false;
      if (this.cusLevel != that.cusLevel)
        return false;
    }

    boolean this_present_cpyUrl = true && this.isSetCpyUrl();
    boolean that_present_cpyUrl = true && that.isSetCpyUrl();
    if (this_present_cpyUrl || that_present_cpyUrl) {
      if (!(this_present_cpyUrl && that_present_cpyUrl))
        return false;
      if (!this.cpyUrl.equals(that.cpyUrl))
        return false;
    }

    boolean this_present_cusIntro = true && this.isSetCusIntro();
    boolean that_present_cusIntro = true && that.isSetCusIntro();
    if (this_present_cusIntro || that_present_cusIntro) {
      if (!(this_present_cusIntro && that_present_cusIntro))
        return false;
      if (!this.cusIntro.equals(that.cusIntro))
        return false;
    }

    boolean this_present_telephone = true && this.isSetTelephone();
    boolean that_present_telephone = true && that.isSetTelephone();
    if (this_present_telephone || that_present_telephone) {
      if (!(this_present_telephone && that_present_telephone))
        return false;
      if (!this.telephone.equals(that.telephone))
        return false;
    }

    boolean this_present_fax = true && this.isSetFax();
    boolean that_present_fax = true && that.isSetFax();
    if (this_present_fax || that_present_fax) {
      if (!(this_present_fax && that_present_fax))
        return false;
      if (!this.fax.equals(that.fax))
        return false;
    }

    boolean this_present_loanNo = true && this.isSetLoanNo();
    boolean that_present_loanNo = true && that.isSetLoanNo();
    if (this_present_loanNo || that_present_loanNo) {
      if (!(this_present_loanNo && that_present_loanNo))
        return false;
      if (!this.loanNo.equals(that.loanNo))
        return false;
    }

    boolean this_present_loanCardUrl = true && this.isSetLoanCardUrl();
    boolean that_present_loanCardUrl = true && that.isSetLoanCardUrl();
    if (this_present_loanCardUrl || that_present_loanCardUrl) {
      if (!(this_present_loanCardUrl && that_present_loanCardUrl))
        return false;
      if (!this.loanCardUrl.equals(that.loanCardUrl))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_comOwnId = true;
    boolean that_present_comOwnId = true;
    if (this_present_comOwnId || that_present_comOwnId) {
      if (!(this_present_comOwnId && that_present_comOwnId))
        return false;
      if (this.comOwnId != that.comOwnId)
        return false;
    }

    boolean this_present_comAllNature = true;
    boolean that_present_comAllNature = true;
    if (this_present_comAllNature || that_present_comAllNature) {
      if (!(this_present_comAllNature && that_present_comAllNature))
        return false;
      if (this.comAllNature != that.comAllNature)
        return false;
    }

    boolean this_present_unitNature = true;
    boolean that_present_unitNature = true;
    if (this_present_unitNature || that_present_unitNature) {
      if (!(this_present_unitNature && that_present_unitNature))
        return false;
      if (this.unitNature != that.unitNature)
        return false;
    }

    boolean this_present_cusStatus = true;
    boolean that_present_cusStatus = true;
    if (this_present_cusStatus || that_present_cusStatus) {
      if (!(this_present_cusStatus && that_present_cusStatus))
        return false;
      if (this.cusStatus != that.cusStatus)
        return false;
    }

    boolean this_present_cusAcctManagerName = true && this.isSetCusAcctManagerName();
    boolean that_present_cusAcctManagerName = true && that.isSetCusAcctManagerName();
    if (this_present_cusAcctManagerName || that_present_cusAcctManagerName) {
      if (!(this_present_cusAcctManagerName && that_present_cusAcctManagerName))
        return false;
      if (!this.cusAcctManagerName.equals(that.cusAcctManagerName))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_orgCodeCreits = true && this.isSetOrgCodeCreits();
    boolean that_present_orgCodeCreits = true && that.isSetOrgCodeCreits();
    if (this_present_orgCodeCreits || that_present_orgCodeCreits) {
      if (!(this_present_orgCodeCreits && that_present_orgCodeCreits))
        return false;
      if (!this.orgCodeCreits.equals(that.orgCodeCreits))
        return false;
    }

    boolean this_present_orgCodeCreitsUrl = true && this.isSetOrgCodeCreitsUrl();
    boolean that_present_orgCodeCreitsUrl = true && that.isSetOrgCodeCreitsUrl();
    if (this_present_orgCodeCreitsUrl || that_present_orgCodeCreitsUrl) {
      if (!(this_present_orgCodeCreitsUrl && that_present_orgCodeCreitsUrl))
        return false;
      if (!this.orgCodeCreitsUrl.equals(that.orgCodeCreitsUrl))
        return false;
    }

    boolean this_present_orgId = true;
    boolean that_present_orgId = true;
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (this.orgId != that.orgId)
        return false;
    }

    boolean this_present_comOwnName = true && this.isSetComOwnName();
    boolean that_present_comOwnName = true && that.isSetComOwnName();
    if (this_present_comOwnName || that_present_comOwnName) {
      if (!(this_present_comOwnName && that_present_comOwnName))
        return false;
      if (!this.comOwnName.equals(that.comOwnName))
        return false;
    }

    boolean this_present_comOwnPhone = true && this.isSetComOwnPhone();
    boolean that_present_comOwnPhone = true && that.isSetComOwnPhone();
    if (this_present_comOwnPhone || that_present_comOwnPhone) {
      if (!(this_present_comOwnPhone && that_present_comOwnPhone))
        return false;
      if (!this.comOwnPhone.equals(that.comOwnPhone))
        return false;
    }

    boolean this_present_comOwnCard = true && this.isSetComOwnCard();
    boolean that_present_comOwnCard = true && that.isSetComOwnCard();
    if (this_present_comOwnCard || that_present_comOwnCard) {
      if (!(this_present_comOwnCard && that_present_comOwnCard))
        return false;
      if (!this.comOwnCard.equals(that.comOwnCard))
        return false;
    }

    boolean this_present_cusComShares = true && this.isSetCusComShares();
    boolean that_present_cusComShares = true && that.isSetCusComShares();
    if (this_present_cusComShares || that_present_cusComShares) {
      if (!(this_present_cusComShares && that_present_cusComShares))
        return false;
      if (!this.cusComShares.equals(that.cusComShares))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_cusAcct = true && (isSetCusAcct());
    list.add(present_cusAcct);
    if (present_cusAcct)
      list.add(cusAcct);

    boolean present_cpyName = true && (isSetCpyName());
    list.add(present_cpyName);
    if (present_cpyName)
      list.add(cpyName);

    boolean present_cpyEngName = true && (isSetCpyEngName());
    list.add(present_cpyEngName);
    if (present_cpyEngName)
      list.add(cpyEngName);

    boolean present_cpyAbbrName = true && (isSetCpyAbbrName());
    list.add(present_cpyAbbrName);
    if (present_cpyAbbrName)
      list.add(cpyAbbrName);

    boolean present_cpyScale = true;
    list.add(present_cpyScale);
    if (present_cpyScale)
      list.add(cpyScale);

    boolean present_ecoTrade = true;
    list.add(present_ecoTrade);
    if (present_ecoTrade)
      list.add(ecoTrade);

    boolean present_staffNum = true;
    list.add(present_staffNum);
    if (present_staffNum)
      list.add(staffNum);

    boolean present_basHouStatus = true;
    list.add(present_basHouStatus);
    if (present_basHouStatus)
      list.add(basHouStatus);

    boolean present_orgStatus = true;
    list.add(present_orgStatus);
    if (present_orgStatus)
      list.add(orgStatus);

    boolean present_busLicCert = true && (isSetBusLicCert());
    list.add(present_busLicCert);
    if (present_busLicCert)
      list.add(busLicCert);

    boolean present_busLicCertUrl = true && (isSetBusLicCertUrl());
    list.add(present_busLicCertUrl);
    if (present_busLicCertUrl)
      list.add(busLicCertUrl);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_orgCodeCertUrl = true && (isSetOrgCodeCertUrl());
    list.add(present_orgCodeCertUrl);
    if (present_orgCodeCertUrl)
      list.add(orgCodeCertUrl);

    boolean present_natCert = true && (isSetNatCert());
    list.add(present_natCert);
    if (present_natCert)
      list.add(natCert);

    boolean present_landCert = true && (isSetLandCert());
    list.add(present_landCert);
    if (present_landCert)
      list.add(landCert);

    boolean present_taxCertUrl = true && (isSetTaxCertUrl());
    list.add(present_taxCertUrl);
    if (present_taxCertUrl)
      list.add(taxCertUrl);

    boolean present_creditCode = true && (isSetCreditCode());
    list.add(present_creditCode);
    if (present_creditCode)
      list.add(creditCode);

    boolean present_exitCert = true && (isSetExitCert());
    list.add(present_exitCert);
    if (present_exitCert)
      list.add(exitCert);

    boolean present_regAddr = true && (isSetRegAddr());
    list.add(present_regAddr);
    if (present_regAddr)
      list.add(regAddr);

    boolean present_regCode = true && (isSetRegCode());
    list.add(present_regCode);
    if (present_regCode)
      list.add(regCode);

    boolean present_regPlan = true && (isSetRegPlan());
    list.add(present_regPlan);
    if (present_regPlan)
      list.add(regPlan);

    boolean present_regMoney = true;
    list.add(present_regMoney);
    if (present_regMoney)
      list.add(regMoney);

    boolean present_regCurrency = true;
    list.add(present_regCurrency);
    if (present_regCurrency)
      list.add(regCurrency);

    boolean present_mgeSiteType = true && (isSetMgeSiteType());
    list.add(present_mgeSiteType);
    if (present_mgeSiteType)
      list.add(mgeSiteType);

    boolean present_mgeSiteValue = true;
    list.add(present_mgeSiteValue);
    if (present_mgeSiteValue)
      list.add(mgeSiteValue);

    boolean present_area = true;
    list.add(present_area);
    if (present_area)
      list.add(area);

    boolean present_rent = true;
    list.add(present_rent);
    if (present_rent)
      list.add(rent);

    boolean present_foundDate = true && (isSetFoundDate());
    list.add(present_foundDate);
    if (present_foundDate)
      list.add(foundDate);

    boolean present_shareRatio = true;
    list.add(present_shareRatio);
    if (present_shareRatio)
      list.add(shareRatio);

    boolean present_mgeCity = true && (isSetMgeCity());
    list.add(present_mgeCity);
    if (present_mgeCity)
      list.add(mgeCity);

    boolean present_actBizAdd = true && (isSetActBizAdd());
    list.add(present_actBizAdd);
    if (present_actBizAdd)
      list.add(actBizAdd);

    boolean present_actBizCode = true && (isSetActBizCode());
    list.add(present_actBizCode);
    if (present_actBizCode)
      list.add(actBizCode);

    boolean present_commAddr = true && (isSetCommAddr());
    list.add(present_commAddr);
    if (present_commAddr)
      list.add(commAddr);

    boolean present_commCode = true && (isSetCommCode());
    list.add(present_commCode);
    if (present_commCode)
      list.add(commCode);

    boolean present_recPerson = true && (isSetRecPerson());
    list.add(present_recPerson);
    if (present_recPerson)
      list.add(recPerson);

    boolean present_mail = true && (isSetMail());
    list.add(present_mail);
    if (present_mail)
      list.add(mail);

    boolean present_cusLevel = true;
    list.add(present_cusLevel);
    if (present_cusLevel)
      list.add(cusLevel);

    boolean present_cpyUrl = true && (isSetCpyUrl());
    list.add(present_cpyUrl);
    if (present_cpyUrl)
      list.add(cpyUrl);

    boolean present_cusIntro = true && (isSetCusIntro());
    list.add(present_cusIntro);
    if (present_cusIntro)
      list.add(cusIntro);

    boolean present_telephone = true && (isSetTelephone());
    list.add(present_telephone);
    if (present_telephone)
      list.add(telephone);

    boolean present_fax = true && (isSetFax());
    list.add(present_fax);
    if (present_fax)
      list.add(fax);

    boolean present_loanNo = true && (isSetLoanNo());
    list.add(present_loanNo);
    if (present_loanNo)
      list.add(loanNo);

    boolean present_loanCardUrl = true && (isSetLoanCardUrl());
    list.add(present_loanCardUrl);
    if (present_loanCardUrl)
      list.add(loanCardUrl);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_comOwnId = true;
    list.add(present_comOwnId);
    if (present_comOwnId)
      list.add(comOwnId);

    boolean present_comAllNature = true;
    list.add(present_comAllNature);
    if (present_comAllNature)
      list.add(comAllNature);

    boolean present_unitNature = true;
    list.add(present_unitNature);
    if (present_unitNature)
      list.add(unitNature);

    boolean present_cusStatus = true;
    list.add(present_cusStatus);
    if (present_cusStatus)
      list.add(cusStatus);

    boolean present_cusAcctManagerName = true && (isSetCusAcctManagerName());
    list.add(present_cusAcctManagerName);
    if (present_cusAcctManagerName)
      list.add(cusAcctManagerName);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_userId = true;
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    boolean present_orgCodeCreits = true && (isSetOrgCodeCreits());
    list.add(present_orgCodeCreits);
    if (present_orgCodeCreits)
      list.add(orgCodeCreits);

    boolean present_orgCodeCreitsUrl = true && (isSetOrgCodeCreitsUrl());
    list.add(present_orgCodeCreitsUrl);
    if (present_orgCodeCreitsUrl)
      list.add(orgCodeCreitsUrl);

    boolean present_orgId = true;
    list.add(present_orgId);
    if (present_orgId)
      list.add(orgId);

    boolean present_comOwnName = true && (isSetComOwnName());
    list.add(present_comOwnName);
    if (present_comOwnName)
      list.add(comOwnName);

    boolean present_comOwnPhone = true && (isSetComOwnPhone());
    list.add(present_comOwnPhone);
    if (present_comOwnPhone)
      list.add(comOwnPhone);

    boolean present_comOwnCard = true && (isSetComOwnCard());
    list.add(present_comOwnCard);
    if (present_comOwnCard)
      list.add(comOwnCard);

    boolean present_cusComShares = true && (isSetCusComShares());
    list.add(present_cusComShares);
    if (present_cusComShares)
      list.add(cusComShares);

    return list.hashCode();
  }

  @Override
  public int compareTo(CusComBase other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusAcct()).compareTo(other.isSetCusAcct());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusAcct()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusAcct, other.cusAcct);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpyName()).compareTo(other.isSetCpyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpyName, other.cpyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpyEngName()).compareTo(other.isSetCpyEngName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpyEngName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpyEngName, other.cpyEngName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpyAbbrName()).compareTo(other.isSetCpyAbbrName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpyAbbrName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpyAbbrName, other.cpyAbbrName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpyScale()).compareTo(other.isSetCpyScale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpyScale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpyScale, other.cpyScale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEcoTrade()).compareTo(other.isSetEcoTrade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEcoTrade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ecoTrade, other.ecoTrade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStaffNum()).compareTo(other.isSetStaffNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStaffNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staffNum, other.staffNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBasHouStatus()).compareTo(other.isSetBasHouStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBasHouStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.basHouStatus, other.basHouStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgStatus()).compareTo(other.isSetOrgStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgStatus, other.orgStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusLicCert()).compareTo(other.isSetBusLicCert());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusLicCert()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busLicCert, other.busLicCert);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusLicCertUrl()).compareTo(other.isSetBusLicCertUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusLicCertUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busLicCertUrl, other.busLicCertUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCodeCertUrl()).compareTo(other.isSetOrgCodeCertUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCodeCertUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCodeCertUrl, other.orgCodeCertUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNatCert()).compareTo(other.isSetNatCert());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNatCert()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.natCert, other.natCert);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLandCert()).compareTo(other.isSetLandCert());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLandCert()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.landCert, other.landCert);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTaxCertUrl()).compareTo(other.isSetTaxCertUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaxCertUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taxCertUrl, other.taxCertUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditCode()).compareTo(other.isSetCreditCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditCode, other.creditCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExitCert()).compareTo(other.isSetExitCert());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExitCert()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exitCert, other.exitCert);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegAddr()).compareTo(other.isSetRegAddr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegAddr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regAddr, other.regAddr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegCode()).compareTo(other.isSetRegCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regCode, other.regCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegPlan()).compareTo(other.isSetRegPlan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegPlan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regPlan, other.regPlan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegMoney()).compareTo(other.isSetRegMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regMoney, other.regMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegCurrency()).compareTo(other.isSetRegCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegCurrency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regCurrency, other.regCurrency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMgeSiteType()).compareTo(other.isSetMgeSiteType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMgeSiteType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mgeSiteType, other.mgeSiteType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMgeSiteValue()).compareTo(other.isSetMgeSiteValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMgeSiteValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mgeSiteValue, other.mgeSiteValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetArea()).compareTo(other.isSetArea());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetArea()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.area, other.area);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRent()).compareTo(other.isSetRent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rent, other.rent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFoundDate()).compareTo(other.isSetFoundDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFoundDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.foundDate, other.foundDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShareRatio()).compareTo(other.isSetShareRatio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShareRatio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shareRatio, other.shareRatio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMgeCity()).compareTo(other.isSetMgeCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMgeCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mgeCity, other.mgeCity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActBizAdd()).compareTo(other.isSetActBizAdd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActBizAdd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actBizAdd, other.actBizAdd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActBizCode()).compareTo(other.isSetActBizCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActBizCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actBizCode, other.actBizCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommAddr()).compareTo(other.isSetCommAddr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommAddr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commAddr, other.commAddr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommCode()).compareTo(other.isSetCommCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commCode, other.commCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecPerson()).compareTo(other.isSetRecPerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecPerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recPerson, other.recPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMail()).compareTo(other.isSetMail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mail, other.mail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusLevel()).compareTo(other.isSetCusLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusLevel, other.cusLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpyUrl()).compareTo(other.isSetCpyUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpyUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpyUrl, other.cpyUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusIntro()).compareTo(other.isSetCusIntro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusIntro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusIntro, other.cusIntro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelephone()).compareTo(other.isSetTelephone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelephone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telephone, other.telephone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFax()).compareTo(other.isSetFax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fax, other.fax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanNo()).compareTo(other.isSetLoanNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanNo, other.loanNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanCardUrl()).compareTo(other.isSetLoanCardUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanCardUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanCardUrl, other.loanCardUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComOwnId()).compareTo(other.isSetComOwnId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComOwnId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comOwnId, other.comOwnId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComAllNature()).compareTo(other.isSetComAllNature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComAllNature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comAllNature, other.comAllNature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnitNature()).compareTo(other.isSetUnitNature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnitNature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unitNature, other.unitNature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusStatus()).compareTo(other.isSetCusStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusStatus, other.cusStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusAcctManagerName()).compareTo(other.isSetCusAcctManagerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusAcctManagerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusAcctManagerName, other.cusAcctManagerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCodeCreits()).compareTo(other.isSetOrgCodeCreits());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCodeCreits()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCodeCreits, other.orgCodeCreits);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCodeCreitsUrl()).compareTo(other.isSetOrgCodeCreitsUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCodeCreitsUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCodeCreitsUrl, other.orgCodeCreitsUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComOwnName()).compareTo(other.isSetComOwnName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComOwnName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comOwnName, other.comOwnName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComOwnPhone()).compareTo(other.isSetComOwnPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComOwnPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comOwnPhone, other.comOwnPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComOwnCard()).compareTo(other.isSetComOwnCard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComOwnCard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comOwnCard, other.comOwnCard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusComShares()).compareTo(other.isSetCusComShares());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusComShares()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusComShares, other.cusComShares);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CusComBase(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusAcct:");
    if (this.cusAcct == null) {
      sb.append("null");
    } else {
      sb.append(this.cusAcct);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpyName:");
    if (this.cpyName == null) {
      sb.append("null");
    } else {
      sb.append(this.cpyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpyEngName:");
    if (this.cpyEngName == null) {
      sb.append("null");
    } else {
      sb.append(this.cpyEngName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpyAbbrName:");
    if (this.cpyAbbrName == null) {
      sb.append("null");
    } else {
      sb.append(this.cpyAbbrName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpyScale:");
    sb.append(this.cpyScale);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ecoTrade:");
    sb.append(this.ecoTrade);
    first = false;
    if (!first) sb.append(", ");
    sb.append("staffNum:");
    sb.append(this.staffNum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("basHouStatus:");
    sb.append(this.basHouStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgStatus:");
    sb.append(this.orgStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("busLicCert:");
    if (this.busLicCert == null) {
      sb.append("null");
    } else {
      sb.append(this.busLicCert);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("busLicCertUrl:");
    if (this.busLicCertUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.busLicCertUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCodeCertUrl:");
    if (this.orgCodeCertUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCodeCertUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("natCert:");
    if (this.natCert == null) {
      sb.append("null");
    } else {
      sb.append(this.natCert);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("landCert:");
    if (this.landCert == null) {
      sb.append("null");
    } else {
      sb.append(this.landCert);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("taxCertUrl:");
    if (this.taxCertUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.taxCertUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditCode:");
    if (this.creditCode == null) {
      sb.append("null");
    } else {
      sb.append(this.creditCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("exitCert:");
    if (this.exitCert == null) {
      sb.append("null");
    } else {
      sb.append(this.exitCert);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regAddr:");
    if (this.regAddr == null) {
      sb.append("null");
    } else {
      sb.append(this.regAddr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regCode:");
    if (this.regCode == null) {
      sb.append("null");
    } else {
      sb.append(this.regCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regPlan:");
    if (this.regPlan == null) {
      sb.append("null");
    } else {
      sb.append(this.regPlan);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regMoney:");
    sb.append(this.regMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("regCurrency:");
    sb.append(this.regCurrency);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mgeSiteType:");
    if (this.mgeSiteType == null) {
      sb.append("null");
    } else {
      sb.append(this.mgeSiteType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mgeSiteValue:");
    sb.append(this.mgeSiteValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("area:");
    sb.append(this.area);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rent:");
    sb.append(this.rent);
    first = false;
    if (!first) sb.append(", ");
    sb.append("foundDate:");
    if (this.foundDate == null) {
      sb.append("null");
    } else {
      sb.append(this.foundDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shareRatio:");
    sb.append(this.shareRatio);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mgeCity:");
    if (this.mgeCity == null) {
      sb.append("null");
    } else {
      sb.append(this.mgeCity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("actBizAdd:");
    if (this.actBizAdd == null) {
      sb.append("null");
    } else {
      sb.append(this.actBizAdd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("actBizCode:");
    if (this.actBizCode == null) {
      sb.append("null");
    } else {
      sb.append(this.actBizCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("commAddr:");
    if (this.commAddr == null) {
      sb.append("null");
    } else {
      sb.append(this.commAddr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("commCode:");
    if (this.commCode == null) {
      sb.append("null");
    } else {
      sb.append(this.commCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recPerson:");
    if (this.recPerson == null) {
      sb.append("null");
    } else {
      sb.append(this.recPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mail:");
    if (this.mail == null) {
      sb.append("null");
    } else {
      sb.append(this.mail);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusLevel:");
    sb.append(this.cusLevel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpyUrl:");
    if (this.cpyUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.cpyUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusIntro:");
    if (this.cusIntro == null) {
      sb.append("null");
    } else {
      sb.append(this.cusIntro);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("telephone:");
    if (this.telephone == null) {
      sb.append("null");
    } else {
      sb.append(this.telephone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fax:");
    if (this.fax == null) {
      sb.append("null");
    } else {
      sb.append(this.fax);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanNo:");
    if (this.loanNo == null) {
      sb.append("null");
    } else {
      sb.append(this.loanNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanCardUrl:");
    if (this.loanCardUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.loanCardUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("comOwnId:");
    sb.append(this.comOwnId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("comAllNature:");
    sb.append(this.comAllNature);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unitNature:");
    sb.append(this.unitNature);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusStatus:");
    sb.append(this.cusStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusAcctManagerName:");
    if (this.cusAcctManagerName == null) {
      sb.append("null");
    } else {
      sb.append(this.cusAcctManagerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCodeCreits:");
    if (this.orgCodeCreits == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCodeCreits);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCodeCreitsUrl:");
    if (this.orgCodeCreitsUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCodeCreitsUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgId:");
    sb.append(this.orgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("comOwnName:");
    if (this.comOwnName == null) {
      sb.append("null");
    } else {
      sb.append(this.comOwnName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("comOwnPhone:");
    if (this.comOwnPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.comOwnPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("comOwnCard:");
    if (this.comOwnCard == null) {
      sb.append("null");
    } else {
      sb.append(this.comOwnCard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusComShares:");
    if (this.cusComShares == null) {
      sb.append("null");
    } else {
      sb.append(this.cusComShares);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (cusAcct != null) {
      cusAcct.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CusComBaseStandardSchemeFactory implements SchemeFactory {
    public CusComBaseStandardScheme getScheme() {
      return new CusComBaseStandardScheme();
    }
  }

  private static class CusComBaseStandardScheme extends StandardScheme<CusComBase> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CusComBase struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CUS_ACCT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.cusAcct = new CusAcct();
              struct.cusAcct.read(iprot);
              struct.setCusAcctIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CPY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpyName = iprot.readString();
              struct.setCpyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CPY_ENG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpyEngName = iprot.readString();
              struct.setCpyEngNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CPY_ABBR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpyAbbrName = iprot.readString();
              struct.setCpyAbbrNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CPY_SCALE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cpyScale = iprot.readI32();
              struct.setCpyScaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ECO_TRADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ecoTrade = iprot.readI32();
              struct.setEcoTradeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STAFF_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.staffNum = iprot.readI32();
              struct.setStaffNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BAS_HOU_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.basHouStatus = iprot.readI32();
              struct.setBasHouStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ORG_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgStatus = iprot.readI32();
              struct.setOrgStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // BUS_LIC_CERT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.busLicCert = iprot.readString();
              struct.setBusLicCertIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BUS_LIC_CERT_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.busLicCertUrl = iprot.readString();
              struct.setBusLicCertUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ORG_CODE_CERT_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCodeCertUrl = iprot.readString();
              struct.setOrgCodeCertUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // NAT_CERT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.natCert = iprot.readString();
              struct.setNatCertIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // LAND_CERT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.landCert = iprot.readString();
              struct.setLandCertIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // TAX_CERT_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.taxCertUrl = iprot.readString();
              struct.setTaxCertUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CREDIT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.creditCode = iprot.readString();
              struct.setCreditCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // EXIT_CERT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.exitCert = iprot.readString();
              struct.setExitCertIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // REG_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regAddr = iprot.readString();
              struct.setRegAddrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // REG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regCode = iprot.readString();
              struct.setRegCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // REG_PLAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regPlan = iprot.readString();
              struct.setRegPlanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // REG_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.regMoney = iprot.readDouble();
              struct.setRegMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // REG_CURRENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.regCurrency = iprot.readI32();
              struct.setRegCurrencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // MGE_SITE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mgeSiteType = iprot.readString();
              struct.setMgeSiteTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // MGE_SITE_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.mgeSiteValue = iprot.readDouble();
              struct.setMgeSiteValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // AREA
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.area = iprot.readDouble();
              struct.setAreaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // RENT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rent = iprot.readI32();
              struct.setRentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // FOUND_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.foundDate = iprot.readString();
              struct.setFoundDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // SHARE_RATIO
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.shareRatio = iprot.readDouble();
              struct.setShareRatioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // MGE_CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mgeCity = iprot.readString();
              struct.setMgeCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // ACT_BIZ_ADD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.actBizAdd = iprot.readString();
              struct.setActBizAddIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // ACT_BIZ_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.actBizCode = iprot.readString();
              struct.setActBizCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // COMM_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commAddr = iprot.readString();
              struct.setCommAddrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // COMM_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commCode = iprot.readString();
              struct.setCommCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // REC_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recPerson = iprot.readString();
              struct.setRecPersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // MAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mail = iprot.readString();
              struct.setMailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // CUS_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cusLevel = iprot.readI32();
              struct.setCusLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // CPY_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpyUrl = iprot.readString();
              struct.setCpyUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // CUS_INTRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cusIntro = iprot.readString();
              struct.setCusIntroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // TELEPHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telephone = iprot.readString();
              struct.setTelephoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // FAX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fax = iprot.readString();
              struct.setFaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // LOAN_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanNo = iprot.readString();
              struct.setLoanNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // LOAN_CARD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanCardUrl = iprot.readString();
              struct.setLoanCardUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // COM_OWN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.comOwnId = iprot.readI32();
              struct.setComOwnIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // COM_ALL_NATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.comAllNature = iprot.readI32();
              struct.setComAllNatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // UNIT_NATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.unitNature = iprot.readI32();
              struct.setUnitNatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // CUS_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cusStatus = iprot.readI32();
              struct.setCusStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // CUS_ACCT_MANAGER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cusAcctManagerName = iprot.readString();
              struct.setCusAcctManagerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 54: // ORG_CODE_CREITS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCodeCreits = iprot.readString();
              struct.setOrgCodeCreitsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 55: // ORG_CODE_CREITS_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCodeCreitsUrl = iprot.readString();
              struct.setOrgCodeCreitsUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 56: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orgId = iprot.readI32();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 57: // COM_OWN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.comOwnName = iprot.readString();
              struct.setComOwnNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 58: // COM_OWN_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.comOwnPhone = iprot.readString();
              struct.setComOwnPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 59: // COM_OWN_CARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.comOwnCard = iprot.readString();
              struct.setComOwnCardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 60: // CUS_COM_SHARES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.cusComShares = new ArrayList<CusComShare>(_list16.size);
                CusComShare _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new CusComShare();
                  _elem17.read(iprot);
                  struct.cusComShares.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setCusComSharesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CusComBase struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.cusAcct != null) {
        oprot.writeFieldBegin(CUS_ACCT_FIELD_DESC);
        struct.cusAcct.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.cpyName != null) {
        oprot.writeFieldBegin(CPY_NAME_FIELD_DESC);
        oprot.writeString(struct.cpyName);
        oprot.writeFieldEnd();
      }
      if (struct.cpyEngName != null) {
        oprot.writeFieldBegin(CPY_ENG_NAME_FIELD_DESC);
        oprot.writeString(struct.cpyEngName);
        oprot.writeFieldEnd();
      }
      if (struct.cpyAbbrName != null) {
        oprot.writeFieldBegin(CPY_ABBR_NAME_FIELD_DESC);
        oprot.writeString(struct.cpyAbbrName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CPY_SCALE_FIELD_DESC);
      oprot.writeI32(struct.cpyScale);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ECO_TRADE_FIELD_DESC);
      oprot.writeI32(struct.ecoTrade);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STAFF_NUM_FIELD_DESC);
      oprot.writeI32(struct.staffNum);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BAS_HOU_STATUS_FIELD_DESC);
      oprot.writeI32(struct.basHouStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORG_STATUS_FIELD_DESC);
      oprot.writeI32(struct.orgStatus);
      oprot.writeFieldEnd();
      if (struct.busLicCert != null) {
        oprot.writeFieldBegin(BUS_LIC_CERT_FIELD_DESC);
        oprot.writeString(struct.busLicCert);
        oprot.writeFieldEnd();
      }
      if (struct.busLicCertUrl != null) {
        oprot.writeFieldBegin(BUS_LIC_CERT_URL_FIELD_DESC);
        oprot.writeString(struct.busLicCertUrl);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      if (struct.orgCodeCertUrl != null) {
        oprot.writeFieldBegin(ORG_CODE_CERT_URL_FIELD_DESC);
        oprot.writeString(struct.orgCodeCertUrl);
        oprot.writeFieldEnd();
      }
      if (struct.natCert != null) {
        oprot.writeFieldBegin(NAT_CERT_FIELD_DESC);
        oprot.writeString(struct.natCert);
        oprot.writeFieldEnd();
      }
      if (struct.landCert != null) {
        oprot.writeFieldBegin(LAND_CERT_FIELD_DESC);
        oprot.writeString(struct.landCert);
        oprot.writeFieldEnd();
      }
      if (struct.taxCertUrl != null) {
        oprot.writeFieldBegin(TAX_CERT_URL_FIELD_DESC);
        oprot.writeString(struct.taxCertUrl);
        oprot.writeFieldEnd();
      }
      if (struct.creditCode != null) {
        oprot.writeFieldBegin(CREDIT_CODE_FIELD_DESC);
        oprot.writeString(struct.creditCode);
        oprot.writeFieldEnd();
      }
      if (struct.exitCert != null) {
        oprot.writeFieldBegin(EXIT_CERT_FIELD_DESC);
        oprot.writeString(struct.exitCert);
        oprot.writeFieldEnd();
      }
      if (struct.regAddr != null) {
        oprot.writeFieldBegin(REG_ADDR_FIELD_DESC);
        oprot.writeString(struct.regAddr);
        oprot.writeFieldEnd();
      }
      if (struct.regCode != null) {
        oprot.writeFieldBegin(REG_CODE_FIELD_DESC);
        oprot.writeString(struct.regCode);
        oprot.writeFieldEnd();
      }
      if (struct.regPlan != null) {
        oprot.writeFieldBegin(REG_PLAN_FIELD_DESC);
        oprot.writeString(struct.regPlan);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REG_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.regMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REG_CURRENCY_FIELD_DESC);
      oprot.writeI32(struct.regCurrency);
      oprot.writeFieldEnd();
      if (struct.mgeSiteType != null) {
        oprot.writeFieldBegin(MGE_SITE_TYPE_FIELD_DESC);
        oprot.writeString(struct.mgeSiteType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MGE_SITE_VALUE_FIELD_DESC);
      oprot.writeDouble(struct.mgeSiteValue);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AREA_FIELD_DESC);
      oprot.writeDouble(struct.area);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RENT_FIELD_DESC);
      oprot.writeI32(struct.rent);
      oprot.writeFieldEnd();
      if (struct.foundDate != null) {
        oprot.writeFieldBegin(FOUND_DATE_FIELD_DESC);
        oprot.writeString(struct.foundDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHARE_RATIO_FIELD_DESC);
      oprot.writeDouble(struct.shareRatio);
      oprot.writeFieldEnd();
      if (struct.mgeCity != null) {
        oprot.writeFieldBegin(MGE_CITY_FIELD_DESC);
        oprot.writeString(struct.mgeCity);
        oprot.writeFieldEnd();
      }
      if (struct.actBizAdd != null) {
        oprot.writeFieldBegin(ACT_BIZ_ADD_FIELD_DESC);
        oprot.writeString(struct.actBizAdd);
        oprot.writeFieldEnd();
      }
      if (struct.actBizCode != null) {
        oprot.writeFieldBegin(ACT_BIZ_CODE_FIELD_DESC);
        oprot.writeString(struct.actBizCode);
        oprot.writeFieldEnd();
      }
      if (struct.commAddr != null) {
        oprot.writeFieldBegin(COMM_ADDR_FIELD_DESC);
        oprot.writeString(struct.commAddr);
        oprot.writeFieldEnd();
      }
      if (struct.commCode != null) {
        oprot.writeFieldBegin(COMM_CODE_FIELD_DESC);
        oprot.writeString(struct.commCode);
        oprot.writeFieldEnd();
      }
      if (struct.recPerson != null) {
        oprot.writeFieldBegin(REC_PERSON_FIELD_DESC);
        oprot.writeString(struct.recPerson);
        oprot.writeFieldEnd();
      }
      if (struct.mail != null) {
        oprot.writeFieldBegin(MAIL_FIELD_DESC);
        oprot.writeString(struct.mail);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUS_LEVEL_FIELD_DESC);
      oprot.writeI32(struct.cusLevel);
      oprot.writeFieldEnd();
      if (struct.cpyUrl != null) {
        oprot.writeFieldBegin(CPY_URL_FIELD_DESC);
        oprot.writeString(struct.cpyUrl);
        oprot.writeFieldEnd();
      }
      if (struct.cusIntro != null) {
        oprot.writeFieldBegin(CUS_INTRO_FIELD_DESC);
        oprot.writeString(struct.cusIntro);
        oprot.writeFieldEnd();
      }
      if (struct.telephone != null) {
        oprot.writeFieldBegin(TELEPHONE_FIELD_DESC);
        oprot.writeString(struct.telephone);
        oprot.writeFieldEnd();
      }
      if (struct.fax != null) {
        oprot.writeFieldBegin(FAX_FIELD_DESC);
        oprot.writeString(struct.fax);
        oprot.writeFieldEnd();
      }
      if (struct.loanNo != null) {
        oprot.writeFieldBegin(LOAN_NO_FIELD_DESC);
        oprot.writeString(struct.loanNo);
        oprot.writeFieldEnd();
      }
      if (struct.loanCardUrl != null) {
        oprot.writeFieldBegin(LOAN_CARD_URL_FIELD_DESC);
        oprot.writeString(struct.loanCardUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COM_OWN_ID_FIELD_DESC);
      oprot.writeI32(struct.comOwnId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COM_ALL_NATURE_FIELD_DESC);
      oprot.writeI32(struct.comAllNature);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UNIT_NATURE_FIELD_DESC);
      oprot.writeI32(struct.unitNature);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUS_STATUS_FIELD_DESC);
      oprot.writeI32(struct.cusStatus);
      oprot.writeFieldEnd();
      if (struct.cusAcctManagerName != null) {
        oprot.writeFieldBegin(CUS_ACCT_MANAGER_NAME_FIELD_DESC);
        oprot.writeString(struct.cusAcctManagerName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      if (struct.orgCodeCreits != null) {
        oprot.writeFieldBegin(ORG_CODE_CREITS_FIELD_DESC);
        oprot.writeString(struct.orgCodeCreits);
        oprot.writeFieldEnd();
      }
      if (struct.orgCodeCreitsUrl != null) {
        oprot.writeFieldBegin(ORG_CODE_CREITS_URL_FIELD_DESC);
        oprot.writeString(struct.orgCodeCreitsUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
      oprot.writeI32(struct.orgId);
      oprot.writeFieldEnd();
      if (struct.comOwnName != null) {
        oprot.writeFieldBegin(COM_OWN_NAME_FIELD_DESC);
        oprot.writeString(struct.comOwnName);
        oprot.writeFieldEnd();
      }
      if (struct.comOwnPhone != null) {
        oprot.writeFieldBegin(COM_OWN_PHONE_FIELD_DESC);
        oprot.writeString(struct.comOwnPhone);
        oprot.writeFieldEnd();
      }
      if (struct.comOwnCard != null) {
        oprot.writeFieldBegin(COM_OWN_CARD_FIELD_DESC);
        oprot.writeString(struct.comOwnCard);
        oprot.writeFieldEnd();
      }
      if (struct.cusComShares != null) {
        oprot.writeFieldBegin(CUS_COM_SHARES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.cusComShares.size()));
          for (CusComShare _iter19 : struct.cusComShares)
          {
            _iter19.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CusComBaseTupleSchemeFactory implements SchemeFactory {
    public CusComBaseTupleScheme getScheme() {
      return new CusComBaseTupleScheme();
    }
  }

  private static class CusComBaseTupleScheme extends TupleScheme<CusComBase> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CusComBase struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetCusAcct()) {
        optionals.set(1);
      }
      if (struct.isSetCpyName()) {
        optionals.set(2);
      }
      if (struct.isSetCpyEngName()) {
        optionals.set(3);
      }
      if (struct.isSetCpyAbbrName()) {
        optionals.set(4);
      }
      if (struct.isSetCpyScale()) {
        optionals.set(5);
      }
      if (struct.isSetEcoTrade()) {
        optionals.set(6);
      }
      if (struct.isSetStaffNum()) {
        optionals.set(7);
      }
      if (struct.isSetBasHouStatus()) {
        optionals.set(8);
      }
      if (struct.isSetOrgStatus()) {
        optionals.set(9);
      }
      if (struct.isSetBusLicCert()) {
        optionals.set(10);
      }
      if (struct.isSetBusLicCertUrl()) {
        optionals.set(11);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(12);
      }
      if (struct.isSetOrgCodeCertUrl()) {
        optionals.set(13);
      }
      if (struct.isSetNatCert()) {
        optionals.set(14);
      }
      if (struct.isSetLandCert()) {
        optionals.set(15);
      }
      if (struct.isSetTaxCertUrl()) {
        optionals.set(16);
      }
      if (struct.isSetCreditCode()) {
        optionals.set(17);
      }
      if (struct.isSetExitCert()) {
        optionals.set(18);
      }
      if (struct.isSetRegAddr()) {
        optionals.set(19);
      }
      if (struct.isSetRegCode()) {
        optionals.set(20);
      }
      if (struct.isSetRegPlan()) {
        optionals.set(21);
      }
      if (struct.isSetRegMoney()) {
        optionals.set(22);
      }
      if (struct.isSetRegCurrency()) {
        optionals.set(23);
      }
      if (struct.isSetMgeSiteType()) {
        optionals.set(24);
      }
      if (struct.isSetMgeSiteValue()) {
        optionals.set(25);
      }
      if (struct.isSetArea()) {
        optionals.set(26);
      }
      if (struct.isSetRent()) {
        optionals.set(27);
      }
      if (struct.isSetFoundDate()) {
        optionals.set(28);
      }
      if (struct.isSetShareRatio()) {
        optionals.set(29);
      }
      if (struct.isSetMgeCity()) {
        optionals.set(30);
      }
      if (struct.isSetActBizAdd()) {
        optionals.set(31);
      }
      if (struct.isSetActBizCode()) {
        optionals.set(32);
      }
      if (struct.isSetCommAddr()) {
        optionals.set(33);
      }
      if (struct.isSetCommCode()) {
        optionals.set(34);
      }
      if (struct.isSetRecPerson()) {
        optionals.set(35);
      }
      if (struct.isSetMail()) {
        optionals.set(36);
      }
      if (struct.isSetCusLevel()) {
        optionals.set(37);
      }
      if (struct.isSetCpyUrl()) {
        optionals.set(38);
      }
      if (struct.isSetCusIntro()) {
        optionals.set(39);
      }
      if (struct.isSetTelephone()) {
        optionals.set(40);
      }
      if (struct.isSetFax()) {
        optionals.set(41);
      }
      if (struct.isSetLoanNo()) {
        optionals.set(42);
      }
      if (struct.isSetLoanCardUrl()) {
        optionals.set(43);
      }
      if (struct.isSetStatus()) {
        optionals.set(44);
      }
      if (struct.isSetComOwnId()) {
        optionals.set(45);
      }
      if (struct.isSetComAllNature()) {
        optionals.set(46);
      }
      if (struct.isSetUnitNature()) {
        optionals.set(47);
      }
      if (struct.isSetCusStatus()) {
        optionals.set(48);
      }
      if (struct.isSetCusAcctManagerName()) {
        optionals.set(49);
      }
      if (struct.isSetPage()) {
        optionals.set(50);
      }
      if (struct.isSetRows()) {
        optionals.set(51);
      }
      if (struct.isSetUserId()) {
        optionals.set(52);
      }
      if (struct.isSetOrgCodeCreits()) {
        optionals.set(53);
      }
      if (struct.isSetOrgCodeCreitsUrl()) {
        optionals.set(54);
      }
      if (struct.isSetOrgId()) {
        optionals.set(55);
      }
      if (struct.isSetComOwnName()) {
        optionals.set(56);
      }
      if (struct.isSetComOwnPhone()) {
        optionals.set(57);
      }
      if (struct.isSetComOwnCard()) {
        optionals.set(58);
      }
      if (struct.isSetCusComShares()) {
        optionals.set(59);
      }
      oprot.writeBitSet(optionals, 60);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetCusAcct()) {
        struct.cusAcct.write(oprot);
      }
      if (struct.isSetCpyName()) {
        oprot.writeString(struct.cpyName);
      }
      if (struct.isSetCpyEngName()) {
        oprot.writeString(struct.cpyEngName);
      }
      if (struct.isSetCpyAbbrName()) {
        oprot.writeString(struct.cpyAbbrName);
      }
      if (struct.isSetCpyScale()) {
        oprot.writeI32(struct.cpyScale);
      }
      if (struct.isSetEcoTrade()) {
        oprot.writeI32(struct.ecoTrade);
      }
      if (struct.isSetStaffNum()) {
        oprot.writeI32(struct.staffNum);
      }
      if (struct.isSetBasHouStatus()) {
        oprot.writeI32(struct.basHouStatus);
      }
      if (struct.isSetOrgStatus()) {
        oprot.writeI32(struct.orgStatus);
      }
      if (struct.isSetBusLicCert()) {
        oprot.writeString(struct.busLicCert);
      }
      if (struct.isSetBusLicCertUrl()) {
        oprot.writeString(struct.busLicCertUrl);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetOrgCodeCertUrl()) {
        oprot.writeString(struct.orgCodeCertUrl);
      }
      if (struct.isSetNatCert()) {
        oprot.writeString(struct.natCert);
      }
      if (struct.isSetLandCert()) {
        oprot.writeString(struct.landCert);
      }
      if (struct.isSetTaxCertUrl()) {
        oprot.writeString(struct.taxCertUrl);
      }
      if (struct.isSetCreditCode()) {
        oprot.writeString(struct.creditCode);
      }
      if (struct.isSetExitCert()) {
        oprot.writeString(struct.exitCert);
      }
      if (struct.isSetRegAddr()) {
        oprot.writeString(struct.regAddr);
      }
      if (struct.isSetRegCode()) {
        oprot.writeString(struct.regCode);
      }
      if (struct.isSetRegPlan()) {
        oprot.writeString(struct.regPlan);
      }
      if (struct.isSetRegMoney()) {
        oprot.writeDouble(struct.regMoney);
      }
      if (struct.isSetRegCurrency()) {
        oprot.writeI32(struct.regCurrency);
      }
      if (struct.isSetMgeSiteType()) {
        oprot.writeString(struct.mgeSiteType);
      }
      if (struct.isSetMgeSiteValue()) {
        oprot.writeDouble(struct.mgeSiteValue);
      }
      if (struct.isSetArea()) {
        oprot.writeDouble(struct.area);
      }
      if (struct.isSetRent()) {
        oprot.writeI32(struct.rent);
      }
      if (struct.isSetFoundDate()) {
        oprot.writeString(struct.foundDate);
      }
      if (struct.isSetShareRatio()) {
        oprot.writeDouble(struct.shareRatio);
      }
      if (struct.isSetMgeCity()) {
        oprot.writeString(struct.mgeCity);
      }
      if (struct.isSetActBizAdd()) {
        oprot.writeString(struct.actBizAdd);
      }
      if (struct.isSetActBizCode()) {
        oprot.writeString(struct.actBizCode);
      }
      if (struct.isSetCommAddr()) {
        oprot.writeString(struct.commAddr);
      }
      if (struct.isSetCommCode()) {
        oprot.writeString(struct.commCode);
      }
      if (struct.isSetRecPerson()) {
        oprot.writeString(struct.recPerson);
      }
      if (struct.isSetMail()) {
        oprot.writeString(struct.mail);
      }
      if (struct.isSetCusLevel()) {
        oprot.writeI32(struct.cusLevel);
      }
      if (struct.isSetCpyUrl()) {
        oprot.writeString(struct.cpyUrl);
      }
      if (struct.isSetCusIntro()) {
        oprot.writeString(struct.cusIntro);
      }
      if (struct.isSetTelephone()) {
        oprot.writeString(struct.telephone);
      }
      if (struct.isSetFax()) {
        oprot.writeString(struct.fax);
      }
      if (struct.isSetLoanNo()) {
        oprot.writeString(struct.loanNo);
      }
      if (struct.isSetLoanCardUrl()) {
        oprot.writeString(struct.loanCardUrl);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetComOwnId()) {
        oprot.writeI32(struct.comOwnId);
      }
      if (struct.isSetComAllNature()) {
        oprot.writeI32(struct.comAllNature);
      }
      if (struct.isSetUnitNature()) {
        oprot.writeI32(struct.unitNature);
      }
      if (struct.isSetCusStatus()) {
        oprot.writeI32(struct.cusStatus);
      }
      if (struct.isSetCusAcctManagerName()) {
        oprot.writeString(struct.cusAcctManagerName);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetOrgCodeCreits()) {
        oprot.writeString(struct.orgCodeCreits);
      }
      if (struct.isSetOrgCodeCreitsUrl()) {
        oprot.writeString(struct.orgCodeCreitsUrl);
      }
      if (struct.isSetOrgId()) {
        oprot.writeI32(struct.orgId);
      }
      if (struct.isSetComOwnName()) {
        oprot.writeString(struct.comOwnName);
      }
      if (struct.isSetComOwnPhone()) {
        oprot.writeString(struct.comOwnPhone);
      }
      if (struct.isSetComOwnCard()) {
        oprot.writeString(struct.comOwnCard);
      }
      if (struct.isSetCusComShares()) {
        {
          oprot.writeI32(struct.cusComShares.size());
          for (CusComShare _iter20 : struct.cusComShares)
          {
            _iter20.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CusComBase struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(60);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cusAcct = new CusAcct();
        struct.cusAcct.read(iprot);
        struct.setCusAcctIsSet(true);
      }
      if (incoming.get(2)) {
        struct.cpyName = iprot.readString();
        struct.setCpyNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cpyEngName = iprot.readString();
        struct.setCpyEngNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cpyAbbrName = iprot.readString();
        struct.setCpyAbbrNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.cpyScale = iprot.readI32();
        struct.setCpyScaleIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ecoTrade = iprot.readI32();
        struct.setEcoTradeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.staffNum = iprot.readI32();
        struct.setStaffNumIsSet(true);
      }
      if (incoming.get(8)) {
        struct.basHouStatus = iprot.readI32();
        struct.setBasHouStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.orgStatus = iprot.readI32();
        struct.setOrgStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.busLicCert = iprot.readString();
        struct.setBusLicCertIsSet(true);
      }
      if (incoming.get(11)) {
        struct.busLicCertUrl = iprot.readString();
        struct.setBusLicCertUrlIsSet(true);
      }
      if (incoming.get(12)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.orgCodeCertUrl = iprot.readString();
        struct.setOrgCodeCertUrlIsSet(true);
      }
      if (incoming.get(14)) {
        struct.natCert = iprot.readString();
        struct.setNatCertIsSet(true);
      }
      if (incoming.get(15)) {
        struct.landCert = iprot.readString();
        struct.setLandCertIsSet(true);
      }
      if (incoming.get(16)) {
        struct.taxCertUrl = iprot.readString();
        struct.setTaxCertUrlIsSet(true);
      }
      if (incoming.get(17)) {
        struct.creditCode = iprot.readString();
        struct.setCreditCodeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.exitCert = iprot.readString();
        struct.setExitCertIsSet(true);
      }
      if (incoming.get(19)) {
        struct.regAddr = iprot.readString();
        struct.setRegAddrIsSet(true);
      }
      if (incoming.get(20)) {
        struct.regCode = iprot.readString();
        struct.setRegCodeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.regPlan = iprot.readString();
        struct.setRegPlanIsSet(true);
      }
      if (incoming.get(22)) {
        struct.regMoney = iprot.readDouble();
        struct.setRegMoneyIsSet(true);
      }
      if (incoming.get(23)) {
        struct.regCurrency = iprot.readI32();
        struct.setRegCurrencyIsSet(true);
      }
      if (incoming.get(24)) {
        struct.mgeSiteType = iprot.readString();
        struct.setMgeSiteTypeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.mgeSiteValue = iprot.readDouble();
        struct.setMgeSiteValueIsSet(true);
      }
      if (incoming.get(26)) {
        struct.area = iprot.readDouble();
        struct.setAreaIsSet(true);
      }
      if (incoming.get(27)) {
        struct.rent = iprot.readI32();
        struct.setRentIsSet(true);
      }
      if (incoming.get(28)) {
        struct.foundDate = iprot.readString();
        struct.setFoundDateIsSet(true);
      }
      if (incoming.get(29)) {
        struct.shareRatio = iprot.readDouble();
        struct.setShareRatioIsSet(true);
      }
      if (incoming.get(30)) {
        struct.mgeCity = iprot.readString();
        struct.setMgeCityIsSet(true);
      }
      if (incoming.get(31)) {
        struct.actBizAdd = iprot.readString();
        struct.setActBizAddIsSet(true);
      }
      if (incoming.get(32)) {
        struct.actBizCode = iprot.readString();
        struct.setActBizCodeIsSet(true);
      }
      if (incoming.get(33)) {
        struct.commAddr = iprot.readString();
        struct.setCommAddrIsSet(true);
      }
      if (incoming.get(34)) {
        struct.commCode = iprot.readString();
        struct.setCommCodeIsSet(true);
      }
      if (incoming.get(35)) {
        struct.recPerson = iprot.readString();
        struct.setRecPersonIsSet(true);
      }
      if (incoming.get(36)) {
        struct.mail = iprot.readString();
        struct.setMailIsSet(true);
      }
      if (incoming.get(37)) {
        struct.cusLevel = iprot.readI32();
        struct.setCusLevelIsSet(true);
      }
      if (incoming.get(38)) {
        struct.cpyUrl = iprot.readString();
        struct.setCpyUrlIsSet(true);
      }
      if (incoming.get(39)) {
        struct.cusIntro = iprot.readString();
        struct.setCusIntroIsSet(true);
      }
      if (incoming.get(40)) {
        struct.telephone = iprot.readString();
        struct.setTelephoneIsSet(true);
      }
      if (incoming.get(41)) {
        struct.fax = iprot.readString();
        struct.setFaxIsSet(true);
      }
      if (incoming.get(42)) {
        struct.loanNo = iprot.readString();
        struct.setLoanNoIsSet(true);
      }
      if (incoming.get(43)) {
        struct.loanCardUrl = iprot.readString();
        struct.setLoanCardUrlIsSet(true);
      }
      if (incoming.get(44)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(45)) {
        struct.comOwnId = iprot.readI32();
        struct.setComOwnIdIsSet(true);
      }
      if (incoming.get(46)) {
        struct.comAllNature = iprot.readI32();
        struct.setComAllNatureIsSet(true);
      }
      if (incoming.get(47)) {
        struct.unitNature = iprot.readI32();
        struct.setUnitNatureIsSet(true);
      }
      if (incoming.get(48)) {
        struct.cusStatus = iprot.readI32();
        struct.setCusStatusIsSet(true);
      }
      if (incoming.get(49)) {
        struct.cusAcctManagerName = iprot.readString();
        struct.setCusAcctManagerNameIsSet(true);
      }
      if (incoming.get(50)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(51)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(52)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(53)) {
        struct.orgCodeCreits = iprot.readString();
        struct.setOrgCodeCreitsIsSet(true);
      }
      if (incoming.get(54)) {
        struct.orgCodeCreitsUrl = iprot.readString();
        struct.setOrgCodeCreitsUrlIsSet(true);
      }
      if (incoming.get(55)) {
        struct.orgId = iprot.readI32();
        struct.setOrgIdIsSet(true);
      }
      if (incoming.get(56)) {
        struct.comOwnName = iprot.readString();
        struct.setComOwnNameIsSet(true);
      }
      if (incoming.get(57)) {
        struct.comOwnPhone = iprot.readString();
        struct.setComOwnPhoneIsSet(true);
      }
      if (incoming.get(58)) {
        struct.comOwnCard = iprot.readString();
        struct.setComOwnCardIsSet(true);
      }
      if (incoming.get(59)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.cusComShares = new ArrayList<CusComShare>(_list21.size);
          CusComShare _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new CusComShare();
            _elem22.read(iprot);
            struct.cusComShares.add(_elem22);
          }
        }
        struct.setCusComSharesIsSet(true);
      }
    }
  }

}

