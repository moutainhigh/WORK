/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.fddafterloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-21")
public class BizProjectMortgageIndexPage implements org.apache.thrift.TBase<BizProjectMortgageIndexPage, BizProjectMortgageIndexPage._Fields>, java.io.Serializable, Cloneable, Comparable<BizProjectMortgageIndexPage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizProjectMortgageIndexPage");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MORTGAGE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("mortgageStatus", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REPAYMENT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("repaymentStatus", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField FINISH_REPAYMENT_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("finishRepaymentDate", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField FINISH_REPAYMENT_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("finishRepaymentEndDate", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizProjectMortgageIndexPageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizProjectMortgageIndexPageTupleSchemeFactory());
  }

  public int projectId; // required
  public int mortgageStatus; // required
  public String projectNumber; // required
  public String projectName; // required
  public int repaymentStatus; // required
  public String finishRepaymentDate; // required
  public String finishRepaymentEndDate; // required
  public int pid; // required
  public int pmUserId; // required
  public List<Integer> userIds; // required
  public int page; // required
  public int rows; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    MORTGAGE_STATUS((short)2, "mortgageStatus"),
    PROJECT_NUMBER((short)3, "projectNumber"),
    PROJECT_NAME((short)4, "projectName"),
    REPAYMENT_STATUS((short)5, "repaymentStatus"),
    FINISH_REPAYMENT_DATE((short)6, "finishRepaymentDate"),
    FINISH_REPAYMENT_END_DATE((short)7, "finishRepaymentEndDate"),
    PID((short)8, "pid"),
    PM_USER_ID((short)9, "pmUserId"),
    USER_IDS((short)10, "userIds"),
    PAGE((short)11, "page"),
    ROWS((short)12, "rows");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // MORTGAGE_STATUS
          return MORTGAGE_STATUS;
        case 3: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 4: // PROJECT_NAME
          return PROJECT_NAME;
        case 5: // REPAYMENT_STATUS
          return REPAYMENT_STATUS;
        case 6: // FINISH_REPAYMENT_DATE
          return FINISH_REPAYMENT_DATE;
        case 7: // FINISH_REPAYMENT_END_DATE
          return FINISH_REPAYMENT_END_DATE;
        case 8: // PID
          return PID;
        case 9: // PM_USER_ID
          return PM_USER_ID;
        case 10: // USER_IDS
          return USER_IDS;
        case 11: // PAGE
          return PAGE;
        case 12: // ROWS
          return ROWS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __MORTGAGESTATUS_ISSET_ID = 1;
  private static final int __REPAYMENTSTATUS_ISSET_ID = 2;
  private static final int __PID_ISSET_ID = 3;
  private static final int __PMUSERID_ISSET_ID = 4;
  private static final int __PAGE_ISSET_ID = 5;
  private static final int __ROWS_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MORTGAGE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("mortgageStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REPAYMENT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("repaymentStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FINISH_REPAYMENT_DATE, new org.apache.thrift.meta_data.FieldMetaData("finishRepaymentDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FINISH_REPAYMENT_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("finishRepaymentEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("pmUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizProjectMortgageIndexPage.class, metaDataMap);
  }

  public BizProjectMortgageIndexPage() {
    this.page = 1;

    this.rows = 10;

  }

  public BizProjectMortgageIndexPage(
    int projectId,
    int mortgageStatus,
    String projectNumber,
    String projectName,
    int repaymentStatus,
    String finishRepaymentDate,
    String finishRepaymentEndDate,
    int pid,
    int pmUserId,
    List<Integer> userIds,
    int page,
    int rows)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.mortgageStatus = mortgageStatus;
    setMortgageStatusIsSet(true);
    this.projectNumber = projectNumber;
    this.projectName = projectName;
    this.repaymentStatus = repaymentStatus;
    setRepaymentStatusIsSet(true);
    this.finishRepaymentDate = finishRepaymentDate;
    this.finishRepaymentEndDate = finishRepaymentEndDate;
    this.pid = pid;
    setPidIsSet(true);
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    this.userIds = userIds;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizProjectMortgageIndexPage(BizProjectMortgageIndexPage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    this.mortgageStatus = other.mortgageStatus;
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.repaymentStatus = other.repaymentStatus;
    if (other.isSetFinishRepaymentDate()) {
      this.finishRepaymentDate = other.finishRepaymentDate;
    }
    if (other.isSetFinishRepaymentEndDate()) {
      this.finishRepaymentEndDate = other.finishRepaymentEndDate;
    }
    this.pid = other.pid;
    this.pmUserId = other.pmUserId;
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
    this.page = other.page;
    this.rows = other.rows;
  }

  public BizProjectMortgageIndexPage deepCopy() {
    return new BizProjectMortgageIndexPage(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    setMortgageStatusIsSet(false);
    this.mortgageStatus = 0;
    this.projectNumber = null;
    this.projectName = null;
    setRepaymentStatusIsSet(false);
    this.repaymentStatus = 0;
    this.finishRepaymentDate = null;
    this.finishRepaymentEndDate = null;
    setPidIsSet(false);
    this.pid = 0;
    setPmUserIdIsSet(false);
    this.pmUserId = 0;
    this.userIds = null;
    this.page = 1;

    this.rows = 10;

  }

  public int getProjectId() {
    return this.projectId;
  }

  public BizProjectMortgageIndexPage setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public int getMortgageStatus() {
    return this.mortgageStatus;
  }

  public BizProjectMortgageIndexPage setMortgageStatus(int mortgageStatus) {
    this.mortgageStatus = mortgageStatus;
    setMortgageStatusIsSet(true);
    return this;
  }

  public void unsetMortgageStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MORTGAGESTATUS_ISSET_ID);
  }

  /** Returns true if field mortgageStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMortgageStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __MORTGAGESTATUS_ISSET_ID);
  }

  public void setMortgageStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MORTGAGESTATUS_ISSET_ID, value);
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public BizProjectMortgageIndexPage setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getProjectName() {
    return this.projectName;
  }

  public BizProjectMortgageIndexPage setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getRepaymentStatus() {
    return this.repaymentStatus;
  }

  public BizProjectMortgageIndexPage setRepaymentStatus(int repaymentStatus) {
    this.repaymentStatus = repaymentStatus;
    setRepaymentStatusIsSet(true);
    return this;
  }

  public void unsetRepaymentStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REPAYMENTSTATUS_ISSET_ID);
  }

  /** Returns true if field repaymentStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRepaymentStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REPAYMENTSTATUS_ISSET_ID);
  }

  public void setRepaymentStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REPAYMENTSTATUS_ISSET_ID, value);
  }

  public String getFinishRepaymentDate() {
    return this.finishRepaymentDate;
  }

  public BizProjectMortgageIndexPage setFinishRepaymentDate(String finishRepaymentDate) {
    this.finishRepaymentDate = finishRepaymentDate;
    return this;
  }

  public void unsetFinishRepaymentDate() {
    this.finishRepaymentDate = null;
  }

  /** Returns true if field finishRepaymentDate is set (has been assigned a value) and false otherwise */
  public boolean isSetFinishRepaymentDate() {
    return this.finishRepaymentDate != null;
  }

  public void setFinishRepaymentDateIsSet(boolean value) {
    if (!value) {
      this.finishRepaymentDate = null;
    }
  }

  public String getFinishRepaymentEndDate() {
    return this.finishRepaymentEndDate;
  }

  public BizProjectMortgageIndexPage setFinishRepaymentEndDate(String finishRepaymentEndDate) {
    this.finishRepaymentEndDate = finishRepaymentEndDate;
    return this;
  }

  public void unsetFinishRepaymentEndDate() {
    this.finishRepaymentEndDate = null;
  }

  /** Returns true if field finishRepaymentEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetFinishRepaymentEndDate() {
    return this.finishRepaymentEndDate != null;
  }

  public void setFinishRepaymentEndDateIsSet(boolean value) {
    if (!value) {
      this.finishRepaymentEndDate = null;
    }
  }

  public int getPid() {
    return this.pid;
  }

  public BizProjectMortgageIndexPage setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getPmUserId() {
    return this.pmUserId;
  }

  public BizProjectMortgageIndexPage setPmUserId(int pmUserId) {
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    return this;
  }

  public void unsetPmUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  /** Returns true if field pmUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  public void setPmUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PMUSERID_ISSET_ID, value);
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public BizProjectMortgageIndexPage setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public BizProjectMortgageIndexPage setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public BizProjectMortgageIndexPage setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case MORTGAGE_STATUS:
      if (value == null) {
        unsetMortgageStatus();
      } else {
        setMortgageStatus((Integer)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case REPAYMENT_STATUS:
      if (value == null) {
        unsetRepaymentStatus();
      } else {
        setRepaymentStatus((Integer)value);
      }
      break;

    case FINISH_REPAYMENT_DATE:
      if (value == null) {
        unsetFinishRepaymentDate();
      } else {
        setFinishRepaymentDate((String)value);
      }
      break;

    case FINISH_REPAYMENT_END_DATE:
      if (value == null) {
        unsetFinishRepaymentEndDate();
      } else {
        setFinishRepaymentEndDate((String)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case PM_USER_ID:
      if (value == null) {
        unsetPmUserId();
      } else {
        setPmUserId((Integer)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case MORTGAGE_STATUS:
      return Integer.valueOf(getMortgageStatus());

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PROJECT_NAME:
      return getProjectName();

    case REPAYMENT_STATUS:
      return Integer.valueOf(getRepaymentStatus());

    case FINISH_REPAYMENT_DATE:
      return getFinishRepaymentDate();

    case FINISH_REPAYMENT_END_DATE:
      return getFinishRepaymentEndDate();

    case PID:
      return Integer.valueOf(getPid());

    case PM_USER_ID:
      return Integer.valueOf(getPmUserId());

    case USER_IDS:
      return getUserIds();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case MORTGAGE_STATUS:
      return isSetMortgageStatus();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PROJECT_NAME:
      return isSetProjectName();
    case REPAYMENT_STATUS:
      return isSetRepaymentStatus();
    case FINISH_REPAYMENT_DATE:
      return isSetFinishRepaymentDate();
    case FINISH_REPAYMENT_END_DATE:
      return isSetFinishRepaymentEndDate();
    case PID:
      return isSetPid();
    case PM_USER_ID:
      return isSetPmUserId();
    case USER_IDS:
      return isSetUserIds();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizProjectMortgageIndexPage)
      return this.equals((BizProjectMortgageIndexPage)that);
    return false;
  }

  public boolean equals(BizProjectMortgageIndexPage that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_mortgageStatus = true;
    boolean that_present_mortgageStatus = true;
    if (this_present_mortgageStatus || that_present_mortgageStatus) {
      if (!(this_present_mortgageStatus && that_present_mortgageStatus))
        return false;
      if (this.mortgageStatus != that.mortgageStatus)
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_repaymentStatus = true;
    boolean that_present_repaymentStatus = true;
    if (this_present_repaymentStatus || that_present_repaymentStatus) {
      if (!(this_present_repaymentStatus && that_present_repaymentStatus))
        return false;
      if (this.repaymentStatus != that.repaymentStatus)
        return false;
    }

    boolean this_present_finishRepaymentDate = true && this.isSetFinishRepaymentDate();
    boolean that_present_finishRepaymentDate = true && that.isSetFinishRepaymentDate();
    if (this_present_finishRepaymentDate || that_present_finishRepaymentDate) {
      if (!(this_present_finishRepaymentDate && that_present_finishRepaymentDate))
        return false;
      if (!this.finishRepaymentDate.equals(that.finishRepaymentDate))
        return false;
    }

    boolean this_present_finishRepaymentEndDate = true && this.isSetFinishRepaymentEndDate();
    boolean that_present_finishRepaymentEndDate = true && that.isSetFinishRepaymentEndDate();
    if (this_present_finishRepaymentEndDate || that_present_finishRepaymentEndDate) {
      if (!(this_present_finishRepaymentEndDate && that_present_finishRepaymentEndDate))
        return false;
      if (!this.finishRepaymentEndDate.equals(that.finishRepaymentEndDate))
        return false;
    }

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_pmUserId = true;
    boolean that_present_pmUserId = true;
    if (this_present_pmUserId || that_present_pmUserId) {
      if (!(this_present_pmUserId && that_present_pmUserId))
        return false;
      if (this.pmUserId != that.pmUserId)
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_mortgageStatus = true;
    list.add(present_mortgageStatus);
    if (present_mortgageStatus)
      list.add(mortgageStatus);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_repaymentStatus = true;
    list.add(present_repaymentStatus);
    if (present_repaymentStatus)
      list.add(repaymentStatus);

    boolean present_finishRepaymentDate = true && (isSetFinishRepaymentDate());
    list.add(present_finishRepaymentDate);
    if (present_finishRepaymentDate)
      list.add(finishRepaymentDate);

    boolean present_finishRepaymentEndDate = true && (isSetFinishRepaymentEndDate());
    list.add(present_finishRepaymentEndDate);
    if (present_finishRepaymentEndDate)
      list.add(finishRepaymentEndDate);

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_pmUserId = true;
    list.add(present_pmUserId);
    if (present_pmUserId)
      list.add(pmUserId);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizProjectMortgageIndexPage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMortgageStatus()).compareTo(other.isSetMortgageStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMortgageStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mortgageStatus, other.mortgageStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRepaymentStatus()).compareTo(other.isSetRepaymentStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRepaymentStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.repaymentStatus, other.repaymentStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFinishRepaymentDate()).compareTo(other.isSetFinishRepaymentDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinishRepaymentDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finishRepaymentDate, other.finishRepaymentDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFinishRepaymentEndDate()).compareTo(other.isSetFinishRepaymentEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinishRepaymentEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finishRepaymentEndDate, other.finishRepaymentEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserId()).compareTo(other.isSetPmUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserId, other.pmUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizProjectMortgageIndexPage(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mortgageStatus:");
    sb.append(this.mortgageStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("repaymentStatus:");
    sb.append(this.repaymentStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("finishRepaymentDate:");
    if (this.finishRepaymentDate == null) {
      sb.append("null");
    } else {
      sb.append(this.finishRepaymentDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("finishRepaymentEndDate:");
    if (this.finishRepaymentEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.finishRepaymentEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserId:");
    sb.append(this.pmUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizProjectMortgageIndexPageStandardSchemeFactory implements SchemeFactory {
    public BizProjectMortgageIndexPageStandardScheme getScheme() {
      return new BizProjectMortgageIndexPageStandardScheme();
    }
  }

  private static class BizProjectMortgageIndexPageStandardScheme extends StandardScheme<BizProjectMortgageIndexPage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizProjectMortgageIndexPage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MORTGAGE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.mortgageStatus = iprot.readI32();
              struct.setMortgageStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REPAYMENT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.repaymentStatus = iprot.readI32();
              struct.setRepaymentStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FINISH_REPAYMENT_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.finishRepaymentDate = iprot.readString();
              struct.setFinishRepaymentDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FINISH_REPAYMENT_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.finishRepaymentEndDate = iprot.readString();
              struct.setFinishRepaymentEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pmUserId = iprot.readI32();
              struct.setPmUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list0.size);
                int _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI32();
                  struct.userIds.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizProjectMortgageIndexPage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MORTGAGE_STATUS_FIELD_DESC);
      oprot.writeI32(struct.mortgageStatus);
      oprot.writeFieldEnd();
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REPAYMENT_STATUS_FIELD_DESC);
      oprot.writeI32(struct.repaymentStatus);
      oprot.writeFieldEnd();
      if (struct.finishRepaymentDate != null) {
        oprot.writeFieldBegin(FINISH_REPAYMENT_DATE_FIELD_DESC);
        oprot.writeString(struct.finishRepaymentDate);
        oprot.writeFieldEnd();
      }
      if (struct.finishRepaymentEndDate != null) {
        oprot.writeFieldBegin(FINISH_REPAYMENT_END_DATE_FIELD_DESC);
        oprot.writeString(struct.finishRepaymentEndDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PM_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.pmUserId);
      oprot.writeFieldEnd();
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter3 : struct.userIds)
          {
            oprot.writeI32(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizProjectMortgageIndexPageTupleSchemeFactory implements SchemeFactory {
    public BizProjectMortgageIndexPageTupleScheme getScheme() {
      return new BizProjectMortgageIndexPageTupleScheme();
    }
  }

  private static class BizProjectMortgageIndexPageTupleScheme extends TupleScheme<BizProjectMortgageIndexPage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizProjectMortgageIndexPage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetMortgageStatus()) {
        optionals.set(1);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(2);
      }
      if (struct.isSetProjectName()) {
        optionals.set(3);
      }
      if (struct.isSetRepaymentStatus()) {
        optionals.set(4);
      }
      if (struct.isSetFinishRepaymentDate()) {
        optionals.set(5);
      }
      if (struct.isSetFinishRepaymentEndDate()) {
        optionals.set(6);
      }
      if (struct.isSetPid()) {
        optionals.set(7);
      }
      if (struct.isSetPmUserId()) {
        optionals.set(8);
      }
      if (struct.isSetUserIds()) {
        optionals.set(9);
      }
      if (struct.isSetPage()) {
        optionals.set(10);
      }
      if (struct.isSetRows()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetMortgageStatus()) {
        oprot.writeI32(struct.mortgageStatus);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetRepaymentStatus()) {
        oprot.writeI32(struct.repaymentStatus);
      }
      if (struct.isSetFinishRepaymentDate()) {
        oprot.writeString(struct.finishRepaymentDate);
      }
      if (struct.isSetFinishRepaymentEndDate()) {
        oprot.writeString(struct.finishRepaymentEndDate);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetPmUserId()) {
        oprot.writeI32(struct.pmUserId);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter4 : struct.userIds)
          {
            oprot.writeI32(_iter4);
          }
        }
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizProjectMortgageIndexPage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.mortgageStatus = iprot.readI32();
        struct.setMortgageStatusIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.repaymentStatus = iprot.readI32();
        struct.setRepaymentStatusIsSet(true);
      }
      if (incoming.get(5)) {
        struct.finishRepaymentDate = iprot.readString();
        struct.setFinishRepaymentDateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.finishRepaymentEndDate = iprot.readString();
        struct.setFinishRepaymentEndDateIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(8)) {
        struct.pmUserId = iprot.readI32();
        struct.setPmUserIdIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list5.size);
          int _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readI32();
            struct.userIds.add(_elem6);
          }
        }
        struct.setUserIdsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(11)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
    }
  }

}

