/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.beforeloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-21")
public class BizMortgageEvaluation implements org.apache.thrift.TBase<BizMortgageEvaluation, BizMortgageEvaluation._Fields>, java.io.Serializable, Cloneable, Comparable<BizMortgageEvaluation> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizMortgageEvaluation");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ESTATE_FIELD_DESC = new org.apache.thrift.protocol.TField("estate", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField EVALUATION_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("evaluationPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField EVALUATION_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("evaluationSource", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EVALUATION_PROPORTION_FIELD_DESC = new org.apache.thrift.protocol.TField("evaluationProportion", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CREATER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createrId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("updateId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField UPDATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateDate", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField EVALUATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("evaluations", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField SHOULD_SPOT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("shouldSpotTime", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizMortgageEvaluationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizMortgageEvaluationTupleSchemeFactory());
  }

  public int pid; // required
  public int estate; // required
  public double evaluationPrice; // required
  public String evaluationSource; // required
  public double evaluationProportion; // required
  public String createDate; // required
  public int createrId; // required
  public int updateId; // required
  public String updateDate; // required
  public int projectId; // required
  public List<BizMortgageEvaluation> evaluations; // required
  public String shouldSpotTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    ESTATE((short)2, "estate"),
    EVALUATION_PRICE((short)3, "evaluationPrice"),
    EVALUATION_SOURCE((short)4, "evaluationSource"),
    EVALUATION_PROPORTION((short)5, "evaluationProportion"),
    CREATE_DATE((short)6, "createDate"),
    CREATER_ID((short)7, "createrId"),
    UPDATE_ID((short)8, "updateId"),
    UPDATE_DATE((short)9, "updateDate"),
    PROJECT_ID((short)10, "projectId"),
    EVALUATIONS((short)11, "evaluations"),
    SHOULD_SPOT_TIME((short)12, "shouldSpotTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // ESTATE
          return ESTATE;
        case 3: // EVALUATION_PRICE
          return EVALUATION_PRICE;
        case 4: // EVALUATION_SOURCE
          return EVALUATION_SOURCE;
        case 5: // EVALUATION_PROPORTION
          return EVALUATION_PROPORTION;
        case 6: // CREATE_DATE
          return CREATE_DATE;
        case 7: // CREATER_ID
          return CREATER_ID;
        case 8: // UPDATE_ID
          return UPDATE_ID;
        case 9: // UPDATE_DATE
          return UPDATE_DATE;
        case 10: // PROJECT_ID
          return PROJECT_ID;
        case 11: // EVALUATIONS
          return EVALUATIONS;
        case 12: // SHOULD_SPOT_TIME
          return SHOULD_SPOT_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ESTATE_ISSET_ID = 1;
  private static final int __EVALUATIONPRICE_ISSET_ID = 2;
  private static final int __EVALUATIONPROPORTION_ISSET_ID = 3;
  private static final int __CREATERID_ISSET_ID = 4;
  private static final int __UPDATEID_ISSET_ID = 5;
  private static final int __PROJECTID_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ESTATE, new org.apache.thrift.meta_data.FieldMetaData("estate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EVALUATION_PRICE, new org.apache.thrift.meta_data.FieldMetaData("evaluationPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EVALUATION_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("evaluationSource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EVALUATION_PROPORTION, new org.apache.thrift.meta_data.FieldMetaData("evaluationProportion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATER_ID, new org.apache.thrift.meta_data.FieldMetaData("createrId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_ID, new org.apache.thrift.meta_data.FieldMetaData("updateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("updateDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EVALUATIONS, new org.apache.thrift.meta_data.FieldMetaData("evaluations", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "BizMortgageEvaluation"))));
    tmpMap.put(_Fields.SHOULD_SPOT_TIME, new org.apache.thrift.meta_data.FieldMetaData("shouldSpotTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizMortgageEvaluation.class, metaDataMap);
  }

  public BizMortgageEvaluation() {
  }

  public BizMortgageEvaluation(
    int pid,
    int estate,
    double evaluationPrice,
    String evaluationSource,
    double evaluationProportion,
    String createDate,
    int createrId,
    int updateId,
    String updateDate,
    int projectId,
    List<BizMortgageEvaluation> evaluations,
    String shouldSpotTime)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.estate = estate;
    setEstateIsSet(true);
    this.evaluationPrice = evaluationPrice;
    setEvaluationPriceIsSet(true);
    this.evaluationSource = evaluationSource;
    this.evaluationProportion = evaluationProportion;
    setEvaluationProportionIsSet(true);
    this.createDate = createDate;
    this.createrId = createrId;
    setCreaterIdIsSet(true);
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    this.updateDate = updateDate;
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.evaluations = evaluations;
    this.shouldSpotTime = shouldSpotTime;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizMortgageEvaluation(BizMortgageEvaluation other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    this.estate = other.estate;
    this.evaluationPrice = other.evaluationPrice;
    if (other.isSetEvaluationSource()) {
      this.evaluationSource = other.evaluationSource;
    }
    this.evaluationProportion = other.evaluationProportion;
    if (other.isSetCreateDate()) {
      this.createDate = other.createDate;
    }
    this.createrId = other.createrId;
    this.updateId = other.updateId;
    if (other.isSetUpdateDate()) {
      this.updateDate = other.updateDate;
    }
    this.projectId = other.projectId;
    if (other.isSetEvaluations()) {
      List<BizMortgageEvaluation> __this__evaluations = new ArrayList<BizMortgageEvaluation>(other.evaluations.size());
      for (BizMortgageEvaluation other_element : other.evaluations) {
        __this__evaluations.add(other_element);
      }
      this.evaluations = __this__evaluations;
    }
    if (other.isSetShouldSpotTime()) {
      this.shouldSpotTime = other.shouldSpotTime;
    }
  }

  public BizMortgageEvaluation deepCopy() {
    return new BizMortgageEvaluation(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    setEstateIsSet(false);
    this.estate = 0;
    setEvaluationPriceIsSet(false);
    this.evaluationPrice = 0.0;
    this.evaluationSource = null;
    setEvaluationProportionIsSet(false);
    this.evaluationProportion = 0.0;
    this.createDate = null;
    setCreaterIdIsSet(false);
    this.createrId = 0;
    setUpdateIdIsSet(false);
    this.updateId = 0;
    this.updateDate = null;
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.evaluations = null;
    this.shouldSpotTime = null;
  }

  public int getPid() {
    return this.pid;
  }

  public BizMortgageEvaluation setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getEstate() {
    return this.estate;
  }

  public BizMortgageEvaluation setEstate(int estate) {
    this.estate = estate;
    setEstateIsSet(true);
    return this;
  }

  public void unsetEstate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESTATE_ISSET_ID);
  }

  /** Returns true if field estate is set (has been assigned a value) and false otherwise */
  public boolean isSetEstate() {
    return EncodingUtils.testBit(__isset_bitfield, __ESTATE_ISSET_ID);
  }

  public void setEstateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESTATE_ISSET_ID, value);
  }

  public double getEvaluationPrice() {
    return this.evaluationPrice;
  }

  public BizMortgageEvaluation setEvaluationPrice(double evaluationPrice) {
    this.evaluationPrice = evaluationPrice;
    setEvaluationPriceIsSet(true);
    return this;
  }

  public void unsetEvaluationPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EVALUATIONPRICE_ISSET_ID);
  }

  /** Returns true if field evaluationPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetEvaluationPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __EVALUATIONPRICE_ISSET_ID);
  }

  public void setEvaluationPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EVALUATIONPRICE_ISSET_ID, value);
  }

  public String getEvaluationSource() {
    return this.evaluationSource;
  }

  public BizMortgageEvaluation setEvaluationSource(String evaluationSource) {
    this.evaluationSource = evaluationSource;
    return this;
  }

  public void unsetEvaluationSource() {
    this.evaluationSource = null;
  }

  /** Returns true if field evaluationSource is set (has been assigned a value) and false otherwise */
  public boolean isSetEvaluationSource() {
    return this.evaluationSource != null;
  }

  public void setEvaluationSourceIsSet(boolean value) {
    if (!value) {
      this.evaluationSource = null;
    }
  }

  public double getEvaluationProportion() {
    return this.evaluationProportion;
  }

  public BizMortgageEvaluation setEvaluationProportion(double evaluationProportion) {
    this.evaluationProportion = evaluationProportion;
    setEvaluationProportionIsSet(true);
    return this;
  }

  public void unsetEvaluationProportion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EVALUATIONPROPORTION_ISSET_ID);
  }

  /** Returns true if field evaluationProportion is set (has been assigned a value) and false otherwise */
  public boolean isSetEvaluationProportion() {
    return EncodingUtils.testBit(__isset_bitfield, __EVALUATIONPROPORTION_ISSET_ID);
  }

  public void setEvaluationProportionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EVALUATIONPROPORTION_ISSET_ID, value);
  }

  public String getCreateDate() {
    return this.createDate;
  }

  public BizMortgageEvaluation setCreateDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  public void unsetCreateDate() {
    this.createDate = null;
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return this.createDate != null;
  }

  public void setCreateDateIsSet(boolean value) {
    if (!value) {
      this.createDate = null;
    }
  }

  public int getCreaterId() {
    return this.createrId;
  }

  public BizMortgageEvaluation setCreaterId(int createrId) {
    this.createrId = createrId;
    setCreaterIdIsSet(true);
    return this;
  }

  public void unsetCreaterId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATERID_ISSET_ID);
  }

  /** Returns true if field createrId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreaterId() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATERID_ISSET_ID);
  }

  public void setCreaterIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATERID_ISSET_ID, value);
  }

  public int getUpdateId() {
    return this.updateId;
  }

  public BizMortgageEvaluation setUpdateId(int updateId) {
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    return this;
  }

  public void unsetUpdateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  /** Returns true if field updateId is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateId() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  public void setUpdateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEID_ISSET_ID, value);
  }

  public String getUpdateDate() {
    return this.updateDate;
  }

  public BizMortgageEvaluation setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  public void unsetUpdateDate() {
    this.updateDate = null;
  }

  /** Returns true if field updateDate is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateDate() {
    return this.updateDate != null;
  }

  public void setUpdateDateIsSet(boolean value) {
    if (!value) {
      this.updateDate = null;
    }
  }

  public int getProjectId() {
    return this.projectId;
  }

  public BizMortgageEvaluation setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public int getEvaluationsSize() {
    return (this.evaluations == null) ? 0 : this.evaluations.size();
  }

  public java.util.Iterator<BizMortgageEvaluation> getEvaluationsIterator() {
    return (this.evaluations == null) ? null : this.evaluations.iterator();
  }

  public void addToEvaluations(BizMortgageEvaluation elem) {
    if (this.evaluations == null) {
      this.evaluations = new ArrayList<BizMortgageEvaluation>();
    }
    this.evaluations.add(elem);
  }

  public List<BizMortgageEvaluation> getEvaluations() {
    return this.evaluations;
  }

  public BizMortgageEvaluation setEvaluations(List<BizMortgageEvaluation> evaluations) {
    this.evaluations = evaluations;
    return this;
  }

  public void unsetEvaluations() {
    this.evaluations = null;
  }

  /** Returns true if field evaluations is set (has been assigned a value) and false otherwise */
  public boolean isSetEvaluations() {
    return this.evaluations != null;
  }

  public void setEvaluationsIsSet(boolean value) {
    if (!value) {
      this.evaluations = null;
    }
  }

  public String getShouldSpotTime() {
    return this.shouldSpotTime;
  }

  public BizMortgageEvaluation setShouldSpotTime(String shouldSpotTime) {
    this.shouldSpotTime = shouldSpotTime;
    return this;
  }

  public void unsetShouldSpotTime() {
    this.shouldSpotTime = null;
  }

  /** Returns true if field shouldSpotTime is set (has been assigned a value) and false otherwise */
  public boolean isSetShouldSpotTime() {
    return this.shouldSpotTime != null;
  }

  public void setShouldSpotTimeIsSet(boolean value) {
    if (!value) {
      this.shouldSpotTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case ESTATE:
      if (value == null) {
        unsetEstate();
      } else {
        setEstate((Integer)value);
      }
      break;

    case EVALUATION_PRICE:
      if (value == null) {
        unsetEvaluationPrice();
      } else {
        setEvaluationPrice((Double)value);
      }
      break;

    case EVALUATION_SOURCE:
      if (value == null) {
        unsetEvaluationSource();
      } else {
        setEvaluationSource((String)value);
      }
      break;

    case EVALUATION_PROPORTION:
      if (value == null) {
        unsetEvaluationProportion();
      } else {
        setEvaluationProportion((Double)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((String)value);
      }
      break;

    case CREATER_ID:
      if (value == null) {
        unsetCreaterId();
      } else {
        setCreaterId((Integer)value);
      }
      break;

    case UPDATE_ID:
      if (value == null) {
        unsetUpdateId();
      } else {
        setUpdateId((Integer)value);
      }
      break;

    case UPDATE_DATE:
      if (value == null) {
        unsetUpdateDate();
      } else {
        setUpdateDate((String)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case EVALUATIONS:
      if (value == null) {
        unsetEvaluations();
      } else {
        setEvaluations((List<BizMortgageEvaluation>)value);
      }
      break;

    case SHOULD_SPOT_TIME:
      if (value == null) {
        unsetShouldSpotTime();
      } else {
        setShouldSpotTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case ESTATE:
      return Integer.valueOf(getEstate());

    case EVALUATION_PRICE:
      return Double.valueOf(getEvaluationPrice());

    case EVALUATION_SOURCE:
      return getEvaluationSource();

    case EVALUATION_PROPORTION:
      return Double.valueOf(getEvaluationProportion());

    case CREATE_DATE:
      return getCreateDate();

    case CREATER_ID:
      return Integer.valueOf(getCreaterId());

    case UPDATE_ID:
      return Integer.valueOf(getUpdateId());

    case UPDATE_DATE:
      return getUpdateDate();

    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case EVALUATIONS:
      return getEvaluations();

    case SHOULD_SPOT_TIME:
      return getShouldSpotTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case ESTATE:
      return isSetEstate();
    case EVALUATION_PRICE:
      return isSetEvaluationPrice();
    case EVALUATION_SOURCE:
      return isSetEvaluationSource();
    case EVALUATION_PROPORTION:
      return isSetEvaluationProportion();
    case CREATE_DATE:
      return isSetCreateDate();
    case CREATER_ID:
      return isSetCreaterId();
    case UPDATE_ID:
      return isSetUpdateId();
    case UPDATE_DATE:
      return isSetUpdateDate();
    case PROJECT_ID:
      return isSetProjectId();
    case EVALUATIONS:
      return isSetEvaluations();
    case SHOULD_SPOT_TIME:
      return isSetShouldSpotTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizMortgageEvaluation)
      return this.equals((BizMortgageEvaluation)that);
    return false;
  }

  public boolean equals(BizMortgageEvaluation that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_estate = true;
    boolean that_present_estate = true;
    if (this_present_estate || that_present_estate) {
      if (!(this_present_estate && that_present_estate))
        return false;
      if (this.estate != that.estate)
        return false;
    }

    boolean this_present_evaluationPrice = true;
    boolean that_present_evaluationPrice = true;
    if (this_present_evaluationPrice || that_present_evaluationPrice) {
      if (!(this_present_evaluationPrice && that_present_evaluationPrice))
        return false;
      if (this.evaluationPrice != that.evaluationPrice)
        return false;
    }

    boolean this_present_evaluationSource = true && this.isSetEvaluationSource();
    boolean that_present_evaluationSource = true && that.isSetEvaluationSource();
    if (this_present_evaluationSource || that_present_evaluationSource) {
      if (!(this_present_evaluationSource && that_present_evaluationSource))
        return false;
      if (!this.evaluationSource.equals(that.evaluationSource))
        return false;
    }

    boolean this_present_evaluationProportion = true;
    boolean that_present_evaluationProportion = true;
    if (this_present_evaluationProportion || that_present_evaluationProportion) {
      if (!(this_present_evaluationProportion && that_present_evaluationProportion))
        return false;
      if (this.evaluationProportion != that.evaluationProportion)
        return false;
    }

    boolean this_present_createDate = true && this.isSetCreateDate();
    boolean that_present_createDate = true && that.isSetCreateDate();
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (!this.createDate.equals(that.createDate))
        return false;
    }

    boolean this_present_createrId = true;
    boolean that_present_createrId = true;
    if (this_present_createrId || that_present_createrId) {
      if (!(this_present_createrId && that_present_createrId))
        return false;
      if (this.createrId != that.createrId)
        return false;
    }

    boolean this_present_updateId = true;
    boolean that_present_updateId = true;
    if (this_present_updateId || that_present_updateId) {
      if (!(this_present_updateId && that_present_updateId))
        return false;
      if (this.updateId != that.updateId)
        return false;
    }

    boolean this_present_updateDate = true && this.isSetUpdateDate();
    boolean that_present_updateDate = true && that.isSetUpdateDate();
    if (this_present_updateDate || that_present_updateDate) {
      if (!(this_present_updateDate && that_present_updateDate))
        return false;
      if (!this.updateDate.equals(that.updateDate))
        return false;
    }

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_evaluations = true && this.isSetEvaluations();
    boolean that_present_evaluations = true && that.isSetEvaluations();
    if (this_present_evaluations || that_present_evaluations) {
      if (!(this_present_evaluations && that_present_evaluations))
        return false;
      if (!this.evaluations.equals(that.evaluations))
        return false;
    }

    boolean this_present_shouldSpotTime = true && this.isSetShouldSpotTime();
    boolean that_present_shouldSpotTime = true && that.isSetShouldSpotTime();
    if (this_present_shouldSpotTime || that_present_shouldSpotTime) {
      if (!(this_present_shouldSpotTime && that_present_shouldSpotTime))
        return false;
      if (!this.shouldSpotTime.equals(that.shouldSpotTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_estate = true;
    list.add(present_estate);
    if (present_estate)
      list.add(estate);

    boolean present_evaluationPrice = true;
    list.add(present_evaluationPrice);
    if (present_evaluationPrice)
      list.add(evaluationPrice);

    boolean present_evaluationSource = true && (isSetEvaluationSource());
    list.add(present_evaluationSource);
    if (present_evaluationSource)
      list.add(evaluationSource);

    boolean present_evaluationProportion = true;
    list.add(present_evaluationProportion);
    if (present_evaluationProportion)
      list.add(evaluationProportion);

    boolean present_createDate = true && (isSetCreateDate());
    list.add(present_createDate);
    if (present_createDate)
      list.add(createDate);

    boolean present_createrId = true;
    list.add(present_createrId);
    if (present_createrId)
      list.add(createrId);

    boolean present_updateId = true;
    list.add(present_updateId);
    if (present_updateId)
      list.add(updateId);

    boolean present_updateDate = true && (isSetUpdateDate());
    list.add(present_updateDate);
    if (present_updateDate)
      list.add(updateDate);

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_evaluations = true && (isSetEvaluations());
    list.add(present_evaluations);
    if (present_evaluations)
      list.add(evaluations);

    boolean present_shouldSpotTime = true && (isSetShouldSpotTime());
    list.add(present_shouldSpotTime);
    if (present_shouldSpotTime)
      list.add(shouldSpotTime);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizMortgageEvaluation other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstate()).compareTo(other.isSetEstate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estate, other.estate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEvaluationPrice()).compareTo(other.isSetEvaluationPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEvaluationPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.evaluationPrice, other.evaluationPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEvaluationSource()).compareTo(other.isSetEvaluationSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEvaluationSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.evaluationSource, other.evaluationSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEvaluationProportion()).compareTo(other.isSetEvaluationProportion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEvaluationProportion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.evaluationProportion, other.evaluationProportion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreaterId()).compareTo(other.isSetCreaterId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreaterId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createrId, other.createrId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateId()).compareTo(other.isSetUpdateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateId, other.updateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateDate()).compareTo(other.isSetUpdateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateDate, other.updateDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEvaluations()).compareTo(other.isSetEvaluations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEvaluations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.evaluations, other.evaluations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShouldSpotTime()).compareTo(other.isSetShouldSpotTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShouldSpotTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shouldSpotTime, other.shouldSpotTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizMortgageEvaluation(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("estate:");
    sb.append(this.estate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("evaluationPrice:");
    sb.append(this.evaluationPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("evaluationSource:");
    if (this.evaluationSource == null) {
      sb.append("null");
    } else {
      sb.append(this.evaluationSource);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("evaluationProportion:");
    sb.append(this.evaluationProportion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    if (this.createDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createrId:");
    sb.append(this.createrId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateId:");
    sb.append(this.updateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateDate:");
    if (this.updateDate == null) {
      sb.append("null");
    } else {
      sb.append(this.updateDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("evaluations:");
    if (this.evaluations == null) {
      sb.append("null");
    } else {
      sb.append(this.evaluations);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shouldSpotTime:");
    if (this.shouldSpotTime == null) {
      sb.append("null");
    } else {
      sb.append(this.shouldSpotTime);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizMortgageEvaluationStandardSchemeFactory implements SchemeFactory {
    public BizMortgageEvaluationStandardScheme getScheme() {
      return new BizMortgageEvaluationStandardScheme();
    }
  }

  private static class BizMortgageEvaluationStandardScheme extends StandardScheme<BizMortgageEvaluation> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizMortgageEvaluation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ESTATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.estate = iprot.readI32();
              struct.setEstateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EVALUATION_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.evaluationPrice = iprot.readDouble();
              struct.setEvaluationPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EVALUATION_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.evaluationSource = iprot.readString();
              struct.setEvaluationSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EVALUATION_PROPORTION
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.evaluationProportion = iprot.readDouble();
              struct.setEvaluationProportionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createDate = iprot.readString();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREATER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createrId = iprot.readI32();
              struct.setCreaterIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateId = iprot.readI32();
              struct.setUpdateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UPDATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateDate = iprot.readString();
              struct.setUpdateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // EVALUATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list104 = iprot.readListBegin();
                struct.evaluations = new ArrayList<BizMortgageEvaluation>(_list104.size);
                BizMortgageEvaluation _elem105;
                for (int _i106 = 0; _i106 < _list104.size; ++_i106)
                {
                  _elem105 = new BizMortgageEvaluation();
                  _elem105.read(iprot);
                  struct.evaluations.add(_elem105);
                }
                iprot.readListEnd();
              }
              struct.setEvaluationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SHOULD_SPOT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shouldSpotTime = iprot.readString();
              struct.setShouldSpotTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizMortgageEvaluation struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ESTATE_FIELD_DESC);
      oprot.writeI32(struct.estate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EVALUATION_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.evaluationPrice);
      oprot.writeFieldEnd();
      if (struct.evaluationSource != null) {
        oprot.writeFieldBegin(EVALUATION_SOURCE_FIELD_DESC);
        oprot.writeString(struct.evaluationSource);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EVALUATION_PROPORTION_FIELD_DESC);
      oprot.writeDouble(struct.evaluationProportion);
      oprot.writeFieldEnd();
      if (struct.createDate != null) {
        oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
        oprot.writeString(struct.createDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATER_ID_FIELD_DESC);
      oprot.writeI32(struct.createrId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_ID_FIELD_DESC);
      oprot.writeI32(struct.updateId);
      oprot.writeFieldEnd();
      if (struct.updateDate != null) {
        oprot.writeFieldBegin(UPDATE_DATE_FIELD_DESC);
        oprot.writeString(struct.updateDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.evaluations != null) {
        oprot.writeFieldBegin(EVALUATIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.evaluations.size()));
          for (BizMortgageEvaluation _iter107 : struct.evaluations)
          {
            _iter107.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.shouldSpotTime != null) {
        oprot.writeFieldBegin(SHOULD_SPOT_TIME_FIELD_DESC);
        oprot.writeString(struct.shouldSpotTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizMortgageEvaluationTupleSchemeFactory implements SchemeFactory {
    public BizMortgageEvaluationTupleScheme getScheme() {
      return new BizMortgageEvaluationTupleScheme();
    }
  }

  private static class BizMortgageEvaluationTupleScheme extends TupleScheme<BizMortgageEvaluation> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizMortgageEvaluation struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetEstate()) {
        optionals.set(1);
      }
      if (struct.isSetEvaluationPrice()) {
        optionals.set(2);
      }
      if (struct.isSetEvaluationSource()) {
        optionals.set(3);
      }
      if (struct.isSetEvaluationProportion()) {
        optionals.set(4);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(5);
      }
      if (struct.isSetCreaterId()) {
        optionals.set(6);
      }
      if (struct.isSetUpdateId()) {
        optionals.set(7);
      }
      if (struct.isSetUpdateDate()) {
        optionals.set(8);
      }
      if (struct.isSetProjectId()) {
        optionals.set(9);
      }
      if (struct.isSetEvaluations()) {
        optionals.set(10);
      }
      if (struct.isSetShouldSpotTime()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetEstate()) {
        oprot.writeI32(struct.estate);
      }
      if (struct.isSetEvaluationPrice()) {
        oprot.writeDouble(struct.evaluationPrice);
      }
      if (struct.isSetEvaluationSource()) {
        oprot.writeString(struct.evaluationSource);
      }
      if (struct.isSetEvaluationProportion()) {
        oprot.writeDouble(struct.evaluationProportion);
      }
      if (struct.isSetCreateDate()) {
        oprot.writeString(struct.createDate);
      }
      if (struct.isSetCreaterId()) {
        oprot.writeI32(struct.createrId);
      }
      if (struct.isSetUpdateId()) {
        oprot.writeI32(struct.updateId);
      }
      if (struct.isSetUpdateDate()) {
        oprot.writeString(struct.updateDate);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetEvaluations()) {
        {
          oprot.writeI32(struct.evaluations.size());
          for (BizMortgageEvaluation _iter108 : struct.evaluations)
          {
            _iter108.write(oprot);
          }
        }
      }
      if (struct.isSetShouldSpotTime()) {
        oprot.writeString(struct.shouldSpotTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizMortgageEvaluation struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.estate = iprot.readI32();
        struct.setEstateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.evaluationPrice = iprot.readDouble();
        struct.setEvaluationPriceIsSet(true);
      }
      if (incoming.get(3)) {
        struct.evaluationSource = iprot.readString();
        struct.setEvaluationSourceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.evaluationProportion = iprot.readDouble();
        struct.setEvaluationProportionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createDate = iprot.readString();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.createrId = iprot.readI32();
        struct.setCreaterIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.updateId = iprot.readI32();
        struct.setUpdateIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.updateDate = iprot.readString();
        struct.setUpdateDateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list109 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.evaluations = new ArrayList<BizMortgageEvaluation>(_list109.size);
          BizMortgageEvaluation _elem110;
          for (int _i111 = 0; _i111 < _list109.size; ++_i111)
          {
            _elem110 = new BizMortgageEvaluation();
            _elem110.read(iprot);
            struct.evaluations.add(_elem110);
          }
        }
        struct.setEvaluationsIsSet(true);
      }
      if (incoming.get(11)) {
        struct.shouldSpotTime = iprot.readString();
        struct.setShouldSpotTimeIsSet(true);
      }
    }
  }

}

