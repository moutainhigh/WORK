/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.partner;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-9-20")
public class BizPartnerCustomerBank implements org.apache.thrift.TBase<BizPartnerCustomerBank, BizPartnerCustomerBank._Fields>, java.io.Serializable, Cloneable, Comparable<BizPartnerCustomerBank> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizPartnerCustomerBank");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PARTNER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("acctId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CUSTOMER_ID_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("customerIdCard", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CUSTOMER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("customerName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MOBILE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("mobileNo", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BANK_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("bankCard", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BANK_MOBILE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("bankMobileNo", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField IP_FIELD_DESC = new org.apache.thrift.protocol.TField("ip", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MAC_FIELD_DESC = new org.apache.thrift.protocol.TField("mac", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField OPERATOR_FIELD_DESC = new org.apache.thrift.protocol.TField("operator", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField BEGIN_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("beginCreateTime", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField END_CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endCreateTime", org.apache.thrift.protocol.TType.STRING, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizPartnerCustomerBankStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizPartnerCustomerBankTupleSchemeFactory());
  }

  public int pid; // required
  public String partnerNo; // required
  public int acctId; // required
  public String customerIdCard; // required
  public String customerName; // required
  public String mobileNo; // required
  public String bankCard; // required
  public String bankMobileNo; // required
  public String ip; // required
  public String mac; // required
  public int status; // required
  public int operator; // required
  public String createTime; // required
  public String updateTime; // required
  public int page; // required
  public int rows; // required
  public String beginCreateTime; // required
  public String endCreateTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    PARTNER_NO((short)2, "partnerNo"),
    ACCT_ID((short)3, "acctId"),
    CUSTOMER_ID_CARD((short)4, "customerIdCard"),
    CUSTOMER_NAME((short)5, "customerName"),
    MOBILE_NO((short)6, "mobileNo"),
    BANK_CARD((short)7, "bankCard"),
    BANK_MOBILE_NO((short)8, "bankMobileNo"),
    IP((short)9, "ip"),
    MAC((short)10, "mac"),
    STATUS((short)11, "status"),
    OPERATOR((short)12, "operator"),
    CREATE_TIME((short)13, "createTime"),
    UPDATE_TIME((short)14, "updateTime"),
    PAGE((short)15, "page"),
    ROWS((short)16, "rows"),
    BEGIN_CREATE_TIME((short)17, "beginCreateTime"),
    END_CREATE_TIME((short)18, "endCreateTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // PARTNER_NO
          return PARTNER_NO;
        case 3: // ACCT_ID
          return ACCT_ID;
        case 4: // CUSTOMER_ID_CARD
          return CUSTOMER_ID_CARD;
        case 5: // CUSTOMER_NAME
          return CUSTOMER_NAME;
        case 6: // MOBILE_NO
          return MOBILE_NO;
        case 7: // BANK_CARD
          return BANK_CARD;
        case 8: // BANK_MOBILE_NO
          return BANK_MOBILE_NO;
        case 9: // IP
          return IP;
        case 10: // MAC
          return MAC;
        case 11: // STATUS
          return STATUS;
        case 12: // OPERATOR
          return OPERATOR;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // UPDATE_TIME
          return UPDATE_TIME;
        case 15: // PAGE
          return PAGE;
        case 16: // ROWS
          return ROWS;
        case 17: // BEGIN_CREATE_TIME
          return BEGIN_CREATE_TIME;
        case 18: // END_CREATE_TIME
          return END_CREATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ACCTID_ISSET_ID = 1;
  private static final int __STATUS_ISSET_ID = 2;
  private static final int __OPERATOR_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_NO, new org.apache.thrift.meta_data.FieldMetaData("partnerNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_ID, new org.apache.thrift.meta_data.FieldMetaData("acctId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUSTOMER_ID_CARD, new org.apache.thrift.meta_data.FieldMetaData("customerIdCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOMER_NAME, new org.apache.thrift.meta_data.FieldMetaData("customerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE_NO, new org.apache.thrift.meta_data.FieldMetaData("mobileNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_CARD, new org.apache.thrift.meta_data.FieldMetaData("bankCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_MOBILE_NO, new org.apache.thrift.meta_data.FieldMetaData("bankMobileNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IP, new org.apache.thrift.meta_data.FieldMetaData("ip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAC, new org.apache.thrift.meta_data.FieldMetaData("mac", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OPERATOR, new org.apache.thrift.meta_data.FieldMetaData("operator", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BEGIN_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("beginCreateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("endCreateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizPartnerCustomerBank.class, metaDataMap);
  }

  public BizPartnerCustomerBank() {
  }

  public BizPartnerCustomerBank(
    int pid,
    String partnerNo,
    int acctId,
    String customerIdCard,
    String customerName,
    String mobileNo,
    String bankCard,
    String bankMobileNo,
    String ip,
    String mac,
    int status,
    int operator,
    String createTime,
    String updateTime,
    int page,
    int rows,
    String beginCreateTime,
    String endCreateTime)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.partnerNo = partnerNo;
    this.acctId = acctId;
    setAcctIdIsSet(true);
    this.customerIdCard = customerIdCard;
    this.customerName = customerName;
    this.mobileNo = mobileNo;
    this.bankCard = bankCard;
    this.bankMobileNo = bankMobileNo;
    this.ip = ip;
    this.mac = mac;
    this.status = status;
    setStatusIsSet(true);
    this.operator = operator;
    setOperatorIsSet(true);
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.beginCreateTime = beginCreateTime;
    this.endCreateTime = endCreateTime;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizPartnerCustomerBank(BizPartnerCustomerBank other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetPartnerNo()) {
      this.partnerNo = other.partnerNo;
    }
    this.acctId = other.acctId;
    if (other.isSetCustomerIdCard()) {
      this.customerIdCard = other.customerIdCard;
    }
    if (other.isSetCustomerName()) {
      this.customerName = other.customerName;
    }
    if (other.isSetMobileNo()) {
      this.mobileNo = other.mobileNo;
    }
    if (other.isSetBankCard()) {
      this.bankCard = other.bankCard;
    }
    if (other.isSetBankMobileNo()) {
      this.bankMobileNo = other.bankMobileNo;
    }
    if (other.isSetIp()) {
      this.ip = other.ip;
    }
    if (other.isSetMac()) {
      this.mac = other.mac;
    }
    this.status = other.status;
    this.operator = other.operator;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetBeginCreateTime()) {
      this.beginCreateTime = other.beginCreateTime;
    }
    if (other.isSetEndCreateTime()) {
      this.endCreateTime = other.endCreateTime;
    }
  }

  public BizPartnerCustomerBank deepCopy() {
    return new BizPartnerCustomerBank(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.partnerNo = null;
    setAcctIdIsSet(false);
    this.acctId = 0;
    this.customerIdCard = null;
    this.customerName = null;
    this.mobileNo = null;
    this.bankCard = null;
    this.bankMobileNo = null;
    this.ip = null;
    this.mac = null;
    setStatusIsSet(false);
    this.status = 0;
    setOperatorIsSet(false);
    this.operator = 0;
    this.createTime = null;
    this.updateTime = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.beginCreateTime = null;
    this.endCreateTime = null;
  }

  public int getPid() {
    return this.pid;
  }

  public BizPartnerCustomerBank setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getPartnerNo() {
    return this.partnerNo;
  }

  public BizPartnerCustomerBank setPartnerNo(String partnerNo) {
    this.partnerNo = partnerNo;
    return this;
  }

  public void unsetPartnerNo() {
    this.partnerNo = null;
  }

  /** Returns true if field partnerNo is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerNo() {
    return this.partnerNo != null;
  }

  public void setPartnerNoIsSet(boolean value) {
    if (!value) {
      this.partnerNo = null;
    }
  }

  public int getAcctId() {
    return this.acctId;
  }

  public BizPartnerCustomerBank setAcctId(int acctId) {
    this.acctId = acctId;
    setAcctIdIsSet(true);
    return this;
  }

  public void unsetAcctId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCTID_ISSET_ID);
  }

  /** Returns true if field acctId is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCTID_ISSET_ID);
  }

  public void setAcctIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCTID_ISSET_ID, value);
  }

  public String getCustomerIdCard() {
    return this.customerIdCard;
  }

  public BizPartnerCustomerBank setCustomerIdCard(String customerIdCard) {
    this.customerIdCard = customerIdCard;
    return this;
  }

  public void unsetCustomerIdCard() {
    this.customerIdCard = null;
  }

  /** Returns true if field customerIdCard is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomerIdCard() {
    return this.customerIdCard != null;
  }

  public void setCustomerIdCardIsSet(boolean value) {
    if (!value) {
      this.customerIdCard = null;
    }
  }

  public String getCustomerName() {
    return this.customerName;
  }

  public BizPartnerCustomerBank setCustomerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

  public void unsetCustomerName() {
    this.customerName = null;
  }

  /** Returns true if field customerName is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomerName() {
    return this.customerName != null;
  }

  public void setCustomerNameIsSet(boolean value) {
    if (!value) {
      this.customerName = null;
    }
  }

  public String getMobileNo() {
    return this.mobileNo;
  }

  public BizPartnerCustomerBank setMobileNo(String mobileNo) {
    this.mobileNo = mobileNo;
    return this;
  }

  public void unsetMobileNo() {
    this.mobileNo = null;
  }

  /** Returns true if field mobileNo is set (has been assigned a value) and false otherwise */
  public boolean isSetMobileNo() {
    return this.mobileNo != null;
  }

  public void setMobileNoIsSet(boolean value) {
    if (!value) {
      this.mobileNo = null;
    }
  }

  public String getBankCard() {
    return this.bankCard;
  }

  public BizPartnerCustomerBank setBankCard(String bankCard) {
    this.bankCard = bankCard;
    return this;
  }

  public void unsetBankCard() {
    this.bankCard = null;
  }

  /** Returns true if field bankCard is set (has been assigned a value) and false otherwise */
  public boolean isSetBankCard() {
    return this.bankCard != null;
  }

  public void setBankCardIsSet(boolean value) {
    if (!value) {
      this.bankCard = null;
    }
  }

  public String getBankMobileNo() {
    return this.bankMobileNo;
  }

  public BizPartnerCustomerBank setBankMobileNo(String bankMobileNo) {
    this.bankMobileNo = bankMobileNo;
    return this;
  }

  public void unsetBankMobileNo() {
    this.bankMobileNo = null;
  }

  /** Returns true if field bankMobileNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBankMobileNo() {
    return this.bankMobileNo != null;
  }

  public void setBankMobileNoIsSet(boolean value) {
    if (!value) {
      this.bankMobileNo = null;
    }
  }

  public String getIp() {
    return this.ip;
  }

  public BizPartnerCustomerBank setIp(String ip) {
    this.ip = ip;
    return this;
  }

  public void unsetIp() {
    this.ip = null;
  }

  /** Returns true if field ip is set (has been assigned a value) and false otherwise */
  public boolean isSetIp() {
    return this.ip != null;
  }

  public void setIpIsSet(boolean value) {
    if (!value) {
      this.ip = null;
    }
  }

  public String getMac() {
    return this.mac;
  }

  public BizPartnerCustomerBank setMac(String mac) {
    this.mac = mac;
    return this;
  }

  public void unsetMac() {
    this.mac = null;
  }

  /** Returns true if field mac is set (has been assigned a value) and false otherwise */
  public boolean isSetMac() {
    return this.mac != null;
  }

  public void setMacIsSet(boolean value) {
    if (!value) {
      this.mac = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public BizPartnerCustomerBank setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getOperator() {
    return this.operator;
  }

  public BizPartnerCustomerBank setOperator(int operator) {
    this.operator = operator;
    setOperatorIsSet(true);
    return this;
  }

  public void unsetOperator() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OPERATOR_ISSET_ID);
  }

  /** Returns true if field operator is set (has been assigned a value) and false otherwise */
  public boolean isSetOperator() {
    return EncodingUtils.testBit(__isset_bitfield, __OPERATOR_ISSET_ID);
  }

  public void setOperatorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OPERATOR_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public BizPartnerCustomerBank setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public BizPartnerCustomerBank setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public BizPartnerCustomerBank setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public BizPartnerCustomerBank setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getBeginCreateTime() {
    return this.beginCreateTime;
  }

  public BizPartnerCustomerBank setBeginCreateTime(String beginCreateTime) {
    this.beginCreateTime = beginCreateTime;
    return this;
  }

  public void unsetBeginCreateTime() {
    this.beginCreateTime = null;
  }

  /** Returns true if field beginCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginCreateTime() {
    return this.beginCreateTime != null;
  }

  public void setBeginCreateTimeIsSet(boolean value) {
    if (!value) {
      this.beginCreateTime = null;
    }
  }

  public String getEndCreateTime() {
    return this.endCreateTime;
  }

  public BizPartnerCustomerBank setEndCreateTime(String endCreateTime) {
    this.endCreateTime = endCreateTime;
    return this;
  }

  public void unsetEndCreateTime() {
    this.endCreateTime = null;
  }

  /** Returns true if field endCreateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndCreateTime() {
    return this.endCreateTime != null;
  }

  public void setEndCreateTimeIsSet(boolean value) {
    if (!value) {
      this.endCreateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case PARTNER_NO:
      if (value == null) {
        unsetPartnerNo();
      } else {
        setPartnerNo((String)value);
      }
      break;

    case ACCT_ID:
      if (value == null) {
        unsetAcctId();
      } else {
        setAcctId((Integer)value);
      }
      break;

    case CUSTOMER_ID_CARD:
      if (value == null) {
        unsetCustomerIdCard();
      } else {
        setCustomerIdCard((String)value);
      }
      break;

    case CUSTOMER_NAME:
      if (value == null) {
        unsetCustomerName();
      } else {
        setCustomerName((String)value);
      }
      break;

    case MOBILE_NO:
      if (value == null) {
        unsetMobileNo();
      } else {
        setMobileNo((String)value);
      }
      break;

    case BANK_CARD:
      if (value == null) {
        unsetBankCard();
      } else {
        setBankCard((String)value);
      }
      break;

    case BANK_MOBILE_NO:
      if (value == null) {
        unsetBankMobileNo();
      } else {
        setBankMobileNo((String)value);
      }
      break;

    case IP:
      if (value == null) {
        unsetIp();
      } else {
        setIp((String)value);
      }
      break;

    case MAC:
      if (value == null) {
        unsetMac();
      } else {
        setMac((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case OPERATOR:
      if (value == null) {
        unsetOperator();
      } else {
        setOperator((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case BEGIN_CREATE_TIME:
      if (value == null) {
        unsetBeginCreateTime();
      } else {
        setBeginCreateTime((String)value);
      }
      break;

    case END_CREATE_TIME:
      if (value == null) {
        unsetEndCreateTime();
      } else {
        setEndCreateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case PARTNER_NO:
      return getPartnerNo();

    case ACCT_ID:
      return Integer.valueOf(getAcctId());

    case CUSTOMER_ID_CARD:
      return getCustomerIdCard();

    case CUSTOMER_NAME:
      return getCustomerName();

    case MOBILE_NO:
      return getMobileNo();

    case BANK_CARD:
      return getBankCard();

    case BANK_MOBILE_NO:
      return getBankMobileNo();

    case IP:
      return getIp();

    case MAC:
      return getMac();

    case STATUS:
      return Integer.valueOf(getStatus());

    case OPERATOR:
      return Integer.valueOf(getOperator());

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case BEGIN_CREATE_TIME:
      return getBeginCreateTime();

    case END_CREATE_TIME:
      return getEndCreateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case PARTNER_NO:
      return isSetPartnerNo();
    case ACCT_ID:
      return isSetAcctId();
    case CUSTOMER_ID_CARD:
      return isSetCustomerIdCard();
    case CUSTOMER_NAME:
      return isSetCustomerName();
    case MOBILE_NO:
      return isSetMobileNo();
    case BANK_CARD:
      return isSetBankCard();
    case BANK_MOBILE_NO:
      return isSetBankMobileNo();
    case IP:
      return isSetIp();
    case MAC:
      return isSetMac();
    case STATUS:
      return isSetStatus();
    case OPERATOR:
      return isSetOperator();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case BEGIN_CREATE_TIME:
      return isSetBeginCreateTime();
    case END_CREATE_TIME:
      return isSetEndCreateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizPartnerCustomerBank)
      return this.equals((BizPartnerCustomerBank)that);
    return false;
  }

  public boolean equals(BizPartnerCustomerBank that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_partnerNo = true && this.isSetPartnerNo();
    boolean that_present_partnerNo = true && that.isSetPartnerNo();
    if (this_present_partnerNo || that_present_partnerNo) {
      if (!(this_present_partnerNo && that_present_partnerNo))
        return false;
      if (!this.partnerNo.equals(that.partnerNo))
        return false;
    }

    boolean this_present_acctId = true;
    boolean that_present_acctId = true;
    if (this_present_acctId || that_present_acctId) {
      if (!(this_present_acctId && that_present_acctId))
        return false;
      if (this.acctId != that.acctId)
        return false;
    }

    boolean this_present_customerIdCard = true && this.isSetCustomerIdCard();
    boolean that_present_customerIdCard = true && that.isSetCustomerIdCard();
    if (this_present_customerIdCard || that_present_customerIdCard) {
      if (!(this_present_customerIdCard && that_present_customerIdCard))
        return false;
      if (!this.customerIdCard.equals(that.customerIdCard))
        return false;
    }

    boolean this_present_customerName = true && this.isSetCustomerName();
    boolean that_present_customerName = true && that.isSetCustomerName();
    if (this_present_customerName || that_present_customerName) {
      if (!(this_present_customerName && that_present_customerName))
        return false;
      if (!this.customerName.equals(that.customerName))
        return false;
    }

    boolean this_present_mobileNo = true && this.isSetMobileNo();
    boolean that_present_mobileNo = true && that.isSetMobileNo();
    if (this_present_mobileNo || that_present_mobileNo) {
      if (!(this_present_mobileNo && that_present_mobileNo))
        return false;
      if (!this.mobileNo.equals(that.mobileNo))
        return false;
    }

    boolean this_present_bankCard = true && this.isSetBankCard();
    boolean that_present_bankCard = true && that.isSetBankCard();
    if (this_present_bankCard || that_present_bankCard) {
      if (!(this_present_bankCard && that_present_bankCard))
        return false;
      if (!this.bankCard.equals(that.bankCard))
        return false;
    }

    boolean this_present_bankMobileNo = true && this.isSetBankMobileNo();
    boolean that_present_bankMobileNo = true && that.isSetBankMobileNo();
    if (this_present_bankMobileNo || that_present_bankMobileNo) {
      if (!(this_present_bankMobileNo && that_present_bankMobileNo))
        return false;
      if (!this.bankMobileNo.equals(that.bankMobileNo))
        return false;
    }

    boolean this_present_ip = true && this.isSetIp();
    boolean that_present_ip = true && that.isSetIp();
    if (this_present_ip || that_present_ip) {
      if (!(this_present_ip && that_present_ip))
        return false;
      if (!this.ip.equals(that.ip))
        return false;
    }

    boolean this_present_mac = true && this.isSetMac();
    boolean that_present_mac = true && that.isSetMac();
    if (this_present_mac || that_present_mac) {
      if (!(this_present_mac && that_present_mac))
        return false;
      if (!this.mac.equals(that.mac))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_operator = true;
    boolean that_present_operator = true;
    if (this_present_operator || that_present_operator) {
      if (!(this_present_operator && that_present_operator))
        return false;
      if (this.operator != that.operator)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_beginCreateTime = true && this.isSetBeginCreateTime();
    boolean that_present_beginCreateTime = true && that.isSetBeginCreateTime();
    if (this_present_beginCreateTime || that_present_beginCreateTime) {
      if (!(this_present_beginCreateTime && that_present_beginCreateTime))
        return false;
      if (!this.beginCreateTime.equals(that.beginCreateTime))
        return false;
    }

    boolean this_present_endCreateTime = true && this.isSetEndCreateTime();
    boolean that_present_endCreateTime = true && that.isSetEndCreateTime();
    if (this_present_endCreateTime || that_present_endCreateTime) {
      if (!(this_present_endCreateTime && that_present_endCreateTime))
        return false;
      if (!this.endCreateTime.equals(that.endCreateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_partnerNo = true && (isSetPartnerNo());
    list.add(present_partnerNo);
    if (present_partnerNo)
      list.add(partnerNo);

    boolean present_acctId = true;
    list.add(present_acctId);
    if (present_acctId)
      list.add(acctId);

    boolean present_customerIdCard = true && (isSetCustomerIdCard());
    list.add(present_customerIdCard);
    if (present_customerIdCard)
      list.add(customerIdCard);

    boolean present_customerName = true && (isSetCustomerName());
    list.add(present_customerName);
    if (present_customerName)
      list.add(customerName);

    boolean present_mobileNo = true && (isSetMobileNo());
    list.add(present_mobileNo);
    if (present_mobileNo)
      list.add(mobileNo);

    boolean present_bankCard = true && (isSetBankCard());
    list.add(present_bankCard);
    if (present_bankCard)
      list.add(bankCard);

    boolean present_bankMobileNo = true && (isSetBankMobileNo());
    list.add(present_bankMobileNo);
    if (present_bankMobileNo)
      list.add(bankMobileNo);

    boolean present_ip = true && (isSetIp());
    list.add(present_ip);
    if (present_ip)
      list.add(ip);

    boolean present_mac = true && (isSetMac());
    list.add(present_mac);
    if (present_mac)
      list.add(mac);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_operator = true;
    list.add(present_operator);
    if (present_operator)
      list.add(operator);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_updateTime = true && (isSetUpdateTime());
    list.add(present_updateTime);
    if (present_updateTime)
      list.add(updateTime);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_beginCreateTime = true && (isSetBeginCreateTime());
    list.add(present_beginCreateTime);
    if (present_beginCreateTime)
      list.add(beginCreateTime);

    boolean present_endCreateTime = true && (isSetEndCreateTime());
    list.add(present_endCreateTime);
    if (present_endCreateTime)
      list.add(endCreateTime);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizPartnerCustomerBank other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerNo()).compareTo(other.isSetPartnerNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerNo, other.partnerNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctId()).compareTo(other.isSetAcctId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctId, other.acctId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerIdCard()).compareTo(other.isSetCustomerIdCard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerIdCard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customerIdCard, other.customerIdCard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerName()).compareTo(other.isSetCustomerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customerName, other.customerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobileNo()).compareTo(other.isSetMobileNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobileNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobileNo, other.mobileNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankCard()).compareTo(other.isSetBankCard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankCard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankCard, other.bankCard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankMobileNo()).compareTo(other.isSetBankMobileNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankMobileNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankMobileNo, other.bankMobileNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIp()).compareTo(other.isSetIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ip, other.ip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMac()).compareTo(other.isSetMac());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMac()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mac, other.mac);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperator()).compareTo(other.isSetOperator());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperator()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operator, other.operator);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBeginCreateTime()).compareTo(other.isSetBeginCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginCreateTime, other.beginCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndCreateTime()).compareTo(other.isSetEndCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endCreateTime, other.endCreateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizPartnerCustomerBank(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerNo:");
    if (this.partnerNo == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("acctId:");
    sb.append(this.acctId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerIdCard:");
    if (this.customerIdCard == null) {
      sb.append("null");
    } else {
      sb.append(this.customerIdCard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerName:");
    if (this.customerName == null) {
      sb.append("null");
    } else {
      sb.append(this.customerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobileNo:");
    if (this.mobileNo == null) {
      sb.append("null");
    } else {
      sb.append(this.mobileNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankCard:");
    if (this.bankCard == null) {
      sb.append("null");
    } else {
      sb.append(this.bankCard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankMobileNo:");
    if (this.bankMobileNo == null) {
      sb.append("null");
    } else {
      sb.append(this.bankMobileNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ip:");
    if (this.ip == null) {
      sb.append("null");
    } else {
      sb.append(this.ip);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mac:");
    if (this.mac == null) {
      sb.append("null");
    } else {
      sb.append(this.mac);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("operator:");
    sb.append(this.operator);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    if (this.createTime == null) {
      sb.append("null");
    } else {
      sb.append(this.createTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    if (this.updateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.updateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("beginCreateTime:");
    if (this.beginCreateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.beginCreateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endCreateTime:");
    if (this.endCreateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endCreateTime);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizPartnerCustomerBankStandardSchemeFactory implements SchemeFactory {
    public BizPartnerCustomerBankStandardScheme getScheme() {
      return new BizPartnerCustomerBankStandardScheme();
    }
  }

  private static class BizPartnerCustomerBankStandardScheme extends StandardScheme<BizPartnerCustomerBank> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizPartnerCustomerBank struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PARTNER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerNo = iprot.readString();
              struct.setPartnerNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.acctId = iprot.readI32();
              struct.setAcctIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CUSTOMER_ID_CARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customerIdCard = iprot.readString();
              struct.setCustomerIdCardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CUSTOMER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customerName = iprot.readString();
              struct.setCustomerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MOBILE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobileNo = iprot.readString();
              struct.setMobileNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BANK_CARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankCard = iprot.readString();
              struct.setBankCardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BANK_MOBILE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankMobileNo = iprot.readString();
              struct.setBankMobileNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ip = iprot.readString();
              struct.setIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MAC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mac = iprot.readString();
              struct.setMacIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // OPERATOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.operator = iprot.readI32();
              struct.setOperatorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // BEGIN_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.beginCreateTime = iprot.readString();
              struct.setBeginCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // END_CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endCreateTime = iprot.readString();
              struct.setEndCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizPartnerCustomerBank struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.partnerNo != null) {
        oprot.writeFieldBegin(PARTNER_NO_FIELD_DESC);
        oprot.writeString(struct.partnerNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCT_ID_FIELD_DESC);
      oprot.writeI32(struct.acctId);
      oprot.writeFieldEnd();
      if (struct.customerIdCard != null) {
        oprot.writeFieldBegin(CUSTOMER_ID_CARD_FIELD_DESC);
        oprot.writeString(struct.customerIdCard);
        oprot.writeFieldEnd();
      }
      if (struct.customerName != null) {
        oprot.writeFieldBegin(CUSTOMER_NAME_FIELD_DESC);
        oprot.writeString(struct.customerName);
        oprot.writeFieldEnd();
      }
      if (struct.mobileNo != null) {
        oprot.writeFieldBegin(MOBILE_NO_FIELD_DESC);
        oprot.writeString(struct.mobileNo);
        oprot.writeFieldEnd();
      }
      if (struct.bankCard != null) {
        oprot.writeFieldBegin(BANK_CARD_FIELD_DESC);
        oprot.writeString(struct.bankCard);
        oprot.writeFieldEnd();
      }
      if (struct.bankMobileNo != null) {
        oprot.writeFieldBegin(BANK_MOBILE_NO_FIELD_DESC);
        oprot.writeString(struct.bankMobileNo);
        oprot.writeFieldEnd();
      }
      if (struct.ip != null) {
        oprot.writeFieldBegin(IP_FIELD_DESC);
        oprot.writeString(struct.ip);
        oprot.writeFieldEnd();
      }
      if (struct.mac != null) {
        oprot.writeFieldBegin(MAC_FIELD_DESC);
        oprot.writeString(struct.mac);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OPERATOR_FIELD_DESC);
      oprot.writeI32(struct.operator);
      oprot.writeFieldEnd();
      if (struct.createTime != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.updateTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.beginCreateTime != null) {
        oprot.writeFieldBegin(BEGIN_CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.beginCreateTime);
        oprot.writeFieldEnd();
      }
      if (struct.endCreateTime != null) {
        oprot.writeFieldBegin(END_CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.endCreateTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizPartnerCustomerBankTupleSchemeFactory implements SchemeFactory {
    public BizPartnerCustomerBankTupleScheme getScheme() {
      return new BizPartnerCustomerBankTupleScheme();
    }
  }

  private static class BizPartnerCustomerBankTupleScheme extends TupleScheme<BizPartnerCustomerBank> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizPartnerCustomerBank struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetPartnerNo()) {
        optionals.set(1);
      }
      if (struct.isSetAcctId()) {
        optionals.set(2);
      }
      if (struct.isSetCustomerIdCard()) {
        optionals.set(3);
      }
      if (struct.isSetCustomerName()) {
        optionals.set(4);
      }
      if (struct.isSetMobileNo()) {
        optionals.set(5);
      }
      if (struct.isSetBankCard()) {
        optionals.set(6);
      }
      if (struct.isSetBankMobileNo()) {
        optionals.set(7);
      }
      if (struct.isSetIp()) {
        optionals.set(8);
      }
      if (struct.isSetMac()) {
        optionals.set(9);
      }
      if (struct.isSetStatus()) {
        optionals.set(10);
      }
      if (struct.isSetOperator()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(12);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(13);
      }
      if (struct.isSetPage()) {
        optionals.set(14);
      }
      if (struct.isSetRows()) {
        optionals.set(15);
      }
      if (struct.isSetBeginCreateTime()) {
        optionals.set(16);
      }
      if (struct.isSetEndCreateTime()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetPartnerNo()) {
        oprot.writeString(struct.partnerNo);
      }
      if (struct.isSetAcctId()) {
        oprot.writeI32(struct.acctId);
      }
      if (struct.isSetCustomerIdCard()) {
        oprot.writeString(struct.customerIdCard);
      }
      if (struct.isSetCustomerName()) {
        oprot.writeString(struct.customerName);
      }
      if (struct.isSetMobileNo()) {
        oprot.writeString(struct.mobileNo);
      }
      if (struct.isSetBankCard()) {
        oprot.writeString(struct.bankCard);
      }
      if (struct.isSetBankMobileNo()) {
        oprot.writeString(struct.bankMobileNo);
      }
      if (struct.isSetIp()) {
        oprot.writeString(struct.ip);
      }
      if (struct.isSetMac()) {
        oprot.writeString(struct.mac);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetOperator()) {
        oprot.writeI32(struct.operator);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetBeginCreateTime()) {
        oprot.writeString(struct.beginCreateTime);
      }
      if (struct.isSetEndCreateTime()) {
        oprot.writeString(struct.endCreateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizPartnerCustomerBank struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.partnerNo = iprot.readString();
        struct.setPartnerNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.acctId = iprot.readI32();
        struct.setAcctIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.customerIdCard = iprot.readString();
        struct.setCustomerIdCardIsSet(true);
      }
      if (incoming.get(4)) {
        struct.customerName = iprot.readString();
        struct.setCustomerNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.mobileNo = iprot.readString();
        struct.setMobileNoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.bankCard = iprot.readString();
        struct.setBankCardIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bankMobileNo = iprot.readString();
        struct.setBankMobileNoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.ip = iprot.readString();
        struct.setIpIsSet(true);
      }
      if (incoming.get(9)) {
        struct.mac = iprot.readString();
        struct.setMacIsSet(true);
      }
      if (incoming.get(10)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.operator = iprot.readI32();
        struct.setOperatorIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(15)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(16)) {
        struct.beginCreateTime = iprot.readString();
        struct.setBeginCreateTimeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.endCreateTime = iprot.readString();
        struct.setEndCreateTimeIsSet(true);
      }
    }
  }

}

