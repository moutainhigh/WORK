/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.task;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 任务设定Vo*
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-4-27")
public class TaskSettingVo implements org.apache.thrift.TBase<TaskSettingVo, TaskSettingVo._Fields>, java.io.Serializable, Cloneable, Comparable<TaskSettingVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TaskSettingVo");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField WORKFLOW_PROCESS_DEF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("workflowProcessDefId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField WORKFLOW_PROCESS_DEF_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("workflowProcessDefName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField WORKFLOW_TASK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("workflowTaskId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField WORKFLOW_TASK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("workflowTaskName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OLD_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("oldUserId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField AGENCY_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("agencyUserId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField AGENCY_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("agencyUserName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField BEGIN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("beginDt", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField END_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("endDt", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField USE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("useStatus", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField CRE_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("creDttm", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TaskSettingVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TaskSettingVoTupleSchemeFactory());
  }

  public int pid; // required
  public String workflowProcessDefId; // required
  public String workflowProcessDefName; // required
  public String workflowTaskId; // required
  public String workflowTaskName; // required
  public int oldUserId; // required
  public int agencyUserId; // required
  public String agencyUserName; // required
  public String beginDt; // required
  public String endDt; // required
  public int useStatus; // required
  public String creDttm; // required
  public int status; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    WORKFLOW_PROCESS_DEF_ID((short)2, "workflowProcessDefId"),
    WORKFLOW_PROCESS_DEF_NAME((short)3, "workflowProcessDefName"),
    WORKFLOW_TASK_ID((short)4, "workflowTaskId"),
    WORKFLOW_TASK_NAME((short)5, "workflowTaskName"),
    OLD_USER_ID((short)6, "oldUserId"),
    AGENCY_USER_ID((short)7, "agencyUserId"),
    AGENCY_USER_NAME((short)8, "agencyUserName"),
    BEGIN_DT((short)9, "beginDt"),
    END_DT((short)10, "endDt"),
    USE_STATUS((short)11, "useStatus"),
    CRE_DTTM((short)12, "creDttm"),
    STATUS((short)13, "status");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // WORKFLOW_PROCESS_DEF_ID
          return WORKFLOW_PROCESS_DEF_ID;
        case 3: // WORKFLOW_PROCESS_DEF_NAME
          return WORKFLOW_PROCESS_DEF_NAME;
        case 4: // WORKFLOW_TASK_ID
          return WORKFLOW_TASK_ID;
        case 5: // WORKFLOW_TASK_NAME
          return WORKFLOW_TASK_NAME;
        case 6: // OLD_USER_ID
          return OLD_USER_ID;
        case 7: // AGENCY_USER_ID
          return AGENCY_USER_ID;
        case 8: // AGENCY_USER_NAME
          return AGENCY_USER_NAME;
        case 9: // BEGIN_DT
          return BEGIN_DT;
        case 10: // END_DT
          return END_DT;
        case 11: // USE_STATUS
          return USE_STATUS;
        case 12: // CRE_DTTM
          return CRE_DTTM;
        case 13: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __OLDUSERID_ISSET_ID = 1;
  private static final int __AGENCYUSERID_ISSET_ID = 2;
  private static final int __USESTATUS_ISSET_ID = 3;
  private static final int __STATUS_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORKFLOW_PROCESS_DEF_ID, new org.apache.thrift.meta_data.FieldMetaData("workflowProcessDefId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORKFLOW_PROCESS_DEF_NAME, new org.apache.thrift.meta_data.FieldMetaData("workflowProcessDefName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORKFLOW_TASK_ID, new org.apache.thrift.meta_data.FieldMetaData("workflowTaskId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORKFLOW_TASK_NAME, new org.apache.thrift.meta_data.FieldMetaData("workflowTaskName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("oldUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGENCY_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("agencyUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGENCY_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("agencyUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BEGIN_DT, new org.apache.thrift.meta_data.FieldMetaData("beginDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DT, new org.apache.thrift.meta_data.FieldMetaData("endDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("useStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CRE_DTTM, new org.apache.thrift.meta_data.FieldMetaData("creDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TaskSettingVo.class, metaDataMap);
  }

  public TaskSettingVo() {
  }

  public TaskSettingVo(
    int pid,
    String workflowProcessDefId,
    String workflowProcessDefName,
    String workflowTaskId,
    String workflowTaskName,
    int oldUserId,
    int agencyUserId,
    String agencyUserName,
    String beginDt,
    String endDt,
    int useStatus,
    String creDttm,
    int status)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.workflowProcessDefId = workflowProcessDefId;
    this.workflowProcessDefName = workflowProcessDefName;
    this.workflowTaskId = workflowTaskId;
    this.workflowTaskName = workflowTaskName;
    this.oldUserId = oldUserId;
    setOldUserIdIsSet(true);
    this.agencyUserId = agencyUserId;
    setAgencyUserIdIsSet(true);
    this.agencyUserName = agencyUserName;
    this.beginDt = beginDt;
    this.endDt = endDt;
    this.useStatus = useStatus;
    setUseStatusIsSet(true);
    this.creDttm = creDttm;
    this.status = status;
    setStatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TaskSettingVo(TaskSettingVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetWorkflowProcessDefId()) {
      this.workflowProcessDefId = other.workflowProcessDefId;
    }
    if (other.isSetWorkflowProcessDefName()) {
      this.workflowProcessDefName = other.workflowProcessDefName;
    }
    if (other.isSetWorkflowTaskId()) {
      this.workflowTaskId = other.workflowTaskId;
    }
    if (other.isSetWorkflowTaskName()) {
      this.workflowTaskName = other.workflowTaskName;
    }
    this.oldUserId = other.oldUserId;
    this.agencyUserId = other.agencyUserId;
    if (other.isSetAgencyUserName()) {
      this.agencyUserName = other.agencyUserName;
    }
    if (other.isSetBeginDt()) {
      this.beginDt = other.beginDt;
    }
    if (other.isSetEndDt()) {
      this.endDt = other.endDt;
    }
    this.useStatus = other.useStatus;
    if (other.isSetCreDttm()) {
      this.creDttm = other.creDttm;
    }
    this.status = other.status;
  }

  public TaskSettingVo deepCopy() {
    return new TaskSettingVo(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.workflowProcessDefId = null;
    this.workflowProcessDefName = null;
    this.workflowTaskId = null;
    this.workflowTaskName = null;
    setOldUserIdIsSet(false);
    this.oldUserId = 0;
    setAgencyUserIdIsSet(false);
    this.agencyUserId = 0;
    this.agencyUserName = null;
    this.beginDt = null;
    this.endDt = null;
    setUseStatusIsSet(false);
    this.useStatus = 0;
    this.creDttm = null;
    setStatusIsSet(false);
    this.status = 0;
  }

  public int getPid() {
    return this.pid;
  }

  public TaskSettingVo setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getWorkflowProcessDefId() {
    return this.workflowProcessDefId;
  }

  public TaskSettingVo setWorkflowProcessDefId(String workflowProcessDefId) {
    this.workflowProcessDefId = workflowProcessDefId;
    return this;
  }

  public void unsetWorkflowProcessDefId() {
    this.workflowProcessDefId = null;
  }

  /** Returns true if field workflowProcessDefId is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkflowProcessDefId() {
    return this.workflowProcessDefId != null;
  }

  public void setWorkflowProcessDefIdIsSet(boolean value) {
    if (!value) {
      this.workflowProcessDefId = null;
    }
  }

  public String getWorkflowProcessDefName() {
    return this.workflowProcessDefName;
  }

  public TaskSettingVo setWorkflowProcessDefName(String workflowProcessDefName) {
    this.workflowProcessDefName = workflowProcessDefName;
    return this;
  }

  public void unsetWorkflowProcessDefName() {
    this.workflowProcessDefName = null;
  }

  /** Returns true if field workflowProcessDefName is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkflowProcessDefName() {
    return this.workflowProcessDefName != null;
  }

  public void setWorkflowProcessDefNameIsSet(boolean value) {
    if (!value) {
      this.workflowProcessDefName = null;
    }
  }

  public String getWorkflowTaskId() {
    return this.workflowTaskId;
  }

  public TaskSettingVo setWorkflowTaskId(String workflowTaskId) {
    this.workflowTaskId = workflowTaskId;
    return this;
  }

  public void unsetWorkflowTaskId() {
    this.workflowTaskId = null;
  }

  /** Returns true if field workflowTaskId is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkflowTaskId() {
    return this.workflowTaskId != null;
  }

  public void setWorkflowTaskIdIsSet(boolean value) {
    if (!value) {
      this.workflowTaskId = null;
    }
  }

  public String getWorkflowTaskName() {
    return this.workflowTaskName;
  }

  public TaskSettingVo setWorkflowTaskName(String workflowTaskName) {
    this.workflowTaskName = workflowTaskName;
    return this;
  }

  public void unsetWorkflowTaskName() {
    this.workflowTaskName = null;
  }

  /** Returns true if field workflowTaskName is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkflowTaskName() {
    return this.workflowTaskName != null;
  }

  public void setWorkflowTaskNameIsSet(boolean value) {
    if (!value) {
      this.workflowTaskName = null;
    }
  }

  public int getOldUserId() {
    return this.oldUserId;
  }

  public TaskSettingVo setOldUserId(int oldUserId) {
    this.oldUserId = oldUserId;
    setOldUserIdIsSet(true);
    return this;
  }

  public void unsetOldUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDUSERID_ISSET_ID);
  }

  /** Returns true if field oldUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetOldUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDUSERID_ISSET_ID);
  }

  public void setOldUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDUSERID_ISSET_ID, value);
  }

  public int getAgencyUserId() {
    return this.agencyUserId;
  }

  public TaskSettingVo setAgencyUserId(int agencyUserId) {
    this.agencyUserId = agencyUserId;
    setAgencyUserIdIsSet(true);
    return this;
  }

  public void unsetAgencyUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGENCYUSERID_ISSET_ID);
  }

  /** Returns true if field agencyUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgencyUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __AGENCYUSERID_ISSET_ID);
  }

  public void setAgencyUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGENCYUSERID_ISSET_ID, value);
  }

  public String getAgencyUserName() {
    return this.agencyUserName;
  }

  public TaskSettingVo setAgencyUserName(String agencyUserName) {
    this.agencyUserName = agencyUserName;
    return this;
  }

  public void unsetAgencyUserName() {
    this.agencyUserName = null;
  }

  /** Returns true if field agencyUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetAgencyUserName() {
    return this.agencyUserName != null;
  }

  public void setAgencyUserNameIsSet(boolean value) {
    if (!value) {
      this.agencyUserName = null;
    }
  }

  public String getBeginDt() {
    return this.beginDt;
  }

  public TaskSettingVo setBeginDt(String beginDt) {
    this.beginDt = beginDt;
    return this;
  }

  public void unsetBeginDt() {
    this.beginDt = null;
  }

  /** Returns true if field beginDt is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginDt() {
    return this.beginDt != null;
  }

  public void setBeginDtIsSet(boolean value) {
    if (!value) {
      this.beginDt = null;
    }
  }

  public String getEndDt() {
    return this.endDt;
  }

  public TaskSettingVo setEndDt(String endDt) {
    this.endDt = endDt;
    return this;
  }

  public void unsetEndDt() {
    this.endDt = null;
  }

  /** Returns true if field endDt is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDt() {
    return this.endDt != null;
  }

  public void setEndDtIsSet(boolean value) {
    if (!value) {
      this.endDt = null;
    }
  }

  public int getUseStatus() {
    return this.useStatus;
  }

  public TaskSettingVo setUseStatus(int useStatus) {
    this.useStatus = useStatus;
    setUseStatusIsSet(true);
    return this;
  }

  public void unsetUseStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USESTATUS_ISSET_ID);
  }

  /** Returns true if field useStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetUseStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __USESTATUS_ISSET_ID);
  }

  public void setUseStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USESTATUS_ISSET_ID, value);
  }

  public String getCreDttm() {
    return this.creDttm;
  }

  public TaskSettingVo setCreDttm(String creDttm) {
    this.creDttm = creDttm;
    return this;
  }

  public void unsetCreDttm() {
    this.creDttm = null;
  }

  /** Returns true if field creDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetCreDttm() {
    return this.creDttm != null;
  }

  public void setCreDttmIsSet(boolean value) {
    if (!value) {
      this.creDttm = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public TaskSettingVo setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case WORKFLOW_PROCESS_DEF_ID:
      if (value == null) {
        unsetWorkflowProcessDefId();
      } else {
        setWorkflowProcessDefId((String)value);
      }
      break;

    case WORKFLOW_PROCESS_DEF_NAME:
      if (value == null) {
        unsetWorkflowProcessDefName();
      } else {
        setWorkflowProcessDefName((String)value);
      }
      break;

    case WORKFLOW_TASK_ID:
      if (value == null) {
        unsetWorkflowTaskId();
      } else {
        setWorkflowTaskId((String)value);
      }
      break;

    case WORKFLOW_TASK_NAME:
      if (value == null) {
        unsetWorkflowTaskName();
      } else {
        setWorkflowTaskName((String)value);
      }
      break;

    case OLD_USER_ID:
      if (value == null) {
        unsetOldUserId();
      } else {
        setOldUserId((Integer)value);
      }
      break;

    case AGENCY_USER_ID:
      if (value == null) {
        unsetAgencyUserId();
      } else {
        setAgencyUserId((Integer)value);
      }
      break;

    case AGENCY_USER_NAME:
      if (value == null) {
        unsetAgencyUserName();
      } else {
        setAgencyUserName((String)value);
      }
      break;

    case BEGIN_DT:
      if (value == null) {
        unsetBeginDt();
      } else {
        setBeginDt((String)value);
      }
      break;

    case END_DT:
      if (value == null) {
        unsetEndDt();
      } else {
        setEndDt((String)value);
      }
      break;

    case USE_STATUS:
      if (value == null) {
        unsetUseStatus();
      } else {
        setUseStatus((Integer)value);
      }
      break;

    case CRE_DTTM:
      if (value == null) {
        unsetCreDttm();
      } else {
        setCreDttm((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case WORKFLOW_PROCESS_DEF_ID:
      return getWorkflowProcessDefId();

    case WORKFLOW_PROCESS_DEF_NAME:
      return getWorkflowProcessDefName();

    case WORKFLOW_TASK_ID:
      return getWorkflowTaskId();

    case WORKFLOW_TASK_NAME:
      return getWorkflowTaskName();

    case OLD_USER_ID:
      return Integer.valueOf(getOldUserId());

    case AGENCY_USER_ID:
      return Integer.valueOf(getAgencyUserId());

    case AGENCY_USER_NAME:
      return getAgencyUserName();

    case BEGIN_DT:
      return getBeginDt();

    case END_DT:
      return getEndDt();

    case USE_STATUS:
      return Integer.valueOf(getUseStatus());

    case CRE_DTTM:
      return getCreDttm();

    case STATUS:
      return Integer.valueOf(getStatus());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case WORKFLOW_PROCESS_DEF_ID:
      return isSetWorkflowProcessDefId();
    case WORKFLOW_PROCESS_DEF_NAME:
      return isSetWorkflowProcessDefName();
    case WORKFLOW_TASK_ID:
      return isSetWorkflowTaskId();
    case WORKFLOW_TASK_NAME:
      return isSetWorkflowTaskName();
    case OLD_USER_ID:
      return isSetOldUserId();
    case AGENCY_USER_ID:
      return isSetAgencyUserId();
    case AGENCY_USER_NAME:
      return isSetAgencyUserName();
    case BEGIN_DT:
      return isSetBeginDt();
    case END_DT:
      return isSetEndDt();
    case USE_STATUS:
      return isSetUseStatus();
    case CRE_DTTM:
      return isSetCreDttm();
    case STATUS:
      return isSetStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TaskSettingVo)
      return this.equals((TaskSettingVo)that);
    return false;
  }

  public boolean equals(TaskSettingVo that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_workflowProcessDefId = true && this.isSetWorkflowProcessDefId();
    boolean that_present_workflowProcessDefId = true && that.isSetWorkflowProcessDefId();
    if (this_present_workflowProcessDefId || that_present_workflowProcessDefId) {
      if (!(this_present_workflowProcessDefId && that_present_workflowProcessDefId))
        return false;
      if (!this.workflowProcessDefId.equals(that.workflowProcessDefId))
        return false;
    }

    boolean this_present_workflowProcessDefName = true && this.isSetWorkflowProcessDefName();
    boolean that_present_workflowProcessDefName = true && that.isSetWorkflowProcessDefName();
    if (this_present_workflowProcessDefName || that_present_workflowProcessDefName) {
      if (!(this_present_workflowProcessDefName && that_present_workflowProcessDefName))
        return false;
      if (!this.workflowProcessDefName.equals(that.workflowProcessDefName))
        return false;
    }

    boolean this_present_workflowTaskId = true && this.isSetWorkflowTaskId();
    boolean that_present_workflowTaskId = true && that.isSetWorkflowTaskId();
    if (this_present_workflowTaskId || that_present_workflowTaskId) {
      if (!(this_present_workflowTaskId && that_present_workflowTaskId))
        return false;
      if (!this.workflowTaskId.equals(that.workflowTaskId))
        return false;
    }

    boolean this_present_workflowTaskName = true && this.isSetWorkflowTaskName();
    boolean that_present_workflowTaskName = true && that.isSetWorkflowTaskName();
    if (this_present_workflowTaskName || that_present_workflowTaskName) {
      if (!(this_present_workflowTaskName && that_present_workflowTaskName))
        return false;
      if (!this.workflowTaskName.equals(that.workflowTaskName))
        return false;
    }

    boolean this_present_oldUserId = true;
    boolean that_present_oldUserId = true;
    if (this_present_oldUserId || that_present_oldUserId) {
      if (!(this_present_oldUserId && that_present_oldUserId))
        return false;
      if (this.oldUserId != that.oldUserId)
        return false;
    }

    boolean this_present_agencyUserId = true;
    boolean that_present_agencyUserId = true;
    if (this_present_agencyUserId || that_present_agencyUserId) {
      if (!(this_present_agencyUserId && that_present_agencyUserId))
        return false;
      if (this.agencyUserId != that.agencyUserId)
        return false;
    }

    boolean this_present_agencyUserName = true && this.isSetAgencyUserName();
    boolean that_present_agencyUserName = true && that.isSetAgencyUserName();
    if (this_present_agencyUserName || that_present_agencyUserName) {
      if (!(this_present_agencyUserName && that_present_agencyUserName))
        return false;
      if (!this.agencyUserName.equals(that.agencyUserName))
        return false;
    }

    boolean this_present_beginDt = true && this.isSetBeginDt();
    boolean that_present_beginDt = true && that.isSetBeginDt();
    if (this_present_beginDt || that_present_beginDt) {
      if (!(this_present_beginDt && that_present_beginDt))
        return false;
      if (!this.beginDt.equals(that.beginDt))
        return false;
    }

    boolean this_present_endDt = true && this.isSetEndDt();
    boolean that_present_endDt = true && that.isSetEndDt();
    if (this_present_endDt || that_present_endDt) {
      if (!(this_present_endDt && that_present_endDt))
        return false;
      if (!this.endDt.equals(that.endDt))
        return false;
    }

    boolean this_present_useStatus = true;
    boolean that_present_useStatus = true;
    if (this_present_useStatus || that_present_useStatus) {
      if (!(this_present_useStatus && that_present_useStatus))
        return false;
      if (this.useStatus != that.useStatus)
        return false;
    }

    boolean this_present_creDttm = true && this.isSetCreDttm();
    boolean that_present_creDttm = true && that.isSetCreDttm();
    if (this_present_creDttm || that_present_creDttm) {
      if (!(this_present_creDttm && that_present_creDttm))
        return false;
      if (!this.creDttm.equals(that.creDttm))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_workflowProcessDefId = true && (isSetWorkflowProcessDefId());
    list.add(present_workflowProcessDefId);
    if (present_workflowProcessDefId)
      list.add(workflowProcessDefId);

    boolean present_workflowProcessDefName = true && (isSetWorkflowProcessDefName());
    list.add(present_workflowProcessDefName);
    if (present_workflowProcessDefName)
      list.add(workflowProcessDefName);

    boolean present_workflowTaskId = true && (isSetWorkflowTaskId());
    list.add(present_workflowTaskId);
    if (present_workflowTaskId)
      list.add(workflowTaskId);

    boolean present_workflowTaskName = true && (isSetWorkflowTaskName());
    list.add(present_workflowTaskName);
    if (present_workflowTaskName)
      list.add(workflowTaskName);

    boolean present_oldUserId = true;
    list.add(present_oldUserId);
    if (present_oldUserId)
      list.add(oldUserId);

    boolean present_agencyUserId = true;
    list.add(present_agencyUserId);
    if (present_agencyUserId)
      list.add(agencyUserId);

    boolean present_agencyUserName = true && (isSetAgencyUserName());
    list.add(present_agencyUserName);
    if (present_agencyUserName)
      list.add(agencyUserName);

    boolean present_beginDt = true && (isSetBeginDt());
    list.add(present_beginDt);
    if (present_beginDt)
      list.add(beginDt);

    boolean present_endDt = true && (isSetEndDt());
    list.add(present_endDt);
    if (present_endDt)
      list.add(endDt);

    boolean present_useStatus = true;
    list.add(present_useStatus);
    if (present_useStatus)
      list.add(useStatus);

    boolean present_creDttm = true && (isSetCreDttm());
    list.add(present_creDttm);
    if (present_creDttm)
      list.add(creDttm);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    return list.hashCode();
  }

  @Override
  public int compareTo(TaskSettingVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWorkflowProcessDefId()).compareTo(other.isSetWorkflowProcessDefId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkflowProcessDefId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflowProcessDefId, other.workflowProcessDefId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWorkflowProcessDefName()).compareTo(other.isSetWorkflowProcessDefName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkflowProcessDefName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflowProcessDefName, other.workflowProcessDefName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWorkflowTaskId()).compareTo(other.isSetWorkflowTaskId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkflowTaskId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflowTaskId, other.workflowTaskId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWorkflowTaskName()).compareTo(other.isSetWorkflowTaskName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkflowTaskName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workflowTaskName, other.workflowTaskName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldUserId()).compareTo(other.isSetOldUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldUserId, other.oldUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgencyUserId()).compareTo(other.isSetAgencyUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgencyUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agencyUserId, other.agencyUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgencyUserName()).compareTo(other.isSetAgencyUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgencyUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agencyUserName, other.agencyUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBeginDt()).compareTo(other.isSetBeginDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginDt, other.beginDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDt()).compareTo(other.isSetEndDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDt, other.endDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUseStatus()).compareTo(other.isSetUseStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUseStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.useStatus, other.useStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreDttm()).compareTo(other.isSetCreDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creDttm, other.creDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TaskSettingVo(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("workflowProcessDefId:");
    if (this.workflowProcessDefId == null) {
      sb.append("null");
    } else {
      sb.append(this.workflowProcessDefId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("workflowProcessDefName:");
    if (this.workflowProcessDefName == null) {
      sb.append("null");
    } else {
      sb.append(this.workflowProcessDefName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("workflowTaskId:");
    if (this.workflowTaskId == null) {
      sb.append("null");
    } else {
      sb.append(this.workflowTaskId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("workflowTaskName:");
    if (this.workflowTaskName == null) {
      sb.append("null");
    } else {
      sb.append(this.workflowTaskName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldUserId:");
    sb.append(this.oldUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("agencyUserId:");
    sb.append(this.agencyUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("agencyUserName:");
    if (this.agencyUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.agencyUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("beginDt:");
    if (this.beginDt == null) {
      sb.append("null");
    } else {
      sb.append(this.beginDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDt:");
    if (this.endDt == null) {
      sb.append("null");
    } else {
      sb.append(this.endDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("useStatus:");
    sb.append(this.useStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creDttm:");
    if (this.creDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.creDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TaskSettingVoStandardSchemeFactory implements SchemeFactory {
    public TaskSettingVoStandardScheme getScheme() {
      return new TaskSettingVoStandardScheme();
    }
  }

  private static class TaskSettingVoStandardScheme extends StandardScheme<TaskSettingVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TaskSettingVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WORKFLOW_PROCESS_DEF_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workflowProcessDefId = iprot.readString();
              struct.setWorkflowProcessDefIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WORKFLOW_PROCESS_DEF_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workflowProcessDefName = iprot.readString();
              struct.setWorkflowProcessDefNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WORKFLOW_TASK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workflowTaskId = iprot.readString();
              struct.setWorkflowTaskIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WORKFLOW_TASK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workflowTaskName = iprot.readString();
              struct.setWorkflowTaskNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OLD_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oldUserId = iprot.readI32();
              struct.setOldUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AGENCY_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.agencyUserId = iprot.readI32();
              struct.setAgencyUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AGENCY_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agencyUserName = iprot.readString();
              struct.setAgencyUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BEGIN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.beginDt = iprot.readString();
              struct.setBeginDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // END_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDt = iprot.readString();
              struct.setEndDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // USE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.useStatus = iprot.readI32();
              struct.setUseStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CRE_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.creDttm = iprot.readString();
              struct.setCreDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TaskSettingVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.workflowProcessDefId != null) {
        oprot.writeFieldBegin(WORKFLOW_PROCESS_DEF_ID_FIELD_DESC);
        oprot.writeString(struct.workflowProcessDefId);
        oprot.writeFieldEnd();
      }
      if (struct.workflowProcessDefName != null) {
        oprot.writeFieldBegin(WORKFLOW_PROCESS_DEF_NAME_FIELD_DESC);
        oprot.writeString(struct.workflowProcessDefName);
        oprot.writeFieldEnd();
      }
      if (struct.workflowTaskId != null) {
        oprot.writeFieldBegin(WORKFLOW_TASK_ID_FIELD_DESC);
        oprot.writeString(struct.workflowTaskId);
        oprot.writeFieldEnd();
      }
      if (struct.workflowTaskName != null) {
        oprot.writeFieldBegin(WORKFLOW_TASK_NAME_FIELD_DESC);
        oprot.writeString(struct.workflowTaskName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(OLD_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.oldUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AGENCY_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.agencyUserId);
      oprot.writeFieldEnd();
      if (struct.agencyUserName != null) {
        oprot.writeFieldBegin(AGENCY_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.agencyUserName);
        oprot.writeFieldEnd();
      }
      if (struct.beginDt != null) {
        oprot.writeFieldBegin(BEGIN_DT_FIELD_DESC);
        oprot.writeString(struct.beginDt);
        oprot.writeFieldEnd();
      }
      if (struct.endDt != null) {
        oprot.writeFieldBegin(END_DT_FIELD_DESC);
        oprot.writeString(struct.endDt);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(USE_STATUS_FIELD_DESC);
      oprot.writeI32(struct.useStatus);
      oprot.writeFieldEnd();
      if (struct.creDttm != null) {
        oprot.writeFieldBegin(CRE_DTTM_FIELD_DESC);
        oprot.writeString(struct.creDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TaskSettingVoTupleSchemeFactory implements SchemeFactory {
    public TaskSettingVoTupleScheme getScheme() {
      return new TaskSettingVoTupleScheme();
    }
  }

  private static class TaskSettingVoTupleScheme extends TupleScheme<TaskSettingVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TaskSettingVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetWorkflowProcessDefId()) {
        optionals.set(1);
      }
      if (struct.isSetWorkflowProcessDefName()) {
        optionals.set(2);
      }
      if (struct.isSetWorkflowTaskId()) {
        optionals.set(3);
      }
      if (struct.isSetWorkflowTaskName()) {
        optionals.set(4);
      }
      if (struct.isSetOldUserId()) {
        optionals.set(5);
      }
      if (struct.isSetAgencyUserId()) {
        optionals.set(6);
      }
      if (struct.isSetAgencyUserName()) {
        optionals.set(7);
      }
      if (struct.isSetBeginDt()) {
        optionals.set(8);
      }
      if (struct.isSetEndDt()) {
        optionals.set(9);
      }
      if (struct.isSetUseStatus()) {
        optionals.set(10);
      }
      if (struct.isSetCreDttm()) {
        optionals.set(11);
      }
      if (struct.isSetStatus()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetWorkflowProcessDefId()) {
        oprot.writeString(struct.workflowProcessDefId);
      }
      if (struct.isSetWorkflowProcessDefName()) {
        oprot.writeString(struct.workflowProcessDefName);
      }
      if (struct.isSetWorkflowTaskId()) {
        oprot.writeString(struct.workflowTaskId);
      }
      if (struct.isSetWorkflowTaskName()) {
        oprot.writeString(struct.workflowTaskName);
      }
      if (struct.isSetOldUserId()) {
        oprot.writeI32(struct.oldUserId);
      }
      if (struct.isSetAgencyUserId()) {
        oprot.writeI32(struct.agencyUserId);
      }
      if (struct.isSetAgencyUserName()) {
        oprot.writeString(struct.agencyUserName);
      }
      if (struct.isSetBeginDt()) {
        oprot.writeString(struct.beginDt);
      }
      if (struct.isSetEndDt()) {
        oprot.writeString(struct.endDt);
      }
      if (struct.isSetUseStatus()) {
        oprot.writeI32(struct.useStatus);
      }
      if (struct.isSetCreDttm()) {
        oprot.writeString(struct.creDttm);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TaskSettingVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.workflowProcessDefId = iprot.readString();
        struct.setWorkflowProcessDefIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.workflowProcessDefName = iprot.readString();
        struct.setWorkflowProcessDefNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.workflowTaskId = iprot.readString();
        struct.setWorkflowTaskIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.workflowTaskName = iprot.readString();
        struct.setWorkflowTaskNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.oldUserId = iprot.readI32();
        struct.setOldUserIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.agencyUserId = iprot.readI32();
        struct.setAgencyUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.agencyUserName = iprot.readString();
        struct.setAgencyUserNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.beginDt = iprot.readString();
        struct.setBeginDtIsSet(true);
      }
      if (incoming.get(9)) {
        struct.endDt = iprot.readString();
        struct.setEndDtIsSet(true);
      }
      if (incoming.get(10)) {
        struct.useStatus = iprot.readI32();
        struct.setUseStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.creDttm = iprot.readString();
        struct.setCreDttmIsSet(true);
      }
      if (incoming.get(12)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
    }
  }

}

