/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.system;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 系统地区信息
 * chenzhuzhen
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-5")
public class SysAreaInfo implements org.apache.thrift.TBase<SysAreaInfo, SysAreaInfo._Fields>, java.io.Serializable, Cloneable, Comparable<SysAreaInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SysAreaInfo");

  private static final org.apache.thrift.protocol.TField AREA_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("areaCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AREA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("areaName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PARENT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("parentCode", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LEVEL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("levelNo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField AREA_TEL_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("areaTelCode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CENTER_FIELD_DESC = new org.apache.thrift.protocol.TField("center", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField OLD_AREA_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("oldAreaCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SysAreaInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SysAreaInfoTupleSchemeFactory());
  }

  public String areaCode; // required
  public String areaName; // required
  public String parentCode; // required
  public String levelNo; // required
  public String areaTelCode; // required
  public String center; // required
  public String oldAreaCode; // required
  public int page; // required
  public int rows; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AREA_CODE((short)1, "areaCode"),
    AREA_NAME((short)2, "areaName"),
    PARENT_CODE((short)3, "parentCode"),
    LEVEL_NO((short)4, "levelNo"),
    AREA_TEL_CODE((short)5, "areaTelCode"),
    CENTER((short)6, "center"),
    OLD_AREA_CODE((short)7, "oldAreaCode"),
    PAGE((short)8, "page"),
    ROWS((short)9, "rows");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AREA_CODE
          return AREA_CODE;
        case 2: // AREA_NAME
          return AREA_NAME;
        case 3: // PARENT_CODE
          return PARENT_CODE;
        case 4: // LEVEL_NO
          return LEVEL_NO;
        case 5: // AREA_TEL_CODE
          return AREA_TEL_CODE;
        case 6: // CENTER
          return CENTER;
        case 7: // OLD_AREA_CODE
          return OLD_AREA_CODE;
        case 8: // PAGE
          return PAGE;
        case 9: // ROWS
          return ROWS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAGE_ISSET_ID = 0;
  private static final int __ROWS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AREA_CODE, new org.apache.thrift.meta_data.FieldMetaData("areaCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_NAME, new org.apache.thrift.meta_data.FieldMetaData("areaName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARENT_CODE, new org.apache.thrift.meta_data.FieldMetaData("parentCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEVEL_NO, new org.apache.thrift.meta_data.FieldMetaData("levelNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_TEL_CODE, new org.apache.thrift.meta_data.FieldMetaData("areaTelCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CENTER, new org.apache.thrift.meta_data.FieldMetaData("center", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_AREA_CODE, new org.apache.thrift.meta_data.FieldMetaData("oldAreaCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SysAreaInfo.class, metaDataMap);
  }

  public SysAreaInfo() {
    this.page = 1;

    this.rows = 10;

  }

  public SysAreaInfo(
    String areaCode,
    String areaName,
    String parentCode,
    String levelNo,
    String areaTelCode,
    String center,
    String oldAreaCode,
    int page,
    int rows)
  {
    this();
    this.areaCode = areaCode;
    this.areaName = areaName;
    this.parentCode = parentCode;
    this.levelNo = levelNo;
    this.areaTelCode = areaTelCode;
    this.center = center;
    this.oldAreaCode = oldAreaCode;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SysAreaInfo(SysAreaInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAreaCode()) {
      this.areaCode = other.areaCode;
    }
    if (other.isSetAreaName()) {
      this.areaName = other.areaName;
    }
    if (other.isSetParentCode()) {
      this.parentCode = other.parentCode;
    }
    if (other.isSetLevelNo()) {
      this.levelNo = other.levelNo;
    }
    if (other.isSetAreaTelCode()) {
      this.areaTelCode = other.areaTelCode;
    }
    if (other.isSetCenter()) {
      this.center = other.center;
    }
    if (other.isSetOldAreaCode()) {
      this.oldAreaCode = other.oldAreaCode;
    }
    this.page = other.page;
    this.rows = other.rows;
  }

  public SysAreaInfo deepCopy() {
    return new SysAreaInfo(this);
  }

  @Override
  public void clear() {
    this.areaCode = null;
    this.areaName = null;
    this.parentCode = null;
    this.levelNo = null;
    this.areaTelCode = null;
    this.center = null;
    this.oldAreaCode = null;
    this.page = 1;

    this.rows = 10;

  }

  public String getAreaCode() {
    return this.areaCode;
  }

  public SysAreaInfo setAreaCode(String areaCode) {
    this.areaCode = areaCode;
    return this;
  }

  public void unsetAreaCode() {
    this.areaCode = null;
  }

  /** Returns true if field areaCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaCode() {
    return this.areaCode != null;
  }

  public void setAreaCodeIsSet(boolean value) {
    if (!value) {
      this.areaCode = null;
    }
  }

  public String getAreaName() {
    return this.areaName;
  }

  public SysAreaInfo setAreaName(String areaName) {
    this.areaName = areaName;
    return this;
  }

  public void unsetAreaName() {
    this.areaName = null;
  }

  /** Returns true if field areaName is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaName() {
    return this.areaName != null;
  }

  public void setAreaNameIsSet(boolean value) {
    if (!value) {
      this.areaName = null;
    }
  }

  public String getParentCode() {
    return this.parentCode;
  }

  public SysAreaInfo setParentCode(String parentCode) {
    this.parentCode = parentCode;
    return this;
  }

  public void unsetParentCode() {
    this.parentCode = null;
  }

  /** Returns true if field parentCode is set (has been assigned a value) and false otherwise */
  public boolean isSetParentCode() {
    return this.parentCode != null;
  }

  public void setParentCodeIsSet(boolean value) {
    if (!value) {
      this.parentCode = null;
    }
  }

  public String getLevelNo() {
    return this.levelNo;
  }

  public SysAreaInfo setLevelNo(String levelNo) {
    this.levelNo = levelNo;
    return this;
  }

  public void unsetLevelNo() {
    this.levelNo = null;
  }

  /** Returns true if field levelNo is set (has been assigned a value) and false otherwise */
  public boolean isSetLevelNo() {
    return this.levelNo != null;
  }

  public void setLevelNoIsSet(boolean value) {
    if (!value) {
      this.levelNo = null;
    }
  }

  public String getAreaTelCode() {
    return this.areaTelCode;
  }

  public SysAreaInfo setAreaTelCode(String areaTelCode) {
    this.areaTelCode = areaTelCode;
    return this;
  }

  public void unsetAreaTelCode() {
    this.areaTelCode = null;
  }

  /** Returns true if field areaTelCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaTelCode() {
    return this.areaTelCode != null;
  }

  public void setAreaTelCodeIsSet(boolean value) {
    if (!value) {
      this.areaTelCode = null;
    }
  }

  public String getCenter() {
    return this.center;
  }

  public SysAreaInfo setCenter(String center) {
    this.center = center;
    return this;
  }

  public void unsetCenter() {
    this.center = null;
  }

  /** Returns true if field center is set (has been assigned a value) and false otherwise */
  public boolean isSetCenter() {
    return this.center != null;
  }

  public void setCenterIsSet(boolean value) {
    if (!value) {
      this.center = null;
    }
  }

  public String getOldAreaCode() {
    return this.oldAreaCode;
  }

  public SysAreaInfo setOldAreaCode(String oldAreaCode) {
    this.oldAreaCode = oldAreaCode;
    return this;
  }

  public void unsetOldAreaCode() {
    this.oldAreaCode = null;
  }

  /** Returns true if field oldAreaCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOldAreaCode() {
    return this.oldAreaCode != null;
  }

  public void setOldAreaCodeIsSet(boolean value) {
    if (!value) {
      this.oldAreaCode = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public SysAreaInfo setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public SysAreaInfo setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AREA_CODE:
      if (value == null) {
        unsetAreaCode();
      } else {
        setAreaCode((String)value);
      }
      break;

    case AREA_NAME:
      if (value == null) {
        unsetAreaName();
      } else {
        setAreaName((String)value);
      }
      break;

    case PARENT_CODE:
      if (value == null) {
        unsetParentCode();
      } else {
        setParentCode((String)value);
      }
      break;

    case LEVEL_NO:
      if (value == null) {
        unsetLevelNo();
      } else {
        setLevelNo((String)value);
      }
      break;

    case AREA_TEL_CODE:
      if (value == null) {
        unsetAreaTelCode();
      } else {
        setAreaTelCode((String)value);
      }
      break;

    case CENTER:
      if (value == null) {
        unsetCenter();
      } else {
        setCenter((String)value);
      }
      break;

    case OLD_AREA_CODE:
      if (value == null) {
        unsetOldAreaCode();
      } else {
        setOldAreaCode((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AREA_CODE:
      return getAreaCode();

    case AREA_NAME:
      return getAreaName();

    case PARENT_CODE:
      return getParentCode();

    case LEVEL_NO:
      return getLevelNo();

    case AREA_TEL_CODE:
      return getAreaTelCode();

    case CENTER:
      return getCenter();

    case OLD_AREA_CODE:
      return getOldAreaCode();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AREA_CODE:
      return isSetAreaCode();
    case AREA_NAME:
      return isSetAreaName();
    case PARENT_CODE:
      return isSetParentCode();
    case LEVEL_NO:
      return isSetLevelNo();
    case AREA_TEL_CODE:
      return isSetAreaTelCode();
    case CENTER:
      return isSetCenter();
    case OLD_AREA_CODE:
      return isSetOldAreaCode();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SysAreaInfo)
      return this.equals((SysAreaInfo)that);
    return false;
  }

  public boolean equals(SysAreaInfo that) {
    if (that == null)
      return false;

    boolean this_present_areaCode = true && this.isSetAreaCode();
    boolean that_present_areaCode = true && that.isSetAreaCode();
    if (this_present_areaCode || that_present_areaCode) {
      if (!(this_present_areaCode && that_present_areaCode))
        return false;
      if (!this.areaCode.equals(that.areaCode))
        return false;
    }

    boolean this_present_areaName = true && this.isSetAreaName();
    boolean that_present_areaName = true && that.isSetAreaName();
    if (this_present_areaName || that_present_areaName) {
      if (!(this_present_areaName && that_present_areaName))
        return false;
      if (!this.areaName.equals(that.areaName))
        return false;
    }

    boolean this_present_parentCode = true && this.isSetParentCode();
    boolean that_present_parentCode = true && that.isSetParentCode();
    if (this_present_parentCode || that_present_parentCode) {
      if (!(this_present_parentCode && that_present_parentCode))
        return false;
      if (!this.parentCode.equals(that.parentCode))
        return false;
    }

    boolean this_present_levelNo = true && this.isSetLevelNo();
    boolean that_present_levelNo = true && that.isSetLevelNo();
    if (this_present_levelNo || that_present_levelNo) {
      if (!(this_present_levelNo && that_present_levelNo))
        return false;
      if (!this.levelNo.equals(that.levelNo))
        return false;
    }

    boolean this_present_areaTelCode = true && this.isSetAreaTelCode();
    boolean that_present_areaTelCode = true && that.isSetAreaTelCode();
    if (this_present_areaTelCode || that_present_areaTelCode) {
      if (!(this_present_areaTelCode && that_present_areaTelCode))
        return false;
      if (!this.areaTelCode.equals(that.areaTelCode))
        return false;
    }

    boolean this_present_center = true && this.isSetCenter();
    boolean that_present_center = true && that.isSetCenter();
    if (this_present_center || that_present_center) {
      if (!(this_present_center && that_present_center))
        return false;
      if (!this.center.equals(that.center))
        return false;
    }

    boolean this_present_oldAreaCode = true && this.isSetOldAreaCode();
    boolean that_present_oldAreaCode = true && that.isSetOldAreaCode();
    if (this_present_oldAreaCode || that_present_oldAreaCode) {
      if (!(this_present_oldAreaCode && that_present_oldAreaCode))
        return false;
      if (!this.oldAreaCode.equals(that.oldAreaCode))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_areaCode = true && (isSetAreaCode());
    list.add(present_areaCode);
    if (present_areaCode)
      list.add(areaCode);

    boolean present_areaName = true && (isSetAreaName());
    list.add(present_areaName);
    if (present_areaName)
      list.add(areaName);

    boolean present_parentCode = true && (isSetParentCode());
    list.add(present_parentCode);
    if (present_parentCode)
      list.add(parentCode);

    boolean present_levelNo = true && (isSetLevelNo());
    list.add(present_levelNo);
    if (present_levelNo)
      list.add(levelNo);

    boolean present_areaTelCode = true && (isSetAreaTelCode());
    list.add(present_areaTelCode);
    if (present_areaTelCode)
      list.add(areaTelCode);

    boolean present_center = true && (isSetCenter());
    list.add(present_center);
    if (present_center)
      list.add(center);

    boolean present_oldAreaCode = true && (isSetOldAreaCode());
    list.add(present_oldAreaCode);
    if (present_oldAreaCode)
      list.add(oldAreaCode);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    return list.hashCode();
  }

  @Override
  public int compareTo(SysAreaInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAreaCode()).compareTo(other.isSetAreaCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaCode, other.areaCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaName()).compareTo(other.isSetAreaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaName, other.areaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParentCode()).compareTo(other.isSetParentCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentCode, other.parentCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevelNo()).compareTo(other.isSetLevelNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevelNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.levelNo, other.levelNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaTelCode()).compareTo(other.isSetAreaTelCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaTelCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaTelCode, other.areaTelCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCenter()).compareTo(other.isSetCenter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCenter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.center, other.center);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldAreaCode()).compareTo(other.isSetOldAreaCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldAreaCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldAreaCode, other.oldAreaCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SysAreaInfo(");
    boolean first = true;

    sb.append("areaCode:");
    if (this.areaCode == null) {
      sb.append("null");
    } else {
      sb.append(this.areaCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaName:");
    if (this.areaName == null) {
      sb.append("null");
    } else {
      sb.append(this.areaName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("parentCode:");
    if (this.parentCode == null) {
      sb.append("null");
    } else {
      sb.append(this.parentCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("levelNo:");
    if (this.levelNo == null) {
      sb.append("null");
    } else {
      sb.append(this.levelNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("areaTelCode:");
    if (this.areaTelCode == null) {
      sb.append("null");
    } else {
      sb.append(this.areaTelCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("center:");
    if (this.center == null) {
      sb.append("null");
    } else {
      sb.append(this.center);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldAreaCode:");
    if (this.oldAreaCode == null) {
      sb.append("null");
    } else {
      sb.append(this.oldAreaCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SysAreaInfoStandardSchemeFactory implements SchemeFactory {
    public SysAreaInfoStandardScheme getScheme() {
      return new SysAreaInfoStandardScheme();
    }
  }

  private static class SysAreaInfoStandardScheme extends StandardScheme<SysAreaInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SysAreaInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AREA_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaCode = iprot.readString();
              struct.setAreaCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AREA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaName = iprot.readString();
              struct.setAreaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARENT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.parentCode = iprot.readString();
              struct.setParentCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LEVEL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.levelNo = iprot.readString();
              struct.setLevelNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AREA_TEL_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.areaTelCode = iprot.readString();
              struct.setAreaTelCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CENTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.center = iprot.readString();
              struct.setCenterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OLD_AREA_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldAreaCode = iprot.readString();
              struct.setOldAreaCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SysAreaInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.areaCode != null) {
        oprot.writeFieldBegin(AREA_CODE_FIELD_DESC);
        oprot.writeString(struct.areaCode);
        oprot.writeFieldEnd();
      }
      if (struct.areaName != null) {
        oprot.writeFieldBegin(AREA_NAME_FIELD_DESC);
        oprot.writeString(struct.areaName);
        oprot.writeFieldEnd();
      }
      if (struct.parentCode != null) {
        oprot.writeFieldBegin(PARENT_CODE_FIELD_DESC);
        oprot.writeString(struct.parentCode);
        oprot.writeFieldEnd();
      }
      if (struct.levelNo != null) {
        oprot.writeFieldBegin(LEVEL_NO_FIELD_DESC);
        oprot.writeString(struct.levelNo);
        oprot.writeFieldEnd();
      }
      if (struct.areaTelCode != null) {
        oprot.writeFieldBegin(AREA_TEL_CODE_FIELD_DESC);
        oprot.writeString(struct.areaTelCode);
        oprot.writeFieldEnd();
      }
      if (struct.center != null) {
        oprot.writeFieldBegin(CENTER_FIELD_DESC);
        oprot.writeString(struct.center);
        oprot.writeFieldEnd();
      }
      if (struct.oldAreaCode != null) {
        oprot.writeFieldBegin(OLD_AREA_CODE_FIELD_DESC);
        oprot.writeString(struct.oldAreaCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SysAreaInfoTupleSchemeFactory implements SchemeFactory {
    public SysAreaInfoTupleScheme getScheme() {
      return new SysAreaInfoTupleScheme();
    }
  }

  private static class SysAreaInfoTupleScheme extends TupleScheme<SysAreaInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SysAreaInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAreaCode()) {
        optionals.set(0);
      }
      if (struct.isSetAreaName()) {
        optionals.set(1);
      }
      if (struct.isSetParentCode()) {
        optionals.set(2);
      }
      if (struct.isSetLevelNo()) {
        optionals.set(3);
      }
      if (struct.isSetAreaTelCode()) {
        optionals.set(4);
      }
      if (struct.isSetCenter()) {
        optionals.set(5);
      }
      if (struct.isSetOldAreaCode()) {
        optionals.set(6);
      }
      if (struct.isSetPage()) {
        optionals.set(7);
      }
      if (struct.isSetRows()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetAreaCode()) {
        oprot.writeString(struct.areaCode);
      }
      if (struct.isSetAreaName()) {
        oprot.writeString(struct.areaName);
      }
      if (struct.isSetParentCode()) {
        oprot.writeString(struct.parentCode);
      }
      if (struct.isSetLevelNo()) {
        oprot.writeString(struct.levelNo);
      }
      if (struct.isSetAreaTelCode()) {
        oprot.writeString(struct.areaTelCode);
      }
      if (struct.isSetCenter()) {
        oprot.writeString(struct.center);
      }
      if (struct.isSetOldAreaCode()) {
        oprot.writeString(struct.oldAreaCode);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SysAreaInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.areaCode = iprot.readString();
        struct.setAreaCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.areaName = iprot.readString();
        struct.setAreaNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.parentCode = iprot.readString();
        struct.setParentCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.levelNo = iprot.readString();
        struct.setLevelNoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.areaTelCode = iprot.readString();
        struct.setAreaTelCodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.center = iprot.readString();
        struct.setCenterIsSet(true);
      }
      if (incoming.get(6)) {
        struct.oldAreaCode = iprot.readString();
        struct.setOldAreaCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(8)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
    }
  }

}

