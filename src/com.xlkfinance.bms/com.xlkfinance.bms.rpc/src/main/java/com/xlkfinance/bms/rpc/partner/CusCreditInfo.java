/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.partner;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-3-14")
public class CusCreditInfo implements org.apache.thrift.TBase<CusCreditInfo, CusCreditInfo._Fields>, java.io.Serializable, Cloneable, Comparable<CusCreditInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CusCreditInfo");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PARTNER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("acctId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREDIT_DEAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("creditDealId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RECORD_FIELD_DESC = new org.apache.thrift.protocol.TField("record", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OVERDUE_FIELD_DESC = new org.apache.thrift.protocol.TField("overdue", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField RESULT1_FIELD_DESC = new org.apache.thrift.protocol.TField("result1", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField RESULT2_FIELD_DESC = new org.apache.thrift.protocol.TField("result2", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField RESULT3_FIELD_DESC = new org.apache.thrift.protocol.TField("result3", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField RESULT4_FIELD_DESC = new org.apache.thrift.protocol.TField("result4", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField RESULT5_FIELD_DESC = new org.apache.thrift.protocol.TField("result5", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField RESULT6_FIELD_DESC = new org.apache.thrift.protocol.TField("result6", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField RESULT7_FIELD_DESC = new org.apache.thrift.protocol.TField("result7", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField CHINA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("chinaName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField CERT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("certType", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CERT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("certNumber", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField BUSINESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessType", org.apache.thrift.protocol.TType.I32, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CusCreditInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CusCreditInfoTupleSchemeFactory());
  }

  public int pid; // required
  public String partnerNo; // required
  public int acctId; // required
  public String creditDealId; // required
  public String record; // required
  public String overdue; // required
  public String result1; // required
  public String result2; // required
  public String result3; // required
  public String result4; // required
  public String result5; // required
  public String result6; // required
  public String result7; // required
  public String createTime; // required
  public String updateTime; // required
  public int page; // required
  public int rows; // required
  public String chinaName; // required
  public int certType; // required
  public String certNumber; // required
  public int businessType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    PARTNER_NO((short)2, "partnerNo"),
    ACCT_ID((short)3, "acctId"),
    CREDIT_DEAL_ID((short)4, "creditDealId"),
    RECORD((short)5, "record"),
    OVERDUE((short)6, "overdue"),
    RESULT1((short)7, "result1"),
    RESULT2((short)8, "result2"),
    RESULT3((short)9, "result3"),
    RESULT4((short)10, "result4"),
    RESULT5((short)11, "result5"),
    RESULT6((short)12, "result6"),
    RESULT7((short)13, "result7"),
    CREATE_TIME((short)14, "createTime"),
    UPDATE_TIME((short)15, "updateTime"),
    PAGE((short)16, "page"),
    ROWS((short)17, "rows"),
    CHINA_NAME((short)18, "chinaName"),
    CERT_TYPE((short)19, "certType"),
    CERT_NUMBER((short)20, "certNumber"),
    BUSINESS_TYPE((short)21, "businessType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // PARTNER_NO
          return PARTNER_NO;
        case 3: // ACCT_ID
          return ACCT_ID;
        case 4: // CREDIT_DEAL_ID
          return CREDIT_DEAL_ID;
        case 5: // RECORD
          return RECORD;
        case 6: // OVERDUE
          return OVERDUE;
        case 7: // RESULT1
          return RESULT1;
        case 8: // RESULT2
          return RESULT2;
        case 9: // RESULT3
          return RESULT3;
        case 10: // RESULT4
          return RESULT4;
        case 11: // RESULT5
          return RESULT5;
        case 12: // RESULT6
          return RESULT6;
        case 13: // RESULT7
          return RESULT7;
        case 14: // CREATE_TIME
          return CREATE_TIME;
        case 15: // UPDATE_TIME
          return UPDATE_TIME;
        case 16: // PAGE
          return PAGE;
        case 17: // ROWS
          return ROWS;
        case 18: // CHINA_NAME
          return CHINA_NAME;
        case 19: // CERT_TYPE
          return CERT_TYPE;
        case 20: // CERT_NUMBER
          return CERT_NUMBER;
        case 21: // BUSINESS_TYPE
          return BUSINESS_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ACCTID_ISSET_ID = 1;
  private static final int __PAGE_ISSET_ID = 2;
  private static final int __ROWS_ISSET_ID = 3;
  private static final int __CERTTYPE_ISSET_ID = 4;
  private static final int __BUSINESSTYPE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_NO, new org.apache.thrift.meta_data.FieldMetaData("partnerNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_ID, new org.apache.thrift.meta_data.FieldMetaData("acctId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREDIT_DEAL_ID, new org.apache.thrift.meta_data.FieldMetaData("creditDealId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECORD, new org.apache.thrift.meta_data.FieldMetaData("record", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OVERDUE, new org.apache.thrift.meta_data.FieldMetaData("overdue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT1, new org.apache.thrift.meta_data.FieldMetaData("result1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT2, new org.apache.thrift.meta_data.FieldMetaData("result2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT3, new org.apache.thrift.meta_data.FieldMetaData("result3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT4, new org.apache.thrift.meta_data.FieldMetaData("result4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT5, new org.apache.thrift.meta_data.FieldMetaData("result5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT6, new org.apache.thrift.meta_data.FieldMetaData("result6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT7, new org.apache.thrift.meta_data.FieldMetaData("result7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHINA_NAME, new org.apache.thrift.meta_data.FieldMetaData("chinaName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CERT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("certType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CERT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("certNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("businessType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CusCreditInfo.class, metaDataMap);
  }

  public CusCreditInfo() {
  }

  public CusCreditInfo(
    int pid,
    String partnerNo,
    int acctId,
    String creditDealId,
    String record,
    String overdue,
    String result1,
    String result2,
    String result3,
    String result4,
    String result5,
    String result6,
    String result7,
    String createTime,
    String updateTime,
    int page,
    int rows,
    String chinaName,
    int certType,
    String certNumber,
    int businessType)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.partnerNo = partnerNo;
    this.acctId = acctId;
    setAcctIdIsSet(true);
    this.creditDealId = creditDealId;
    this.record = record;
    this.overdue = overdue;
    this.result1 = result1;
    this.result2 = result2;
    this.result3 = result3;
    this.result4 = result4;
    this.result5 = result5;
    this.result6 = result6;
    this.result7 = result7;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.chinaName = chinaName;
    this.certType = certType;
    setCertTypeIsSet(true);
    this.certNumber = certNumber;
    this.businessType = businessType;
    setBusinessTypeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CusCreditInfo(CusCreditInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetPartnerNo()) {
      this.partnerNo = other.partnerNo;
    }
    this.acctId = other.acctId;
    if (other.isSetCreditDealId()) {
      this.creditDealId = other.creditDealId;
    }
    if (other.isSetRecord()) {
      this.record = other.record;
    }
    if (other.isSetOverdue()) {
      this.overdue = other.overdue;
    }
    if (other.isSetResult1()) {
      this.result1 = other.result1;
    }
    if (other.isSetResult2()) {
      this.result2 = other.result2;
    }
    if (other.isSetResult3()) {
      this.result3 = other.result3;
    }
    if (other.isSetResult4()) {
      this.result4 = other.result4;
    }
    if (other.isSetResult5()) {
      this.result5 = other.result5;
    }
    if (other.isSetResult6()) {
      this.result6 = other.result6;
    }
    if (other.isSetResult7()) {
      this.result7 = other.result7;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetChinaName()) {
      this.chinaName = other.chinaName;
    }
    this.certType = other.certType;
    if (other.isSetCertNumber()) {
      this.certNumber = other.certNumber;
    }
    this.businessType = other.businessType;
  }

  public CusCreditInfo deepCopy() {
    return new CusCreditInfo(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.partnerNo = null;
    setAcctIdIsSet(false);
    this.acctId = 0;
    this.creditDealId = null;
    this.record = null;
    this.overdue = null;
    this.result1 = null;
    this.result2 = null;
    this.result3 = null;
    this.result4 = null;
    this.result5 = null;
    this.result6 = null;
    this.result7 = null;
    this.createTime = null;
    this.updateTime = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.chinaName = null;
    setCertTypeIsSet(false);
    this.certType = 0;
    this.certNumber = null;
    setBusinessTypeIsSet(false);
    this.businessType = 0;
  }

  public int getPid() {
    return this.pid;
  }

  public CusCreditInfo setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getPartnerNo() {
    return this.partnerNo;
  }

  public CusCreditInfo setPartnerNo(String partnerNo) {
    this.partnerNo = partnerNo;
    return this;
  }

  public void unsetPartnerNo() {
    this.partnerNo = null;
  }

  /** Returns true if field partnerNo is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerNo() {
    return this.partnerNo != null;
  }

  public void setPartnerNoIsSet(boolean value) {
    if (!value) {
      this.partnerNo = null;
    }
  }

  public int getAcctId() {
    return this.acctId;
  }

  public CusCreditInfo setAcctId(int acctId) {
    this.acctId = acctId;
    setAcctIdIsSet(true);
    return this;
  }

  public void unsetAcctId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCTID_ISSET_ID);
  }

  /** Returns true if field acctId is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCTID_ISSET_ID);
  }

  public void setAcctIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCTID_ISSET_ID, value);
  }

  public String getCreditDealId() {
    return this.creditDealId;
  }

  public CusCreditInfo setCreditDealId(String creditDealId) {
    this.creditDealId = creditDealId;
    return this;
  }

  public void unsetCreditDealId() {
    this.creditDealId = null;
  }

  /** Returns true if field creditDealId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditDealId() {
    return this.creditDealId != null;
  }

  public void setCreditDealIdIsSet(boolean value) {
    if (!value) {
      this.creditDealId = null;
    }
  }

  public String getRecord() {
    return this.record;
  }

  public CusCreditInfo setRecord(String record) {
    this.record = record;
    return this;
  }

  public void unsetRecord() {
    this.record = null;
  }

  /** Returns true if field record is set (has been assigned a value) and false otherwise */
  public boolean isSetRecord() {
    return this.record != null;
  }

  public void setRecordIsSet(boolean value) {
    if (!value) {
      this.record = null;
    }
  }

  public String getOverdue() {
    return this.overdue;
  }

  public CusCreditInfo setOverdue(String overdue) {
    this.overdue = overdue;
    return this;
  }

  public void unsetOverdue() {
    this.overdue = null;
  }

  /** Returns true if field overdue is set (has been assigned a value) and false otherwise */
  public boolean isSetOverdue() {
    return this.overdue != null;
  }

  public void setOverdueIsSet(boolean value) {
    if (!value) {
      this.overdue = null;
    }
  }

  public String getResult1() {
    return this.result1;
  }

  public CusCreditInfo setResult1(String result1) {
    this.result1 = result1;
    return this;
  }

  public void unsetResult1() {
    this.result1 = null;
  }

  /** Returns true if field result1 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult1() {
    return this.result1 != null;
  }

  public void setResult1IsSet(boolean value) {
    if (!value) {
      this.result1 = null;
    }
  }

  public String getResult2() {
    return this.result2;
  }

  public CusCreditInfo setResult2(String result2) {
    this.result2 = result2;
    return this;
  }

  public void unsetResult2() {
    this.result2 = null;
  }

  /** Returns true if field result2 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult2() {
    return this.result2 != null;
  }

  public void setResult2IsSet(boolean value) {
    if (!value) {
      this.result2 = null;
    }
  }

  public String getResult3() {
    return this.result3;
  }

  public CusCreditInfo setResult3(String result3) {
    this.result3 = result3;
    return this;
  }

  public void unsetResult3() {
    this.result3 = null;
  }

  /** Returns true if field result3 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult3() {
    return this.result3 != null;
  }

  public void setResult3IsSet(boolean value) {
    if (!value) {
      this.result3 = null;
    }
  }

  public String getResult4() {
    return this.result4;
  }

  public CusCreditInfo setResult4(String result4) {
    this.result4 = result4;
    return this;
  }

  public void unsetResult4() {
    this.result4 = null;
  }

  /** Returns true if field result4 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult4() {
    return this.result4 != null;
  }

  public void setResult4IsSet(boolean value) {
    if (!value) {
      this.result4 = null;
    }
  }

  public String getResult5() {
    return this.result5;
  }

  public CusCreditInfo setResult5(String result5) {
    this.result5 = result5;
    return this;
  }

  public void unsetResult5() {
    this.result5 = null;
  }

  /** Returns true if field result5 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult5() {
    return this.result5 != null;
  }

  public void setResult5IsSet(boolean value) {
    if (!value) {
      this.result5 = null;
    }
  }

  public String getResult6() {
    return this.result6;
  }

  public CusCreditInfo setResult6(String result6) {
    this.result6 = result6;
    return this;
  }

  public void unsetResult6() {
    this.result6 = null;
  }

  /** Returns true if field result6 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult6() {
    return this.result6 != null;
  }

  public void setResult6IsSet(boolean value) {
    if (!value) {
      this.result6 = null;
    }
  }

  public String getResult7() {
    return this.result7;
  }

  public CusCreditInfo setResult7(String result7) {
    this.result7 = result7;
    return this;
  }

  public void unsetResult7() {
    this.result7 = null;
  }

  /** Returns true if field result7 is set (has been assigned a value) and false otherwise */
  public boolean isSetResult7() {
    return this.result7 != null;
  }

  public void setResult7IsSet(boolean value) {
    if (!value) {
      this.result7 = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public CusCreditInfo setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public CusCreditInfo setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public CusCreditInfo setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public CusCreditInfo setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getChinaName() {
    return this.chinaName;
  }

  public CusCreditInfo setChinaName(String chinaName) {
    this.chinaName = chinaName;
    return this;
  }

  public void unsetChinaName() {
    this.chinaName = null;
  }

  /** Returns true if field chinaName is set (has been assigned a value) and false otherwise */
  public boolean isSetChinaName() {
    return this.chinaName != null;
  }

  public void setChinaNameIsSet(boolean value) {
    if (!value) {
      this.chinaName = null;
    }
  }

  public int getCertType() {
    return this.certType;
  }

  public CusCreditInfo setCertType(int certType) {
    this.certType = certType;
    setCertTypeIsSet(true);
    return this;
  }

  public void unsetCertType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CERTTYPE_ISSET_ID);
  }

  /** Returns true if field certType is set (has been assigned a value) and false otherwise */
  public boolean isSetCertType() {
    return EncodingUtils.testBit(__isset_bitfield, __CERTTYPE_ISSET_ID);
  }

  public void setCertTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CERTTYPE_ISSET_ID, value);
  }

  public String getCertNumber() {
    return this.certNumber;
  }

  public CusCreditInfo setCertNumber(String certNumber) {
    this.certNumber = certNumber;
    return this;
  }

  public void unsetCertNumber() {
    this.certNumber = null;
  }

  /** Returns true if field certNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetCertNumber() {
    return this.certNumber != null;
  }

  public void setCertNumberIsSet(boolean value) {
    if (!value) {
      this.certNumber = null;
    }
  }

  public int getBusinessType() {
    return this.businessType;
  }

  public CusCreditInfo setBusinessType(int businessType) {
    this.businessType = businessType;
    setBusinessTypeIsSet(true);
    return this;
  }

  public void unsetBusinessType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSTYPE_ISSET_ID);
  }

  /** Returns true if field businessType is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessType() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSTYPE_ISSET_ID);
  }

  public void setBusinessTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSTYPE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case PARTNER_NO:
      if (value == null) {
        unsetPartnerNo();
      } else {
        setPartnerNo((String)value);
      }
      break;

    case ACCT_ID:
      if (value == null) {
        unsetAcctId();
      } else {
        setAcctId((Integer)value);
      }
      break;

    case CREDIT_DEAL_ID:
      if (value == null) {
        unsetCreditDealId();
      } else {
        setCreditDealId((String)value);
      }
      break;

    case RECORD:
      if (value == null) {
        unsetRecord();
      } else {
        setRecord((String)value);
      }
      break;

    case OVERDUE:
      if (value == null) {
        unsetOverdue();
      } else {
        setOverdue((String)value);
      }
      break;

    case RESULT1:
      if (value == null) {
        unsetResult1();
      } else {
        setResult1((String)value);
      }
      break;

    case RESULT2:
      if (value == null) {
        unsetResult2();
      } else {
        setResult2((String)value);
      }
      break;

    case RESULT3:
      if (value == null) {
        unsetResult3();
      } else {
        setResult3((String)value);
      }
      break;

    case RESULT4:
      if (value == null) {
        unsetResult4();
      } else {
        setResult4((String)value);
      }
      break;

    case RESULT5:
      if (value == null) {
        unsetResult5();
      } else {
        setResult5((String)value);
      }
      break;

    case RESULT6:
      if (value == null) {
        unsetResult6();
      } else {
        setResult6((String)value);
      }
      break;

    case RESULT7:
      if (value == null) {
        unsetResult7();
      } else {
        setResult7((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case CHINA_NAME:
      if (value == null) {
        unsetChinaName();
      } else {
        setChinaName((String)value);
      }
      break;

    case CERT_TYPE:
      if (value == null) {
        unsetCertType();
      } else {
        setCertType((Integer)value);
      }
      break;

    case CERT_NUMBER:
      if (value == null) {
        unsetCertNumber();
      } else {
        setCertNumber((String)value);
      }
      break;

    case BUSINESS_TYPE:
      if (value == null) {
        unsetBusinessType();
      } else {
        setBusinessType((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case PARTNER_NO:
      return getPartnerNo();

    case ACCT_ID:
      return Integer.valueOf(getAcctId());

    case CREDIT_DEAL_ID:
      return getCreditDealId();

    case RECORD:
      return getRecord();

    case OVERDUE:
      return getOverdue();

    case RESULT1:
      return getResult1();

    case RESULT2:
      return getResult2();

    case RESULT3:
      return getResult3();

    case RESULT4:
      return getResult4();

    case RESULT5:
      return getResult5();

    case RESULT6:
      return getResult6();

    case RESULT7:
      return getResult7();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case CHINA_NAME:
      return getChinaName();

    case CERT_TYPE:
      return Integer.valueOf(getCertType());

    case CERT_NUMBER:
      return getCertNumber();

    case BUSINESS_TYPE:
      return Integer.valueOf(getBusinessType());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case PARTNER_NO:
      return isSetPartnerNo();
    case ACCT_ID:
      return isSetAcctId();
    case CREDIT_DEAL_ID:
      return isSetCreditDealId();
    case RECORD:
      return isSetRecord();
    case OVERDUE:
      return isSetOverdue();
    case RESULT1:
      return isSetResult1();
    case RESULT2:
      return isSetResult2();
    case RESULT3:
      return isSetResult3();
    case RESULT4:
      return isSetResult4();
    case RESULT5:
      return isSetResult5();
    case RESULT6:
      return isSetResult6();
    case RESULT7:
      return isSetResult7();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case CHINA_NAME:
      return isSetChinaName();
    case CERT_TYPE:
      return isSetCertType();
    case CERT_NUMBER:
      return isSetCertNumber();
    case BUSINESS_TYPE:
      return isSetBusinessType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CusCreditInfo)
      return this.equals((CusCreditInfo)that);
    return false;
  }

  public boolean equals(CusCreditInfo that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_partnerNo = true && this.isSetPartnerNo();
    boolean that_present_partnerNo = true && that.isSetPartnerNo();
    if (this_present_partnerNo || that_present_partnerNo) {
      if (!(this_present_partnerNo && that_present_partnerNo))
        return false;
      if (!this.partnerNo.equals(that.partnerNo))
        return false;
    }

    boolean this_present_acctId = true;
    boolean that_present_acctId = true;
    if (this_present_acctId || that_present_acctId) {
      if (!(this_present_acctId && that_present_acctId))
        return false;
      if (this.acctId != that.acctId)
        return false;
    }

    boolean this_present_creditDealId = true && this.isSetCreditDealId();
    boolean that_present_creditDealId = true && that.isSetCreditDealId();
    if (this_present_creditDealId || that_present_creditDealId) {
      if (!(this_present_creditDealId && that_present_creditDealId))
        return false;
      if (!this.creditDealId.equals(that.creditDealId))
        return false;
    }

    boolean this_present_record = true && this.isSetRecord();
    boolean that_present_record = true && that.isSetRecord();
    if (this_present_record || that_present_record) {
      if (!(this_present_record && that_present_record))
        return false;
      if (!this.record.equals(that.record))
        return false;
    }

    boolean this_present_overdue = true && this.isSetOverdue();
    boolean that_present_overdue = true && that.isSetOverdue();
    if (this_present_overdue || that_present_overdue) {
      if (!(this_present_overdue && that_present_overdue))
        return false;
      if (!this.overdue.equals(that.overdue))
        return false;
    }

    boolean this_present_result1 = true && this.isSetResult1();
    boolean that_present_result1 = true && that.isSetResult1();
    if (this_present_result1 || that_present_result1) {
      if (!(this_present_result1 && that_present_result1))
        return false;
      if (!this.result1.equals(that.result1))
        return false;
    }

    boolean this_present_result2 = true && this.isSetResult2();
    boolean that_present_result2 = true && that.isSetResult2();
    if (this_present_result2 || that_present_result2) {
      if (!(this_present_result2 && that_present_result2))
        return false;
      if (!this.result2.equals(that.result2))
        return false;
    }

    boolean this_present_result3 = true && this.isSetResult3();
    boolean that_present_result3 = true && that.isSetResult3();
    if (this_present_result3 || that_present_result3) {
      if (!(this_present_result3 && that_present_result3))
        return false;
      if (!this.result3.equals(that.result3))
        return false;
    }

    boolean this_present_result4 = true && this.isSetResult4();
    boolean that_present_result4 = true && that.isSetResult4();
    if (this_present_result4 || that_present_result4) {
      if (!(this_present_result4 && that_present_result4))
        return false;
      if (!this.result4.equals(that.result4))
        return false;
    }

    boolean this_present_result5 = true && this.isSetResult5();
    boolean that_present_result5 = true && that.isSetResult5();
    if (this_present_result5 || that_present_result5) {
      if (!(this_present_result5 && that_present_result5))
        return false;
      if (!this.result5.equals(that.result5))
        return false;
    }

    boolean this_present_result6 = true && this.isSetResult6();
    boolean that_present_result6 = true && that.isSetResult6();
    if (this_present_result6 || that_present_result6) {
      if (!(this_present_result6 && that_present_result6))
        return false;
      if (!this.result6.equals(that.result6))
        return false;
    }

    boolean this_present_result7 = true && this.isSetResult7();
    boolean that_present_result7 = true && that.isSetResult7();
    if (this_present_result7 || that_present_result7) {
      if (!(this_present_result7 && that_present_result7))
        return false;
      if (!this.result7.equals(that.result7))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_chinaName = true && this.isSetChinaName();
    boolean that_present_chinaName = true && that.isSetChinaName();
    if (this_present_chinaName || that_present_chinaName) {
      if (!(this_present_chinaName && that_present_chinaName))
        return false;
      if (!this.chinaName.equals(that.chinaName))
        return false;
    }

    boolean this_present_certType = true;
    boolean that_present_certType = true;
    if (this_present_certType || that_present_certType) {
      if (!(this_present_certType && that_present_certType))
        return false;
      if (this.certType != that.certType)
        return false;
    }

    boolean this_present_certNumber = true && this.isSetCertNumber();
    boolean that_present_certNumber = true && that.isSetCertNumber();
    if (this_present_certNumber || that_present_certNumber) {
      if (!(this_present_certNumber && that_present_certNumber))
        return false;
      if (!this.certNumber.equals(that.certNumber))
        return false;
    }

    boolean this_present_businessType = true;
    boolean that_present_businessType = true;
    if (this_present_businessType || that_present_businessType) {
      if (!(this_present_businessType && that_present_businessType))
        return false;
      if (this.businessType != that.businessType)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_partnerNo = true && (isSetPartnerNo());
    list.add(present_partnerNo);
    if (present_partnerNo)
      list.add(partnerNo);

    boolean present_acctId = true;
    list.add(present_acctId);
    if (present_acctId)
      list.add(acctId);

    boolean present_creditDealId = true && (isSetCreditDealId());
    list.add(present_creditDealId);
    if (present_creditDealId)
      list.add(creditDealId);

    boolean present_record = true && (isSetRecord());
    list.add(present_record);
    if (present_record)
      list.add(record);

    boolean present_overdue = true && (isSetOverdue());
    list.add(present_overdue);
    if (present_overdue)
      list.add(overdue);

    boolean present_result1 = true && (isSetResult1());
    list.add(present_result1);
    if (present_result1)
      list.add(result1);

    boolean present_result2 = true && (isSetResult2());
    list.add(present_result2);
    if (present_result2)
      list.add(result2);

    boolean present_result3 = true && (isSetResult3());
    list.add(present_result3);
    if (present_result3)
      list.add(result3);

    boolean present_result4 = true && (isSetResult4());
    list.add(present_result4);
    if (present_result4)
      list.add(result4);

    boolean present_result5 = true && (isSetResult5());
    list.add(present_result5);
    if (present_result5)
      list.add(result5);

    boolean present_result6 = true && (isSetResult6());
    list.add(present_result6);
    if (present_result6)
      list.add(result6);

    boolean present_result7 = true && (isSetResult7());
    list.add(present_result7);
    if (present_result7)
      list.add(result7);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_updateTime = true && (isSetUpdateTime());
    list.add(present_updateTime);
    if (present_updateTime)
      list.add(updateTime);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_chinaName = true && (isSetChinaName());
    list.add(present_chinaName);
    if (present_chinaName)
      list.add(chinaName);

    boolean present_certType = true;
    list.add(present_certType);
    if (present_certType)
      list.add(certType);

    boolean present_certNumber = true && (isSetCertNumber());
    list.add(present_certNumber);
    if (present_certNumber)
      list.add(certNumber);

    boolean present_businessType = true;
    list.add(present_businessType);
    if (present_businessType)
      list.add(businessType);

    return list.hashCode();
  }

  @Override
  public int compareTo(CusCreditInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerNo()).compareTo(other.isSetPartnerNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerNo, other.partnerNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctId()).compareTo(other.isSetAcctId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctId, other.acctId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditDealId()).compareTo(other.isSetCreditDealId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditDealId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditDealId, other.creditDealId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecord()).compareTo(other.isSetRecord());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecord()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.record, other.record);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOverdue()).compareTo(other.isSetOverdue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOverdue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.overdue, other.overdue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult1()).compareTo(other.isSetResult1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result1, other.result1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult2()).compareTo(other.isSetResult2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result2, other.result2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult3()).compareTo(other.isSetResult3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result3, other.result3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult4()).compareTo(other.isSetResult4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result4, other.result4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult5()).compareTo(other.isSetResult5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result5, other.result5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult6()).compareTo(other.isSetResult6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result6, other.result6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResult7()).compareTo(other.isSetResult7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result7, other.result7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChinaName()).compareTo(other.isSetChinaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChinaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chinaName, other.chinaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCertType()).compareTo(other.isSetCertType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCertType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.certType, other.certType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCertNumber()).compareTo(other.isSetCertNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCertNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.certNumber, other.certNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessType()).compareTo(other.isSetBusinessType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessType, other.businessType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CusCreditInfo(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerNo:");
    if (this.partnerNo == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("acctId:");
    sb.append(this.acctId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditDealId:");
    if (this.creditDealId == null) {
      sb.append("null");
    } else {
      sb.append(this.creditDealId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("record:");
    if (this.record == null) {
      sb.append("null");
    } else {
      sb.append(this.record);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("overdue:");
    if (this.overdue == null) {
      sb.append("null");
    } else {
      sb.append(this.overdue);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result1:");
    if (this.result1 == null) {
      sb.append("null");
    } else {
      sb.append(this.result1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result2:");
    if (this.result2 == null) {
      sb.append("null");
    } else {
      sb.append(this.result2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result3:");
    if (this.result3 == null) {
      sb.append("null");
    } else {
      sb.append(this.result3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result4:");
    if (this.result4 == null) {
      sb.append("null");
    } else {
      sb.append(this.result4);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result5:");
    if (this.result5 == null) {
      sb.append("null");
    } else {
      sb.append(this.result5);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result6:");
    if (this.result6 == null) {
      sb.append("null");
    } else {
      sb.append(this.result6);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result7:");
    if (this.result7 == null) {
      sb.append("null");
    } else {
      sb.append(this.result7);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    if (this.createTime == null) {
      sb.append("null");
    } else {
      sb.append(this.createTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    if (this.updateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.updateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chinaName:");
    if (this.chinaName == null) {
      sb.append("null");
    } else {
      sb.append(this.chinaName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("certType:");
    sb.append(this.certType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("certNumber:");
    if (this.certNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.certNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessType:");
    sb.append(this.businessType);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CusCreditInfoStandardSchemeFactory implements SchemeFactory {
    public CusCreditInfoStandardScheme getScheme() {
      return new CusCreditInfoStandardScheme();
    }
  }

  private static class CusCreditInfoStandardScheme extends StandardScheme<CusCreditInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CusCreditInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PARTNER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerNo = iprot.readString();
              struct.setPartnerNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.acctId = iprot.readI32();
              struct.setAcctIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREDIT_DEAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.creditDealId = iprot.readString();
              struct.setCreditDealIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RECORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.record = iprot.readString();
              struct.setRecordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OVERDUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.overdue = iprot.readString();
              struct.setOverdueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RESULT1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result1 = iprot.readString();
              struct.setResult1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESULT2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result2 = iprot.readString();
              struct.setResult2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RESULT3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result3 = iprot.readString();
              struct.setResult3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // RESULT4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result4 = iprot.readString();
              struct.setResult4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RESULT5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result5 = iprot.readString();
              struct.setResult5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RESULT6
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result6 = iprot.readString();
              struct.setResult6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // RESULT7
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result7 = iprot.readString();
              struct.setResult7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CHINA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chinaName = iprot.readString();
              struct.setChinaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CERT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.certType = iprot.readI32();
              struct.setCertTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CERT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.certNumber = iprot.readString();
              struct.setCertNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // BUSINESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.businessType = iprot.readI32();
              struct.setBusinessTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CusCreditInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.partnerNo != null) {
        oprot.writeFieldBegin(PARTNER_NO_FIELD_DESC);
        oprot.writeString(struct.partnerNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCT_ID_FIELD_DESC);
      oprot.writeI32(struct.acctId);
      oprot.writeFieldEnd();
      if (struct.creditDealId != null) {
        oprot.writeFieldBegin(CREDIT_DEAL_ID_FIELD_DESC);
        oprot.writeString(struct.creditDealId);
        oprot.writeFieldEnd();
      }
      if (struct.record != null) {
        oprot.writeFieldBegin(RECORD_FIELD_DESC);
        oprot.writeString(struct.record);
        oprot.writeFieldEnd();
      }
      if (struct.overdue != null) {
        oprot.writeFieldBegin(OVERDUE_FIELD_DESC);
        oprot.writeString(struct.overdue);
        oprot.writeFieldEnd();
      }
      if (struct.result1 != null) {
        oprot.writeFieldBegin(RESULT1_FIELD_DESC);
        oprot.writeString(struct.result1);
        oprot.writeFieldEnd();
      }
      if (struct.result2 != null) {
        oprot.writeFieldBegin(RESULT2_FIELD_DESC);
        oprot.writeString(struct.result2);
        oprot.writeFieldEnd();
      }
      if (struct.result3 != null) {
        oprot.writeFieldBegin(RESULT3_FIELD_DESC);
        oprot.writeString(struct.result3);
        oprot.writeFieldEnd();
      }
      if (struct.result4 != null) {
        oprot.writeFieldBegin(RESULT4_FIELD_DESC);
        oprot.writeString(struct.result4);
        oprot.writeFieldEnd();
      }
      if (struct.result5 != null) {
        oprot.writeFieldBegin(RESULT5_FIELD_DESC);
        oprot.writeString(struct.result5);
        oprot.writeFieldEnd();
      }
      if (struct.result6 != null) {
        oprot.writeFieldBegin(RESULT6_FIELD_DESC);
        oprot.writeString(struct.result6);
        oprot.writeFieldEnd();
      }
      if (struct.result7 != null) {
        oprot.writeFieldBegin(RESULT7_FIELD_DESC);
        oprot.writeString(struct.result7);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.updateTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.chinaName != null) {
        oprot.writeFieldBegin(CHINA_NAME_FIELD_DESC);
        oprot.writeString(struct.chinaName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CERT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.certType);
      oprot.writeFieldEnd();
      if (struct.certNumber != null) {
        oprot.writeFieldBegin(CERT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.certNumber);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUSINESS_TYPE_FIELD_DESC);
      oprot.writeI32(struct.businessType);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CusCreditInfoTupleSchemeFactory implements SchemeFactory {
    public CusCreditInfoTupleScheme getScheme() {
      return new CusCreditInfoTupleScheme();
    }
  }

  private static class CusCreditInfoTupleScheme extends TupleScheme<CusCreditInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CusCreditInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetPartnerNo()) {
        optionals.set(1);
      }
      if (struct.isSetAcctId()) {
        optionals.set(2);
      }
      if (struct.isSetCreditDealId()) {
        optionals.set(3);
      }
      if (struct.isSetRecord()) {
        optionals.set(4);
      }
      if (struct.isSetOverdue()) {
        optionals.set(5);
      }
      if (struct.isSetResult1()) {
        optionals.set(6);
      }
      if (struct.isSetResult2()) {
        optionals.set(7);
      }
      if (struct.isSetResult3()) {
        optionals.set(8);
      }
      if (struct.isSetResult4()) {
        optionals.set(9);
      }
      if (struct.isSetResult5()) {
        optionals.set(10);
      }
      if (struct.isSetResult6()) {
        optionals.set(11);
      }
      if (struct.isSetResult7()) {
        optionals.set(12);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(13);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(14);
      }
      if (struct.isSetPage()) {
        optionals.set(15);
      }
      if (struct.isSetRows()) {
        optionals.set(16);
      }
      if (struct.isSetChinaName()) {
        optionals.set(17);
      }
      if (struct.isSetCertType()) {
        optionals.set(18);
      }
      if (struct.isSetCertNumber()) {
        optionals.set(19);
      }
      if (struct.isSetBusinessType()) {
        optionals.set(20);
      }
      oprot.writeBitSet(optionals, 21);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetPartnerNo()) {
        oprot.writeString(struct.partnerNo);
      }
      if (struct.isSetAcctId()) {
        oprot.writeI32(struct.acctId);
      }
      if (struct.isSetCreditDealId()) {
        oprot.writeString(struct.creditDealId);
      }
      if (struct.isSetRecord()) {
        oprot.writeString(struct.record);
      }
      if (struct.isSetOverdue()) {
        oprot.writeString(struct.overdue);
      }
      if (struct.isSetResult1()) {
        oprot.writeString(struct.result1);
      }
      if (struct.isSetResult2()) {
        oprot.writeString(struct.result2);
      }
      if (struct.isSetResult3()) {
        oprot.writeString(struct.result3);
      }
      if (struct.isSetResult4()) {
        oprot.writeString(struct.result4);
      }
      if (struct.isSetResult5()) {
        oprot.writeString(struct.result5);
      }
      if (struct.isSetResult6()) {
        oprot.writeString(struct.result6);
      }
      if (struct.isSetResult7()) {
        oprot.writeString(struct.result7);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetChinaName()) {
        oprot.writeString(struct.chinaName);
      }
      if (struct.isSetCertType()) {
        oprot.writeI32(struct.certType);
      }
      if (struct.isSetCertNumber()) {
        oprot.writeString(struct.certNumber);
      }
      if (struct.isSetBusinessType()) {
        oprot.writeI32(struct.businessType);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CusCreditInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(21);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.partnerNo = iprot.readString();
        struct.setPartnerNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.acctId = iprot.readI32();
        struct.setAcctIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.creditDealId = iprot.readString();
        struct.setCreditDealIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.record = iprot.readString();
        struct.setRecordIsSet(true);
      }
      if (incoming.get(5)) {
        struct.overdue = iprot.readString();
        struct.setOverdueIsSet(true);
      }
      if (incoming.get(6)) {
        struct.result1 = iprot.readString();
        struct.setResult1IsSet(true);
      }
      if (incoming.get(7)) {
        struct.result2 = iprot.readString();
        struct.setResult2IsSet(true);
      }
      if (incoming.get(8)) {
        struct.result3 = iprot.readString();
        struct.setResult3IsSet(true);
      }
      if (incoming.get(9)) {
        struct.result4 = iprot.readString();
        struct.setResult4IsSet(true);
      }
      if (incoming.get(10)) {
        struct.result5 = iprot.readString();
        struct.setResult5IsSet(true);
      }
      if (incoming.get(11)) {
        struct.result6 = iprot.readString();
        struct.setResult6IsSet(true);
      }
      if (incoming.get(12)) {
        struct.result7 = iprot.readString();
        struct.setResult7IsSet(true);
      }
      if (incoming.get(13)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(16)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(17)) {
        struct.chinaName = iprot.readString();
        struct.setChinaNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.certType = iprot.readI32();
        struct.setCertTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.certNumber = iprot.readString();
        struct.setCertNumberIsSet(true);
      }
      if (incoming.get(20)) {
        struct.businessType = iprot.readI32();
        struct.setBusinessTypeIsSet(true);
      }
    }
  }

}

