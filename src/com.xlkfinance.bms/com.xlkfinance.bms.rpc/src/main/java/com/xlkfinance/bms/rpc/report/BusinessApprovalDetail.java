/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-3-14")
public class BusinessApprovalDetail implements org.apache.thrift.TBase<BusinessApprovalDetail, BusinessApprovalDetail._Fields>, java.io.Serializable, Cloneable, Comparable<BusinessApprovalDetail> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusinessApprovalDetail");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BUSINESS_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessSource", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CUSTOMER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("customerName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField REAL_LOAN_FIELD_DESC = new org.apache.thrift.protocol.TField("realLoan", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField BUSINESS_CATELOG_FIELD_DESC = new org.apache.thrift.protocol.TField("businessCatelog", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField APPROVAL_STEP_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalStep", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField APPROVAL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalStatus", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField APPROVAL_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalPerson", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField APPROVAL_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalDate", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField CREATE_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createEndDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField APPROVAL_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalEndDate", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField BUSINESS_SOURCE_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("businessSourceStr", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField APPROVAL_STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalStatusName", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusinessApprovalDetailStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusinessApprovalDetailTupleSchemeFactory());
  }

  public int projectId; // required
  public String projectName; // required
  public int businessSource; // required
  public String projectNumber; // required
  public String customerName; // required
  public double realLoan; // required
  public String businessCatelog; // required
  public String createDate; // required
  public String approvalStep; // required
  public int approvalStatus; // required
  public String approvalPerson; // required
  public String approvalDate; // required
  public int page; // required
  public int rows; // required
  public List<Integer> userIds; // required
  public String createEndDate; // required
  public String approvalEndDate; // required
  public String businessSourceStr; // required
  public String department; // required
  public String approvalStatusName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    PROJECT_NAME((short)2, "projectName"),
    BUSINESS_SOURCE((short)3, "businessSource"),
    PROJECT_NUMBER((short)4, "projectNumber"),
    CUSTOMER_NAME((short)5, "customerName"),
    REAL_LOAN((short)6, "realLoan"),
    BUSINESS_CATELOG((short)7, "businessCatelog"),
    CREATE_DATE((short)8, "createDate"),
    APPROVAL_STEP((short)9, "approvalStep"),
    APPROVAL_STATUS((short)10, "approvalStatus"),
    APPROVAL_PERSON((short)11, "approvalPerson"),
    APPROVAL_DATE((short)12, "approvalDate"),
    PAGE((short)13, "page"),
    ROWS((short)14, "rows"),
    USER_IDS((short)15, "userIds"),
    CREATE_END_DATE((short)16, "createEndDate"),
    APPROVAL_END_DATE((short)17, "approvalEndDate"),
    BUSINESS_SOURCE_STR((short)18, "businessSourceStr"),
    DEPARTMENT((short)19, "department"),
    APPROVAL_STATUS_NAME((short)20, "approvalStatusName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // PROJECT_NAME
          return PROJECT_NAME;
        case 3: // BUSINESS_SOURCE
          return BUSINESS_SOURCE;
        case 4: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 5: // CUSTOMER_NAME
          return CUSTOMER_NAME;
        case 6: // REAL_LOAN
          return REAL_LOAN;
        case 7: // BUSINESS_CATELOG
          return BUSINESS_CATELOG;
        case 8: // CREATE_DATE
          return CREATE_DATE;
        case 9: // APPROVAL_STEP
          return APPROVAL_STEP;
        case 10: // APPROVAL_STATUS
          return APPROVAL_STATUS;
        case 11: // APPROVAL_PERSON
          return APPROVAL_PERSON;
        case 12: // APPROVAL_DATE
          return APPROVAL_DATE;
        case 13: // PAGE
          return PAGE;
        case 14: // ROWS
          return ROWS;
        case 15: // USER_IDS
          return USER_IDS;
        case 16: // CREATE_END_DATE
          return CREATE_END_DATE;
        case 17: // APPROVAL_END_DATE
          return APPROVAL_END_DATE;
        case 18: // BUSINESS_SOURCE_STR
          return BUSINESS_SOURCE_STR;
        case 19: // DEPARTMENT
          return DEPARTMENT;
        case 20: // APPROVAL_STATUS_NAME
          return APPROVAL_STATUS_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __BUSINESSSOURCE_ISSET_ID = 1;
  private static final int __REALLOAN_ISSET_ID = 2;
  private static final int __APPROVALSTATUS_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("businessSource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOMER_NAME, new org.apache.thrift.meta_data.FieldMetaData("customerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REAL_LOAN, new org.apache.thrift.meta_data.FieldMetaData("realLoan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS_CATELOG, new org.apache.thrift.meta_data.FieldMetaData("businessCatelog", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_STEP, new org.apache.thrift.meta_data.FieldMetaData("approvalStep", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("approvalStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPROVAL_PERSON, new org.apache.thrift.meta_data.FieldMetaData("approvalPerson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_DATE, new org.apache.thrift.meta_data.FieldMetaData("approvalDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CREATE_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("createEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("approvalEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_SOURCE_STR, new org.apache.thrift.meta_data.FieldMetaData("businessSourceStr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("approvalStatusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusinessApprovalDetail.class, metaDataMap);
  }

  public BusinessApprovalDetail() {
    this.page = 1;

    this.rows = 10;

  }

  public BusinessApprovalDetail(
    int projectId,
    String projectName,
    int businessSource,
    String projectNumber,
    String customerName,
    double realLoan,
    String businessCatelog,
    String createDate,
    String approvalStep,
    int approvalStatus,
    String approvalPerson,
    String approvalDate,
    int page,
    int rows,
    List<Integer> userIds,
    String createEndDate,
    String approvalEndDate,
    String businessSourceStr,
    String department,
    String approvalStatusName)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectName = projectName;
    this.businessSource = businessSource;
    setBusinessSourceIsSet(true);
    this.projectNumber = projectNumber;
    this.customerName = customerName;
    this.realLoan = realLoan;
    setRealLoanIsSet(true);
    this.businessCatelog = businessCatelog;
    this.createDate = createDate;
    this.approvalStep = approvalStep;
    this.approvalStatus = approvalStatus;
    setApprovalStatusIsSet(true);
    this.approvalPerson = approvalPerson;
    this.approvalDate = approvalDate;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.userIds = userIds;
    this.createEndDate = createEndDate;
    this.approvalEndDate = approvalEndDate;
    this.businessSourceStr = businessSourceStr;
    this.department = department;
    this.approvalStatusName = approvalStatusName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusinessApprovalDetail(BusinessApprovalDetail other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.businessSource = other.businessSource;
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetCustomerName()) {
      this.customerName = other.customerName;
    }
    this.realLoan = other.realLoan;
    if (other.isSetBusinessCatelog()) {
      this.businessCatelog = other.businessCatelog;
    }
    if (other.isSetCreateDate()) {
      this.createDate = other.createDate;
    }
    if (other.isSetApprovalStep()) {
      this.approvalStep = other.approvalStep;
    }
    this.approvalStatus = other.approvalStatus;
    if (other.isSetApprovalPerson()) {
      this.approvalPerson = other.approvalPerson;
    }
    if (other.isSetApprovalDate()) {
      this.approvalDate = other.approvalDate;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
    if (other.isSetCreateEndDate()) {
      this.createEndDate = other.createEndDate;
    }
    if (other.isSetApprovalEndDate()) {
      this.approvalEndDate = other.approvalEndDate;
    }
    if (other.isSetBusinessSourceStr()) {
      this.businessSourceStr = other.businessSourceStr;
    }
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    if (other.isSetApprovalStatusName()) {
      this.approvalStatusName = other.approvalStatusName;
    }
  }

  public BusinessApprovalDetail deepCopy() {
    return new BusinessApprovalDetail(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectName = null;
    setBusinessSourceIsSet(false);
    this.businessSource = 0;
    this.projectNumber = null;
    this.customerName = null;
    setRealLoanIsSet(false);
    this.realLoan = 0.0;
    this.businessCatelog = null;
    this.createDate = null;
    this.approvalStep = null;
    setApprovalStatusIsSet(false);
    this.approvalStatus = 0;
    this.approvalPerson = null;
    this.approvalDate = null;
    this.page = 1;

    this.rows = 10;

    this.userIds = null;
    this.createEndDate = null;
    this.approvalEndDate = null;
    this.businessSourceStr = null;
    this.department = null;
    this.approvalStatusName = null;
  }

  public int getProjectId() {
    return this.projectId;
  }

  public BusinessApprovalDetail setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public BusinessApprovalDetail setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getBusinessSource() {
    return this.businessSource;
  }

  public BusinessApprovalDetail setBusinessSource(int businessSource) {
    this.businessSource = businessSource;
    setBusinessSourceIsSet(true);
    return this;
  }

  public void unsetBusinessSource() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID);
  }

  /** Returns true if field businessSource is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessSource() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID);
  }

  public void setBusinessSourceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSSOURCE_ISSET_ID, value);
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public BusinessApprovalDetail setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getCustomerName() {
    return this.customerName;
  }

  public BusinessApprovalDetail setCustomerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

  public void unsetCustomerName() {
    this.customerName = null;
  }

  /** Returns true if field customerName is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomerName() {
    return this.customerName != null;
  }

  public void setCustomerNameIsSet(boolean value) {
    if (!value) {
      this.customerName = null;
    }
  }

  public double getRealLoan() {
    return this.realLoan;
  }

  public BusinessApprovalDetail setRealLoan(double realLoan) {
    this.realLoan = realLoan;
    setRealLoanIsSet(true);
    return this;
  }

  public void unsetRealLoan() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REALLOAN_ISSET_ID);
  }

  /** Returns true if field realLoan is set (has been assigned a value) and false otherwise */
  public boolean isSetRealLoan() {
    return EncodingUtils.testBit(__isset_bitfield, __REALLOAN_ISSET_ID);
  }

  public void setRealLoanIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REALLOAN_ISSET_ID, value);
  }

  public String getBusinessCatelog() {
    return this.businessCatelog;
  }

  public BusinessApprovalDetail setBusinessCatelog(String businessCatelog) {
    this.businessCatelog = businessCatelog;
    return this;
  }

  public void unsetBusinessCatelog() {
    this.businessCatelog = null;
  }

  /** Returns true if field businessCatelog is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessCatelog() {
    return this.businessCatelog != null;
  }

  public void setBusinessCatelogIsSet(boolean value) {
    if (!value) {
      this.businessCatelog = null;
    }
  }

  public String getCreateDate() {
    return this.createDate;
  }

  public BusinessApprovalDetail setCreateDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  public void unsetCreateDate() {
    this.createDate = null;
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return this.createDate != null;
  }

  public void setCreateDateIsSet(boolean value) {
    if (!value) {
      this.createDate = null;
    }
  }

  public String getApprovalStep() {
    return this.approvalStep;
  }

  public BusinessApprovalDetail setApprovalStep(String approvalStep) {
    this.approvalStep = approvalStep;
    return this;
  }

  public void unsetApprovalStep() {
    this.approvalStep = null;
  }

  /** Returns true if field approvalStep is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalStep() {
    return this.approvalStep != null;
  }

  public void setApprovalStepIsSet(boolean value) {
    if (!value) {
      this.approvalStep = null;
    }
  }

  public int getApprovalStatus() {
    return this.approvalStatus;
  }

  public BusinessApprovalDetail setApprovalStatus(int approvalStatus) {
    this.approvalStatus = approvalStatus;
    setApprovalStatusIsSet(true);
    return this;
  }

  public void unsetApprovalStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID);
  }

  /** Returns true if field approvalStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID);
  }

  public void setApprovalStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID, value);
  }

  public String getApprovalPerson() {
    return this.approvalPerson;
  }

  public BusinessApprovalDetail setApprovalPerson(String approvalPerson) {
    this.approvalPerson = approvalPerson;
    return this;
  }

  public void unsetApprovalPerson() {
    this.approvalPerson = null;
  }

  /** Returns true if field approvalPerson is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalPerson() {
    return this.approvalPerson != null;
  }

  public void setApprovalPersonIsSet(boolean value) {
    if (!value) {
      this.approvalPerson = null;
    }
  }

  public String getApprovalDate() {
    return this.approvalDate;
  }

  public BusinessApprovalDetail setApprovalDate(String approvalDate) {
    this.approvalDate = approvalDate;
    return this;
  }

  public void unsetApprovalDate() {
    this.approvalDate = null;
  }

  /** Returns true if field approvalDate is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalDate() {
    return this.approvalDate != null;
  }

  public void setApprovalDateIsSet(boolean value) {
    if (!value) {
      this.approvalDate = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public BusinessApprovalDetail setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public BusinessApprovalDetail setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public BusinessApprovalDetail setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public String getCreateEndDate() {
    return this.createEndDate;
  }

  public BusinessApprovalDetail setCreateEndDate(String createEndDate) {
    this.createEndDate = createEndDate;
    return this;
  }

  public void unsetCreateEndDate() {
    this.createEndDate = null;
  }

  /** Returns true if field createEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateEndDate() {
    return this.createEndDate != null;
  }

  public void setCreateEndDateIsSet(boolean value) {
    if (!value) {
      this.createEndDate = null;
    }
  }

  public String getApprovalEndDate() {
    return this.approvalEndDate;
  }

  public BusinessApprovalDetail setApprovalEndDate(String approvalEndDate) {
    this.approvalEndDate = approvalEndDate;
    return this;
  }

  public void unsetApprovalEndDate() {
    this.approvalEndDate = null;
  }

  /** Returns true if field approvalEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalEndDate() {
    return this.approvalEndDate != null;
  }

  public void setApprovalEndDateIsSet(boolean value) {
    if (!value) {
      this.approvalEndDate = null;
    }
  }

  public String getBusinessSourceStr() {
    return this.businessSourceStr;
  }

  public BusinessApprovalDetail setBusinessSourceStr(String businessSourceStr) {
    this.businessSourceStr = businessSourceStr;
    return this;
  }

  public void unsetBusinessSourceStr() {
    this.businessSourceStr = null;
  }

  /** Returns true if field businessSourceStr is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessSourceStr() {
    return this.businessSourceStr != null;
  }

  public void setBusinessSourceStrIsSet(boolean value) {
    if (!value) {
      this.businessSourceStr = null;
    }
  }

  public String getDepartment() {
    return this.department;
  }

  public BusinessApprovalDetail setDepartment(String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public String getApprovalStatusName() {
    return this.approvalStatusName;
  }

  public BusinessApprovalDetail setApprovalStatusName(String approvalStatusName) {
    this.approvalStatusName = approvalStatusName;
    return this;
  }

  public void unsetApprovalStatusName() {
    this.approvalStatusName = null;
  }

  /** Returns true if field approvalStatusName is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalStatusName() {
    return this.approvalStatusName != null;
  }

  public void setApprovalStatusNameIsSet(boolean value) {
    if (!value) {
      this.approvalStatusName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case BUSINESS_SOURCE:
      if (value == null) {
        unsetBusinessSource();
      } else {
        setBusinessSource((Integer)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case CUSTOMER_NAME:
      if (value == null) {
        unsetCustomerName();
      } else {
        setCustomerName((String)value);
      }
      break;

    case REAL_LOAN:
      if (value == null) {
        unsetRealLoan();
      } else {
        setRealLoan((Double)value);
      }
      break;

    case BUSINESS_CATELOG:
      if (value == null) {
        unsetBusinessCatelog();
      } else {
        setBusinessCatelog((String)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((String)value);
      }
      break;

    case APPROVAL_STEP:
      if (value == null) {
        unsetApprovalStep();
      } else {
        setApprovalStep((String)value);
      }
      break;

    case APPROVAL_STATUS:
      if (value == null) {
        unsetApprovalStatus();
      } else {
        setApprovalStatus((Integer)value);
      }
      break;

    case APPROVAL_PERSON:
      if (value == null) {
        unsetApprovalPerson();
      } else {
        setApprovalPerson((String)value);
      }
      break;

    case APPROVAL_DATE:
      if (value == null) {
        unsetApprovalDate();
      } else {
        setApprovalDate((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    case CREATE_END_DATE:
      if (value == null) {
        unsetCreateEndDate();
      } else {
        setCreateEndDate((String)value);
      }
      break;

    case APPROVAL_END_DATE:
      if (value == null) {
        unsetApprovalEndDate();
      } else {
        setApprovalEndDate((String)value);
      }
      break;

    case BUSINESS_SOURCE_STR:
      if (value == null) {
        unsetBusinessSourceStr();
      } else {
        setBusinessSourceStr((String)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((String)value);
      }
      break;

    case APPROVAL_STATUS_NAME:
      if (value == null) {
        unsetApprovalStatusName();
      } else {
        setApprovalStatusName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NAME:
      return getProjectName();

    case BUSINESS_SOURCE:
      return Integer.valueOf(getBusinessSource());

    case PROJECT_NUMBER:
      return getProjectNumber();

    case CUSTOMER_NAME:
      return getCustomerName();

    case REAL_LOAN:
      return Double.valueOf(getRealLoan());

    case BUSINESS_CATELOG:
      return getBusinessCatelog();

    case CREATE_DATE:
      return getCreateDate();

    case APPROVAL_STEP:
      return getApprovalStep();

    case APPROVAL_STATUS:
      return Integer.valueOf(getApprovalStatus());

    case APPROVAL_PERSON:
      return getApprovalPerson();

    case APPROVAL_DATE:
      return getApprovalDate();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case USER_IDS:
      return getUserIds();

    case CREATE_END_DATE:
      return getCreateEndDate();

    case APPROVAL_END_DATE:
      return getApprovalEndDate();

    case BUSINESS_SOURCE_STR:
      return getBusinessSourceStr();

    case DEPARTMENT:
      return getDepartment();

    case APPROVAL_STATUS_NAME:
      return getApprovalStatusName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NAME:
      return isSetProjectName();
    case BUSINESS_SOURCE:
      return isSetBusinessSource();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case CUSTOMER_NAME:
      return isSetCustomerName();
    case REAL_LOAN:
      return isSetRealLoan();
    case BUSINESS_CATELOG:
      return isSetBusinessCatelog();
    case CREATE_DATE:
      return isSetCreateDate();
    case APPROVAL_STEP:
      return isSetApprovalStep();
    case APPROVAL_STATUS:
      return isSetApprovalStatus();
    case APPROVAL_PERSON:
      return isSetApprovalPerson();
    case APPROVAL_DATE:
      return isSetApprovalDate();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case USER_IDS:
      return isSetUserIds();
    case CREATE_END_DATE:
      return isSetCreateEndDate();
    case APPROVAL_END_DATE:
      return isSetApprovalEndDate();
    case BUSINESS_SOURCE_STR:
      return isSetBusinessSourceStr();
    case DEPARTMENT:
      return isSetDepartment();
    case APPROVAL_STATUS_NAME:
      return isSetApprovalStatusName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusinessApprovalDetail)
      return this.equals((BusinessApprovalDetail)that);
    return false;
  }

  public boolean equals(BusinessApprovalDetail that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_businessSource = true;
    boolean that_present_businessSource = true;
    if (this_present_businessSource || that_present_businessSource) {
      if (!(this_present_businessSource && that_present_businessSource))
        return false;
      if (this.businessSource != that.businessSource)
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_customerName = true && this.isSetCustomerName();
    boolean that_present_customerName = true && that.isSetCustomerName();
    if (this_present_customerName || that_present_customerName) {
      if (!(this_present_customerName && that_present_customerName))
        return false;
      if (!this.customerName.equals(that.customerName))
        return false;
    }

    boolean this_present_realLoan = true;
    boolean that_present_realLoan = true;
    if (this_present_realLoan || that_present_realLoan) {
      if (!(this_present_realLoan && that_present_realLoan))
        return false;
      if (this.realLoan != that.realLoan)
        return false;
    }

    boolean this_present_businessCatelog = true && this.isSetBusinessCatelog();
    boolean that_present_businessCatelog = true && that.isSetBusinessCatelog();
    if (this_present_businessCatelog || that_present_businessCatelog) {
      if (!(this_present_businessCatelog && that_present_businessCatelog))
        return false;
      if (!this.businessCatelog.equals(that.businessCatelog))
        return false;
    }

    boolean this_present_createDate = true && this.isSetCreateDate();
    boolean that_present_createDate = true && that.isSetCreateDate();
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (!this.createDate.equals(that.createDate))
        return false;
    }

    boolean this_present_approvalStep = true && this.isSetApprovalStep();
    boolean that_present_approvalStep = true && that.isSetApprovalStep();
    if (this_present_approvalStep || that_present_approvalStep) {
      if (!(this_present_approvalStep && that_present_approvalStep))
        return false;
      if (!this.approvalStep.equals(that.approvalStep))
        return false;
    }

    boolean this_present_approvalStatus = true;
    boolean that_present_approvalStatus = true;
    if (this_present_approvalStatus || that_present_approvalStatus) {
      if (!(this_present_approvalStatus && that_present_approvalStatus))
        return false;
      if (this.approvalStatus != that.approvalStatus)
        return false;
    }

    boolean this_present_approvalPerson = true && this.isSetApprovalPerson();
    boolean that_present_approvalPerson = true && that.isSetApprovalPerson();
    if (this_present_approvalPerson || that_present_approvalPerson) {
      if (!(this_present_approvalPerson && that_present_approvalPerson))
        return false;
      if (!this.approvalPerson.equals(that.approvalPerson))
        return false;
    }

    boolean this_present_approvalDate = true && this.isSetApprovalDate();
    boolean that_present_approvalDate = true && that.isSetApprovalDate();
    if (this_present_approvalDate || that_present_approvalDate) {
      if (!(this_present_approvalDate && that_present_approvalDate))
        return false;
      if (!this.approvalDate.equals(that.approvalDate))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    boolean this_present_createEndDate = true && this.isSetCreateEndDate();
    boolean that_present_createEndDate = true && that.isSetCreateEndDate();
    if (this_present_createEndDate || that_present_createEndDate) {
      if (!(this_present_createEndDate && that_present_createEndDate))
        return false;
      if (!this.createEndDate.equals(that.createEndDate))
        return false;
    }

    boolean this_present_approvalEndDate = true && this.isSetApprovalEndDate();
    boolean that_present_approvalEndDate = true && that.isSetApprovalEndDate();
    if (this_present_approvalEndDate || that_present_approvalEndDate) {
      if (!(this_present_approvalEndDate && that_present_approvalEndDate))
        return false;
      if (!this.approvalEndDate.equals(that.approvalEndDate))
        return false;
    }

    boolean this_present_businessSourceStr = true && this.isSetBusinessSourceStr();
    boolean that_present_businessSourceStr = true && that.isSetBusinessSourceStr();
    if (this_present_businessSourceStr || that_present_businessSourceStr) {
      if (!(this_present_businessSourceStr && that_present_businessSourceStr))
        return false;
      if (!this.businessSourceStr.equals(that.businessSourceStr))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_approvalStatusName = true && this.isSetApprovalStatusName();
    boolean that_present_approvalStatusName = true && that.isSetApprovalStatusName();
    if (this_present_approvalStatusName || that_present_approvalStatusName) {
      if (!(this_present_approvalStatusName && that_present_approvalStatusName))
        return false;
      if (!this.approvalStatusName.equals(that.approvalStatusName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_businessSource = true;
    list.add(present_businessSource);
    if (present_businessSource)
      list.add(businessSource);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_customerName = true && (isSetCustomerName());
    list.add(present_customerName);
    if (present_customerName)
      list.add(customerName);

    boolean present_realLoan = true;
    list.add(present_realLoan);
    if (present_realLoan)
      list.add(realLoan);

    boolean present_businessCatelog = true && (isSetBusinessCatelog());
    list.add(present_businessCatelog);
    if (present_businessCatelog)
      list.add(businessCatelog);

    boolean present_createDate = true && (isSetCreateDate());
    list.add(present_createDate);
    if (present_createDate)
      list.add(createDate);

    boolean present_approvalStep = true && (isSetApprovalStep());
    list.add(present_approvalStep);
    if (present_approvalStep)
      list.add(approvalStep);

    boolean present_approvalStatus = true;
    list.add(present_approvalStatus);
    if (present_approvalStatus)
      list.add(approvalStatus);

    boolean present_approvalPerson = true && (isSetApprovalPerson());
    list.add(present_approvalPerson);
    if (present_approvalPerson)
      list.add(approvalPerson);

    boolean present_approvalDate = true && (isSetApprovalDate());
    list.add(present_approvalDate);
    if (present_approvalDate)
      list.add(approvalDate);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    boolean present_createEndDate = true && (isSetCreateEndDate());
    list.add(present_createEndDate);
    if (present_createEndDate)
      list.add(createEndDate);

    boolean present_approvalEndDate = true && (isSetApprovalEndDate());
    list.add(present_approvalEndDate);
    if (present_approvalEndDate)
      list.add(approvalEndDate);

    boolean present_businessSourceStr = true && (isSetBusinessSourceStr());
    list.add(present_businessSourceStr);
    if (present_businessSourceStr)
      list.add(businessSourceStr);

    boolean present_department = true && (isSetDepartment());
    list.add(present_department);
    if (present_department)
      list.add(department);

    boolean present_approvalStatusName = true && (isSetApprovalStatusName());
    list.add(present_approvalStatusName);
    if (present_approvalStatusName)
      list.add(approvalStatusName);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusinessApprovalDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessSource()).compareTo(other.isSetBusinessSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessSource, other.businessSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerName()).compareTo(other.isSetCustomerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customerName, other.customerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealLoan()).compareTo(other.isSetRealLoan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealLoan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realLoan, other.realLoan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessCatelog()).compareTo(other.isSetBusinessCatelog());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessCatelog()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessCatelog, other.businessCatelog);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalStep()).compareTo(other.isSetApprovalStep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalStep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalStep, other.approvalStep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalStatus()).compareTo(other.isSetApprovalStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalStatus, other.approvalStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalPerson()).compareTo(other.isSetApprovalPerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalPerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalPerson, other.approvalPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalDate()).compareTo(other.isSetApprovalDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalDate, other.approvalDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateEndDate()).compareTo(other.isSetCreateEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createEndDate, other.createEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalEndDate()).compareTo(other.isSetApprovalEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalEndDate, other.approvalEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessSourceStr()).compareTo(other.isSetBusinessSourceStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessSourceStr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessSourceStr, other.businessSourceStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalStatusName()).compareTo(other.isSetApprovalStatusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalStatusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalStatusName, other.approvalStatusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessApprovalDetail(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessSource:");
    sb.append(this.businessSource);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerName:");
    if (this.customerName == null) {
      sb.append("null");
    } else {
      sb.append(this.customerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("realLoan:");
    sb.append(this.realLoan);
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessCatelog:");
    if (this.businessCatelog == null) {
      sb.append("null");
    } else {
      sb.append(this.businessCatelog);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    if (this.createDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalStep:");
    if (this.approvalStep == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalStep);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalStatus:");
    sb.append(this.approvalStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalPerson:");
    if (this.approvalPerson == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalDate:");
    if (this.approvalDate == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createEndDate:");
    if (this.createEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalEndDate:");
    if (this.approvalEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessSourceStr:");
    if (this.businessSourceStr == null) {
      sb.append("null");
    } else {
      sb.append(this.businessSourceStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("department:");
    if (this.department == null) {
      sb.append("null");
    } else {
      sb.append(this.department);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalStatusName:");
    if (this.approvalStatusName == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalStatusName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BusinessApprovalDetailStandardSchemeFactory implements SchemeFactory {
    public BusinessApprovalDetailStandardScheme getScheme() {
      return new BusinessApprovalDetailStandardScheme();
    }
  }

  private static class BusinessApprovalDetailStandardScheme extends StandardScheme<BusinessApprovalDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusinessApprovalDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUSINESS_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.businessSource = iprot.readI32();
              struct.setBusinessSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CUSTOMER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customerName = iprot.readString();
              struct.setCustomerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REAL_LOAN
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.realLoan = iprot.readDouble();
              struct.setRealLoanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BUSINESS_CATELOG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessCatelog = iprot.readString();
              struct.setBusinessCatelogIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createDate = iprot.readString();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // APPROVAL_STEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalStep = iprot.readString();
              struct.setApprovalStepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // APPROVAL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.approvalStatus = iprot.readI32();
              struct.setApprovalStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPROVAL_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalPerson = iprot.readString();
              struct.setApprovalPersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPROVAL_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalDate = iprot.readString();
              struct.setApprovalDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list80 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list80.size);
                int _elem81;
                for (int _i82 = 0; _i82 < _list80.size; ++_i82)
                {
                  _elem81 = iprot.readI32();
                  struct.userIds.add(_elem81);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CREATE_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createEndDate = iprot.readString();
              struct.setCreateEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // APPROVAL_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalEndDate = iprot.readString();
              struct.setApprovalEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // BUSINESS_SOURCE_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessSourceStr = iprot.readString();
              struct.setBusinessSourceStrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // APPROVAL_STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalStatusName = iprot.readString();
              struct.setApprovalStatusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusinessApprovalDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUSINESS_SOURCE_FIELD_DESC);
      oprot.writeI32(struct.businessSource);
      oprot.writeFieldEnd();
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.customerName != null) {
        oprot.writeFieldBegin(CUSTOMER_NAME_FIELD_DESC);
        oprot.writeString(struct.customerName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REAL_LOAN_FIELD_DESC);
      oprot.writeDouble(struct.realLoan);
      oprot.writeFieldEnd();
      if (struct.businessCatelog != null) {
        oprot.writeFieldBegin(BUSINESS_CATELOG_FIELD_DESC);
        oprot.writeString(struct.businessCatelog);
        oprot.writeFieldEnd();
      }
      if (struct.createDate != null) {
        oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
        oprot.writeString(struct.createDate);
        oprot.writeFieldEnd();
      }
      if (struct.approvalStep != null) {
        oprot.writeFieldBegin(APPROVAL_STEP_FIELD_DESC);
        oprot.writeString(struct.approvalStep);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPROVAL_STATUS_FIELD_DESC);
      oprot.writeI32(struct.approvalStatus);
      oprot.writeFieldEnd();
      if (struct.approvalPerson != null) {
        oprot.writeFieldBegin(APPROVAL_PERSON_FIELD_DESC);
        oprot.writeString(struct.approvalPerson);
        oprot.writeFieldEnd();
      }
      if (struct.approvalDate != null) {
        oprot.writeFieldBegin(APPROVAL_DATE_FIELD_DESC);
        oprot.writeString(struct.approvalDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter83 : struct.userIds)
          {
            oprot.writeI32(_iter83);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.createEndDate != null) {
        oprot.writeFieldBegin(CREATE_END_DATE_FIELD_DESC);
        oprot.writeString(struct.createEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.approvalEndDate != null) {
        oprot.writeFieldBegin(APPROVAL_END_DATE_FIELD_DESC);
        oprot.writeString(struct.approvalEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.businessSourceStr != null) {
        oprot.writeFieldBegin(BUSINESS_SOURCE_STR_FIELD_DESC);
        oprot.writeString(struct.businessSourceStr);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
        oprot.writeString(struct.department);
        oprot.writeFieldEnd();
      }
      if (struct.approvalStatusName != null) {
        oprot.writeFieldBegin(APPROVAL_STATUS_NAME_FIELD_DESC);
        oprot.writeString(struct.approvalStatusName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusinessApprovalDetailTupleSchemeFactory implements SchemeFactory {
    public BusinessApprovalDetailTupleScheme getScheme() {
      return new BusinessApprovalDetailTupleScheme();
    }
  }

  private static class BusinessApprovalDetailTupleScheme extends TupleScheme<BusinessApprovalDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusinessApprovalDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectName()) {
        optionals.set(1);
      }
      if (struct.isSetBusinessSource()) {
        optionals.set(2);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(3);
      }
      if (struct.isSetCustomerName()) {
        optionals.set(4);
      }
      if (struct.isSetRealLoan()) {
        optionals.set(5);
      }
      if (struct.isSetBusinessCatelog()) {
        optionals.set(6);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(7);
      }
      if (struct.isSetApprovalStep()) {
        optionals.set(8);
      }
      if (struct.isSetApprovalStatus()) {
        optionals.set(9);
      }
      if (struct.isSetApprovalPerson()) {
        optionals.set(10);
      }
      if (struct.isSetApprovalDate()) {
        optionals.set(11);
      }
      if (struct.isSetPage()) {
        optionals.set(12);
      }
      if (struct.isSetRows()) {
        optionals.set(13);
      }
      if (struct.isSetUserIds()) {
        optionals.set(14);
      }
      if (struct.isSetCreateEndDate()) {
        optionals.set(15);
      }
      if (struct.isSetApprovalEndDate()) {
        optionals.set(16);
      }
      if (struct.isSetBusinessSourceStr()) {
        optionals.set(17);
      }
      if (struct.isSetDepartment()) {
        optionals.set(18);
      }
      if (struct.isSetApprovalStatusName()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetBusinessSource()) {
        oprot.writeI32(struct.businessSource);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetCustomerName()) {
        oprot.writeString(struct.customerName);
      }
      if (struct.isSetRealLoan()) {
        oprot.writeDouble(struct.realLoan);
      }
      if (struct.isSetBusinessCatelog()) {
        oprot.writeString(struct.businessCatelog);
      }
      if (struct.isSetCreateDate()) {
        oprot.writeString(struct.createDate);
      }
      if (struct.isSetApprovalStep()) {
        oprot.writeString(struct.approvalStep);
      }
      if (struct.isSetApprovalStatus()) {
        oprot.writeI32(struct.approvalStatus);
      }
      if (struct.isSetApprovalPerson()) {
        oprot.writeString(struct.approvalPerson);
      }
      if (struct.isSetApprovalDate()) {
        oprot.writeString(struct.approvalDate);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter84 : struct.userIds)
          {
            oprot.writeI32(_iter84);
          }
        }
      }
      if (struct.isSetCreateEndDate()) {
        oprot.writeString(struct.createEndDate);
      }
      if (struct.isSetApprovalEndDate()) {
        oprot.writeString(struct.approvalEndDate);
      }
      if (struct.isSetBusinessSourceStr()) {
        oprot.writeString(struct.businessSourceStr);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetApprovalStatusName()) {
        oprot.writeString(struct.approvalStatusName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusinessApprovalDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.businessSource = iprot.readI32();
        struct.setBusinessSourceIsSet(true);
      }
      if (incoming.get(3)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(4)) {
        struct.customerName = iprot.readString();
        struct.setCustomerNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.realLoan = iprot.readDouble();
        struct.setRealLoanIsSet(true);
      }
      if (incoming.get(6)) {
        struct.businessCatelog = iprot.readString();
        struct.setBusinessCatelogIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createDate = iprot.readString();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(8)) {
        struct.approvalStep = iprot.readString();
        struct.setApprovalStepIsSet(true);
      }
      if (incoming.get(9)) {
        struct.approvalStatus = iprot.readI32();
        struct.setApprovalStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.approvalPerson = iprot.readString();
        struct.setApprovalPersonIsSet(true);
      }
      if (incoming.get(11)) {
        struct.approvalDate = iprot.readString();
        struct.setApprovalDateIsSet(true);
      }
      if (incoming.get(12)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list85 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list85.size);
          int _elem86;
          for (int _i87 = 0; _i87 < _list85.size; ++_i87)
          {
            _elem86 = iprot.readI32();
            struct.userIds.add(_elem86);
          }
        }
        struct.setUserIdsIsSet(true);
      }
      if (incoming.get(15)) {
        struct.createEndDate = iprot.readString();
        struct.setCreateEndDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.approvalEndDate = iprot.readString();
        struct.setApprovalEndDateIsSet(true);
      }
      if (incoming.get(17)) {
        struct.businessSourceStr = iprot.readString();
        struct.setBusinessSourceStrIsSet(true);
      }
      if (incoming.get(18)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(19)) {
        struct.approvalStatusName = iprot.readString();
        struct.setApprovalStatusNameIsSet(true);
      }
    }
  }

}

