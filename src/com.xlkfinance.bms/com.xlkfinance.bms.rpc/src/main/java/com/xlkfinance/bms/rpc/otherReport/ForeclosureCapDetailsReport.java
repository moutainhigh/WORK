/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.otherReport;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-3-27")
public class ForeclosureCapDetailsReport implements org.apache.thrift.TBase<ForeclosureCapDetailsReport, ForeclosureCapDetailsReport._Fields>, java.io.Serializable, Cloneable, Comparable<ForeclosureCapDetailsReport> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ForeclosureCapDetailsReport");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PM_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CHINA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("chinaName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField BUSINESS_CATEGORY_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("businessCategoryStr", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORG_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField LOAN_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("loanAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField APPROVE_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("approveMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField APPROVAL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalStatus", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField CONFIRM_LOAN_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("confirmLoanStatus", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField LOAN_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("loanStatus", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField APPROVAL_COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalComment", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField APPROVAL_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField LOAN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("loanTime", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField APPLY_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("applyDate", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField PAY_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("payInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField LOAN_RESULT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("loanResultTime", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PARTNER_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerLoanDate", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField REC_LOAN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("recLoanDate", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField REFUND_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("refundDate", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField USER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("userIds", org.apache.thrift.protocol.TType.LIST, (short)23);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField CHOOSE_MONTH_OR_WEEK_FIELD_DESC = new org.apache.thrift.protocol.TField("chooseMonthOrWeek", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField SUBMIT_APPROVAL_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submitApprovalTime", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField RE_MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("reMonth", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField FROM_DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("fromDay", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField END_DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("endDay", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField APPROVAL_STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("approvalStatusName", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField LOAN_STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loanStatusName", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField CONFIRM_LOAN_STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("confirmLoanStatusName", org.apache.thrift.protocol.TType.STRING, (short)33);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ForeclosureCapDetailsReportStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ForeclosureCapDetailsReportTupleSchemeFactory());
  }

  public int projectId; // required
  public String projectName; // required
  public String projectNumber; // required
  public String pmUserName; // required
  public String chinaName; // required
  public String businessCategoryStr; // required
  public String orgName; // required
  public String orgCode; // required
  public double loanAmount; // required
  public double approveMoney; // required
  public int approvalStatus; // required
  public int confirmLoanStatus; // required
  public int loanStatus; // required
  public String approvalComment; // required
  public String approvalTime; // required
  public String loanTime; // required
  public int applyDate; // required
  public double payInterest; // required
  public String loanResultTime; // required
  public String partnerLoanDate; // required
  public String recLoanDate; // required
  public String refundDate; // required
  public List<Integer> userIds; // required
  public int page; // required
  public int rows; // required
  public int chooseMonthOrWeek; // required
  public String submitApprovalTime; // required
  public String reMonth; // required
  public String fromDay; // required
  public String endDay; // required
  public String approvalStatusName; // required
  public String loanStatusName; // required
  public String confirmLoanStatusName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    PROJECT_NAME((short)2, "projectName"),
    PROJECT_NUMBER((short)3, "projectNumber"),
    PM_USER_NAME((short)4, "pmUserName"),
    CHINA_NAME((short)5, "chinaName"),
    BUSINESS_CATEGORY_STR((short)6, "businessCategoryStr"),
    ORG_NAME((short)7, "orgName"),
    ORG_CODE((short)8, "orgCode"),
    LOAN_AMOUNT((short)9, "loanAmount"),
    APPROVE_MONEY((short)10, "approveMoney"),
    APPROVAL_STATUS((short)11, "approvalStatus"),
    CONFIRM_LOAN_STATUS((short)12, "confirmLoanStatus"),
    LOAN_STATUS((short)13, "loanStatus"),
    APPROVAL_COMMENT((short)14, "approvalComment"),
    APPROVAL_TIME((short)15, "approvalTime"),
    LOAN_TIME((short)16, "loanTime"),
    APPLY_DATE((short)17, "applyDate"),
    PAY_INTEREST((short)18, "payInterest"),
    LOAN_RESULT_TIME((short)19, "loanResultTime"),
    PARTNER_LOAN_DATE((short)20, "partnerLoanDate"),
    REC_LOAN_DATE((short)21, "recLoanDate"),
    REFUND_DATE((short)22, "refundDate"),
    USER_IDS((short)23, "userIds"),
    PAGE((short)24, "page"),
    ROWS((short)25, "rows"),
    CHOOSE_MONTH_OR_WEEK((short)26, "chooseMonthOrWeek"),
    SUBMIT_APPROVAL_TIME((short)27, "submitApprovalTime"),
    RE_MONTH((short)28, "reMonth"),
    FROM_DAY((short)29, "fromDay"),
    END_DAY((short)30, "endDay"),
    APPROVAL_STATUS_NAME((short)31, "approvalStatusName"),
    LOAN_STATUS_NAME((short)32, "loanStatusName"),
    CONFIRM_LOAN_STATUS_NAME((short)33, "confirmLoanStatusName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // PROJECT_NAME
          return PROJECT_NAME;
        case 3: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 4: // PM_USER_NAME
          return PM_USER_NAME;
        case 5: // CHINA_NAME
          return CHINA_NAME;
        case 6: // BUSINESS_CATEGORY_STR
          return BUSINESS_CATEGORY_STR;
        case 7: // ORG_NAME
          return ORG_NAME;
        case 8: // ORG_CODE
          return ORG_CODE;
        case 9: // LOAN_AMOUNT
          return LOAN_AMOUNT;
        case 10: // APPROVE_MONEY
          return APPROVE_MONEY;
        case 11: // APPROVAL_STATUS
          return APPROVAL_STATUS;
        case 12: // CONFIRM_LOAN_STATUS
          return CONFIRM_LOAN_STATUS;
        case 13: // LOAN_STATUS
          return LOAN_STATUS;
        case 14: // APPROVAL_COMMENT
          return APPROVAL_COMMENT;
        case 15: // APPROVAL_TIME
          return APPROVAL_TIME;
        case 16: // LOAN_TIME
          return LOAN_TIME;
        case 17: // APPLY_DATE
          return APPLY_DATE;
        case 18: // PAY_INTEREST
          return PAY_INTEREST;
        case 19: // LOAN_RESULT_TIME
          return LOAN_RESULT_TIME;
        case 20: // PARTNER_LOAN_DATE
          return PARTNER_LOAN_DATE;
        case 21: // REC_LOAN_DATE
          return REC_LOAN_DATE;
        case 22: // REFUND_DATE
          return REFUND_DATE;
        case 23: // USER_IDS
          return USER_IDS;
        case 24: // PAGE
          return PAGE;
        case 25: // ROWS
          return ROWS;
        case 26: // CHOOSE_MONTH_OR_WEEK
          return CHOOSE_MONTH_OR_WEEK;
        case 27: // SUBMIT_APPROVAL_TIME
          return SUBMIT_APPROVAL_TIME;
        case 28: // RE_MONTH
          return RE_MONTH;
        case 29: // FROM_DAY
          return FROM_DAY;
        case 30: // END_DAY
          return END_DAY;
        case 31: // APPROVAL_STATUS_NAME
          return APPROVAL_STATUS_NAME;
        case 32: // LOAN_STATUS_NAME
          return LOAN_STATUS_NAME;
        case 33: // CONFIRM_LOAN_STATUS_NAME
          return CONFIRM_LOAN_STATUS_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __LOANAMOUNT_ISSET_ID = 1;
  private static final int __APPROVEMONEY_ISSET_ID = 2;
  private static final int __APPROVALSTATUS_ISSET_ID = 3;
  private static final int __CONFIRMLOANSTATUS_ISSET_ID = 4;
  private static final int __LOANSTATUS_ISSET_ID = 5;
  private static final int __APPLYDATE_ISSET_ID = 6;
  private static final int __PAYINTEREST_ISSET_ID = 7;
  private static final int __PAGE_ISSET_ID = 8;
  private static final int __ROWS_ISSET_ID = 9;
  private static final int __CHOOSEMONTHORWEEK_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PM_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("pmUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHINA_NAME, new org.apache.thrift.meta_data.FieldMetaData("chinaName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_CATEGORY_STR, new org.apache.thrift.meta_data.FieldMetaData("businessCategoryStr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_CODE, new org.apache.thrift.meta_data.FieldMetaData("orgCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("loanAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APPROVE_MONEY, new org.apache.thrift.meta_data.FieldMetaData("approveMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APPROVAL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("approvalStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CONFIRM_LOAN_STATUS, new org.apache.thrift.meta_data.FieldMetaData("confirmLoanStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOAN_STATUS, new org.apache.thrift.meta_data.FieldMetaData("loanStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPROVAL_COMMENT, new org.apache.thrift.meta_data.FieldMetaData("approvalComment", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_TIME, new org.apache.thrift.meta_data.FieldMetaData("approvalTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_TIME, new org.apache.thrift.meta_data.FieldMetaData("loanTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLY_DATE, new org.apache.thrift.meta_data.FieldMetaData("applyDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAY_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("payInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_RESULT_TIME, new org.apache.thrift.meta_data.FieldMetaData("loanResultTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("partnerLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REC_LOAN_DATE, new org.apache.thrift.meta_data.FieldMetaData("recLoanDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFUND_DATE, new org.apache.thrift.meta_data.FieldMetaData("refundDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_IDS, new org.apache.thrift.meta_data.FieldMetaData("userIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHOOSE_MONTH_OR_WEEK, new org.apache.thrift.meta_data.FieldMetaData("chooseMonthOrWeek", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUBMIT_APPROVAL_TIME, new org.apache.thrift.meta_data.FieldMetaData("submitApprovalTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RE_MONTH, new org.apache.thrift.meta_data.FieldMetaData("reMonth", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_DAY, new org.apache.thrift.meta_data.FieldMetaData("fromDay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DAY, new org.apache.thrift.meta_data.FieldMetaData("endDay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVAL_STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("approvalStatusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("loanStatusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONFIRM_LOAN_STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("confirmLoanStatusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ForeclosureCapDetailsReport.class, metaDataMap);
  }

  public ForeclosureCapDetailsReport() {
  }

  public ForeclosureCapDetailsReport(
    int projectId,
    String projectName,
    String projectNumber,
    String pmUserName,
    String chinaName,
    String businessCategoryStr,
    String orgName,
    String orgCode,
    double loanAmount,
    double approveMoney,
    int approvalStatus,
    int confirmLoanStatus,
    int loanStatus,
    String approvalComment,
    String approvalTime,
    String loanTime,
    int applyDate,
    double payInterest,
    String loanResultTime,
    String partnerLoanDate,
    String recLoanDate,
    String refundDate,
    List<Integer> userIds,
    int page,
    int rows,
    int chooseMonthOrWeek,
    String submitApprovalTime,
    String reMonth,
    String fromDay,
    String endDay,
    String approvalStatusName,
    String loanStatusName,
    String confirmLoanStatusName)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectName = projectName;
    this.projectNumber = projectNumber;
    this.pmUserName = pmUserName;
    this.chinaName = chinaName;
    this.businessCategoryStr = businessCategoryStr;
    this.orgName = orgName;
    this.orgCode = orgCode;
    this.loanAmount = loanAmount;
    setLoanAmountIsSet(true);
    this.approveMoney = approveMoney;
    setApproveMoneyIsSet(true);
    this.approvalStatus = approvalStatus;
    setApprovalStatusIsSet(true);
    this.confirmLoanStatus = confirmLoanStatus;
    setConfirmLoanStatusIsSet(true);
    this.loanStatus = loanStatus;
    setLoanStatusIsSet(true);
    this.approvalComment = approvalComment;
    this.approvalTime = approvalTime;
    this.loanTime = loanTime;
    this.applyDate = applyDate;
    setApplyDateIsSet(true);
    this.payInterest = payInterest;
    setPayInterestIsSet(true);
    this.loanResultTime = loanResultTime;
    this.partnerLoanDate = partnerLoanDate;
    this.recLoanDate = recLoanDate;
    this.refundDate = refundDate;
    this.userIds = userIds;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.chooseMonthOrWeek = chooseMonthOrWeek;
    setChooseMonthOrWeekIsSet(true);
    this.submitApprovalTime = submitApprovalTime;
    this.reMonth = reMonth;
    this.fromDay = fromDay;
    this.endDay = endDay;
    this.approvalStatusName = approvalStatusName;
    this.loanStatusName = loanStatusName;
    this.confirmLoanStatusName = confirmLoanStatusName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ForeclosureCapDetailsReport(ForeclosureCapDetailsReport other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetPmUserName()) {
      this.pmUserName = other.pmUserName;
    }
    if (other.isSetChinaName()) {
      this.chinaName = other.chinaName;
    }
    if (other.isSetBusinessCategoryStr()) {
      this.businessCategoryStr = other.businessCategoryStr;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetOrgCode()) {
      this.orgCode = other.orgCode;
    }
    this.loanAmount = other.loanAmount;
    this.approveMoney = other.approveMoney;
    this.approvalStatus = other.approvalStatus;
    this.confirmLoanStatus = other.confirmLoanStatus;
    this.loanStatus = other.loanStatus;
    if (other.isSetApprovalComment()) {
      this.approvalComment = other.approvalComment;
    }
    if (other.isSetApprovalTime()) {
      this.approvalTime = other.approvalTime;
    }
    if (other.isSetLoanTime()) {
      this.loanTime = other.loanTime;
    }
    this.applyDate = other.applyDate;
    this.payInterest = other.payInterest;
    if (other.isSetLoanResultTime()) {
      this.loanResultTime = other.loanResultTime;
    }
    if (other.isSetPartnerLoanDate()) {
      this.partnerLoanDate = other.partnerLoanDate;
    }
    if (other.isSetRecLoanDate()) {
      this.recLoanDate = other.recLoanDate;
    }
    if (other.isSetRefundDate()) {
      this.refundDate = other.refundDate;
    }
    if (other.isSetUserIds()) {
      List<Integer> __this__userIds = new ArrayList<Integer>(other.userIds);
      this.userIds = __this__userIds;
    }
    this.page = other.page;
    this.rows = other.rows;
    this.chooseMonthOrWeek = other.chooseMonthOrWeek;
    if (other.isSetSubmitApprovalTime()) {
      this.submitApprovalTime = other.submitApprovalTime;
    }
    if (other.isSetReMonth()) {
      this.reMonth = other.reMonth;
    }
    if (other.isSetFromDay()) {
      this.fromDay = other.fromDay;
    }
    if (other.isSetEndDay()) {
      this.endDay = other.endDay;
    }
    if (other.isSetApprovalStatusName()) {
      this.approvalStatusName = other.approvalStatusName;
    }
    if (other.isSetLoanStatusName()) {
      this.loanStatusName = other.loanStatusName;
    }
    if (other.isSetConfirmLoanStatusName()) {
      this.confirmLoanStatusName = other.confirmLoanStatusName;
    }
  }

  public ForeclosureCapDetailsReport deepCopy() {
    return new ForeclosureCapDetailsReport(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectName = null;
    this.projectNumber = null;
    this.pmUserName = null;
    this.chinaName = null;
    this.businessCategoryStr = null;
    this.orgName = null;
    this.orgCode = null;
    setLoanAmountIsSet(false);
    this.loanAmount = 0.0;
    setApproveMoneyIsSet(false);
    this.approveMoney = 0.0;
    setApprovalStatusIsSet(false);
    this.approvalStatus = 0;
    setConfirmLoanStatusIsSet(false);
    this.confirmLoanStatus = 0;
    setLoanStatusIsSet(false);
    this.loanStatus = 0;
    this.approvalComment = null;
    this.approvalTime = null;
    this.loanTime = null;
    setApplyDateIsSet(false);
    this.applyDate = 0;
    setPayInterestIsSet(false);
    this.payInterest = 0.0;
    this.loanResultTime = null;
    this.partnerLoanDate = null;
    this.recLoanDate = null;
    this.refundDate = null;
    this.userIds = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setChooseMonthOrWeekIsSet(false);
    this.chooseMonthOrWeek = 0;
    this.submitApprovalTime = null;
    this.reMonth = null;
    this.fromDay = null;
    this.endDay = null;
    this.approvalStatusName = null;
    this.loanStatusName = null;
    this.confirmLoanStatusName = null;
  }

  public int getProjectId() {
    return this.projectId;
  }

  public ForeclosureCapDetailsReport setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public ForeclosureCapDetailsReport setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public ForeclosureCapDetailsReport setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getPmUserName() {
    return this.pmUserName;
  }

  public ForeclosureCapDetailsReport setPmUserName(String pmUserName) {
    this.pmUserName = pmUserName;
    return this;
  }

  public void unsetPmUserName() {
    this.pmUserName = null;
  }

  /** Returns true if field pmUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserName() {
    return this.pmUserName != null;
  }

  public void setPmUserNameIsSet(boolean value) {
    if (!value) {
      this.pmUserName = null;
    }
  }

  public String getChinaName() {
    return this.chinaName;
  }

  public ForeclosureCapDetailsReport setChinaName(String chinaName) {
    this.chinaName = chinaName;
    return this;
  }

  public void unsetChinaName() {
    this.chinaName = null;
  }

  /** Returns true if field chinaName is set (has been assigned a value) and false otherwise */
  public boolean isSetChinaName() {
    return this.chinaName != null;
  }

  public void setChinaNameIsSet(boolean value) {
    if (!value) {
      this.chinaName = null;
    }
  }

  public String getBusinessCategoryStr() {
    return this.businessCategoryStr;
  }

  public ForeclosureCapDetailsReport setBusinessCategoryStr(String businessCategoryStr) {
    this.businessCategoryStr = businessCategoryStr;
    return this;
  }

  public void unsetBusinessCategoryStr() {
    this.businessCategoryStr = null;
  }

  /** Returns true if field businessCategoryStr is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessCategoryStr() {
    return this.businessCategoryStr != null;
  }

  public void setBusinessCategoryStrIsSet(boolean value) {
    if (!value) {
      this.businessCategoryStr = null;
    }
  }

  public String getOrgName() {
    return this.orgName;
  }

  public ForeclosureCapDetailsReport setOrgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public String getOrgCode() {
    return this.orgCode;
  }

  public ForeclosureCapDetailsReport setOrgCode(String orgCode) {
    this.orgCode = orgCode;
    return this;
  }

  public void unsetOrgCode() {
    this.orgCode = null;
  }

  /** Returns true if field orgCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgCode() {
    return this.orgCode != null;
  }

  public void setOrgCodeIsSet(boolean value) {
    if (!value) {
      this.orgCode = null;
    }
  }

  public double getLoanAmount() {
    return this.loanAmount;
  }

  public ForeclosureCapDetailsReport setLoanAmount(double loanAmount) {
    this.loanAmount = loanAmount;
    setLoanAmountIsSet(true);
    return this;
  }

  public void unsetLoanAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID);
  }

  /** Returns true if field loanAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID);
  }

  public void setLoanAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID, value);
  }

  public double getApproveMoney() {
    return this.approveMoney;
  }

  public ForeclosureCapDetailsReport setApproveMoney(double approveMoney) {
    this.approveMoney = approveMoney;
    setApproveMoneyIsSet(true);
    return this;
  }

  public void unsetApproveMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPROVEMONEY_ISSET_ID);
  }

  /** Returns true if field approveMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetApproveMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __APPROVEMONEY_ISSET_ID);
  }

  public void setApproveMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPROVEMONEY_ISSET_ID, value);
  }

  public int getApprovalStatus() {
    return this.approvalStatus;
  }

  public ForeclosureCapDetailsReport setApprovalStatus(int approvalStatus) {
    this.approvalStatus = approvalStatus;
    setApprovalStatusIsSet(true);
    return this;
  }

  public void unsetApprovalStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID);
  }

  /** Returns true if field approvalStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID);
  }

  public void setApprovalStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPROVALSTATUS_ISSET_ID, value);
  }

  public int getConfirmLoanStatus() {
    return this.confirmLoanStatus;
  }

  public ForeclosureCapDetailsReport setConfirmLoanStatus(int confirmLoanStatus) {
    this.confirmLoanStatus = confirmLoanStatus;
    setConfirmLoanStatusIsSet(true);
    return this;
  }

  public void unsetConfirmLoanStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONFIRMLOANSTATUS_ISSET_ID);
  }

  /** Returns true if field confirmLoanStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetConfirmLoanStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __CONFIRMLOANSTATUS_ISSET_ID);
  }

  public void setConfirmLoanStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONFIRMLOANSTATUS_ISSET_ID, value);
  }

  public int getLoanStatus() {
    return this.loanStatus;
  }

  public ForeclosureCapDetailsReport setLoanStatus(int loanStatus) {
    this.loanStatus = loanStatus;
    setLoanStatusIsSet(true);
    return this;
  }

  public void unsetLoanStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANSTATUS_ISSET_ID);
  }

  /** Returns true if field loanStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANSTATUS_ISSET_ID);
  }

  public void setLoanStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANSTATUS_ISSET_ID, value);
  }

  public String getApprovalComment() {
    return this.approvalComment;
  }

  public ForeclosureCapDetailsReport setApprovalComment(String approvalComment) {
    this.approvalComment = approvalComment;
    return this;
  }

  public void unsetApprovalComment() {
    this.approvalComment = null;
  }

  /** Returns true if field approvalComment is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalComment() {
    return this.approvalComment != null;
  }

  public void setApprovalCommentIsSet(boolean value) {
    if (!value) {
      this.approvalComment = null;
    }
  }

  public String getApprovalTime() {
    return this.approvalTime;
  }

  public ForeclosureCapDetailsReport setApprovalTime(String approvalTime) {
    this.approvalTime = approvalTime;
    return this;
  }

  public void unsetApprovalTime() {
    this.approvalTime = null;
  }

  /** Returns true if field approvalTime is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalTime() {
    return this.approvalTime != null;
  }

  public void setApprovalTimeIsSet(boolean value) {
    if (!value) {
      this.approvalTime = null;
    }
  }

  public String getLoanTime() {
    return this.loanTime;
  }

  public ForeclosureCapDetailsReport setLoanTime(String loanTime) {
    this.loanTime = loanTime;
    return this;
  }

  public void unsetLoanTime() {
    this.loanTime = null;
  }

  /** Returns true if field loanTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanTime() {
    return this.loanTime != null;
  }

  public void setLoanTimeIsSet(boolean value) {
    if (!value) {
      this.loanTime = null;
    }
  }

  public int getApplyDate() {
    return this.applyDate;
  }

  public ForeclosureCapDetailsReport setApplyDate(int applyDate) {
    this.applyDate = applyDate;
    setApplyDateIsSet(true);
    return this;
  }

  public void unsetApplyDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPLYDATE_ISSET_ID);
  }

  /** Returns true if field applyDate is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyDate() {
    return EncodingUtils.testBit(__isset_bitfield, __APPLYDATE_ISSET_ID);
  }

  public void setApplyDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPLYDATE_ISSET_ID, value);
  }

  public double getPayInterest() {
    return this.payInterest;
  }

  public ForeclosureCapDetailsReport setPayInterest(double payInterest) {
    this.payInterest = payInterest;
    setPayInterestIsSet(true);
    return this;
  }

  public void unsetPayInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYINTEREST_ISSET_ID);
  }

  /** Returns true if field payInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetPayInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYINTEREST_ISSET_ID);
  }

  public void setPayInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYINTEREST_ISSET_ID, value);
  }

  public String getLoanResultTime() {
    return this.loanResultTime;
  }

  public ForeclosureCapDetailsReport setLoanResultTime(String loanResultTime) {
    this.loanResultTime = loanResultTime;
    return this;
  }

  public void unsetLoanResultTime() {
    this.loanResultTime = null;
  }

  /** Returns true if field loanResultTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanResultTime() {
    return this.loanResultTime != null;
  }

  public void setLoanResultTimeIsSet(boolean value) {
    if (!value) {
      this.loanResultTime = null;
    }
  }

  public String getPartnerLoanDate() {
    return this.partnerLoanDate;
  }

  public ForeclosureCapDetailsReport setPartnerLoanDate(String partnerLoanDate) {
    this.partnerLoanDate = partnerLoanDate;
    return this;
  }

  public void unsetPartnerLoanDate() {
    this.partnerLoanDate = null;
  }

  /** Returns true if field partnerLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerLoanDate() {
    return this.partnerLoanDate != null;
  }

  public void setPartnerLoanDateIsSet(boolean value) {
    if (!value) {
      this.partnerLoanDate = null;
    }
  }

  public String getRecLoanDate() {
    return this.recLoanDate;
  }

  public ForeclosureCapDetailsReport setRecLoanDate(String recLoanDate) {
    this.recLoanDate = recLoanDate;
    return this;
  }

  public void unsetRecLoanDate() {
    this.recLoanDate = null;
  }

  /** Returns true if field recLoanDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRecLoanDate() {
    return this.recLoanDate != null;
  }

  public void setRecLoanDateIsSet(boolean value) {
    if (!value) {
      this.recLoanDate = null;
    }
  }

  public String getRefundDate() {
    return this.refundDate;
  }

  public ForeclosureCapDetailsReport setRefundDate(String refundDate) {
    this.refundDate = refundDate;
    return this;
  }

  public void unsetRefundDate() {
    this.refundDate = null;
  }

  /** Returns true if field refundDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRefundDate() {
    return this.refundDate != null;
  }

  public void setRefundDateIsSet(boolean value) {
    if (!value) {
      this.refundDate = null;
    }
  }

  public int getUserIdsSize() {
    return (this.userIds == null) ? 0 : this.userIds.size();
  }

  public java.util.Iterator<Integer> getUserIdsIterator() {
    return (this.userIds == null) ? null : this.userIds.iterator();
  }

  public void addToUserIds(int elem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<Integer>();
    }
    this.userIds.add(elem);
  }

  public List<Integer> getUserIds() {
    return this.userIds;
  }

  public ForeclosureCapDetailsReport setUserIds(List<Integer> userIds) {
    this.userIds = userIds;
    return this;
  }

  public void unsetUserIds() {
    this.userIds = null;
  }

  /** Returns true if field userIds is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIds() {
    return this.userIds != null;
  }

  public void setUserIdsIsSet(boolean value) {
    if (!value) {
      this.userIds = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public ForeclosureCapDetailsReport setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public ForeclosureCapDetailsReport setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getChooseMonthOrWeek() {
    return this.chooseMonthOrWeek;
  }

  public ForeclosureCapDetailsReport setChooseMonthOrWeek(int chooseMonthOrWeek) {
    this.chooseMonthOrWeek = chooseMonthOrWeek;
    setChooseMonthOrWeekIsSet(true);
    return this;
  }

  public void unsetChooseMonthOrWeek() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHOOSEMONTHORWEEK_ISSET_ID);
  }

  /** Returns true if field chooseMonthOrWeek is set (has been assigned a value) and false otherwise */
  public boolean isSetChooseMonthOrWeek() {
    return EncodingUtils.testBit(__isset_bitfield, __CHOOSEMONTHORWEEK_ISSET_ID);
  }

  public void setChooseMonthOrWeekIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHOOSEMONTHORWEEK_ISSET_ID, value);
  }

  public String getSubmitApprovalTime() {
    return this.submitApprovalTime;
  }

  public ForeclosureCapDetailsReport setSubmitApprovalTime(String submitApprovalTime) {
    this.submitApprovalTime = submitApprovalTime;
    return this;
  }

  public void unsetSubmitApprovalTime() {
    this.submitApprovalTime = null;
  }

  /** Returns true if field submitApprovalTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSubmitApprovalTime() {
    return this.submitApprovalTime != null;
  }

  public void setSubmitApprovalTimeIsSet(boolean value) {
    if (!value) {
      this.submitApprovalTime = null;
    }
  }

  public String getReMonth() {
    return this.reMonth;
  }

  public ForeclosureCapDetailsReport setReMonth(String reMonth) {
    this.reMonth = reMonth;
    return this;
  }

  public void unsetReMonth() {
    this.reMonth = null;
  }

  /** Returns true if field reMonth is set (has been assigned a value) and false otherwise */
  public boolean isSetReMonth() {
    return this.reMonth != null;
  }

  public void setReMonthIsSet(boolean value) {
    if (!value) {
      this.reMonth = null;
    }
  }

  public String getFromDay() {
    return this.fromDay;
  }

  public ForeclosureCapDetailsReport setFromDay(String fromDay) {
    this.fromDay = fromDay;
    return this;
  }

  public void unsetFromDay() {
    this.fromDay = null;
  }

  /** Returns true if field fromDay is set (has been assigned a value) and false otherwise */
  public boolean isSetFromDay() {
    return this.fromDay != null;
  }

  public void setFromDayIsSet(boolean value) {
    if (!value) {
      this.fromDay = null;
    }
  }

  public String getEndDay() {
    return this.endDay;
  }

  public ForeclosureCapDetailsReport setEndDay(String endDay) {
    this.endDay = endDay;
    return this;
  }

  public void unsetEndDay() {
    this.endDay = null;
  }

  /** Returns true if field endDay is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDay() {
    return this.endDay != null;
  }

  public void setEndDayIsSet(boolean value) {
    if (!value) {
      this.endDay = null;
    }
  }

  public String getApprovalStatusName() {
    return this.approvalStatusName;
  }

  public ForeclosureCapDetailsReport setApprovalStatusName(String approvalStatusName) {
    this.approvalStatusName = approvalStatusName;
    return this;
  }

  public void unsetApprovalStatusName() {
    this.approvalStatusName = null;
  }

  /** Returns true if field approvalStatusName is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovalStatusName() {
    return this.approvalStatusName != null;
  }

  public void setApprovalStatusNameIsSet(boolean value) {
    if (!value) {
      this.approvalStatusName = null;
    }
  }

  public String getLoanStatusName() {
    return this.loanStatusName;
  }

  public ForeclosureCapDetailsReport setLoanStatusName(String loanStatusName) {
    this.loanStatusName = loanStatusName;
    return this;
  }

  public void unsetLoanStatusName() {
    this.loanStatusName = null;
  }

  /** Returns true if field loanStatusName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanStatusName() {
    return this.loanStatusName != null;
  }

  public void setLoanStatusNameIsSet(boolean value) {
    if (!value) {
      this.loanStatusName = null;
    }
  }

  public String getConfirmLoanStatusName() {
    return this.confirmLoanStatusName;
  }

  public ForeclosureCapDetailsReport setConfirmLoanStatusName(String confirmLoanStatusName) {
    this.confirmLoanStatusName = confirmLoanStatusName;
    return this;
  }

  public void unsetConfirmLoanStatusName() {
    this.confirmLoanStatusName = null;
  }

  /** Returns true if field confirmLoanStatusName is set (has been assigned a value) and false otherwise */
  public boolean isSetConfirmLoanStatusName() {
    return this.confirmLoanStatusName != null;
  }

  public void setConfirmLoanStatusNameIsSet(boolean value) {
    if (!value) {
      this.confirmLoanStatusName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PM_USER_NAME:
      if (value == null) {
        unsetPmUserName();
      } else {
        setPmUserName((String)value);
      }
      break;

    case CHINA_NAME:
      if (value == null) {
        unsetChinaName();
      } else {
        setChinaName((String)value);
      }
      break;

    case BUSINESS_CATEGORY_STR:
      if (value == null) {
        unsetBusinessCategoryStr();
      } else {
        setBusinessCategoryStr((String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((String)value);
      }
      break;

    case ORG_CODE:
      if (value == null) {
        unsetOrgCode();
      } else {
        setOrgCode((String)value);
      }
      break;

    case LOAN_AMOUNT:
      if (value == null) {
        unsetLoanAmount();
      } else {
        setLoanAmount((Double)value);
      }
      break;

    case APPROVE_MONEY:
      if (value == null) {
        unsetApproveMoney();
      } else {
        setApproveMoney((Double)value);
      }
      break;

    case APPROVAL_STATUS:
      if (value == null) {
        unsetApprovalStatus();
      } else {
        setApprovalStatus((Integer)value);
      }
      break;

    case CONFIRM_LOAN_STATUS:
      if (value == null) {
        unsetConfirmLoanStatus();
      } else {
        setConfirmLoanStatus((Integer)value);
      }
      break;

    case LOAN_STATUS:
      if (value == null) {
        unsetLoanStatus();
      } else {
        setLoanStatus((Integer)value);
      }
      break;

    case APPROVAL_COMMENT:
      if (value == null) {
        unsetApprovalComment();
      } else {
        setApprovalComment((String)value);
      }
      break;

    case APPROVAL_TIME:
      if (value == null) {
        unsetApprovalTime();
      } else {
        setApprovalTime((String)value);
      }
      break;

    case LOAN_TIME:
      if (value == null) {
        unsetLoanTime();
      } else {
        setLoanTime((String)value);
      }
      break;

    case APPLY_DATE:
      if (value == null) {
        unsetApplyDate();
      } else {
        setApplyDate((Integer)value);
      }
      break;

    case PAY_INTEREST:
      if (value == null) {
        unsetPayInterest();
      } else {
        setPayInterest((Double)value);
      }
      break;

    case LOAN_RESULT_TIME:
      if (value == null) {
        unsetLoanResultTime();
      } else {
        setLoanResultTime((String)value);
      }
      break;

    case PARTNER_LOAN_DATE:
      if (value == null) {
        unsetPartnerLoanDate();
      } else {
        setPartnerLoanDate((String)value);
      }
      break;

    case REC_LOAN_DATE:
      if (value == null) {
        unsetRecLoanDate();
      } else {
        setRecLoanDate((String)value);
      }
      break;

    case REFUND_DATE:
      if (value == null) {
        unsetRefundDate();
      } else {
        setRefundDate((String)value);
      }
      break;

    case USER_IDS:
      if (value == null) {
        unsetUserIds();
      } else {
        setUserIds((List<Integer>)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case CHOOSE_MONTH_OR_WEEK:
      if (value == null) {
        unsetChooseMonthOrWeek();
      } else {
        setChooseMonthOrWeek((Integer)value);
      }
      break;

    case SUBMIT_APPROVAL_TIME:
      if (value == null) {
        unsetSubmitApprovalTime();
      } else {
        setSubmitApprovalTime((String)value);
      }
      break;

    case RE_MONTH:
      if (value == null) {
        unsetReMonth();
      } else {
        setReMonth((String)value);
      }
      break;

    case FROM_DAY:
      if (value == null) {
        unsetFromDay();
      } else {
        setFromDay((String)value);
      }
      break;

    case END_DAY:
      if (value == null) {
        unsetEndDay();
      } else {
        setEndDay((String)value);
      }
      break;

    case APPROVAL_STATUS_NAME:
      if (value == null) {
        unsetApprovalStatusName();
      } else {
        setApprovalStatusName((String)value);
      }
      break;

    case LOAN_STATUS_NAME:
      if (value == null) {
        unsetLoanStatusName();
      } else {
        setLoanStatusName((String)value);
      }
      break;

    case CONFIRM_LOAN_STATUS_NAME:
      if (value == null) {
        unsetConfirmLoanStatusName();
      } else {
        setConfirmLoanStatusName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NAME:
      return getProjectName();

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PM_USER_NAME:
      return getPmUserName();

    case CHINA_NAME:
      return getChinaName();

    case BUSINESS_CATEGORY_STR:
      return getBusinessCategoryStr();

    case ORG_NAME:
      return getOrgName();

    case ORG_CODE:
      return getOrgCode();

    case LOAN_AMOUNT:
      return Double.valueOf(getLoanAmount());

    case APPROVE_MONEY:
      return Double.valueOf(getApproveMoney());

    case APPROVAL_STATUS:
      return Integer.valueOf(getApprovalStatus());

    case CONFIRM_LOAN_STATUS:
      return Integer.valueOf(getConfirmLoanStatus());

    case LOAN_STATUS:
      return Integer.valueOf(getLoanStatus());

    case APPROVAL_COMMENT:
      return getApprovalComment();

    case APPROVAL_TIME:
      return getApprovalTime();

    case LOAN_TIME:
      return getLoanTime();

    case APPLY_DATE:
      return Integer.valueOf(getApplyDate());

    case PAY_INTEREST:
      return Double.valueOf(getPayInterest());

    case LOAN_RESULT_TIME:
      return getLoanResultTime();

    case PARTNER_LOAN_DATE:
      return getPartnerLoanDate();

    case REC_LOAN_DATE:
      return getRecLoanDate();

    case REFUND_DATE:
      return getRefundDate();

    case USER_IDS:
      return getUserIds();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case CHOOSE_MONTH_OR_WEEK:
      return Integer.valueOf(getChooseMonthOrWeek());

    case SUBMIT_APPROVAL_TIME:
      return getSubmitApprovalTime();

    case RE_MONTH:
      return getReMonth();

    case FROM_DAY:
      return getFromDay();

    case END_DAY:
      return getEndDay();

    case APPROVAL_STATUS_NAME:
      return getApprovalStatusName();

    case LOAN_STATUS_NAME:
      return getLoanStatusName();

    case CONFIRM_LOAN_STATUS_NAME:
      return getConfirmLoanStatusName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NAME:
      return isSetProjectName();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PM_USER_NAME:
      return isSetPmUserName();
    case CHINA_NAME:
      return isSetChinaName();
    case BUSINESS_CATEGORY_STR:
      return isSetBusinessCategoryStr();
    case ORG_NAME:
      return isSetOrgName();
    case ORG_CODE:
      return isSetOrgCode();
    case LOAN_AMOUNT:
      return isSetLoanAmount();
    case APPROVE_MONEY:
      return isSetApproveMoney();
    case APPROVAL_STATUS:
      return isSetApprovalStatus();
    case CONFIRM_LOAN_STATUS:
      return isSetConfirmLoanStatus();
    case LOAN_STATUS:
      return isSetLoanStatus();
    case APPROVAL_COMMENT:
      return isSetApprovalComment();
    case APPROVAL_TIME:
      return isSetApprovalTime();
    case LOAN_TIME:
      return isSetLoanTime();
    case APPLY_DATE:
      return isSetApplyDate();
    case PAY_INTEREST:
      return isSetPayInterest();
    case LOAN_RESULT_TIME:
      return isSetLoanResultTime();
    case PARTNER_LOAN_DATE:
      return isSetPartnerLoanDate();
    case REC_LOAN_DATE:
      return isSetRecLoanDate();
    case REFUND_DATE:
      return isSetRefundDate();
    case USER_IDS:
      return isSetUserIds();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case CHOOSE_MONTH_OR_WEEK:
      return isSetChooseMonthOrWeek();
    case SUBMIT_APPROVAL_TIME:
      return isSetSubmitApprovalTime();
    case RE_MONTH:
      return isSetReMonth();
    case FROM_DAY:
      return isSetFromDay();
    case END_DAY:
      return isSetEndDay();
    case APPROVAL_STATUS_NAME:
      return isSetApprovalStatusName();
    case LOAN_STATUS_NAME:
      return isSetLoanStatusName();
    case CONFIRM_LOAN_STATUS_NAME:
      return isSetConfirmLoanStatusName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ForeclosureCapDetailsReport)
      return this.equals((ForeclosureCapDetailsReport)that);
    return false;
  }

  public boolean equals(ForeclosureCapDetailsReport that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_pmUserName = true && this.isSetPmUserName();
    boolean that_present_pmUserName = true && that.isSetPmUserName();
    if (this_present_pmUserName || that_present_pmUserName) {
      if (!(this_present_pmUserName && that_present_pmUserName))
        return false;
      if (!this.pmUserName.equals(that.pmUserName))
        return false;
    }

    boolean this_present_chinaName = true && this.isSetChinaName();
    boolean that_present_chinaName = true && that.isSetChinaName();
    if (this_present_chinaName || that_present_chinaName) {
      if (!(this_present_chinaName && that_present_chinaName))
        return false;
      if (!this.chinaName.equals(that.chinaName))
        return false;
    }

    boolean this_present_businessCategoryStr = true && this.isSetBusinessCategoryStr();
    boolean that_present_businessCategoryStr = true && that.isSetBusinessCategoryStr();
    if (this_present_businessCategoryStr || that_present_businessCategoryStr) {
      if (!(this_present_businessCategoryStr && that_present_businessCategoryStr))
        return false;
      if (!this.businessCategoryStr.equals(that.businessCategoryStr))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_orgCode = true && this.isSetOrgCode();
    boolean that_present_orgCode = true && that.isSetOrgCode();
    if (this_present_orgCode || that_present_orgCode) {
      if (!(this_present_orgCode && that_present_orgCode))
        return false;
      if (!this.orgCode.equals(that.orgCode))
        return false;
    }

    boolean this_present_loanAmount = true;
    boolean that_present_loanAmount = true;
    if (this_present_loanAmount || that_present_loanAmount) {
      if (!(this_present_loanAmount && that_present_loanAmount))
        return false;
      if (this.loanAmount != that.loanAmount)
        return false;
    }

    boolean this_present_approveMoney = true;
    boolean that_present_approveMoney = true;
    if (this_present_approveMoney || that_present_approveMoney) {
      if (!(this_present_approveMoney && that_present_approveMoney))
        return false;
      if (this.approveMoney != that.approveMoney)
        return false;
    }

    boolean this_present_approvalStatus = true;
    boolean that_present_approvalStatus = true;
    if (this_present_approvalStatus || that_present_approvalStatus) {
      if (!(this_present_approvalStatus && that_present_approvalStatus))
        return false;
      if (this.approvalStatus != that.approvalStatus)
        return false;
    }

    boolean this_present_confirmLoanStatus = true;
    boolean that_present_confirmLoanStatus = true;
    if (this_present_confirmLoanStatus || that_present_confirmLoanStatus) {
      if (!(this_present_confirmLoanStatus && that_present_confirmLoanStatus))
        return false;
      if (this.confirmLoanStatus != that.confirmLoanStatus)
        return false;
    }

    boolean this_present_loanStatus = true;
    boolean that_present_loanStatus = true;
    if (this_present_loanStatus || that_present_loanStatus) {
      if (!(this_present_loanStatus && that_present_loanStatus))
        return false;
      if (this.loanStatus != that.loanStatus)
        return false;
    }

    boolean this_present_approvalComment = true && this.isSetApprovalComment();
    boolean that_present_approvalComment = true && that.isSetApprovalComment();
    if (this_present_approvalComment || that_present_approvalComment) {
      if (!(this_present_approvalComment && that_present_approvalComment))
        return false;
      if (!this.approvalComment.equals(that.approvalComment))
        return false;
    }

    boolean this_present_approvalTime = true && this.isSetApprovalTime();
    boolean that_present_approvalTime = true && that.isSetApprovalTime();
    if (this_present_approvalTime || that_present_approvalTime) {
      if (!(this_present_approvalTime && that_present_approvalTime))
        return false;
      if (!this.approvalTime.equals(that.approvalTime))
        return false;
    }

    boolean this_present_loanTime = true && this.isSetLoanTime();
    boolean that_present_loanTime = true && that.isSetLoanTime();
    if (this_present_loanTime || that_present_loanTime) {
      if (!(this_present_loanTime && that_present_loanTime))
        return false;
      if (!this.loanTime.equals(that.loanTime))
        return false;
    }

    boolean this_present_applyDate = true;
    boolean that_present_applyDate = true;
    if (this_present_applyDate || that_present_applyDate) {
      if (!(this_present_applyDate && that_present_applyDate))
        return false;
      if (this.applyDate != that.applyDate)
        return false;
    }

    boolean this_present_payInterest = true;
    boolean that_present_payInterest = true;
    if (this_present_payInterest || that_present_payInterest) {
      if (!(this_present_payInterest && that_present_payInterest))
        return false;
      if (this.payInterest != that.payInterest)
        return false;
    }

    boolean this_present_loanResultTime = true && this.isSetLoanResultTime();
    boolean that_present_loanResultTime = true && that.isSetLoanResultTime();
    if (this_present_loanResultTime || that_present_loanResultTime) {
      if (!(this_present_loanResultTime && that_present_loanResultTime))
        return false;
      if (!this.loanResultTime.equals(that.loanResultTime))
        return false;
    }

    boolean this_present_partnerLoanDate = true && this.isSetPartnerLoanDate();
    boolean that_present_partnerLoanDate = true && that.isSetPartnerLoanDate();
    if (this_present_partnerLoanDate || that_present_partnerLoanDate) {
      if (!(this_present_partnerLoanDate && that_present_partnerLoanDate))
        return false;
      if (!this.partnerLoanDate.equals(that.partnerLoanDate))
        return false;
    }

    boolean this_present_recLoanDate = true && this.isSetRecLoanDate();
    boolean that_present_recLoanDate = true && that.isSetRecLoanDate();
    if (this_present_recLoanDate || that_present_recLoanDate) {
      if (!(this_present_recLoanDate && that_present_recLoanDate))
        return false;
      if (!this.recLoanDate.equals(that.recLoanDate))
        return false;
    }

    boolean this_present_refundDate = true && this.isSetRefundDate();
    boolean that_present_refundDate = true && that.isSetRefundDate();
    if (this_present_refundDate || that_present_refundDate) {
      if (!(this_present_refundDate && that_present_refundDate))
        return false;
      if (!this.refundDate.equals(that.refundDate))
        return false;
    }

    boolean this_present_userIds = true && this.isSetUserIds();
    boolean that_present_userIds = true && that.isSetUserIds();
    if (this_present_userIds || that_present_userIds) {
      if (!(this_present_userIds && that_present_userIds))
        return false;
      if (!this.userIds.equals(that.userIds))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_chooseMonthOrWeek = true;
    boolean that_present_chooseMonthOrWeek = true;
    if (this_present_chooseMonthOrWeek || that_present_chooseMonthOrWeek) {
      if (!(this_present_chooseMonthOrWeek && that_present_chooseMonthOrWeek))
        return false;
      if (this.chooseMonthOrWeek != that.chooseMonthOrWeek)
        return false;
    }

    boolean this_present_submitApprovalTime = true && this.isSetSubmitApprovalTime();
    boolean that_present_submitApprovalTime = true && that.isSetSubmitApprovalTime();
    if (this_present_submitApprovalTime || that_present_submitApprovalTime) {
      if (!(this_present_submitApprovalTime && that_present_submitApprovalTime))
        return false;
      if (!this.submitApprovalTime.equals(that.submitApprovalTime))
        return false;
    }

    boolean this_present_reMonth = true && this.isSetReMonth();
    boolean that_present_reMonth = true && that.isSetReMonth();
    if (this_present_reMonth || that_present_reMonth) {
      if (!(this_present_reMonth && that_present_reMonth))
        return false;
      if (!this.reMonth.equals(that.reMonth))
        return false;
    }

    boolean this_present_fromDay = true && this.isSetFromDay();
    boolean that_present_fromDay = true && that.isSetFromDay();
    if (this_present_fromDay || that_present_fromDay) {
      if (!(this_present_fromDay && that_present_fromDay))
        return false;
      if (!this.fromDay.equals(that.fromDay))
        return false;
    }

    boolean this_present_endDay = true && this.isSetEndDay();
    boolean that_present_endDay = true && that.isSetEndDay();
    if (this_present_endDay || that_present_endDay) {
      if (!(this_present_endDay && that_present_endDay))
        return false;
      if (!this.endDay.equals(that.endDay))
        return false;
    }

    boolean this_present_approvalStatusName = true && this.isSetApprovalStatusName();
    boolean that_present_approvalStatusName = true && that.isSetApprovalStatusName();
    if (this_present_approvalStatusName || that_present_approvalStatusName) {
      if (!(this_present_approvalStatusName && that_present_approvalStatusName))
        return false;
      if (!this.approvalStatusName.equals(that.approvalStatusName))
        return false;
    }

    boolean this_present_loanStatusName = true && this.isSetLoanStatusName();
    boolean that_present_loanStatusName = true && that.isSetLoanStatusName();
    if (this_present_loanStatusName || that_present_loanStatusName) {
      if (!(this_present_loanStatusName && that_present_loanStatusName))
        return false;
      if (!this.loanStatusName.equals(that.loanStatusName))
        return false;
    }

    boolean this_present_confirmLoanStatusName = true && this.isSetConfirmLoanStatusName();
    boolean that_present_confirmLoanStatusName = true && that.isSetConfirmLoanStatusName();
    if (this_present_confirmLoanStatusName || that_present_confirmLoanStatusName) {
      if (!(this_present_confirmLoanStatusName && that_present_confirmLoanStatusName))
        return false;
      if (!this.confirmLoanStatusName.equals(that.confirmLoanStatusName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_pmUserName = true && (isSetPmUserName());
    list.add(present_pmUserName);
    if (present_pmUserName)
      list.add(pmUserName);

    boolean present_chinaName = true && (isSetChinaName());
    list.add(present_chinaName);
    if (present_chinaName)
      list.add(chinaName);

    boolean present_businessCategoryStr = true && (isSetBusinessCategoryStr());
    list.add(present_businessCategoryStr);
    if (present_businessCategoryStr)
      list.add(businessCategoryStr);

    boolean present_orgName = true && (isSetOrgName());
    list.add(present_orgName);
    if (present_orgName)
      list.add(orgName);

    boolean present_orgCode = true && (isSetOrgCode());
    list.add(present_orgCode);
    if (present_orgCode)
      list.add(orgCode);

    boolean present_loanAmount = true;
    list.add(present_loanAmount);
    if (present_loanAmount)
      list.add(loanAmount);

    boolean present_approveMoney = true;
    list.add(present_approveMoney);
    if (present_approveMoney)
      list.add(approveMoney);

    boolean present_approvalStatus = true;
    list.add(present_approvalStatus);
    if (present_approvalStatus)
      list.add(approvalStatus);

    boolean present_confirmLoanStatus = true;
    list.add(present_confirmLoanStatus);
    if (present_confirmLoanStatus)
      list.add(confirmLoanStatus);

    boolean present_loanStatus = true;
    list.add(present_loanStatus);
    if (present_loanStatus)
      list.add(loanStatus);

    boolean present_approvalComment = true && (isSetApprovalComment());
    list.add(present_approvalComment);
    if (present_approvalComment)
      list.add(approvalComment);

    boolean present_approvalTime = true && (isSetApprovalTime());
    list.add(present_approvalTime);
    if (present_approvalTime)
      list.add(approvalTime);

    boolean present_loanTime = true && (isSetLoanTime());
    list.add(present_loanTime);
    if (present_loanTime)
      list.add(loanTime);

    boolean present_applyDate = true;
    list.add(present_applyDate);
    if (present_applyDate)
      list.add(applyDate);

    boolean present_payInterest = true;
    list.add(present_payInterest);
    if (present_payInterest)
      list.add(payInterest);

    boolean present_loanResultTime = true && (isSetLoanResultTime());
    list.add(present_loanResultTime);
    if (present_loanResultTime)
      list.add(loanResultTime);

    boolean present_partnerLoanDate = true && (isSetPartnerLoanDate());
    list.add(present_partnerLoanDate);
    if (present_partnerLoanDate)
      list.add(partnerLoanDate);

    boolean present_recLoanDate = true && (isSetRecLoanDate());
    list.add(present_recLoanDate);
    if (present_recLoanDate)
      list.add(recLoanDate);

    boolean present_refundDate = true && (isSetRefundDate());
    list.add(present_refundDate);
    if (present_refundDate)
      list.add(refundDate);

    boolean present_userIds = true && (isSetUserIds());
    list.add(present_userIds);
    if (present_userIds)
      list.add(userIds);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_chooseMonthOrWeek = true;
    list.add(present_chooseMonthOrWeek);
    if (present_chooseMonthOrWeek)
      list.add(chooseMonthOrWeek);

    boolean present_submitApprovalTime = true && (isSetSubmitApprovalTime());
    list.add(present_submitApprovalTime);
    if (present_submitApprovalTime)
      list.add(submitApprovalTime);

    boolean present_reMonth = true && (isSetReMonth());
    list.add(present_reMonth);
    if (present_reMonth)
      list.add(reMonth);

    boolean present_fromDay = true && (isSetFromDay());
    list.add(present_fromDay);
    if (present_fromDay)
      list.add(fromDay);

    boolean present_endDay = true && (isSetEndDay());
    list.add(present_endDay);
    if (present_endDay)
      list.add(endDay);

    boolean present_approvalStatusName = true && (isSetApprovalStatusName());
    list.add(present_approvalStatusName);
    if (present_approvalStatusName)
      list.add(approvalStatusName);

    boolean present_loanStatusName = true && (isSetLoanStatusName());
    list.add(present_loanStatusName);
    if (present_loanStatusName)
      list.add(loanStatusName);

    boolean present_confirmLoanStatusName = true && (isSetConfirmLoanStatusName());
    list.add(present_confirmLoanStatusName);
    if (present_confirmLoanStatusName)
      list.add(confirmLoanStatusName);

    return list.hashCode();
  }

  @Override
  public int compareTo(ForeclosureCapDetailsReport other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserName()).compareTo(other.isSetPmUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserName, other.pmUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChinaName()).compareTo(other.isSetChinaName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChinaName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chinaName, other.chinaName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessCategoryStr()).compareTo(other.isSetBusinessCategoryStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessCategoryStr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessCategoryStr, other.businessCategoryStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrgCode()).compareTo(other.isSetOrgCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgCode, other.orgCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanAmount()).compareTo(other.isSetLoanAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanAmount, other.loanAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApproveMoney()).compareTo(other.isSetApproveMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApproveMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approveMoney, other.approveMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalStatus()).compareTo(other.isSetApprovalStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalStatus, other.approvalStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConfirmLoanStatus()).compareTo(other.isSetConfirmLoanStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfirmLoanStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.confirmLoanStatus, other.confirmLoanStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanStatus()).compareTo(other.isSetLoanStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanStatus, other.loanStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalComment()).compareTo(other.isSetApprovalComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalComment, other.approvalComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalTime()).compareTo(other.isSetApprovalTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalTime, other.approvalTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanTime()).compareTo(other.isSetLoanTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanTime, other.loanTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplyDate()).compareTo(other.isSetApplyDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyDate, other.applyDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayInterest()).compareTo(other.isSetPayInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payInterest, other.payInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanResultTime()).compareTo(other.isSetLoanResultTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanResultTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanResultTime, other.loanResultTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerLoanDate()).compareTo(other.isSetPartnerLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerLoanDate, other.partnerLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecLoanDate()).compareTo(other.isSetRecLoanDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecLoanDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recLoanDate, other.recLoanDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefundDate()).compareTo(other.isSetRefundDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefundDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refundDate, other.refundDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIds()).compareTo(other.isSetUserIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIds, other.userIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChooseMonthOrWeek()).compareTo(other.isSetChooseMonthOrWeek());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChooseMonthOrWeek()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chooseMonthOrWeek, other.chooseMonthOrWeek);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubmitApprovalTime()).compareTo(other.isSetSubmitApprovalTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubmitApprovalTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submitApprovalTime, other.submitApprovalTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReMonth()).compareTo(other.isSetReMonth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReMonth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reMonth, other.reMonth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromDay()).compareTo(other.isSetFromDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromDay, other.fromDay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDay()).compareTo(other.isSetEndDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDay, other.endDay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovalStatusName()).compareTo(other.isSetApprovalStatusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovalStatusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvalStatusName, other.approvalStatusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanStatusName()).compareTo(other.isSetLoanStatusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanStatusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanStatusName, other.loanStatusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConfirmLoanStatusName()).compareTo(other.isSetConfirmLoanStatusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfirmLoanStatusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.confirmLoanStatusName, other.confirmLoanStatusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ForeclosureCapDetailsReport(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserName:");
    if (this.pmUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.pmUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chinaName:");
    if (this.chinaName == null) {
      sb.append("null");
    } else {
      sb.append(this.chinaName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessCategoryStr:");
    if (this.businessCategoryStr == null) {
      sb.append("null");
    } else {
      sb.append(this.businessCategoryStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgCode:");
    if (this.orgCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orgCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanAmount:");
    sb.append(this.loanAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("approveMoney:");
    sb.append(this.approveMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalStatus:");
    sb.append(this.approvalStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("confirmLoanStatus:");
    sb.append(this.confirmLoanStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanStatus:");
    sb.append(this.loanStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalComment:");
    if (this.approvalComment == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalComment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalTime:");
    if (this.approvalTime == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanTime:");
    if (this.loanTime == null) {
      sb.append("null");
    } else {
      sb.append(this.loanTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyDate:");
    sb.append(this.applyDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("payInterest:");
    sb.append(this.payInterest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanResultTime:");
    if (this.loanResultTime == null) {
      sb.append("null");
    } else {
      sb.append(this.loanResultTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerLoanDate:");
    if (this.partnerLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recLoanDate:");
    if (this.recLoanDate == null) {
      sb.append("null");
    } else {
      sb.append(this.recLoanDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refundDate:");
    if (this.refundDate == null) {
      sb.append("null");
    } else {
      sb.append(this.refundDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIds:");
    if (this.userIds == null) {
      sb.append("null");
    } else {
      sb.append(this.userIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chooseMonthOrWeek:");
    sb.append(this.chooseMonthOrWeek);
    first = false;
    if (!first) sb.append(", ");
    sb.append("submitApprovalTime:");
    if (this.submitApprovalTime == null) {
      sb.append("null");
    } else {
      sb.append(this.submitApprovalTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reMonth:");
    if (this.reMonth == null) {
      sb.append("null");
    } else {
      sb.append(this.reMonth);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromDay:");
    if (this.fromDay == null) {
      sb.append("null");
    } else {
      sb.append(this.fromDay);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDay:");
    if (this.endDay == null) {
      sb.append("null");
    } else {
      sb.append(this.endDay);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvalStatusName:");
    if (this.approvalStatusName == null) {
      sb.append("null");
    } else {
      sb.append(this.approvalStatusName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanStatusName:");
    if (this.loanStatusName == null) {
      sb.append("null");
    } else {
      sb.append(this.loanStatusName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("confirmLoanStatusName:");
    if (this.confirmLoanStatusName == null) {
      sb.append("null");
    } else {
      sb.append(this.confirmLoanStatusName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ForeclosureCapDetailsReportStandardSchemeFactory implements SchemeFactory {
    public ForeclosureCapDetailsReportStandardScheme getScheme() {
      return new ForeclosureCapDetailsReportStandardScheme();
    }
  }

  private static class ForeclosureCapDetailsReportStandardScheme extends StandardScheme<ForeclosureCapDetailsReport> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ForeclosureCapDetailsReport struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PM_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmUserName = iprot.readString();
              struct.setPmUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CHINA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chinaName = iprot.readString();
              struct.setChinaNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BUSINESS_CATEGORY_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessCategoryStr = iprot.readString();
              struct.setBusinessCategoryStrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORG_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgCode = iprot.readString();
              struct.setOrgCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LOAN_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanAmount = iprot.readDouble();
              struct.setLoanAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // APPROVE_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.approveMoney = iprot.readDouble();
              struct.setApproveMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPROVAL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.approvalStatus = iprot.readI32();
              struct.setApprovalStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CONFIRM_LOAN_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.confirmLoanStatus = iprot.readI32();
              struct.setConfirmLoanStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // LOAN_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loanStatus = iprot.readI32();
              struct.setLoanStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // APPROVAL_COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalComment = iprot.readString();
              struct.setApprovalCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // APPROVAL_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalTime = iprot.readString();
              struct.setApprovalTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // LOAN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanTime = iprot.readString();
              struct.setLoanTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // APPLY_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.applyDate = iprot.readI32();
              struct.setApplyDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PAY_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.payInterest = iprot.readDouble();
              struct.setPayInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // LOAN_RESULT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanResultTime = iprot.readString();
              struct.setLoanResultTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PARTNER_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerLoanDate = iprot.readString();
              struct.setPartnerLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // REC_LOAN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recLoanDate = iprot.readString();
              struct.setRecLoanDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // REFUND_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refundDate = iprot.readString();
              struct.setRefundDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // USER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.userIds = new ArrayList<Integer>(_list0.size);
                int _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI32();
                  struct.userIds.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setUserIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // CHOOSE_MONTH_OR_WEEK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.chooseMonthOrWeek = iprot.readI32();
              struct.setChooseMonthOrWeekIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SUBMIT_APPROVAL_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.submitApprovalTime = iprot.readString();
              struct.setSubmitApprovalTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // RE_MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reMonth = iprot.readString();
              struct.setReMonthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // FROM_DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromDay = iprot.readString();
              struct.setFromDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // END_DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDay = iprot.readString();
              struct.setEndDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // APPROVAL_STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.approvalStatusName = iprot.readString();
              struct.setApprovalStatusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // LOAN_STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanStatusName = iprot.readString();
              struct.setLoanStatusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // CONFIRM_LOAN_STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.confirmLoanStatusName = iprot.readString();
              struct.setConfirmLoanStatusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ForeclosureCapDetailsReport struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.pmUserName != null) {
        oprot.writeFieldBegin(PM_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.pmUserName);
        oprot.writeFieldEnd();
      }
      if (struct.chinaName != null) {
        oprot.writeFieldBegin(CHINA_NAME_FIELD_DESC);
        oprot.writeString(struct.chinaName);
        oprot.writeFieldEnd();
      }
      if (struct.businessCategoryStr != null) {
        oprot.writeFieldBegin(BUSINESS_CATEGORY_STR_FIELD_DESC);
        oprot.writeString(struct.businessCategoryStr);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.orgCode != null) {
        oprot.writeFieldBegin(ORG_CODE_FIELD_DESC);
        oprot.writeString(struct.orgCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LOAN_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.loanAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APPROVE_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.approveMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APPROVAL_STATUS_FIELD_DESC);
      oprot.writeI32(struct.approvalStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONFIRM_LOAN_STATUS_FIELD_DESC);
      oprot.writeI32(struct.confirmLoanStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_STATUS_FIELD_DESC);
      oprot.writeI32(struct.loanStatus);
      oprot.writeFieldEnd();
      if (struct.approvalComment != null) {
        oprot.writeFieldBegin(APPROVAL_COMMENT_FIELD_DESC);
        oprot.writeString(struct.approvalComment);
        oprot.writeFieldEnd();
      }
      if (struct.approvalTime != null) {
        oprot.writeFieldBegin(APPROVAL_TIME_FIELD_DESC);
        oprot.writeString(struct.approvalTime);
        oprot.writeFieldEnd();
      }
      if (struct.loanTime != null) {
        oprot.writeFieldBegin(LOAN_TIME_FIELD_DESC);
        oprot.writeString(struct.loanTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPLY_DATE_FIELD_DESC);
      oprot.writeI32(struct.applyDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAY_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.payInterest);
      oprot.writeFieldEnd();
      if (struct.loanResultTime != null) {
        oprot.writeFieldBegin(LOAN_RESULT_TIME_FIELD_DESC);
        oprot.writeString(struct.loanResultTime);
        oprot.writeFieldEnd();
      }
      if (struct.partnerLoanDate != null) {
        oprot.writeFieldBegin(PARTNER_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.partnerLoanDate);
        oprot.writeFieldEnd();
      }
      if (struct.recLoanDate != null) {
        oprot.writeFieldBegin(REC_LOAN_DATE_FIELD_DESC);
        oprot.writeString(struct.recLoanDate);
        oprot.writeFieldEnd();
      }
      if (struct.refundDate != null) {
        oprot.writeFieldBegin(REFUND_DATE_FIELD_DESC);
        oprot.writeString(struct.refundDate);
        oprot.writeFieldEnd();
      }
      if (struct.userIds != null) {
        oprot.writeFieldBegin(USER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.userIds.size()));
          for (int _iter3 : struct.userIds)
          {
            oprot.writeI32(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHOOSE_MONTH_OR_WEEK_FIELD_DESC);
      oprot.writeI32(struct.chooseMonthOrWeek);
      oprot.writeFieldEnd();
      if (struct.submitApprovalTime != null) {
        oprot.writeFieldBegin(SUBMIT_APPROVAL_TIME_FIELD_DESC);
        oprot.writeString(struct.submitApprovalTime);
        oprot.writeFieldEnd();
      }
      if (struct.reMonth != null) {
        oprot.writeFieldBegin(RE_MONTH_FIELD_DESC);
        oprot.writeString(struct.reMonth);
        oprot.writeFieldEnd();
      }
      if (struct.fromDay != null) {
        oprot.writeFieldBegin(FROM_DAY_FIELD_DESC);
        oprot.writeString(struct.fromDay);
        oprot.writeFieldEnd();
      }
      if (struct.endDay != null) {
        oprot.writeFieldBegin(END_DAY_FIELD_DESC);
        oprot.writeString(struct.endDay);
        oprot.writeFieldEnd();
      }
      if (struct.approvalStatusName != null) {
        oprot.writeFieldBegin(APPROVAL_STATUS_NAME_FIELD_DESC);
        oprot.writeString(struct.approvalStatusName);
        oprot.writeFieldEnd();
      }
      if (struct.loanStatusName != null) {
        oprot.writeFieldBegin(LOAN_STATUS_NAME_FIELD_DESC);
        oprot.writeString(struct.loanStatusName);
        oprot.writeFieldEnd();
      }
      if (struct.confirmLoanStatusName != null) {
        oprot.writeFieldBegin(CONFIRM_LOAN_STATUS_NAME_FIELD_DESC);
        oprot.writeString(struct.confirmLoanStatusName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ForeclosureCapDetailsReportTupleSchemeFactory implements SchemeFactory {
    public ForeclosureCapDetailsReportTupleScheme getScheme() {
      return new ForeclosureCapDetailsReportTupleScheme();
    }
  }

  private static class ForeclosureCapDetailsReportTupleScheme extends TupleScheme<ForeclosureCapDetailsReport> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ForeclosureCapDetailsReport struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectName()) {
        optionals.set(1);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(2);
      }
      if (struct.isSetPmUserName()) {
        optionals.set(3);
      }
      if (struct.isSetChinaName()) {
        optionals.set(4);
      }
      if (struct.isSetBusinessCategoryStr()) {
        optionals.set(5);
      }
      if (struct.isSetOrgName()) {
        optionals.set(6);
      }
      if (struct.isSetOrgCode()) {
        optionals.set(7);
      }
      if (struct.isSetLoanAmount()) {
        optionals.set(8);
      }
      if (struct.isSetApproveMoney()) {
        optionals.set(9);
      }
      if (struct.isSetApprovalStatus()) {
        optionals.set(10);
      }
      if (struct.isSetConfirmLoanStatus()) {
        optionals.set(11);
      }
      if (struct.isSetLoanStatus()) {
        optionals.set(12);
      }
      if (struct.isSetApprovalComment()) {
        optionals.set(13);
      }
      if (struct.isSetApprovalTime()) {
        optionals.set(14);
      }
      if (struct.isSetLoanTime()) {
        optionals.set(15);
      }
      if (struct.isSetApplyDate()) {
        optionals.set(16);
      }
      if (struct.isSetPayInterest()) {
        optionals.set(17);
      }
      if (struct.isSetLoanResultTime()) {
        optionals.set(18);
      }
      if (struct.isSetPartnerLoanDate()) {
        optionals.set(19);
      }
      if (struct.isSetRecLoanDate()) {
        optionals.set(20);
      }
      if (struct.isSetRefundDate()) {
        optionals.set(21);
      }
      if (struct.isSetUserIds()) {
        optionals.set(22);
      }
      if (struct.isSetPage()) {
        optionals.set(23);
      }
      if (struct.isSetRows()) {
        optionals.set(24);
      }
      if (struct.isSetChooseMonthOrWeek()) {
        optionals.set(25);
      }
      if (struct.isSetSubmitApprovalTime()) {
        optionals.set(26);
      }
      if (struct.isSetReMonth()) {
        optionals.set(27);
      }
      if (struct.isSetFromDay()) {
        optionals.set(28);
      }
      if (struct.isSetEndDay()) {
        optionals.set(29);
      }
      if (struct.isSetApprovalStatusName()) {
        optionals.set(30);
      }
      if (struct.isSetLoanStatusName()) {
        optionals.set(31);
      }
      if (struct.isSetConfirmLoanStatusName()) {
        optionals.set(32);
      }
      oprot.writeBitSet(optionals, 33);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetPmUserName()) {
        oprot.writeString(struct.pmUserName);
      }
      if (struct.isSetChinaName()) {
        oprot.writeString(struct.chinaName);
      }
      if (struct.isSetBusinessCategoryStr()) {
        oprot.writeString(struct.businessCategoryStr);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetOrgCode()) {
        oprot.writeString(struct.orgCode);
      }
      if (struct.isSetLoanAmount()) {
        oprot.writeDouble(struct.loanAmount);
      }
      if (struct.isSetApproveMoney()) {
        oprot.writeDouble(struct.approveMoney);
      }
      if (struct.isSetApprovalStatus()) {
        oprot.writeI32(struct.approvalStatus);
      }
      if (struct.isSetConfirmLoanStatus()) {
        oprot.writeI32(struct.confirmLoanStatus);
      }
      if (struct.isSetLoanStatus()) {
        oprot.writeI32(struct.loanStatus);
      }
      if (struct.isSetApprovalComment()) {
        oprot.writeString(struct.approvalComment);
      }
      if (struct.isSetApprovalTime()) {
        oprot.writeString(struct.approvalTime);
      }
      if (struct.isSetLoanTime()) {
        oprot.writeString(struct.loanTime);
      }
      if (struct.isSetApplyDate()) {
        oprot.writeI32(struct.applyDate);
      }
      if (struct.isSetPayInterest()) {
        oprot.writeDouble(struct.payInterest);
      }
      if (struct.isSetLoanResultTime()) {
        oprot.writeString(struct.loanResultTime);
      }
      if (struct.isSetPartnerLoanDate()) {
        oprot.writeString(struct.partnerLoanDate);
      }
      if (struct.isSetRecLoanDate()) {
        oprot.writeString(struct.recLoanDate);
      }
      if (struct.isSetRefundDate()) {
        oprot.writeString(struct.refundDate);
      }
      if (struct.isSetUserIds()) {
        {
          oprot.writeI32(struct.userIds.size());
          for (int _iter4 : struct.userIds)
          {
            oprot.writeI32(_iter4);
          }
        }
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetChooseMonthOrWeek()) {
        oprot.writeI32(struct.chooseMonthOrWeek);
      }
      if (struct.isSetSubmitApprovalTime()) {
        oprot.writeString(struct.submitApprovalTime);
      }
      if (struct.isSetReMonth()) {
        oprot.writeString(struct.reMonth);
      }
      if (struct.isSetFromDay()) {
        oprot.writeString(struct.fromDay);
      }
      if (struct.isSetEndDay()) {
        oprot.writeString(struct.endDay);
      }
      if (struct.isSetApprovalStatusName()) {
        oprot.writeString(struct.approvalStatusName);
      }
      if (struct.isSetLoanStatusName()) {
        oprot.writeString(struct.loanStatusName);
      }
      if (struct.isSetConfirmLoanStatusName()) {
        oprot.writeString(struct.confirmLoanStatusName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ForeclosureCapDetailsReport struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(33);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.pmUserName = iprot.readString();
        struct.setPmUserNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.chinaName = iprot.readString();
        struct.setChinaNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.businessCategoryStr = iprot.readString();
        struct.setBusinessCategoryStrIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orgCode = iprot.readString();
        struct.setOrgCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.loanAmount = iprot.readDouble();
        struct.setLoanAmountIsSet(true);
      }
      if (incoming.get(9)) {
        struct.approveMoney = iprot.readDouble();
        struct.setApproveMoneyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.approvalStatus = iprot.readI32();
        struct.setApprovalStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.confirmLoanStatus = iprot.readI32();
        struct.setConfirmLoanStatusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.loanStatus = iprot.readI32();
        struct.setLoanStatusIsSet(true);
      }
      if (incoming.get(13)) {
        struct.approvalComment = iprot.readString();
        struct.setApprovalCommentIsSet(true);
      }
      if (incoming.get(14)) {
        struct.approvalTime = iprot.readString();
        struct.setApprovalTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.loanTime = iprot.readString();
        struct.setLoanTimeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.applyDate = iprot.readI32();
        struct.setApplyDateIsSet(true);
      }
      if (incoming.get(17)) {
        struct.payInterest = iprot.readDouble();
        struct.setPayInterestIsSet(true);
      }
      if (incoming.get(18)) {
        struct.loanResultTime = iprot.readString();
        struct.setLoanResultTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.partnerLoanDate = iprot.readString();
        struct.setPartnerLoanDateIsSet(true);
      }
      if (incoming.get(20)) {
        struct.recLoanDate = iprot.readString();
        struct.setRecLoanDateIsSet(true);
      }
      if (incoming.get(21)) {
        struct.refundDate = iprot.readString();
        struct.setRefundDateIsSet(true);
      }
      if (incoming.get(22)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIds = new ArrayList<Integer>(_list5.size);
          int _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readI32();
            struct.userIds.add(_elem6);
          }
        }
        struct.setUserIdsIsSet(true);
      }
      if (incoming.get(23)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(24)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(25)) {
        struct.chooseMonthOrWeek = iprot.readI32();
        struct.setChooseMonthOrWeekIsSet(true);
      }
      if (incoming.get(26)) {
        struct.submitApprovalTime = iprot.readString();
        struct.setSubmitApprovalTimeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.reMonth = iprot.readString();
        struct.setReMonthIsSet(true);
      }
      if (incoming.get(28)) {
        struct.fromDay = iprot.readString();
        struct.setFromDayIsSet(true);
      }
      if (incoming.get(29)) {
        struct.endDay = iprot.readString();
        struct.setEndDayIsSet(true);
      }
      if (incoming.get(30)) {
        struct.approvalStatusName = iprot.readString();
        struct.setApprovalStatusNameIsSet(true);
      }
      if (incoming.get(31)) {
        struct.loanStatusName = iprot.readString();
        struct.setLoanStatusNameIsSet(true);
      }
      if (incoming.get(32)) {
        struct.confirmLoanStatusName = iprot.readString();
        struct.setConfirmLoanStatusNameIsSet(true);
      }
    }
  }

}

