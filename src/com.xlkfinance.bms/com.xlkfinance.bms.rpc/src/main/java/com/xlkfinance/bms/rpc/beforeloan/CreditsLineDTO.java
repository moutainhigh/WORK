/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.beforeloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-21")
public class CreditsLineDTO implements org.apache.thrift.TBase<CreditsLineDTO, CreditsLineDTO._Fields>, java.io.Serializable, Cloneable, Comparable<CreditsLineDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CreditsLineDTO");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatus", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("requestDttm", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ACCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("acctType", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CREDIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("creditAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField PM_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUser", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PLAN_OUT_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planOutLoanDT", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PLAN_REPAY_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planRepayLoanDT", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REQUEST_START_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStartDt", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REQUEST_END_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("requestEndDt", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatusVal", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cusName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ECO_TRADE_FIELD_DESC = new org.apache.thrift.protocol.TField("ecoTrade", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField OLD_PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("oldProjectId", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField PM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserId", org.apache.thrift.protocol.TType.I32, (short)19);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CreditsLineDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CreditsLineDTOTupleSchemeFactory());
  }

  public int projectId; // required
  public String projectNumber; // required
  public String projectName; // required
  public int requestStatus; // required
  public String requestDttm; // required
  public int acctType; // required
  public double creditAmt; // required
  public String pmUser; // required
  public String planOutLoanDT; // required
  public String planRepayLoanDT; // required
  public String requestStartDt; // required
  public String requestEndDt; // required
  public int page; // required
  public int rows; // required
  public String requestStatusVal; // required
  public String cusName; // required
  public int ecoTrade; // required
  public int oldProjectId; // required
  public int pmUserId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    PROJECT_NUMBER((short)2, "projectNumber"),
    PROJECT_NAME((short)3, "projectName"),
    REQUEST_STATUS((short)4, "requestStatus"),
    REQUEST_DTTM((short)5, "requestDttm"),
    ACCT_TYPE((short)6, "acctType"),
    CREDIT_AMT((short)7, "creditAmt"),
    PM_USER((short)8, "pmUser"),
    PLAN_OUT_LOAN_DT((short)9, "planOutLoanDT"),
    PLAN_REPAY_LOAN_DT((short)10, "planRepayLoanDT"),
    REQUEST_START_DT((short)11, "requestStartDt"),
    REQUEST_END_DT((short)12, "requestEndDt"),
    PAGE((short)13, "page"),
    ROWS((short)14, "rows"),
    REQUEST_STATUS_VAL((short)15, "requestStatusVal"),
    CUS_NAME((short)16, "cusName"),
    ECO_TRADE((short)17, "ecoTrade"),
    OLD_PROJECT_ID((short)18, "oldProjectId"),
    PM_USER_ID((short)19, "pmUserId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 3: // PROJECT_NAME
          return PROJECT_NAME;
        case 4: // REQUEST_STATUS
          return REQUEST_STATUS;
        case 5: // REQUEST_DTTM
          return REQUEST_DTTM;
        case 6: // ACCT_TYPE
          return ACCT_TYPE;
        case 7: // CREDIT_AMT
          return CREDIT_AMT;
        case 8: // PM_USER
          return PM_USER;
        case 9: // PLAN_OUT_LOAN_DT
          return PLAN_OUT_LOAN_DT;
        case 10: // PLAN_REPAY_LOAN_DT
          return PLAN_REPAY_LOAN_DT;
        case 11: // REQUEST_START_DT
          return REQUEST_START_DT;
        case 12: // REQUEST_END_DT
          return REQUEST_END_DT;
        case 13: // PAGE
          return PAGE;
        case 14: // ROWS
          return ROWS;
        case 15: // REQUEST_STATUS_VAL
          return REQUEST_STATUS_VAL;
        case 16: // CUS_NAME
          return CUS_NAME;
        case 17: // ECO_TRADE
          return ECO_TRADE;
        case 18: // OLD_PROJECT_ID
          return OLD_PROJECT_ID;
        case 19: // PM_USER_ID
          return PM_USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __REQUESTSTATUS_ISSET_ID = 1;
  private static final int __ACCTTYPE_ISSET_ID = 2;
  private static final int __CREDITAMT_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private static final int __ECOTRADE_ISSET_ID = 6;
  private static final int __OLDPROJECTID_ISSET_ID = 7;
  private static final int __PMUSERID_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_STATUS, new org.apache.thrift.meta_data.FieldMetaData("requestStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("requestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("acctType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREDIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("creditAmt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PM_USER, new org.apache.thrift.meta_data.FieldMetaData("pmUser", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_OUT_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planOutLoanDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_REPAY_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planRepayLoanDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_START_DT, new org.apache.thrift.meta_data.FieldMetaData("requestStartDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_END_DT, new org.apache.thrift.meta_data.FieldMetaData("requestEndDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUEST_STATUS_VAL, new org.apache.thrift.meta_data.FieldMetaData("requestStatusVal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("cusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ECO_TRADE, new org.apache.thrift.meta_data.FieldMetaData("ecoTrade", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OLD_PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("oldProjectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("pmUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CreditsLineDTO.class, metaDataMap);
  }

  public CreditsLineDTO() {
  }

  public CreditsLineDTO(
    int projectId,
    String projectNumber,
    String projectName,
    int requestStatus,
    String requestDttm,
    int acctType,
    double creditAmt,
    String pmUser,
    String planOutLoanDT,
    String planRepayLoanDT,
    String requestStartDt,
    String requestEndDt,
    int page,
    int rows,
    String requestStatusVal,
    String cusName,
    int ecoTrade,
    int oldProjectId,
    int pmUserId)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectNumber = projectNumber;
    this.projectName = projectName;
    this.requestStatus = requestStatus;
    setRequestStatusIsSet(true);
    this.requestDttm = requestDttm;
    this.acctType = acctType;
    setAcctTypeIsSet(true);
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    this.pmUser = pmUser;
    this.planOutLoanDT = planOutLoanDT;
    this.planRepayLoanDT = planRepayLoanDT;
    this.requestStartDt = requestStartDt;
    this.requestEndDt = requestEndDt;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.requestStatusVal = requestStatusVal;
    this.cusName = cusName;
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    this.oldProjectId = oldProjectId;
    setOldProjectIdIsSet(true);
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CreditsLineDTO(CreditsLineDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.requestStatus = other.requestStatus;
    if (other.isSetRequestDttm()) {
      this.requestDttm = other.requestDttm;
    }
    this.acctType = other.acctType;
    this.creditAmt = other.creditAmt;
    if (other.isSetPmUser()) {
      this.pmUser = other.pmUser;
    }
    if (other.isSetPlanOutLoanDT()) {
      this.planOutLoanDT = other.planOutLoanDT;
    }
    if (other.isSetPlanRepayLoanDT()) {
      this.planRepayLoanDT = other.planRepayLoanDT;
    }
    if (other.isSetRequestStartDt()) {
      this.requestStartDt = other.requestStartDt;
    }
    if (other.isSetRequestEndDt()) {
      this.requestEndDt = other.requestEndDt;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetRequestStatusVal()) {
      this.requestStatusVal = other.requestStatusVal;
    }
    if (other.isSetCusName()) {
      this.cusName = other.cusName;
    }
    this.ecoTrade = other.ecoTrade;
    this.oldProjectId = other.oldProjectId;
    this.pmUserId = other.pmUserId;
  }

  public CreditsLineDTO deepCopy() {
    return new CreditsLineDTO(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectNumber = null;
    this.projectName = null;
    setRequestStatusIsSet(false);
    this.requestStatus = 0;
    this.requestDttm = null;
    setAcctTypeIsSet(false);
    this.acctType = 0;
    setCreditAmtIsSet(false);
    this.creditAmt = 0.0;
    this.pmUser = null;
    this.planOutLoanDT = null;
    this.planRepayLoanDT = null;
    this.requestStartDt = null;
    this.requestEndDt = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.requestStatusVal = null;
    this.cusName = null;
    setEcoTradeIsSet(false);
    this.ecoTrade = 0;
    setOldProjectIdIsSet(false);
    this.oldProjectId = 0;
    setPmUserIdIsSet(false);
    this.pmUserId = 0;
  }

  public int getProjectId() {
    return this.projectId;
  }

  public CreditsLineDTO setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public CreditsLineDTO setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getProjectName() {
    return this.projectName;
  }

  public CreditsLineDTO setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getRequestStatus() {
    return this.requestStatus;
  }

  public CreditsLineDTO setRequestStatus(int requestStatus) {
    this.requestStatus = requestStatus;
    setRequestStatusIsSet(true);
    return this;
  }

  public void unsetRequestStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID);
  }

  /** Returns true if field requestStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID);
  }

  public void setRequestStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REQUESTSTATUS_ISSET_ID, value);
  }

  public String getRequestDttm() {
    return this.requestDttm;
  }

  public CreditsLineDTO setRequestDttm(String requestDttm) {
    this.requestDttm = requestDttm;
    return this;
  }

  public void unsetRequestDttm() {
    this.requestDttm = null;
  }

  /** Returns true if field requestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestDttm() {
    return this.requestDttm != null;
  }

  public void setRequestDttmIsSet(boolean value) {
    if (!value) {
      this.requestDttm = null;
    }
  }

  public int getAcctType() {
    return this.acctType;
  }

  public CreditsLineDTO setAcctType(int acctType) {
    this.acctType = acctType;
    setAcctTypeIsSet(true);
    return this;
  }

  public void unsetAcctType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCTTYPE_ISSET_ID);
  }

  /** Returns true if field acctType is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctType() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCTTYPE_ISSET_ID);
  }

  public void setAcctTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCTTYPE_ISSET_ID, value);
  }

  public double getCreditAmt() {
    return this.creditAmt;
  }

  public CreditsLineDTO setCreditAmt(double creditAmt) {
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    return this;
  }

  public void unsetCreditAmt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  /** Returns true if field creditAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditAmt() {
    return EncodingUtils.testBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  public void setCreditAmtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREDITAMT_ISSET_ID, value);
  }

  public String getPmUser() {
    return this.pmUser;
  }

  public CreditsLineDTO setPmUser(String pmUser) {
    this.pmUser = pmUser;
    return this;
  }

  public void unsetPmUser() {
    this.pmUser = null;
  }

  /** Returns true if field pmUser is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUser() {
    return this.pmUser != null;
  }

  public void setPmUserIsSet(boolean value) {
    if (!value) {
      this.pmUser = null;
    }
  }

  public String getPlanOutLoanDT() {
    return this.planOutLoanDT;
  }

  public CreditsLineDTO setPlanOutLoanDT(String planOutLoanDT) {
    this.planOutLoanDT = planOutLoanDT;
    return this;
  }

  public void unsetPlanOutLoanDT() {
    this.planOutLoanDT = null;
  }

  /** Returns true if field planOutLoanDT is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanOutLoanDT() {
    return this.planOutLoanDT != null;
  }

  public void setPlanOutLoanDTIsSet(boolean value) {
    if (!value) {
      this.planOutLoanDT = null;
    }
  }

  public String getPlanRepayLoanDT() {
    return this.planRepayLoanDT;
  }

  public CreditsLineDTO setPlanRepayLoanDT(String planRepayLoanDT) {
    this.planRepayLoanDT = planRepayLoanDT;
    return this;
  }

  public void unsetPlanRepayLoanDT() {
    this.planRepayLoanDT = null;
  }

  /** Returns true if field planRepayLoanDT is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanRepayLoanDT() {
    return this.planRepayLoanDT != null;
  }

  public void setPlanRepayLoanDTIsSet(boolean value) {
    if (!value) {
      this.planRepayLoanDT = null;
    }
  }

  public String getRequestStartDt() {
    return this.requestStartDt;
  }

  public CreditsLineDTO setRequestStartDt(String requestStartDt) {
    this.requestStartDt = requestStartDt;
    return this;
  }

  public void unsetRequestStartDt() {
    this.requestStartDt = null;
  }

  /** Returns true if field requestStartDt is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStartDt() {
    return this.requestStartDt != null;
  }

  public void setRequestStartDtIsSet(boolean value) {
    if (!value) {
      this.requestStartDt = null;
    }
  }

  public String getRequestEndDt() {
    return this.requestEndDt;
  }

  public CreditsLineDTO setRequestEndDt(String requestEndDt) {
    this.requestEndDt = requestEndDt;
    return this;
  }

  public void unsetRequestEndDt() {
    this.requestEndDt = null;
  }

  /** Returns true if field requestEndDt is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestEndDt() {
    return this.requestEndDt != null;
  }

  public void setRequestEndDtIsSet(boolean value) {
    if (!value) {
      this.requestEndDt = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public CreditsLineDTO setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public CreditsLineDTO setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getRequestStatusVal() {
    return this.requestStatusVal;
  }

  public CreditsLineDTO setRequestStatusVal(String requestStatusVal) {
    this.requestStatusVal = requestStatusVal;
    return this;
  }

  public void unsetRequestStatusVal() {
    this.requestStatusVal = null;
  }

  /** Returns true if field requestStatusVal is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatusVal() {
    return this.requestStatusVal != null;
  }

  public void setRequestStatusValIsSet(boolean value) {
    if (!value) {
      this.requestStatusVal = null;
    }
  }

  public String getCusName() {
    return this.cusName;
  }

  public CreditsLineDTO setCusName(String cusName) {
    this.cusName = cusName;
    return this;
  }

  public void unsetCusName() {
    this.cusName = null;
  }

  /** Returns true if field cusName is set (has been assigned a value) and false otherwise */
  public boolean isSetCusName() {
    return this.cusName != null;
  }

  public void setCusNameIsSet(boolean value) {
    if (!value) {
      this.cusName = null;
    }
  }

  public int getEcoTrade() {
    return this.ecoTrade;
  }

  public CreditsLineDTO setEcoTrade(int ecoTrade) {
    this.ecoTrade = ecoTrade;
    setEcoTradeIsSet(true);
    return this;
  }

  public void unsetEcoTrade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  /** Returns true if field ecoTrade is set (has been assigned a value) and false otherwise */
  public boolean isSetEcoTrade() {
    return EncodingUtils.testBit(__isset_bitfield, __ECOTRADE_ISSET_ID);
  }

  public void setEcoTradeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ECOTRADE_ISSET_ID, value);
  }

  public int getOldProjectId() {
    return this.oldProjectId;
  }

  public CreditsLineDTO setOldProjectId(int oldProjectId) {
    this.oldProjectId = oldProjectId;
    setOldProjectIdIsSet(true);
    return this;
  }

  public void unsetOldProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDPROJECTID_ISSET_ID);
  }

  /** Returns true if field oldProjectId is set (has been assigned a value) and false otherwise */
  public boolean isSetOldProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDPROJECTID_ISSET_ID);
  }

  public void setOldProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDPROJECTID_ISSET_ID, value);
  }

  public int getPmUserId() {
    return this.pmUserId;
  }

  public CreditsLineDTO setPmUserId(int pmUserId) {
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    return this;
  }

  public void unsetPmUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  /** Returns true if field pmUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  public void setPmUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PMUSERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case REQUEST_STATUS:
      if (value == null) {
        unsetRequestStatus();
      } else {
        setRequestStatus((Integer)value);
      }
      break;

    case REQUEST_DTTM:
      if (value == null) {
        unsetRequestDttm();
      } else {
        setRequestDttm((String)value);
      }
      break;

    case ACCT_TYPE:
      if (value == null) {
        unsetAcctType();
      } else {
        setAcctType((Integer)value);
      }
      break;

    case CREDIT_AMT:
      if (value == null) {
        unsetCreditAmt();
      } else {
        setCreditAmt((Double)value);
      }
      break;

    case PM_USER:
      if (value == null) {
        unsetPmUser();
      } else {
        setPmUser((String)value);
      }
      break;

    case PLAN_OUT_LOAN_DT:
      if (value == null) {
        unsetPlanOutLoanDT();
      } else {
        setPlanOutLoanDT((String)value);
      }
      break;

    case PLAN_REPAY_LOAN_DT:
      if (value == null) {
        unsetPlanRepayLoanDT();
      } else {
        setPlanRepayLoanDT((String)value);
      }
      break;

    case REQUEST_START_DT:
      if (value == null) {
        unsetRequestStartDt();
      } else {
        setRequestStartDt((String)value);
      }
      break;

    case REQUEST_END_DT:
      if (value == null) {
        unsetRequestEndDt();
      } else {
        setRequestEndDt((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case REQUEST_STATUS_VAL:
      if (value == null) {
        unsetRequestStatusVal();
      } else {
        setRequestStatusVal((String)value);
      }
      break;

    case CUS_NAME:
      if (value == null) {
        unsetCusName();
      } else {
        setCusName((String)value);
      }
      break;

    case ECO_TRADE:
      if (value == null) {
        unsetEcoTrade();
      } else {
        setEcoTrade((Integer)value);
      }
      break;

    case OLD_PROJECT_ID:
      if (value == null) {
        unsetOldProjectId();
      } else {
        setOldProjectId((Integer)value);
      }
      break;

    case PM_USER_ID:
      if (value == null) {
        unsetPmUserId();
      } else {
        setPmUserId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PROJECT_NAME:
      return getProjectName();

    case REQUEST_STATUS:
      return Integer.valueOf(getRequestStatus());

    case REQUEST_DTTM:
      return getRequestDttm();

    case ACCT_TYPE:
      return Integer.valueOf(getAcctType());

    case CREDIT_AMT:
      return Double.valueOf(getCreditAmt());

    case PM_USER:
      return getPmUser();

    case PLAN_OUT_LOAN_DT:
      return getPlanOutLoanDT();

    case PLAN_REPAY_LOAN_DT:
      return getPlanRepayLoanDT();

    case REQUEST_START_DT:
      return getRequestStartDt();

    case REQUEST_END_DT:
      return getRequestEndDt();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case REQUEST_STATUS_VAL:
      return getRequestStatusVal();

    case CUS_NAME:
      return getCusName();

    case ECO_TRADE:
      return Integer.valueOf(getEcoTrade());

    case OLD_PROJECT_ID:
      return Integer.valueOf(getOldProjectId());

    case PM_USER_ID:
      return Integer.valueOf(getPmUserId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PROJECT_NAME:
      return isSetProjectName();
    case REQUEST_STATUS:
      return isSetRequestStatus();
    case REQUEST_DTTM:
      return isSetRequestDttm();
    case ACCT_TYPE:
      return isSetAcctType();
    case CREDIT_AMT:
      return isSetCreditAmt();
    case PM_USER:
      return isSetPmUser();
    case PLAN_OUT_LOAN_DT:
      return isSetPlanOutLoanDT();
    case PLAN_REPAY_LOAN_DT:
      return isSetPlanRepayLoanDT();
    case REQUEST_START_DT:
      return isSetRequestStartDt();
    case REQUEST_END_DT:
      return isSetRequestEndDt();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case REQUEST_STATUS_VAL:
      return isSetRequestStatusVal();
    case CUS_NAME:
      return isSetCusName();
    case ECO_TRADE:
      return isSetEcoTrade();
    case OLD_PROJECT_ID:
      return isSetOldProjectId();
    case PM_USER_ID:
      return isSetPmUserId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CreditsLineDTO)
      return this.equals((CreditsLineDTO)that);
    return false;
  }

  public boolean equals(CreditsLineDTO that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_requestStatus = true;
    boolean that_present_requestStatus = true;
    if (this_present_requestStatus || that_present_requestStatus) {
      if (!(this_present_requestStatus && that_present_requestStatus))
        return false;
      if (this.requestStatus != that.requestStatus)
        return false;
    }

    boolean this_present_requestDttm = true && this.isSetRequestDttm();
    boolean that_present_requestDttm = true && that.isSetRequestDttm();
    if (this_present_requestDttm || that_present_requestDttm) {
      if (!(this_present_requestDttm && that_present_requestDttm))
        return false;
      if (!this.requestDttm.equals(that.requestDttm))
        return false;
    }

    boolean this_present_acctType = true;
    boolean that_present_acctType = true;
    if (this_present_acctType || that_present_acctType) {
      if (!(this_present_acctType && that_present_acctType))
        return false;
      if (this.acctType != that.acctType)
        return false;
    }

    boolean this_present_creditAmt = true;
    boolean that_present_creditAmt = true;
    if (this_present_creditAmt || that_present_creditAmt) {
      if (!(this_present_creditAmt && that_present_creditAmt))
        return false;
      if (this.creditAmt != that.creditAmt)
        return false;
    }

    boolean this_present_pmUser = true && this.isSetPmUser();
    boolean that_present_pmUser = true && that.isSetPmUser();
    if (this_present_pmUser || that_present_pmUser) {
      if (!(this_present_pmUser && that_present_pmUser))
        return false;
      if (!this.pmUser.equals(that.pmUser))
        return false;
    }

    boolean this_present_planOutLoanDT = true && this.isSetPlanOutLoanDT();
    boolean that_present_planOutLoanDT = true && that.isSetPlanOutLoanDT();
    if (this_present_planOutLoanDT || that_present_planOutLoanDT) {
      if (!(this_present_planOutLoanDT && that_present_planOutLoanDT))
        return false;
      if (!this.planOutLoanDT.equals(that.planOutLoanDT))
        return false;
    }

    boolean this_present_planRepayLoanDT = true && this.isSetPlanRepayLoanDT();
    boolean that_present_planRepayLoanDT = true && that.isSetPlanRepayLoanDT();
    if (this_present_planRepayLoanDT || that_present_planRepayLoanDT) {
      if (!(this_present_planRepayLoanDT && that_present_planRepayLoanDT))
        return false;
      if (!this.planRepayLoanDT.equals(that.planRepayLoanDT))
        return false;
    }

    boolean this_present_requestStartDt = true && this.isSetRequestStartDt();
    boolean that_present_requestStartDt = true && that.isSetRequestStartDt();
    if (this_present_requestStartDt || that_present_requestStartDt) {
      if (!(this_present_requestStartDt && that_present_requestStartDt))
        return false;
      if (!this.requestStartDt.equals(that.requestStartDt))
        return false;
    }

    boolean this_present_requestEndDt = true && this.isSetRequestEndDt();
    boolean that_present_requestEndDt = true && that.isSetRequestEndDt();
    if (this_present_requestEndDt || that_present_requestEndDt) {
      if (!(this_present_requestEndDt && that_present_requestEndDt))
        return false;
      if (!this.requestEndDt.equals(that.requestEndDt))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_requestStatusVal = true && this.isSetRequestStatusVal();
    boolean that_present_requestStatusVal = true && that.isSetRequestStatusVal();
    if (this_present_requestStatusVal || that_present_requestStatusVal) {
      if (!(this_present_requestStatusVal && that_present_requestStatusVal))
        return false;
      if (!this.requestStatusVal.equals(that.requestStatusVal))
        return false;
    }

    boolean this_present_cusName = true && this.isSetCusName();
    boolean that_present_cusName = true && that.isSetCusName();
    if (this_present_cusName || that_present_cusName) {
      if (!(this_present_cusName && that_present_cusName))
        return false;
      if (!this.cusName.equals(that.cusName))
        return false;
    }

    boolean this_present_ecoTrade = true;
    boolean that_present_ecoTrade = true;
    if (this_present_ecoTrade || that_present_ecoTrade) {
      if (!(this_present_ecoTrade && that_present_ecoTrade))
        return false;
      if (this.ecoTrade != that.ecoTrade)
        return false;
    }

    boolean this_present_oldProjectId = true;
    boolean that_present_oldProjectId = true;
    if (this_present_oldProjectId || that_present_oldProjectId) {
      if (!(this_present_oldProjectId && that_present_oldProjectId))
        return false;
      if (this.oldProjectId != that.oldProjectId)
        return false;
    }

    boolean this_present_pmUserId = true;
    boolean that_present_pmUserId = true;
    if (this_present_pmUserId || that_present_pmUserId) {
      if (!(this_present_pmUserId && that_present_pmUserId))
        return false;
      if (this.pmUserId != that.pmUserId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_requestStatus = true;
    list.add(present_requestStatus);
    if (present_requestStatus)
      list.add(requestStatus);

    boolean present_requestDttm = true && (isSetRequestDttm());
    list.add(present_requestDttm);
    if (present_requestDttm)
      list.add(requestDttm);

    boolean present_acctType = true;
    list.add(present_acctType);
    if (present_acctType)
      list.add(acctType);

    boolean present_creditAmt = true;
    list.add(present_creditAmt);
    if (present_creditAmt)
      list.add(creditAmt);

    boolean present_pmUser = true && (isSetPmUser());
    list.add(present_pmUser);
    if (present_pmUser)
      list.add(pmUser);

    boolean present_planOutLoanDT = true && (isSetPlanOutLoanDT());
    list.add(present_planOutLoanDT);
    if (present_planOutLoanDT)
      list.add(planOutLoanDT);

    boolean present_planRepayLoanDT = true && (isSetPlanRepayLoanDT());
    list.add(present_planRepayLoanDT);
    if (present_planRepayLoanDT)
      list.add(planRepayLoanDT);

    boolean present_requestStartDt = true && (isSetRequestStartDt());
    list.add(present_requestStartDt);
    if (present_requestStartDt)
      list.add(requestStartDt);

    boolean present_requestEndDt = true && (isSetRequestEndDt());
    list.add(present_requestEndDt);
    if (present_requestEndDt)
      list.add(requestEndDt);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_requestStatusVal = true && (isSetRequestStatusVal());
    list.add(present_requestStatusVal);
    if (present_requestStatusVal)
      list.add(requestStatusVal);

    boolean present_cusName = true && (isSetCusName());
    list.add(present_cusName);
    if (present_cusName)
      list.add(cusName);

    boolean present_ecoTrade = true;
    list.add(present_ecoTrade);
    if (present_ecoTrade)
      list.add(ecoTrade);

    boolean present_oldProjectId = true;
    list.add(present_oldProjectId);
    if (present_oldProjectId)
      list.add(oldProjectId);

    boolean present_pmUserId = true;
    list.add(present_pmUserId);
    if (present_pmUserId)
      list.add(pmUserId);

    return list.hashCode();
  }

  @Override
  public int compareTo(CreditsLineDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatus()).compareTo(other.isSetRequestStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatus, other.requestStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestDttm()).compareTo(other.isSetRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestDttm, other.requestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctType()).compareTo(other.isSetAcctType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctType, other.acctType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditAmt()).compareTo(other.isSetCreditAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditAmt, other.creditAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUser()).compareTo(other.isSetPmUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUser, other.pmUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanOutLoanDT()).compareTo(other.isSetPlanOutLoanDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanOutLoanDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planOutLoanDT, other.planOutLoanDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanRepayLoanDT()).compareTo(other.isSetPlanRepayLoanDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanRepayLoanDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planRepayLoanDT, other.planRepayLoanDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStartDt()).compareTo(other.isSetRequestStartDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStartDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStartDt, other.requestStartDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestEndDt()).compareTo(other.isSetRequestEndDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestEndDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestEndDt, other.requestEndDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatusVal()).compareTo(other.isSetRequestStatusVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatusVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatusVal, other.requestStatusVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusName()).compareTo(other.isSetCusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusName, other.cusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEcoTrade()).compareTo(other.isSetEcoTrade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEcoTrade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ecoTrade, other.ecoTrade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldProjectId()).compareTo(other.isSetOldProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldProjectId, other.oldProjectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserId()).compareTo(other.isSetPmUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserId, other.pmUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CreditsLineDTO(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatus:");
    sb.append(this.requestStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestDttm:");
    if (this.requestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.requestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("acctType:");
    sb.append(this.acctType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditAmt:");
    sb.append(this.creditAmt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUser:");
    if (this.pmUser == null) {
      sb.append("null");
    } else {
      sb.append(this.pmUser);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planOutLoanDT:");
    if (this.planOutLoanDT == null) {
      sb.append("null");
    } else {
      sb.append(this.planOutLoanDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planRepayLoanDT:");
    if (this.planRepayLoanDT == null) {
      sb.append("null");
    } else {
      sb.append(this.planRepayLoanDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStartDt:");
    if (this.requestStartDt == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStartDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestEndDt:");
    if (this.requestEndDt == null) {
      sb.append("null");
    } else {
      sb.append(this.requestEndDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatusVal:");
    if (this.requestStatusVal == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStatusVal);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusName:");
    if (this.cusName == null) {
      sb.append("null");
    } else {
      sb.append(this.cusName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ecoTrade:");
    sb.append(this.ecoTrade);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldProjectId:");
    sb.append(this.oldProjectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserId:");
    sb.append(this.pmUserId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CreditsLineDTOStandardSchemeFactory implements SchemeFactory {
    public CreditsLineDTOStandardScheme getScheme() {
      return new CreditsLineDTOStandardScheme();
    }
  }

  private static class CreditsLineDTOStandardScheme extends StandardScheme<CreditsLineDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CreditsLineDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REQUEST_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.requestStatus = iprot.readI32();
              struct.setRequestStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestDttm = iprot.readString();
              struct.setRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ACCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.acctType = iprot.readI32();
              struct.setAcctTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREDIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.creditAmt = iprot.readDouble();
              struct.setCreditAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PM_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmUser = iprot.readString();
              struct.setPmUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PLAN_OUT_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planOutLoanDT = iprot.readString();
              struct.setPlanOutLoanDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PLAN_REPAY_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planRepayLoanDT = iprot.readString();
              struct.setPlanRepayLoanDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REQUEST_START_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStartDt = iprot.readString();
              struct.setRequestStartDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REQUEST_END_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestEndDt = iprot.readString();
              struct.setRequestEndDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // REQUEST_STATUS_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStatusVal = iprot.readString();
              struct.setRequestStatusValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cusName = iprot.readString();
              struct.setCusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ECO_TRADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ecoTrade = iprot.readI32();
              struct.setEcoTradeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // OLD_PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oldProjectId = iprot.readI32();
              struct.setOldProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pmUserId = iprot.readI32();
              struct.setPmUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CreditsLineDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REQUEST_STATUS_FIELD_DESC);
      oprot.writeI32(struct.requestStatus);
      oprot.writeFieldEnd();
      if (struct.requestDttm != null) {
        oprot.writeFieldBegin(REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.requestDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.acctType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREDIT_AMT_FIELD_DESC);
      oprot.writeDouble(struct.creditAmt);
      oprot.writeFieldEnd();
      if (struct.pmUser != null) {
        oprot.writeFieldBegin(PM_USER_FIELD_DESC);
        oprot.writeString(struct.pmUser);
        oprot.writeFieldEnd();
      }
      if (struct.planOutLoanDT != null) {
        oprot.writeFieldBegin(PLAN_OUT_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planOutLoanDT);
        oprot.writeFieldEnd();
      }
      if (struct.planRepayLoanDT != null) {
        oprot.writeFieldBegin(PLAN_REPAY_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planRepayLoanDT);
        oprot.writeFieldEnd();
      }
      if (struct.requestStartDt != null) {
        oprot.writeFieldBegin(REQUEST_START_DT_FIELD_DESC);
        oprot.writeString(struct.requestStartDt);
        oprot.writeFieldEnd();
      }
      if (struct.requestEndDt != null) {
        oprot.writeFieldBegin(REQUEST_END_DT_FIELD_DESC);
        oprot.writeString(struct.requestEndDt);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.requestStatusVal != null) {
        oprot.writeFieldBegin(REQUEST_STATUS_VAL_FIELD_DESC);
        oprot.writeString(struct.requestStatusVal);
        oprot.writeFieldEnd();
      }
      if (struct.cusName != null) {
        oprot.writeFieldBegin(CUS_NAME_FIELD_DESC);
        oprot.writeString(struct.cusName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ECO_TRADE_FIELD_DESC);
      oprot.writeI32(struct.ecoTrade);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OLD_PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.oldProjectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PM_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.pmUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CreditsLineDTOTupleSchemeFactory implements SchemeFactory {
    public CreditsLineDTOTupleScheme getScheme() {
      return new CreditsLineDTOTupleScheme();
    }
  }

  private static class CreditsLineDTOTupleScheme extends TupleScheme<CreditsLineDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CreditsLineDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(1);
      }
      if (struct.isSetProjectName()) {
        optionals.set(2);
      }
      if (struct.isSetRequestStatus()) {
        optionals.set(3);
      }
      if (struct.isSetRequestDttm()) {
        optionals.set(4);
      }
      if (struct.isSetAcctType()) {
        optionals.set(5);
      }
      if (struct.isSetCreditAmt()) {
        optionals.set(6);
      }
      if (struct.isSetPmUser()) {
        optionals.set(7);
      }
      if (struct.isSetPlanOutLoanDT()) {
        optionals.set(8);
      }
      if (struct.isSetPlanRepayLoanDT()) {
        optionals.set(9);
      }
      if (struct.isSetRequestStartDt()) {
        optionals.set(10);
      }
      if (struct.isSetRequestEndDt()) {
        optionals.set(11);
      }
      if (struct.isSetPage()) {
        optionals.set(12);
      }
      if (struct.isSetRows()) {
        optionals.set(13);
      }
      if (struct.isSetRequestStatusVal()) {
        optionals.set(14);
      }
      if (struct.isSetCusName()) {
        optionals.set(15);
      }
      if (struct.isSetEcoTrade()) {
        optionals.set(16);
      }
      if (struct.isSetOldProjectId()) {
        optionals.set(17);
      }
      if (struct.isSetPmUserId()) {
        optionals.set(18);
      }
      oprot.writeBitSet(optionals, 19);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetRequestStatus()) {
        oprot.writeI32(struct.requestStatus);
      }
      if (struct.isSetRequestDttm()) {
        oprot.writeString(struct.requestDttm);
      }
      if (struct.isSetAcctType()) {
        oprot.writeI32(struct.acctType);
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeDouble(struct.creditAmt);
      }
      if (struct.isSetPmUser()) {
        oprot.writeString(struct.pmUser);
      }
      if (struct.isSetPlanOutLoanDT()) {
        oprot.writeString(struct.planOutLoanDT);
      }
      if (struct.isSetPlanRepayLoanDT()) {
        oprot.writeString(struct.planRepayLoanDT);
      }
      if (struct.isSetRequestStartDt()) {
        oprot.writeString(struct.requestStartDt);
      }
      if (struct.isSetRequestEndDt()) {
        oprot.writeString(struct.requestEndDt);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetRequestStatusVal()) {
        oprot.writeString(struct.requestStatusVal);
      }
      if (struct.isSetCusName()) {
        oprot.writeString(struct.cusName);
      }
      if (struct.isSetEcoTrade()) {
        oprot.writeI32(struct.ecoTrade);
      }
      if (struct.isSetOldProjectId()) {
        oprot.writeI32(struct.oldProjectId);
      }
      if (struct.isSetPmUserId()) {
        oprot.writeI32(struct.pmUserId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CreditsLineDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(19);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.requestStatus = iprot.readI32();
        struct.setRequestStatusIsSet(true);
      }
      if (incoming.get(4)) {
        struct.requestDttm = iprot.readString();
        struct.setRequestDttmIsSet(true);
      }
      if (incoming.get(5)) {
        struct.acctType = iprot.readI32();
        struct.setAcctTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.creditAmt = iprot.readDouble();
        struct.setCreditAmtIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pmUser = iprot.readString();
        struct.setPmUserIsSet(true);
      }
      if (incoming.get(8)) {
        struct.planOutLoanDT = iprot.readString();
        struct.setPlanOutLoanDTIsSet(true);
      }
      if (incoming.get(9)) {
        struct.planRepayLoanDT = iprot.readString();
        struct.setPlanRepayLoanDTIsSet(true);
      }
      if (incoming.get(10)) {
        struct.requestStartDt = iprot.readString();
        struct.setRequestStartDtIsSet(true);
      }
      if (incoming.get(11)) {
        struct.requestEndDt = iprot.readString();
        struct.setRequestEndDtIsSet(true);
      }
      if (incoming.get(12)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(14)) {
        struct.requestStatusVal = iprot.readString();
        struct.setRequestStatusValIsSet(true);
      }
      if (incoming.get(15)) {
        struct.cusName = iprot.readString();
        struct.setCusNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.ecoTrade = iprot.readI32();
        struct.setEcoTradeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.oldProjectId = iprot.readI32();
        struct.setOldProjectIdIsSet(true);
      }
      if (incoming.get(18)) {
        struct.pmUserId = iprot.readI32();
        struct.setPmUserIdIsSet(true);
      }
    }
  }

}

