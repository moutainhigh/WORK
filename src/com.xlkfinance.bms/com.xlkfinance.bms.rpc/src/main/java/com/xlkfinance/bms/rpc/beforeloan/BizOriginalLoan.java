/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.beforeloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-21")
public class BizOriginalLoan implements org.apache.thrift.TBase<BizOriginalLoan, BizOriginalLoan._Fields>, java.io.Serializable, Cloneable, Comparable<BizOriginalLoan> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizOriginalLoan");

  private static final org.apache.thrift.protocol.TField ORIGINAL_LOAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("originalLoanId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LOAN_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("loanType", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_BANK_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanBank", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_BANK_BRANCH_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanBankBranch", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField OLD_OWED_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("oldOwedAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanStartTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanPerson", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanPhone", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_ACCOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanAccount", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CREATER_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createrDate", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CREATER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createrId", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("updateId", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField UPDATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField ORIGINAL_LOAN_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("originalLoanIds", org.apache.thrift.protocol.TType.LIST, (short)18);
  private static final org.apache.thrift.protocol.TField LOAN_TYPE_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("loanTypeStr", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_BANK_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanBankStr", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField ESTATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("estateId", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField ESTATE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("estateName", org.apache.thrift.protocol.TType.STRING, (short)22);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizOriginalLoanStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizOriginalLoanTupleSchemeFactory());
  }

  public int originalLoanId; // required
  public int projectId; // required
  public int loanType; // required
  public String oldLoanBank; // required
  public String oldLoanBankBranch; // required
  public double oldLoanMoney; // required
  public double oldOwedAmount; // required
  public String oldLoanTime; // required
  public String oldLoanStartTime; // required
  public String oldLoanPerson; // required
  public String oldLoanPhone; // required
  public String oldLoanAccount; // required
  public String createrDate; // required
  public int createrId; // required
  public int updateId; // required
  public String updateDate; // required
  public int status; // required
  public List<Integer> originalLoanIds; // required
  public String loanTypeStr; // required
  public String oldLoanBankStr; // required
  public int estateId; // required
  public String estateName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORIGINAL_LOAN_ID((short)1, "originalLoanId"),
    PROJECT_ID((short)2, "projectId"),
    LOAN_TYPE((short)3, "loanType"),
    OLD_LOAN_BANK((short)4, "oldLoanBank"),
    OLD_LOAN_BANK_BRANCH((short)5, "oldLoanBankBranch"),
    OLD_LOAN_MONEY((short)6, "oldLoanMoney"),
    OLD_OWED_AMOUNT((short)7, "oldOwedAmount"),
    OLD_LOAN_TIME((short)8, "oldLoanTime"),
    OLD_LOAN_START_TIME((short)9, "oldLoanStartTime"),
    OLD_LOAN_PERSON((short)10, "oldLoanPerson"),
    OLD_LOAN_PHONE((short)11, "oldLoanPhone"),
    OLD_LOAN_ACCOUNT((short)12, "oldLoanAccount"),
    CREATER_DATE((short)13, "createrDate"),
    CREATER_ID((short)14, "createrId"),
    UPDATE_ID((short)15, "updateId"),
    UPDATE_DATE((short)16, "updateDate"),
    STATUS((short)17, "status"),
    ORIGINAL_LOAN_IDS((short)18, "originalLoanIds"),
    LOAN_TYPE_STR((short)19, "loanTypeStr"),
    OLD_LOAN_BANK_STR((short)20, "oldLoanBankStr"),
    ESTATE_ID((short)21, "estateId"),
    ESTATE_NAME((short)22, "estateName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORIGINAL_LOAN_ID
          return ORIGINAL_LOAN_ID;
        case 2: // PROJECT_ID
          return PROJECT_ID;
        case 3: // LOAN_TYPE
          return LOAN_TYPE;
        case 4: // OLD_LOAN_BANK
          return OLD_LOAN_BANK;
        case 5: // OLD_LOAN_BANK_BRANCH
          return OLD_LOAN_BANK_BRANCH;
        case 6: // OLD_LOAN_MONEY
          return OLD_LOAN_MONEY;
        case 7: // OLD_OWED_AMOUNT
          return OLD_OWED_AMOUNT;
        case 8: // OLD_LOAN_TIME
          return OLD_LOAN_TIME;
        case 9: // OLD_LOAN_START_TIME
          return OLD_LOAN_START_TIME;
        case 10: // OLD_LOAN_PERSON
          return OLD_LOAN_PERSON;
        case 11: // OLD_LOAN_PHONE
          return OLD_LOAN_PHONE;
        case 12: // OLD_LOAN_ACCOUNT
          return OLD_LOAN_ACCOUNT;
        case 13: // CREATER_DATE
          return CREATER_DATE;
        case 14: // CREATER_ID
          return CREATER_ID;
        case 15: // UPDATE_ID
          return UPDATE_ID;
        case 16: // UPDATE_DATE
          return UPDATE_DATE;
        case 17: // STATUS
          return STATUS;
        case 18: // ORIGINAL_LOAN_IDS
          return ORIGINAL_LOAN_IDS;
        case 19: // LOAN_TYPE_STR
          return LOAN_TYPE_STR;
        case 20: // OLD_LOAN_BANK_STR
          return OLD_LOAN_BANK_STR;
        case 21: // ESTATE_ID
          return ESTATE_ID;
        case 22: // ESTATE_NAME
          return ESTATE_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ORIGINALLOANID_ISSET_ID = 0;
  private static final int __PROJECTID_ISSET_ID = 1;
  private static final int __LOANTYPE_ISSET_ID = 2;
  private static final int __OLDLOANMONEY_ISSET_ID = 3;
  private static final int __OLDOWEDAMOUNT_ISSET_ID = 4;
  private static final int __CREATERID_ISSET_ID = 5;
  private static final int __UPDATEID_ISSET_ID = 6;
  private static final int __STATUS_ISSET_ID = 7;
  private static final int __ESTATEID_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORIGINAL_LOAN_ID, new org.apache.thrift.meta_data.FieldMetaData("originalLoanId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOAN_TYPE, new org.apache.thrift.meta_data.FieldMetaData("loanType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OLD_LOAN_BANK, new org.apache.thrift.meta_data.FieldMetaData("oldLoanBank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_BANK_BRANCH, new org.apache.thrift.meta_data.FieldMetaData("oldLoanBankBranch", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_MONEY, new org.apache.thrift.meta_data.FieldMetaData("oldLoanMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OLD_OWED_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("oldOwedAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OLD_LOAN_TIME, new org.apache.thrift.meta_data.FieldMetaData("oldLoanTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("oldLoanStartTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_PERSON, new org.apache.thrift.meta_data.FieldMetaData("oldLoanPerson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_PHONE, new org.apache.thrift.meta_data.FieldMetaData("oldLoanPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_ACCOUNT, new org.apache.thrift.meta_data.FieldMetaData("oldLoanAccount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATER_DATE, new org.apache.thrift.meta_data.FieldMetaData("createrDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATER_ID, new org.apache.thrift.meta_data.FieldMetaData("createrId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_ID, new org.apache.thrift.meta_data.FieldMetaData("updateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("updateDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORIGINAL_LOAN_IDS, new org.apache.thrift.meta_data.FieldMetaData("originalLoanIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LOAN_TYPE_STR, new org.apache.thrift.meta_data.FieldMetaData("loanTypeStr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_BANK_STR, new org.apache.thrift.meta_data.FieldMetaData("oldLoanBankStr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESTATE_ID, new org.apache.thrift.meta_data.FieldMetaData("estateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ESTATE_NAME, new org.apache.thrift.meta_data.FieldMetaData("estateName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizOriginalLoan.class, metaDataMap);
  }

  public BizOriginalLoan() {
  }

  public BizOriginalLoan(
    int originalLoanId,
    int projectId,
    int loanType,
    String oldLoanBank,
    String oldLoanBankBranch,
    double oldLoanMoney,
    double oldOwedAmount,
    String oldLoanTime,
    String oldLoanStartTime,
    String oldLoanPerson,
    String oldLoanPhone,
    String oldLoanAccount,
    String createrDate,
    int createrId,
    int updateId,
    String updateDate,
    int status,
    List<Integer> originalLoanIds,
    String loanTypeStr,
    String oldLoanBankStr,
    int estateId,
    String estateName)
  {
    this();
    this.originalLoanId = originalLoanId;
    setOriginalLoanIdIsSet(true);
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.loanType = loanType;
    setLoanTypeIsSet(true);
    this.oldLoanBank = oldLoanBank;
    this.oldLoanBankBranch = oldLoanBankBranch;
    this.oldLoanMoney = oldLoanMoney;
    setOldLoanMoneyIsSet(true);
    this.oldOwedAmount = oldOwedAmount;
    setOldOwedAmountIsSet(true);
    this.oldLoanTime = oldLoanTime;
    this.oldLoanStartTime = oldLoanStartTime;
    this.oldLoanPerson = oldLoanPerson;
    this.oldLoanPhone = oldLoanPhone;
    this.oldLoanAccount = oldLoanAccount;
    this.createrDate = createrDate;
    this.createrId = createrId;
    setCreaterIdIsSet(true);
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    this.updateDate = updateDate;
    this.status = status;
    setStatusIsSet(true);
    this.originalLoanIds = originalLoanIds;
    this.loanTypeStr = loanTypeStr;
    this.oldLoanBankStr = oldLoanBankStr;
    this.estateId = estateId;
    setEstateIdIsSet(true);
    this.estateName = estateName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizOriginalLoan(BizOriginalLoan other) {
    __isset_bitfield = other.__isset_bitfield;
    this.originalLoanId = other.originalLoanId;
    this.projectId = other.projectId;
    this.loanType = other.loanType;
    if (other.isSetOldLoanBank()) {
      this.oldLoanBank = other.oldLoanBank;
    }
    if (other.isSetOldLoanBankBranch()) {
      this.oldLoanBankBranch = other.oldLoanBankBranch;
    }
    this.oldLoanMoney = other.oldLoanMoney;
    this.oldOwedAmount = other.oldOwedAmount;
    if (other.isSetOldLoanTime()) {
      this.oldLoanTime = other.oldLoanTime;
    }
    if (other.isSetOldLoanStartTime()) {
      this.oldLoanStartTime = other.oldLoanStartTime;
    }
    if (other.isSetOldLoanPerson()) {
      this.oldLoanPerson = other.oldLoanPerson;
    }
    if (other.isSetOldLoanPhone()) {
      this.oldLoanPhone = other.oldLoanPhone;
    }
    if (other.isSetOldLoanAccount()) {
      this.oldLoanAccount = other.oldLoanAccount;
    }
    if (other.isSetCreaterDate()) {
      this.createrDate = other.createrDate;
    }
    this.createrId = other.createrId;
    this.updateId = other.updateId;
    if (other.isSetUpdateDate()) {
      this.updateDate = other.updateDate;
    }
    this.status = other.status;
    if (other.isSetOriginalLoanIds()) {
      List<Integer> __this__originalLoanIds = new ArrayList<Integer>(other.originalLoanIds);
      this.originalLoanIds = __this__originalLoanIds;
    }
    if (other.isSetLoanTypeStr()) {
      this.loanTypeStr = other.loanTypeStr;
    }
    if (other.isSetOldLoanBankStr()) {
      this.oldLoanBankStr = other.oldLoanBankStr;
    }
    this.estateId = other.estateId;
    if (other.isSetEstateName()) {
      this.estateName = other.estateName;
    }
  }

  public BizOriginalLoan deepCopy() {
    return new BizOriginalLoan(this);
  }

  @Override
  public void clear() {
    setOriginalLoanIdIsSet(false);
    this.originalLoanId = 0;
    setProjectIdIsSet(false);
    this.projectId = 0;
    setLoanTypeIsSet(false);
    this.loanType = 0;
    this.oldLoanBank = null;
    this.oldLoanBankBranch = null;
    setOldLoanMoneyIsSet(false);
    this.oldLoanMoney = 0.0;
    setOldOwedAmountIsSet(false);
    this.oldOwedAmount = 0.0;
    this.oldLoanTime = null;
    this.oldLoanStartTime = null;
    this.oldLoanPerson = null;
    this.oldLoanPhone = null;
    this.oldLoanAccount = null;
    this.createrDate = null;
    setCreaterIdIsSet(false);
    this.createrId = 0;
    setUpdateIdIsSet(false);
    this.updateId = 0;
    this.updateDate = null;
    setStatusIsSet(false);
    this.status = 0;
    this.originalLoanIds = null;
    this.loanTypeStr = null;
    this.oldLoanBankStr = null;
    setEstateIdIsSet(false);
    this.estateId = 0;
    this.estateName = null;
  }

  public int getOriginalLoanId() {
    return this.originalLoanId;
  }

  public BizOriginalLoan setOriginalLoanId(int originalLoanId) {
    this.originalLoanId = originalLoanId;
    setOriginalLoanIdIsSet(true);
    return this;
  }

  public void unsetOriginalLoanId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORIGINALLOANID_ISSET_ID);
  }

  /** Returns true if field originalLoanId is set (has been assigned a value) and false otherwise */
  public boolean isSetOriginalLoanId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORIGINALLOANID_ISSET_ID);
  }

  public void setOriginalLoanIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORIGINALLOANID_ISSET_ID, value);
  }

  public int getProjectId() {
    return this.projectId;
  }

  public BizOriginalLoan setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public int getLoanType() {
    return this.loanType;
  }

  public BizOriginalLoan setLoanType(int loanType) {
    this.loanType = loanType;
    setLoanTypeIsSet(true);
    return this;
  }

  public void unsetLoanType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANTYPE_ISSET_ID);
  }

  /** Returns true if field loanType is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanType() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANTYPE_ISSET_ID);
  }

  public void setLoanTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANTYPE_ISSET_ID, value);
  }

  public String getOldLoanBank() {
    return this.oldLoanBank;
  }

  public BizOriginalLoan setOldLoanBank(String oldLoanBank) {
    this.oldLoanBank = oldLoanBank;
    return this;
  }

  public void unsetOldLoanBank() {
    this.oldLoanBank = null;
  }

  /** Returns true if field oldLoanBank is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanBank() {
    return this.oldLoanBank != null;
  }

  public void setOldLoanBankIsSet(boolean value) {
    if (!value) {
      this.oldLoanBank = null;
    }
  }

  public String getOldLoanBankBranch() {
    return this.oldLoanBankBranch;
  }

  public BizOriginalLoan setOldLoanBankBranch(String oldLoanBankBranch) {
    this.oldLoanBankBranch = oldLoanBankBranch;
    return this;
  }

  public void unsetOldLoanBankBranch() {
    this.oldLoanBankBranch = null;
  }

  /** Returns true if field oldLoanBankBranch is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanBankBranch() {
    return this.oldLoanBankBranch != null;
  }

  public void setOldLoanBankBranchIsSet(boolean value) {
    if (!value) {
      this.oldLoanBankBranch = null;
    }
  }

  public double getOldLoanMoney() {
    return this.oldLoanMoney;
  }

  public BizOriginalLoan setOldLoanMoney(double oldLoanMoney) {
    this.oldLoanMoney = oldLoanMoney;
    setOldLoanMoneyIsSet(true);
    return this;
  }

  public void unsetOldLoanMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID);
  }

  /** Returns true if field oldLoanMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID);
  }

  public void setOldLoanMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID, value);
  }

  public double getOldOwedAmount() {
    return this.oldOwedAmount;
  }

  public BizOriginalLoan setOldOwedAmount(double oldOwedAmount) {
    this.oldOwedAmount = oldOwedAmount;
    setOldOwedAmountIsSet(true);
    return this;
  }

  public void unsetOldOwedAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDOWEDAMOUNT_ISSET_ID);
  }

  /** Returns true if field oldOwedAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetOldOwedAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDOWEDAMOUNT_ISSET_ID);
  }

  public void setOldOwedAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDOWEDAMOUNT_ISSET_ID, value);
  }

  public String getOldLoanTime() {
    return this.oldLoanTime;
  }

  public BizOriginalLoan setOldLoanTime(String oldLoanTime) {
    this.oldLoanTime = oldLoanTime;
    return this;
  }

  public void unsetOldLoanTime() {
    this.oldLoanTime = null;
  }

  /** Returns true if field oldLoanTime is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanTime() {
    return this.oldLoanTime != null;
  }

  public void setOldLoanTimeIsSet(boolean value) {
    if (!value) {
      this.oldLoanTime = null;
    }
  }

  public String getOldLoanStartTime() {
    return this.oldLoanStartTime;
  }

  public BizOriginalLoan setOldLoanStartTime(String oldLoanStartTime) {
    this.oldLoanStartTime = oldLoanStartTime;
    return this;
  }

  public void unsetOldLoanStartTime() {
    this.oldLoanStartTime = null;
  }

  /** Returns true if field oldLoanStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanStartTime() {
    return this.oldLoanStartTime != null;
  }

  public void setOldLoanStartTimeIsSet(boolean value) {
    if (!value) {
      this.oldLoanStartTime = null;
    }
  }

  public String getOldLoanPerson() {
    return this.oldLoanPerson;
  }

  public BizOriginalLoan setOldLoanPerson(String oldLoanPerson) {
    this.oldLoanPerson = oldLoanPerson;
    return this;
  }

  public void unsetOldLoanPerson() {
    this.oldLoanPerson = null;
  }

  /** Returns true if field oldLoanPerson is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanPerson() {
    return this.oldLoanPerson != null;
  }

  public void setOldLoanPersonIsSet(boolean value) {
    if (!value) {
      this.oldLoanPerson = null;
    }
  }

  public String getOldLoanPhone() {
    return this.oldLoanPhone;
  }

  public BizOriginalLoan setOldLoanPhone(String oldLoanPhone) {
    this.oldLoanPhone = oldLoanPhone;
    return this;
  }

  public void unsetOldLoanPhone() {
    this.oldLoanPhone = null;
  }

  /** Returns true if field oldLoanPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanPhone() {
    return this.oldLoanPhone != null;
  }

  public void setOldLoanPhoneIsSet(boolean value) {
    if (!value) {
      this.oldLoanPhone = null;
    }
  }

  public String getOldLoanAccount() {
    return this.oldLoanAccount;
  }

  public BizOriginalLoan setOldLoanAccount(String oldLoanAccount) {
    this.oldLoanAccount = oldLoanAccount;
    return this;
  }

  public void unsetOldLoanAccount() {
    this.oldLoanAccount = null;
  }

  /** Returns true if field oldLoanAccount is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanAccount() {
    return this.oldLoanAccount != null;
  }

  public void setOldLoanAccountIsSet(boolean value) {
    if (!value) {
      this.oldLoanAccount = null;
    }
  }

  public String getCreaterDate() {
    return this.createrDate;
  }

  public BizOriginalLoan setCreaterDate(String createrDate) {
    this.createrDate = createrDate;
    return this;
  }

  public void unsetCreaterDate() {
    this.createrDate = null;
  }

  /** Returns true if field createrDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreaterDate() {
    return this.createrDate != null;
  }

  public void setCreaterDateIsSet(boolean value) {
    if (!value) {
      this.createrDate = null;
    }
  }

  public int getCreaterId() {
    return this.createrId;
  }

  public BizOriginalLoan setCreaterId(int createrId) {
    this.createrId = createrId;
    setCreaterIdIsSet(true);
    return this;
  }

  public void unsetCreaterId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATERID_ISSET_ID);
  }

  /** Returns true if field createrId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreaterId() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATERID_ISSET_ID);
  }

  public void setCreaterIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATERID_ISSET_ID, value);
  }

  public int getUpdateId() {
    return this.updateId;
  }

  public BizOriginalLoan setUpdateId(int updateId) {
    this.updateId = updateId;
    setUpdateIdIsSet(true);
    return this;
  }

  public void unsetUpdateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  /** Returns true if field updateId is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateId() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEID_ISSET_ID);
  }

  public void setUpdateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEID_ISSET_ID, value);
  }

  public String getUpdateDate() {
    return this.updateDate;
  }

  public BizOriginalLoan setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  public void unsetUpdateDate() {
    this.updateDate = null;
  }

  /** Returns true if field updateDate is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateDate() {
    return this.updateDate != null;
  }

  public void setUpdateDateIsSet(boolean value) {
    if (!value) {
      this.updateDate = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public BizOriginalLoan setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getOriginalLoanIdsSize() {
    return (this.originalLoanIds == null) ? 0 : this.originalLoanIds.size();
  }

  public java.util.Iterator<Integer> getOriginalLoanIdsIterator() {
    return (this.originalLoanIds == null) ? null : this.originalLoanIds.iterator();
  }

  public void addToOriginalLoanIds(int elem) {
    if (this.originalLoanIds == null) {
      this.originalLoanIds = new ArrayList<Integer>();
    }
    this.originalLoanIds.add(elem);
  }

  public List<Integer> getOriginalLoanIds() {
    return this.originalLoanIds;
  }

  public BizOriginalLoan setOriginalLoanIds(List<Integer> originalLoanIds) {
    this.originalLoanIds = originalLoanIds;
    return this;
  }

  public void unsetOriginalLoanIds() {
    this.originalLoanIds = null;
  }

  /** Returns true if field originalLoanIds is set (has been assigned a value) and false otherwise */
  public boolean isSetOriginalLoanIds() {
    return this.originalLoanIds != null;
  }

  public void setOriginalLoanIdsIsSet(boolean value) {
    if (!value) {
      this.originalLoanIds = null;
    }
  }

  public String getLoanTypeStr() {
    return this.loanTypeStr;
  }

  public BizOriginalLoan setLoanTypeStr(String loanTypeStr) {
    this.loanTypeStr = loanTypeStr;
    return this;
  }

  public void unsetLoanTypeStr() {
    this.loanTypeStr = null;
  }

  /** Returns true if field loanTypeStr is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanTypeStr() {
    return this.loanTypeStr != null;
  }

  public void setLoanTypeStrIsSet(boolean value) {
    if (!value) {
      this.loanTypeStr = null;
    }
  }

  public String getOldLoanBankStr() {
    return this.oldLoanBankStr;
  }

  public BizOriginalLoan setOldLoanBankStr(String oldLoanBankStr) {
    this.oldLoanBankStr = oldLoanBankStr;
    return this;
  }

  public void unsetOldLoanBankStr() {
    this.oldLoanBankStr = null;
  }

  /** Returns true if field oldLoanBankStr is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanBankStr() {
    return this.oldLoanBankStr != null;
  }

  public void setOldLoanBankStrIsSet(boolean value) {
    if (!value) {
      this.oldLoanBankStr = null;
    }
  }

  public int getEstateId() {
    return this.estateId;
  }

  public BizOriginalLoan setEstateId(int estateId) {
    this.estateId = estateId;
    setEstateIdIsSet(true);
    return this;
  }

  public void unsetEstateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESTATEID_ISSET_ID);
  }

  /** Returns true if field estateId is set (has been assigned a value) and false otherwise */
  public boolean isSetEstateId() {
    return EncodingUtils.testBit(__isset_bitfield, __ESTATEID_ISSET_ID);
  }

  public void setEstateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESTATEID_ISSET_ID, value);
  }

  public String getEstateName() {
    return this.estateName;
  }

  public BizOriginalLoan setEstateName(String estateName) {
    this.estateName = estateName;
    return this;
  }

  public void unsetEstateName() {
    this.estateName = null;
  }

  /** Returns true if field estateName is set (has been assigned a value) and false otherwise */
  public boolean isSetEstateName() {
    return this.estateName != null;
  }

  public void setEstateNameIsSet(boolean value) {
    if (!value) {
      this.estateName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORIGINAL_LOAN_ID:
      if (value == null) {
        unsetOriginalLoanId();
      } else {
        setOriginalLoanId((Integer)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case LOAN_TYPE:
      if (value == null) {
        unsetLoanType();
      } else {
        setLoanType((Integer)value);
      }
      break;

    case OLD_LOAN_BANK:
      if (value == null) {
        unsetOldLoanBank();
      } else {
        setOldLoanBank((String)value);
      }
      break;

    case OLD_LOAN_BANK_BRANCH:
      if (value == null) {
        unsetOldLoanBankBranch();
      } else {
        setOldLoanBankBranch((String)value);
      }
      break;

    case OLD_LOAN_MONEY:
      if (value == null) {
        unsetOldLoanMoney();
      } else {
        setOldLoanMoney((Double)value);
      }
      break;

    case OLD_OWED_AMOUNT:
      if (value == null) {
        unsetOldOwedAmount();
      } else {
        setOldOwedAmount((Double)value);
      }
      break;

    case OLD_LOAN_TIME:
      if (value == null) {
        unsetOldLoanTime();
      } else {
        setOldLoanTime((String)value);
      }
      break;

    case OLD_LOAN_START_TIME:
      if (value == null) {
        unsetOldLoanStartTime();
      } else {
        setOldLoanStartTime((String)value);
      }
      break;

    case OLD_LOAN_PERSON:
      if (value == null) {
        unsetOldLoanPerson();
      } else {
        setOldLoanPerson((String)value);
      }
      break;

    case OLD_LOAN_PHONE:
      if (value == null) {
        unsetOldLoanPhone();
      } else {
        setOldLoanPhone((String)value);
      }
      break;

    case OLD_LOAN_ACCOUNT:
      if (value == null) {
        unsetOldLoanAccount();
      } else {
        setOldLoanAccount((String)value);
      }
      break;

    case CREATER_DATE:
      if (value == null) {
        unsetCreaterDate();
      } else {
        setCreaterDate((String)value);
      }
      break;

    case CREATER_ID:
      if (value == null) {
        unsetCreaterId();
      } else {
        setCreaterId((Integer)value);
      }
      break;

    case UPDATE_ID:
      if (value == null) {
        unsetUpdateId();
      } else {
        setUpdateId((Integer)value);
      }
      break;

    case UPDATE_DATE:
      if (value == null) {
        unsetUpdateDate();
      } else {
        setUpdateDate((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case ORIGINAL_LOAN_IDS:
      if (value == null) {
        unsetOriginalLoanIds();
      } else {
        setOriginalLoanIds((List<Integer>)value);
      }
      break;

    case LOAN_TYPE_STR:
      if (value == null) {
        unsetLoanTypeStr();
      } else {
        setLoanTypeStr((String)value);
      }
      break;

    case OLD_LOAN_BANK_STR:
      if (value == null) {
        unsetOldLoanBankStr();
      } else {
        setOldLoanBankStr((String)value);
      }
      break;

    case ESTATE_ID:
      if (value == null) {
        unsetEstateId();
      } else {
        setEstateId((Integer)value);
      }
      break;

    case ESTATE_NAME:
      if (value == null) {
        unsetEstateName();
      } else {
        setEstateName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORIGINAL_LOAN_ID:
      return Integer.valueOf(getOriginalLoanId());

    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case LOAN_TYPE:
      return Integer.valueOf(getLoanType());

    case OLD_LOAN_BANK:
      return getOldLoanBank();

    case OLD_LOAN_BANK_BRANCH:
      return getOldLoanBankBranch();

    case OLD_LOAN_MONEY:
      return Double.valueOf(getOldLoanMoney());

    case OLD_OWED_AMOUNT:
      return Double.valueOf(getOldOwedAmount());

    case OLD_LOAN_TIME:
      return getOldLoanTime();

    case OLD_LOAN_START_TIME:
      return getOldLoanStartTime();

    case OLD_LOAN_PERSON:
      return getOldLoanPerson();

    case OLD_LOAN_PHONE:
      return getOldLoanPhone();

    case OLD_LOAN_ACCOUNT:
      return getOldLoanAccount();

    case CREATER_DATE:
      return getCreaterDate();

    case CREATER_ID:
      return Integer.valueOf(getCreaterId());

    case UPDATE_ID:
      return Integer.valueOf(getUpdateId());

    case UPDATE_DATE:
      return getUpdateDate();

    case STATUS:
      return Integer.valueOf(getStatus());

    case ORIGINAL_LOAN_IDS:
      return getOriginalLoanIds();

    case LOAN_TYPE_STR:
      return getLoanTypeStr();

    case OLD_LOAN_BANK_STR:
      return getOldLoanBankStr();

    case ESTATE_ID:
      return Integer.valueOf(getEstateId());

    case ESTATE_NAME:
      return getEstateName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORIGINAL_LOAN_ID:
      return isSetOriginalLoanId();
    case PROJECT_ID:
      return isSetProjectId();
    case LOAN_TYPE:
      return isSetLoanType();
    case OLD_LOAN_BANK:
      return isSetOldLoanBank();
    case OLD_LOAN_BANK_BRANCH:
      return isSetOldLoanBankBranch();
    case OLD_LOAN_MONEY:
      return isSetOldLoanMoney();
    case OLD_OWED_AMOUNT:
      return isSetOldOwedAmount();
    case OLD_LOAN_TIME:
      return isSetOldLoanTime();
    case OLD_LOAN_START_TIME:
      return isSetOldLoanStartTime();
    case OLD_LOAN_PERSON:
      return isSetOldLoanPerson();
    case OLD_LOAN_PHONE:
      return isSetOldLoanPhone();
    case OLD_LOAN_ACCOUNT:
      return isSetOldLoanAccount();
    case CREATER_DATE:
      return isSetCreaterDate();
    case CREATER_ID:
      return isSetCreaterId();
    case UPDATE_ID:
      return isSetUpdateId();
    case UPDATE_DATE:
      return isSetUpdateDate();
    case STATUS:
      return isSetStatus();
    case ORIGINAL_LOAN_IDS:
      return isSetOriginalLoanIds();
    case LOAN_TYPE_STR:
      return isSetLoanTypeStr();
    case OLD_LOAN_BANK_STR:
      return isSetOldLoanBankStr();
    case ESTATE_ID:
      return isSetEstateId();
    case ESTATE_NAME:
      return isSetEstateName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizOriginalLoan)
      return this.equals((BizOriginalLoan)that);
    return false;
  }

  public boolean equals(BizOriginalLoan that) {
    if (that == null)
      return false;

    boolean this_present_originalLoanId = true;
    boolean that_present_originalLoanId = true;
    if (this_present_originalLoanId || that_present_originalLoanId) {
      if (!(this_present_originalLoanId && that_present_originalLoanId))
        return false;
      if (this.originalLoanId != that.originalLoanId)
        return false;
    }

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_loanType = true;
    boolean that_present_loanType = true;
    if (this_present_loanType || that_present_loanType) {
      if (!(this_present_loanType && that_present_loanType))
        return false;
      if (this.loanType != that.loanType)
        return false;
    }

    boolean this_present_oldLoanBank = true && this.isSetOldLoanBank();
    boolean that_present_oldLoanBank = true && that.isSetOldLoanBank();
    if (this_present_oldLoanBank || that_present_oldLoanBank) {
      if (!(this_present_oldLoanBank && that_present_oldLoanBank))
        return false;
      if (!this.oldLoanBank.equals(that.oldLoanBank))
        return false;
    }

    boolean this_present_oldLoanBankBranch = true && this.isSetOldLoanBankBranch();
    boolean that_present_oldLoanBankBranch = true && that.isSetOldLoanBankBranch();
    if (this_present_oldLoanBankBranch || that_present_oldLoanBankBranch) {
      if (!(this_present_oldLoanBankBranch && that_present_oldLoanBankBranch))
        return false;
      if (!this.oldLoanBankBranch.equals(that.oldLoanBankBranch))
        return false;
    }

    boolean this_present_oldLoanMoney = true;
    boolean that_present_oldLoanMoney = true;
    if (this_present_oldLoanMoney || that_present_oldLoanMoney) {
      if (!(this_present_oldLoanMoney && that_present_oldLoanMoney))
        return false;
      if (this.oldLoanMoney != that.oldLoanMoney)
        return false;
    }

    boolean this_present_oldOwedAmount = true;
    boolean that_present_oldOwedAmount = true;
    if (this_present_oldOwedAmount || that_present_oldOwedAmount) {
      if (!(this_present_oldOwedAmount && that_present_oldOwedAmount))
        return false;
      if (this.oldOwedAmount != that.oldOwedAmount)
        return false;
    }

    boolean this_present_oldLoanTime = true && this.isSetOldLoanTime();
    boolean that_present_oldLoanTime = true && that.isSetOldLoanTime();
    if (this_present_oldLoanTime || that_present_oldLoanTime) {
      if (!(this_present_oldLoanTime && that_present_oldLoanTime))
        return false;
      if (!this.oldLoanTime.equals(that.oldLoanTime))
        return false;
    }

    boolean this_present_oldLoanStartTime = true && this.isSetOldLoanStartTime();
    boolean that_present_oldLoanStartTime = true && that.isSetOldLoanStartTime();
    if (this_present_oldLoanStartTime || that_present_oldLoanStartTime) {
      if (!(this_present_oldLoanStartTime && that_present_oldLoanStartTime))
        return false;
      if (!this.oldLoanStartTime.equals(that.oldLoanStartTime))
        return false;
    }

    boolean this_present_oldLoanPerson = true && this.isSetOldLoanPerson();
    boolean that_present_oldLoanPerson = true && that.isSetOldLoanPerson();
    if (this_present_oldLoanPerson || that_present_oldLoanPerson) {
      if (!(this_present_oldLoanPerson && that_present_oldLoanPerson))
        return false;
      if (!this.oldLoanPerson.equals(that.oldLoanPerson))
        return false;
    }

    boolean this_present_oldLoanPhone = true && this.isSetOldLoanPhone();
    boolean that_present_oldLoanPhone = true && that.isSetOldLoanPhone();
    if (this_present_oldLoanPhone || that_present_oldLoanPhone) {
      if (!(this_present_oldLoanPhone && that_present_oldLoanPhone))
        return false;
      if (!this.oldLoanPhone.equals(that.oldLoanPhone))
        return false;
    }

    boolean this_present_oldLoanAccount = true && this.isSetOldLoanAccount();
    boolean that_present_oldLoanAccount = true && that.isSetOldLoanAccount();
    if (this_present_oldLoanAccount || that_present_oldLoanAccount) {
      if (!(this_present_oldLoanAccount && that_present_oldLoanAccount))
        return false;
      if (!this.oldLoanAccount.equals(that.oldLoanAccount))
        return false;
    }

    boolean this_present_createrDate = true && this.isSetCreaterDate();
    boolean that_present_createrDate = true && that.isSetCreaterDate();
    if (this_present_createrDate || that_present_createrDate) {
      if (!(this_present_createrDate && that_present_createrDate))
        return false;
      if (!this.createrDate.equals(that.createrDate))
        return false;
    }

    boolean this_present_createrId = true;
    boolean that_present_createrId = true;
    if (this_present_createrId || that_present_createrId) {
      if (!(this_present_createrId && that_present_createrId))
        return false;
      if (this.createrId != that.createrId)
        return false;
    }

    boolean this_present_updateId = true;
    boolean that_present_updateId = true;
    if (this_present_updateId || that_present_updateId) {
      if (!(this_present_updateId && that_present_updateId))
        return false;
      if (this.updateId != that.updateId)
        return false;
    }

    boolean this_present_updateDate = true && this.isSetUpdateDate();
    boolean that_present_updateDate = true && that.isSetUpdateDate();
    if (this_present_updateDate || that_present_updateDate) {
      if (!(this_present_updateDate && that_present_updateDate))
        return false;
      if (!this.updateDate.equals(that.updateDate))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_originalLoanIds = true && this.isSetOriginalLoanIds();
    boolean that_present_originalLoanIds = true && that.isSetOriginalLoanIds();
    if (this_present_originalLoanIds || that_present_originalLoanIds) {
      if (!(this_present_originalLoanIds && that_present_originalLoanIds))
        return false;
      if (!this.originalLoanIds.equals(that.originalLoanIds))
        return false;
    }

    boolean this_present_loanTypeStr = true && this.isSetLoanTypeStr();
    boolean that_present_loanTypeStr = true && that.isSetLoanTypeStr();
    if (this_present_loanTypeStr || that_present_loanTypeStr) {
      if (!(this_present_loanTypeStr && that_present_loanTypeStr))
        return false;
      if (!this.loanTypeStr.equals(that.loanTypeStr))
        return false;
    }

    boolean this_present_oldLoanBankStr = true && this.isSetOldLoanBankStr();
    boolean that_present_oldLoanBankStr = true && that.isSetOldLoanBankStr();
    if (this_present_oldLoanBankStr || that_present_oldLoanBankStr) {
      if (!(this_present_oldLoanBankStr && that_present_oldLoanBankStr))
        return false;
      if (!this.oldLoanBankStr.equals(that.oldLoanBankStr))
        return false;
    }

    boolean this_present_estateId = true;
    boolean that_present_estateId = true;
    if (this_present_estateId || that_present_estateId) {
      if (!(this_present_estateId && that_present_estateId))
        return false;
      if (this.estateId != that.estateId)
        return false;
    }

    boolean this_present_estateName = true && this.isSetEstateName();
    boolean that_present_estateName = true && that.isSetEstateName();
    if (this_present_estateName || that_present_estateName) {
      if (!(this_present_estateName && that_present_estateName))
        return false;
      if (!this.estateName.equals(that.estateName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_originalLoanId = true;
    list.add(present_originalLoanId);
    if (present_originalLoanId)
      list.add(originalLoanId);

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_loanType = true;
    list.add(present_loanType);
    if (present_loanType)
      list.add(loanType);

    boolean present_oldLoanBank = true && (isSetOldLoanBank());
    list.add(present_oldLoanBank);
    if (present_oldLoanBank)
      list.add(oldLoanBank);

    boolean present_oldLoanBankBranch = true && (isSetOldLoanBankBranch());
    list.add(present_oldLoanBankBranch);
    if (present_oldLoanBankBranch)
      list.add(oldLoanBankBranch);

    boolean present_oldLoanMoney = true;
    list.add(present_oldLoanMoney);
    if (present_oldLoanMoney)
      list.add(oldLoanMoney);

    boolean present_oldOwedAmount = true;
    list.add(present_oldOwedAmount);
    if (present_oldOwedAmount)
      list.add(oldOwedAmount);

    boolean present_oldLoanTime = true && (isSetOldLoanTime());
    list.add(present_oldLoanTime);
    if (present_oldLoanTime)
      list.add(oldLoanTime);

    boolean present_oldLoanStartTime = true && (isSetOldLoanStartTime());
    list.add(present_oldLoanStartTime);
    if (present_oldLoanStartTime)
      list.add(oldLoanStartTime);

    boolean present_oldLoanPerson = true && (isSetOldLoanPerson());
    list.add(present_oldLoanPerson);
    if (present_oldLoanPerson)
      list.add(oldLoanPerson);

    boolean present_oldLoanPhone = true && (isSetOldLoanPhone());
    list.add(present_oldLoanPhone);
    if (present_oldLoanPhone)
      list.add(oldLoanPhone);

    boolean present_oldLoanAccount = true && (isSetOldLoanAccount());
    list.add(present_oldLoanAccount);
    if (present_oldLoanAccount)
      list.add(oldLoanAccount);

    boolean present_createrDate = true && (isSetCreaterDate());
    list.add(present_createrDate);
    if (present_createrDate)
      list.add(createrDate);

    boolean present_createrId = true;
    list.add(present_createrId);
    if (present_createrId)
      list.add(createrId);

    boolean present_updateId = true;
    list.add(present_updateId);
    if (present_updateId)
      list.add(updateId);

    boolean present_updateDate = true && (isSetUpdateDate());
    list.add(present_updateDate);
    if (present_updateDate)
      list.add(updateDate);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_originalLoanIds = true && (isSetOriginalLoanIds());
    list.add(present_originalLoanIds);
    if (present_originalLoanIds)
      list.add(originalLoanIds);

    boolean present_loanTypeStr = true && (isSetLoanTypeStr());
    list.add(present_loanTypeStr);
    if (present_loanTypeStr)
      list.add(loanTypeStr);

    boolean present_oldLoanBankStr = true && (isSetOldLoanBankStr());
    list.add(present_oldLoanBankStr);
    if (present_oldLoanBankStr)
      list.add(oldLoanBankStr);

    boolean present_estateId = true;
    list.add(present_estateId);
    if (present_estateId)
      list.add(estateId);

    boolean present_estateName = true && (isSetEstateName());
    list.add(present_estateName);
    if (present_estateName)
      list.add(estateName);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizOriginalLoan other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOriginalLoanId()).compareTo(other.isSetOriginalLoanId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginalLoanId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originalLoanId, other.originalLoanId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanType()).compareTo(other.isSetLoanType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanType, other.loanType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanBank()).compareTo(other.isSetOldLoanBank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanBank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanBank, other.oldLoanBank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanBankBranch()).compareTo(other.isSetOldLoanBankBranch());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanBankBranch()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanBankBranch, other.oldLoanBankBranch);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanMoney()).compareTo(other.isSetOldLoanMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanMoney, other.oldLoanMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldOwedAmount()).compareTo(other.isSetOldOwedAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldOwedAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldOwedAmount, other.oldOwedAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanTime()).compareTo(other.isSetOldLoanTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanTime, other.oldLoanTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanStartTime()).compareTo(other.isSetOldLoanStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanStartTime, other.oldLoanStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanPerson()).compareTo(other.isSetOldLoanPerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanPerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanPerson, other.oldLoanPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanPhone()).compareTo(other.isSetOldLoanPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanPhone, other.oldLoanPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanAccount()).compareTo(other.isSetOldLoanAccount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanAccount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanAccount, other.oldLoanAccount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreaterDate()).compareTo(other.isSetCreaterDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreaterDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createrDate, other.createrDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreaterId()).compareTo(other.isSetCreaterId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreaterId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createrId, other.createrId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateId()).compareTo(other.isSetUpdateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateId, other.updateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateDate()).compareTo(other.isSetUpdateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateDate, other.updateDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOriginalLoanIds()).compareTo(other.isSetOriginalLoanIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginalLoanIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originalLoanIds, other.originalLoanIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanTypeStr()).compareTo(other.isSetLoanTypeStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanTypeStr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanTypeStr, other.loanTypeStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanBankStr()).compareTo(other.isSetOldLoanBankStr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanBankStr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanBankStr, other.oldLoanBankStr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstateId()).compareTo(other.isSetEstateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estateId, other.estateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstateName()).compareTo(other.isSetEstateName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstateName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estateName, other.estateName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizOriginalLoan(");
    boolean first = true;

    sb.append("originalLoanId:");
    sb.append(this.originalLoanId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanType:");
    sb.append(this.loanType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanBank:");
    if (this.oldLoanBank == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanBank);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanBankBranch:");
    if (this.oldLoanBankBranch == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanBankBranch);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanMoney:");
    sb.append(this.oldLoanMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldOwedAmount:");
    sb.append(this.oldOwedAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanTime:");
    if (this.oldLoanTime == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanStartTime:");
    if (this.oldLoanStartTime == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanStartTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanPerson:");
    if (this.oldLoanPerson == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanPhone:");
    if (this.oldLoanPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanAccount:");
    if (this.oldLoanAccount == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanAccount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createrDate:");
    if (this.createrDate == null) {
      sb.append("null");
    } else {
      sb.append(this.createrDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createrId:");
    sb.append(this.createrId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateId:");
    sb.append(this.updateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateDate:");
    if (this.updateDate == null) {
      sb.append("null");
    } else {
      sb.append(this.updateDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("originalLoanIds:");
    if (this.originalLoanIds == null) {
      sb.append("null");
    } else {
      sb.append(this.originalLoanIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanTypeStr:");
    if (this.loanTypeStr == null) {
      sb.append("null");
    } else {
      sb.append(this.loanTypeStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanBankStr:");
    if (this.oldLoanBankStr == null) {
      sb.append("null");
    } else {
      sb.append(this.oldLoanBankStr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("estateId:");
    sb.append(this.estateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("estateName:");
    if (this.estateName == null) {
      sb.append("null");
    } else {
      sb.append(this.estateName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizOriginalLoanStandardSchemeFactory implements SchemeFactory {
    public BizOriginalLoanStandardScheme getScheme() {
      return new BizOriginalLoanStandardScheme();
    }
  }

  private static class BizOriginalLoanStandardScheme extends StandardScheme<BizOriginalLoan> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizOriginalLoan struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORIGINAL_LOAN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.originalLoanId = iprot.readI32();
              struct.setOriginalLoanIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LOAN_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loanType = iprot.readI32();
              struct.setLoanTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OLD_LOAN_BANK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanBank = iprot.readString();
              struct.setOldLoanBankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OLD_LOAN_BANK_BRANCH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanBankBranch = iprot.readString();
              struct.setOldLoanBankBranchIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OLD_LOAN_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.oldLoanMoney = iprot.readDouble();
              struct.setOldLoanMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OLD_OWED_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.oldOwedAmount = iprot.readDouble();
              struct.setOldOwedAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OLD_LOAN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanTime = iprot.readString();
              struct.setOldLoanTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OLD_LOAN_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanStartTime = iprot.readString();
              struct.setOldLoanStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // OLD_LOAN_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanPerson = iprot.readString();
              struct.setOldLoanPersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OLD_LOAN_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanPhone = iprot.readString();
              struct.setOldLoanPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // OLD_LOAN_ACCOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanAccount = iprot.readString();
              struct.setOldLoanAccountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATER_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createrDate = iprot.readString();
              struct.setCreaterDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createrId = iprot.readI32();
              struct.setCreaterIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateId = iprot.readI32();
              struct.setUpdateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // UPDATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateDate = iprot.readString();
              struct.setUpdateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ORIGINAL_LOAN_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list96 = iprot.readListBegin();
                struct.originalLoanIds = new ArrayList<Integer>(_list96.size);
                int _elem97;
                for (int _i98 = 0; _i98 < _list96.size; ++_i98)
                {
                  _elem97 = iprot.readI32();
                  struct.originalLoanIds.add(_elem97);
                }
                iprot.readListEnd();
              }
              struct.setOriginalLoanIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // LOAN_TYPE_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loanTypeStr = iprot.readString();
              struct.setLoanTypeStrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // OLD_LOAN_BANK_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldLoanBankStr = iprot.readString();
              struct.setOldLoanBankStrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ESTATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.estateId = iprot.readI32();
              struct.setEstateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // ESTATE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.estateName = iprot.readString();
              struct.setEstateNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizOriginalLoan struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ORIGINAL_LOAN_ID_FIELD_DESC);
      oprot.writeI32(struct.originalLoanId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_TYPE_FIELD_DESC);
      oprot.writeI32(struct.loanType);
      oprot.writeFieldEnd();
      if (struct.oldLoanBank != null) {
        oprot.writeFieldBegin(OLD_LOAN_BANK_FIELD_DESC);
        oprot.writeString(struct.oldLoanBank);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanBankBranch != null) {
        oprot.writeFieldBegin(OLD_LOAN_BANK_BRANCH_FIELD_DESC);
        oprot.writeString(struct.oldLoanBankBranch);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(OLD_LOAN_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.oldLoanMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OLD_OWED_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.oldOwedAmount);
      oprot.writeFieldEnd();
      if (struct.oldLoanTime != null) {
        oprot.writeFieldBegin(OLD_LOAN_TIME_FIELD_DESC);
        oprot.writeString(struct.oldLoanTime);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanStartTime != null) {
        oprot.writeFieldBegin(OLD_LOAN_START_TIME_FIELD_DESC);
        oprot.writeString(struct.oldLoanStartTime);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanPerson != null) {
        oprot.writeFieldBegin(OLD_LOAN_PERSON_FIELD_DESC);
        oprot.writeString(struct.oldLoanPerson);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanPhone != null) {
        oprot.writeFieldBegin(OLD_LOAN_PHONE_FIELD_DESC);
        oprot.writeString(struct.oldLoanPhone);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanAccount != null) {
        oprot.writeFieldBegin(OLD_LOAN_ACCOUNT_FIELD_DESC);
        oprot.writeString(struct.oldLoanAccount);
        oprot.writeFieldEnd();
      }
      if (struct.createrDate != null) {
        oprot.writeFieldBegin(CREATER_DATE_FIELD_DESC);
        oprot.writeString(struct.createrDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATER_ID_FIELD_DESC);
      oprot.writeI32(struct.createrId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_ID_FIELD_DESC);
      oprot.writeI32(struct.updateId);
      oprot.writeFieldEnd();
      if (struct.updateDate != null) {
        oprot.writeFieldBegin(UPDATE_DATE_FIELD_DESC);
        oprot.writeString(struct.updateDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.originalLoanIds != null) {
        oprot.writeFieldBegin(ORIGINAL_LOAN_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.originalLoanIds.size()));
          for (int _iter99 : struct.originalLoanIds)
          {
            oprot.writeI32(_iter99);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.loanTypeStr != null) {
        oprot.writeFieldBegin(LOAN_TYPE_STR_FIELD_DESC);
        oprot.writeString(struct.loanTypeStr);
        oprot.writeFieldEnd();
      }
      if (struct.oldLoanBankStr != null) {
        oprot.writeFieldBegin(OLD_LOAN_BANK_STR_FIELD_DESC);
        oprot.writeString(struct.oldLoanBankStr);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ESTATE_ID_FIELD_DESC);
      oprot.writeI32(struct.estateId);
      oprot.writeFieldEnd();
      if (struct.estateName != null) {
        oprot.writeFieldBegin(ESTATE_NAME_FIELD_DESC);
        oprot.writeString(struct.estateName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizOriginalLoanTupleSchemeFactory implements SchemeFactory {
    public BizOriginalLoanTupleScheme getScheme() {
      return new BizOriginalLoanTupleScheme();
    }
  }

  private static class BizOriginalLoanTupleScheme extends TupleScheme<BizOriginalLoan> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizOriginalLoan struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOriginalLoanId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectId()) {
        optionals.set(1);
      }
      if (struct.isSetLoanType()) {
        optionals.set(2);
      }
      if (struct.isSetOldLoanBank()) {
        optionals.set(3);
      }
      if (struct.isSetOldLoanBankBranch()) {
        optionals.set(4);
      }
      if (struct.isSetOldLoanMoney()) {
        optionals.set(5);
      }
      if (struct.isSetOldOwedAmount()) {
        optionals.set(6);
      }
      if (struct.isSetOldLoanTime()) {
        optionals.set(7);
      }
      if (struct.isSetOldLoanStartTime()) {
        optionals.set(8);
      }
      if (struct.isSetOldLoanPerson()) {
        optionals.set(9);
      }
      if (struct.isSetOldLoanPhone()) {
        optionals.set(10);
      }
      if (struct.isSetOldLoanAccount()) {
        optionals.set(11);
      }
      if (struct.isSetCreaterDate()) {
        optionals.set(12);
      }
      if (struct.isSetCreaterId()) {
        optionals.set(13);
      }
      if (struct.isSetUpdateId()) {
        optionals.set(14);
      }
      if (struct.isSetUpdateDate()) {
        optionals.set(15);
      }
      if (struct.isSetStatus()) {
        optionals.set(16);
      }
      if (struct.isSetOriginalLoanIds()) {
        optionals.set(17);
      }
      if (struct.isSetLoanTypeStr()) {
        optionals.set(18);
      }
      if (struct.isSetOldLoanBankStr()) {
        optionals.set(19);
      }
      if (struct.isSetEstateId()) {
        optionals.set(20);
      }
      if (struct.isSetEstateName()) {
        optionals.set(21);
      }
      oprot.writeBitSet(optionals, 22);
      if (struct.isSetOriginalLoanId()) {
        oprot.writeI32(struct.originalLoanId);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetLoanType()) {
        oprot.writeI32(struct.loanType);
      }
      if (struct.isSetOldLoanBank()) {
        oprot.writeString(struct.oldLoanBank);
      }
      if (struct.isSetOldLoanBankBranch()) {
        oprot.writeString(struct.oldLoanBankBranch);
      }
      if (struct.isSetOldLoanMoney()) {
        oprot.writeDouble(struct.oldLoanMoney);
      }
      if (struct.isSetOldOwedAmount()) {
        oprot.writeDouble(struct.oldOwedAmount);
      }
      if (struct.isSetOldLoanTime()) {
        oprot.writeString(struct.oldLoanTime);
      }
      if (struct.isSetOldLoanStartTime()) {
        oprot.writeString(struct.oldLoanStartTime);
      }
      if (struct.isSetOldLoanPerson()) {
        oprot.writeString(struct.oldLoanPerson);
      }
      if (struct.isSetOldLoanPhone()) {
        oprot.writeString(struct.oldLoanPhone);
      }
      if (struct.isSetOldLoanAccount()) {
        oprot.writeString(struct.oldLoanAccount);
      }
      if (struct.isSetCreaterDate()) {
        oprot.writeString(struct.createrDate);
      }
      if (struct.isSetCreaterId()) {
        oprot.writeI32(struct.createrId);
      }
      if (struct.isSetUpdateId()) {
        oprot.writeI32(struct.updateId);
      }
      if (struct.isSetUpdateDate()) {
        oprot.writeString(struct.updateDate);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetOriginalLoanIds()) {
        {
          oprot.writeI32(struct.originalLoanIds.size());
          for (int _iter100 : struct.originalLoanIds)
          {
            oprot.writeI32(_iter100);
          }
        }
      }
      if (struct.isSetLoanTypeStr()) {
        oprot.writeString(struct.loanTypeStr);
      }
      if (struct.isSetOldLoanBankStr()) {
        oprot.writeString(struct.oldLoanBankStr);
      }
      if (struct.isSetEstateId()) {
        oprot.writeI32(struct.estateId);
      }
      if (struct.isSetEstateName()) {
        oprot.writeString(struct.estateName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizOriginalLoan struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(22);
      if (incoming.get(0)) {
        struct.originalLoanId = iprot.readI32();
        struct.setOriginalLoanIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.loanType = iprot.readI32();
        struct.setLoanTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.oldLoanBank = iprot.readString();
        struct.setOldLoanBankIsSet(true);
      }
      if (incoming.get(4)) {
        struct.oldLoanBankBranch = iprot.readString();
        struct.setOldLoanBankBranchIsSet(true);
      }
      if (incoming.get(5)) {
        struct.oldLoanMoney = iprot.readDouble();
        struct.setOldLoanMoneyIsSet(true);
      }
      if (incoming.get(6)) {
        struct.oldOwedAmount = iprot.readDouble();
        struct.setOldOwedAmountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.oldLoanTime = iprot.readString();
        struct.setOldLoanTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.oldLoanStartTime = iprot.readString();
        struct.setOldLoanStartTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.oldLoanPerson = iprot.readString();
        struct.setOldLoanPersonIsSet(true);
      }
      if (incoming.get(10)) {
        struct.oldLoanPhone = iprot.readString();
        struct.setOldLoanPhoneIsSet(true);
      }
      if (incoming.get(11)) {
        struct.oldLoanAccount = iprot.readString();
        struct.setOldLoanAccountIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createrDate = iprot.readString();
        struct.setCreaterDateIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createrId = iprot.readI32();
        struct.setCreaterIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updateId = iprot.readI32();
        struct.setUpdateIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.updateDate = iprot.readString();
        struct.setUpdateDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(17)) {
        {
          org.apache.thrift.protocol.TList _list101 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.originalLoanIds = new ArrayList<Integer>(_list101.size);
          int _elem102;
          for (int _i103 = 0; _i103 < _list101.size; ++_i103)
          {
            _elem102 = iprot.readI32();
            struct.originalLoanIds.add(_elem102);
          }
        }
        struct.setOriginalLoanIdsIsSet(true);
      }
      if (incoming.get(18)) {
        struct.loanTypeStr = iprot.readString();
        struct.setLoanTypeStrIsSet(true);
      }
      if (incoming.get(19)) {
        struct.oldLoanBankStr = iprot.readString();
        struct.setOldLoanBankStrIsSet(true);
      }
      if (incoming.get(20)) {
        struct.estateId = iprot.readI32();
        struct.setEstateIdIsSet(true);
      }
      if (incoming.get(21)) {
        struct.estateName = iprot.readString();
        struct.setEstateNameIsSet(true);
      }
    }
  }

}

