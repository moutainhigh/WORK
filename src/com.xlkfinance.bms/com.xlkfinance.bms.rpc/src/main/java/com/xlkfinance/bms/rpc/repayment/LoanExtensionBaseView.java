/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.repayment;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-19")
public class LoanExtensionBaseView implements org.apache.thrift.TBase<LoanExtensionBaseView, LoanExtensionBaseView._Fields>, java.io.Serializable, Cloneable, Comparable<LoanExtensionBaseView> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LoanExtensionBaseView");

  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNum", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CUS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cusType", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREDIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("creditAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField PM_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PLAN_OUT_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planOutLoanDt", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PLAN_REPAY_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planRepayLoanDt", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatus", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("requestDttm", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField EXTENSION_PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("extensionProjectId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatusVal", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField EXTENSION_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("extensionFee", org.apache.thrift.protocol.TType.DOUBLE, (short)17);
  private static final org.apache.thrift.protocol.TField EXTENSION_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("extensionDate", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField EXTENSION_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("extensionDays", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField PM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserId", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField CHARGE_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new LoanExtensionBaseViewStandardSchemeFactory());
    schemes.put(TupleScheme.class, new LoanExtensionBaseViewTupleSchemeFactory());
  }

  public int projectId; // required
  public String projectName; // required
  public String projectNum; // required
  public int cusType; // required
  public double creditAmt; // required
  public String pmUserName; // required
  public String planOutLoanDt; // required
  public String planRepayLoanDt; // required
  public String requestStatus; // required
  public String requestDttm; // required
  public int pid; // required
  public int extensionProjectId; // required
  public int page; // required
  public int rows; // required
  public String requestStatusVal; // required
  public double extensionFee; // required
  public String extensionDate; // required
  public int extensionDays; // required
  public int pmUserId; // required
  public double chargeAmount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROJECT_ID((short)1, "projectId"),
    PROJECT_NAME((short)2, "projectName"),
    PROJECT_NUM((short)3, "projectNum"),
    CUS_TYPE((short)5, "cusType"),
    CREDIT_AMT((short)6, "creditAmt"),
    PM_USER_NAME((short)7, "pmUserName"),
    PLAN_OUT_LOAN_DT((short)8, "planOutLoanDt"),
    PLAN_REPAY_LOAN_DT((short)9, "planRepayLoanDt"),
    REQUEST_STATUS((short)10, "requestStatus"),
    REQUEST_DTTM((short)11, "requestDttm"),
    PID((short)12, "pid"),
    EXTENSION_PROJECT_ID((short)13, "extensionProjectId"),
    PAGE((short)14, "page"),
    ROWS((short)15, "rows"),
    REQUEST_STATUS_VAL((short)16, "requestStatusVal"),
    EXTENSION_FEE((short)17, "extensionFee"),
    EXTENSION_DATE((short)18, "extensionDate"),
    EXTENSION_DAYS((short)19, "extensionDays"),
    PM_USER_ID((short)20, "pmUserId"),
    CHARGE_AMOUNT((short)21, "chargeAmount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROJECT_ID
          return PROJECT_ID;
        case 2: // PROJECT_NAME
          return PROJECT_NAME;
        case 3: // PROJECT_NUM
          return PROJECT_NUM;
        case 5: // CUS_TYPE
          return CUS_TYPE;
        case 6: // CREDIT_AMT
          return CREDIT_AMT;
        case 7: // PM_USER_NAME
          return PM_USER_NAME;
        case 8: // PLAN_OUT_LOAN_DT
          return PLAN_OUT_LOAN_DT;
        case 9: // PLAN_REPAY_LOAN_DT
          return PLAN_REPAY_LOAN_DT;
        case 10: // REQUEST_STATUS
          return REQUEST_STATUS;
        case 11: // REQUEST_DTTM
          return REQUEST_DTTM;
        case 12: // PID
          return PID;
        case 13: // EXTENSION_PROJECT_ID
          return EXTENSION_PROJECT_ID;
        case 14: // PAGE
          return PAGE;
        case 15: // ROWS
          return ROWS;
        case 16: // REQUEST_STATUS_VAL
          return REQUEST_STATUS_VAL;
        case 17: // EXTENSION_FEE
          return EXTENSION_FEE;
        case 18: // EXTENSION_DATE
          return EXTENSION_DATE;
        case 19: // EXTENSION_DAYS
          return EXTENSION_DAYS;
        case 20: // PM_USER_ID
          return PM_USER_ID;
        case 21: // CHARGE_AMOUNT
          return CHARGE_AMOUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROJECTID_ISSET_ID = 0;
  private static final int __CUSTYPE_ISSET_ID = 1;
  private static final int __CREDITAMT_ISSET_ID = 2;
  private static final int __PID_ISSET_ID = 3;
  private static final int __EXTENSIONPROJECTID_ISSET_ID = 4;
  private static final int __PAGE_ISSET_ID = 5;
  private static final int __ROWS_ISSET_ID = 6;
  private static final int __EXTENSIONFEE_ISSET_ID = 7;
  private static final int __EXTENSIONDAYS_ISSET_ID = 8;
  private static final int __PMUSERID_ISSET_ID = 9;
  private static final int __CHARGEAMOUNT_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NUM, new org.apache.thrift.meta_data.FieldMetaData("projectNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cusType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREDIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("creditAmt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PM_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("pmUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_OUT_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planOutLoanDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_REPAY_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planRepayLoanDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_STATUS, new org.apache.thrift.meta_data.FieldMetaData("requestStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("requestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EXTENSION_PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("extensionProjectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUEST_STATUS_VAL, new org.apache.thrift.meta_data.FieldMetaData("requestStatusVal", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTENSION_FEE, new org.apache.thrift.meta_data.FieldMetaData("extensionFee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EXTENSION_DATE, new org.apache.thrift.meta_data.FieldMetaData("extensionDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTENSION_DAYS, new org.apache.thrift.meta_data.FieldMetaData("extensionDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("pmUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHARGE_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("chargeAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LoanExtensionBaseView.class, metaDataMap);
  }

  public LoanExtensionBaseView() {
  }

  public LoanExtensionBaseView(
    int projectId,
    String projectName,
    String projectNum,
    int cusType,
    double creditAmt,
    String pmUserName,
    String planOutLoanDt,
    String planRepayLoanDt,
    String requestStatus,
    String requestDttm,
    int pid,
    int extensionProjectId,
    int page,
    int rows,
    String requestStatusVal,
    double extensionFee,
    String extensionDate,
    int extensionDays,
    int pmUserId,
    double chargeAmount)
  {
    this();
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectName = projectName;
    this.projectNum = projectNum;
    this.cusType = cusType;
    setCusTypeIsSet(true);
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    this.pmUserName = pmUserName;
    this.planOutLoanDt = planOutLoanDt;
    this.planRepayLoanDt = planRepayLoanDt;
    this.requestStatus = requestStatus;
    this.requestDttm = requestDttm;
    this.pid = pid;
    setPidIsSet(true);
    this.extensionProjectId = extensionProjectId;
    setExtensionProjectIdIsSet(true);
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.requestStatusVal = requestStatusVal;
    this.extensionFee = extensionFee;
    setExtensionFeeIsSet(true);
    this.extensionDate = extensionDate;
    this.extensionDays = extensionDays;
    setExtensionDaysIsSet(true);
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    this.chargeAmount = chargeAmount;
    setChargeAmountIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LoanExtensionBaseView(LoanExtensionBaseView other) {
    __isset_bitfield = other.__isset_bitfield;
    this.projectId = other.projectId;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    if (other.isSetProjectNum()) {
      this.projectNum = other.projectNum;
    }
    this.cusType = other.cusType;
    this.creditAmt = other.creditAmt;
    if (other.isSetPmUserName()) {
      this.pmUserName = other.pmUserName;
    }
    if (other.isSetPlanOutLoanDt()) {
      this.planOutLoanDt = other.planOutLoanDt;
    }
    if (other.isSetPlanRepayLoanDt()) {
      this.planRepayLoanDt = other.planRepayLoanDt;
    }
    if (other.isSetRequestStatus()) {
      this.requestStatus = other.requestStatus;
    }
    if (other.isSetRequestDttm()) {
      this.requestDttm = other.requestDttm;
    }
    this.pid = other.pid;
    this.extensionProjectId = other.extensionProjectId;
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetRequestStatusVal()) {
      this.requestStatusVal = other.requestStatusVal;
    }
    this.extensionFee = other.extensionFee;
    if (other.isSetExtensionDate()) {
      this.extensionDate = other.extensionDate;
    }
    this.extensionDays = other.extensionDays;
    this.pmUserId = other.pmUserId;
    this.chargeAmount = other.chargeAmount;
  }

  public LoanExtensionBaseView deepCopy() {
    return new LoanExtensionBaseView(this);
  }

  @Override
  public void clear() {
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectName = null;
    this.projectNum = null;
    setCusTypeIsSet(false);
    this.cusType = 0;
    setCreditAmtIsSet(false);
    this.creditAmt = 0.0;
    this.pmUserName = null;
    this.planOutLoanDt = null;
    this.planRepayLoanDt = null;
    this.requestStatus = null;
    this.requestDttm = null;
    setPidIsSet(false);
    this.pid = 0;
    setExtensionProjectIdIsSet(false);
    this.extensionProjectId = 0;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.requestStatusVal = null;
    setExtensionFeeIsSet(false);
    this.extensionFee = 0.0;
    this.extensionDate = null;
    setExtensionDaysIsSet(false);
    this.extensionDays = 0;
    setPmUserIdIsSet(false);
    this.pmUserId = 0;
    setChargeAmountIsSet(false);
    this.chargeAmount = 0.0;
  }

  public int getProjectId() {
    return this.projectId;
  }

  public LoanExtensionBaseView setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public LoanExtensionBaseView setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public String getProjectNum() {
    return this.projectNum;
  }

  public LoanExtensionBaseView setProjectNum(String projectNum) {
    this.projectNum = projectNum;
    return this;
  }

  public void unsetProjectNum() {
    this.projectNum = null;
  }

  /** Returns true if field projectNum is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNum() {
    return this.projectNum != null;
  }

  public void setProjectNumIsSet(boolean value) {
    if (!value) {
      this.projectNum = null;
    }
  }

  public int getCusType() {
    return this.cusType;
  }

  public LoanExtensionBaseView setCusType(int cusType) {
    this.cusType = cusType;
    setCusTypeIsSet(true);
    return this;
  }

  public void unsetCusType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUSTYPE_ISSET_ID);
  }

  /** Returns true if field cusType is set (has been assigned a value) and false otherwise */
  public boolean isSetCusType() {
    return EncodingUtils.testBit(__isset_bitfield, __CUSTYPE_ISSET_ID);
  }

  public void setCusTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUSTYPE_ISSET_ID, value);
  }

  public double getCreditAmt() {
    return this.creditAmt;
  }

  public LoanExtensionBaseView setCreditAmt(double creditAmt) {
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    return this;
  }

  public void unsetCreditAmt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  /** Returns true if field creditAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditAmt() {
    return EncodingUtils.testBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  public void setCreditAmtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREDITAMT_ISSET_ID, value);
  }

  public String getPmUserName() {
    return this.pmUserName;
  }

  public LoanExtensionBaseView setPmUserName(String pmUserName) {
    this.pmUserName = pmUserName;
    return this;
  }

  public void unsetPmUserName() {
    this.pmUserName = null;
  }

  /** Returns true if field pmUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserName() {
    return this.pmUserName != null;
  }

  public void setPmUserNameIsSet(boolean value) {
    if (!value) {
      this.pmUserName = null;
    }
  }

  public String getPlanOutLoanDt() {
    return this.planOutLoanDt;
  }

  public LoanExtensionBaseView setPlanOutLoanDt(String planOutLoanDt) {
    this.planOutLoanDt = planOutLoanDt;
    return this;
  }

  public void unsetPlanOutLoanDt() {
    this.planOutLoanDt = null;
  }

  /** Returns true if field planOutLoanDt is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanOutLoanDt() {
    return this.planOutLoanDt != null;
  }

  public void setPlanOutLoanDtIsSet(boolean value) {
    if (!value) {
      this.planOutLoanDt = null;
    }
  }

  public String getPlanRepayLoanDt() {
    return this.planRepayLoanDt;
  }

  public LoanExtensionBaseView setPlanRepayLoanDt(String planRepayLoanDt) {
    this.planRepayLoanDt = planRepayLoanDt;
    return this;
  }

  public void unsetPlanRepayLoanDt() {
    this.planRepayLoanDt = null;
  }

  /** Returns true if field planRepayLoanDt is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanRepayLoanDt() {
    return this.planRepayLoanDt != null;
  }

  public void setPlanRepayLoanDtIsSet(boolean value) {
    if (!value) {
      this.planRepayLoanDt = null;
    }
  }

  public String getRequestStatus() {
    return this.requestStatus;
  }

  public LoanExtensionBaseView setRequestStatus(String requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

  public void unsetRequestStatus() {
    this.requestStatus = null;
  }

  /** Returns true if field requestStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatus() {
    return this.requestStatus != null;
  }

  public void setRequestStatusIsSet(boolean value) {
    if (!value) {
      this.requestStatus = null;
    }
  }

  public String getRequestDttm() {
    return this.requestDttm;
  }

  public LoanExtensionBaseView setRequestDttm(String requestDttm) {
    this.requestDttm = requestDttm;
    return this;
  }

  public void unsetRequestDttm() {
    this.requestDttm = null;
  }

  /** Returns true if field requestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestDttm() {
    return this.requestDttm != null;
  }

  public void setRequestDttmIsSet(boolean value) {
    if (!value) {
      this.requestDttm = null;
    }
  }

  public int getPid() {
    return this.pid;
  }

  public LoanExtensionBaseView setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getExtensionProjectId() {
    return this.extensionProjectId;
  }

  public LoanExtensionBaseView setExtensionProjectId(int extensionProjectId) {
    this.extensionProjectId = extensionProjectId;
    setExtensionProjectIdIsSet(true);
    return this;
  }

  public void unsetExtensionProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXTENSIONPROJECTID_ISSET_ID);
  }

  /** Returns true if field extensionProjectId is set (has been assigned a value) and false otherwise */
  public boolean isSetExtensionProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __EXTENSIONPROJECTID_ISSET_ID);
  }

  public void setExtensionProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXTENSIONPROJECTID_ISSET_ID, value);
  }

  public int getPage() {
    return this.page;
  }

  public LoanExtensionBaseView setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public LoanExtensionBaseView setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getRequestStatusVal() {
    return this.requestStatusVal;
  }

  public LoanExtensionBaseView setRequestStatusVal(String requestStatusVal) {
    this.requestStatusVal = requestStatusVal;
    return this;
  }

  public void unsetRequestStatusVal() {
    this.requestStatusVal = null;
  }

  /** Returns true if field requestStatusVal is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatusVal() {
    return this.requestStatusVal != null;
  }

  public void setRequestStatusValIsSet(boolean value) {
    if (!value) {
      this.requestStatusVal = null;
    }
  }

  public double getExtensionFee() {
    return this.extensionFee;
  }

  public LoanExtensionBaseView setExtensionFee(double extensionFee) {
    this.extensionFee = extensionFee;
    setExtensionFeeIsSet(true);
    return this;
  }

  public void unsetExtensionFee() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXTENSIONFEE_ISSET_ID);
  }

  /** Returns true if field extensionFee is set (has been assigned a value) and false otherwise */
  public boolean isSetExtensionFee() {
    return EncodingUtils.testBit(__isset_bitfield, __EXTENSIONFEE_ISSET_ID);
  }

  public void setExtensionFeeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXTENSIONFEE_ISSET_ID, value);
  }

  public String getExtensionDate() {
    return this.extensionDate;
  }

  public LoanExtensionBaseView setExtensionDate(String extensionDate) {
    this.extensionDate = extensionDate;
    return this;
  }

  public void unsetExtensionDate() {
    this.extensionDate = null;
  }

  /** Returns true if field extensionDate is set (has been assigned a value) and false otherwise */
  public boolean isSetExtensionDate() {
    return this.extensionDate != null;
  }

  public void setExtensionDateIsSet(boolean value) {
    if (!value) {
      this.extensionDate = null;
    }
  }

  public int getExtensionDays() {
    return this.extensionDays;
  }

  public LoanExtensionBaseView setExtensionDays(int extensionDays) {
    this.extensionDays = extensionDays;
    setExtensionDaysIsSet(true);
    return this;
  }

  public void unsetExtensionDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXTENSIONDAYS_ISSET_ID);
  }

  /** Returns true if field extensionDays is set (has been assigned a value) and false otherwise */
  public boolean isSetExtensionDays() {
    return EncodingUtils.testBit(__isset_bitfield, __EXTENSIONDAYS_ISSET_ID);
  }

  public void setExtensionDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXTENSIONDAYS_ISSET_ID, value);
  }

  public int getPmUserId() {
    return this.pmUserId;
  }

  public LoanExtensionBaseView setPmUserId(int pmUserId) {
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    return this;
  }

  public void unsetPmUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  /** Returns true if field pmUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  public void setPmUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PMUSERID_ISSET_ID, value);
  }

  public double getChargeAmount() {
    return this.chargeAmount;
  }

  public LoanExtensionBaseView setChargeAmount(double chargeAmount) {
    this.chargeAmount = chargeAmount;
    setChargeAmountIsSet(true);
    return this;
  }

  public void unsetChargeAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARGEAMOUNT_ISSET_ID);
  }

  /** Returns true if field chargeAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARGEAMOUNT_ISSET_ID);
  }

  public void setChargeAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARGEAMOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case PROJECT_NUM:
      if (value == null) {
        unsetProjectNum();
      } else {
        setProjectNum((String)value);
      }
      break;

    case CUS_TYPE:
      if (value == null) {
        unsetCusType();
      } else {
        setCusType((Integer)value);
      }
      break;

    case CREDIT_AMT:
      if (value == null) {
        unsetCreditAmt();
      } else {
        setCreditAmt((Double)value);
      }
      break;

    case PM_USER_NAME:
      if (value == null) {
        unsetPmUserName();
      } else {
        setPmUserName((String)value);
      }
      break;

    case PLAN_OUT_LOAN_DT:
      if (value == null) {
        unsetPlanOutLoanDt();
      } else {
        setPlanOutLoanDt((String)value);
      }
      break;

    case PLAN_REPAY_LOAN_DT:
      if (value == null) {
        unsetPlanRepayLoanDt();
      } else {
        setPlanRepayLoanDt((String)value);
      }
      break;

    case REQUEST_STATUS:
      if (value == null) {
        unsetRequestStatus();
      } else {
        setRequestStatus((String)value);
      }
      break;

    case REQUEST_DTTM:
      if (value == null) {
        unsetRequestDttm();
      } else {
        setRequestDttm((String)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case EXTENSION_PROJECT_ID:
      if (value == null) {
        unsetExtensionProjectId();
      } else {
        setExtensionProjectId((Integer)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case REQUEST_STATUS_VAL:
      if (value == null) {
        unsetRequestStatusVal();
      } else {
        setRequestStatusVal((String)value);
      }
      break;

    case EXTENSION_FEE:
      if (value == null) {
        unsetExtensionFee();
      } else {
        setExtensionFee((Double)value);
      }
      break;

    case EXTENSION_DATE:
      if (value == null) {
        unsetExtensionDate();
      } else {
        setExtensionDate((String)value);
      }
      break;

    case EXTENSION_DAYS:
      if (value == null) {
        unsetExtensionDays();
      } else {
        setExtensionDays((Integer)value);
      }
      break;

    case PM_USER_ID:
      if (value == null) {
        unsetPmUserId();
      } else {
        setPmUserId((Integer)value);
      }
      break;

    case CHARGE_AMOUNT:
      if (value == null) {
        unsetChargeAmount();
      } else {
        setChargeAmount((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NAME:
      return getProjectName();

    case PROJECT_NUM:
      return getProjectNum();

    case CUS_TYPE:
      return Integer.valueOf(getCusType());

    case CREDIT_AMT:
      return Double.valueOf(getCreditAmt());

    case PM_USER_NAME:
      return getPmUserName();

    case PLAN_OUT_LOAN_DT:
      return getPlanOutLoanDt();

    case PLAN_REPAY_LOAN_DT:
      return getPlanRepayLoanDt();

    case REQUEST_STATUS:
      return getRequestStatus();

    case REQUEST_DTTM:
      return getRequestDttm();

    case PID:
      return Integer.valueOf(getPid());

    case EXTENSION_PROJECT_ID:
      return Integer.valueOf(getExtensionProjectId());

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case REQUEST_STATUS_VAL:
      return getRequestStatusVal();

    case EXTENSION_FEE:
      return Double.valueOf(getExtensionFee());

    case EXTENSION_DATE:
      return getExtensionDate();

    case EXTENSION_DAYS:
      return Integer.valueOf(getExtensionDays());

    case PM_USER_ID:
      return Integer.valueOf(getPmUserId());

    case CHARGE_AMOUNT:
      return Double.valueOf(getChargeAmount());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NAME:
      return isSetProjectName();
    case PROJECT_NUM:
      return isSetProjectNum();
    case CUS_TYPE:
      return isSetCusType();
    case CREDIT_AMT:
      return isSetCreditAmt();
    case PM_USER_NAME:
      return isSetPmUserName();
    case PLAN_OUT_LOAN_DT:
      return isSetPlanOutLoanDt();
    case PLAN_REPAY_LOAN_DT:
      return isSetPlanRepayLoanDt();
    case REQUEST_STATUS:
      return isSetRequestStatus();
    case REQUEST_DTTM:
      return isSetRequestDttm();
    case PID:
      return isSetPid();
    case EXTENSION_PROJECT_ID:
      return isSetExtensionProjectId();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case REQUEST_STATUS_VAL:
      return isSetRequestStatusVal();
    case EXTENSION_FEE:
      return isSetExtensionFee();
    case EXTENSION_DATE:
      return isSetExtensionDate();
    case EXTENSION_DAYS:
      return isSetExtensionDays();
    case PM_USER_ID:
      return isSetPmUserId();
    case CHARGE_AMOUNT:
      return isSetChargeAmount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof LoanExtensionBaseView)
      return this.equals((LoanExtensionBaseView)that);
    return false;
  }

  public boolean equals(LoanExtensionBaseView that) {
    if (that == null)
      return false;

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_projectNum = true && this.isSetProjectNum();
    boolean that_present_projectNum = true && that.isSetProjectNum();
    if (this_present_projectNum || that_present_projectNum) {
      if (!(this_present_projectNum && that_present_projectNum))
        return false;
      if (!this.projectNum.equals(that.projectNum))
        return false;
    }

    boolean this_present_cusType = true;
    boolean that_present_cusType = true;
    if (this_present_cusType || that_present_cusType) {
      if (!(this_present_cusType && that_present_cusType))
        return false;
      if (this.cusType != that.cusType)
        return false;
    }

    boolean this_present_creditAmt = true;
    boolean that_present_creditAmt = true;
    if (this_present_creditAmt || that_present_creditAmt) {
      if (!(this_present_creditAmt && that_present_creditAmt))
        return false;
      if (this.creditAmt != that.creditAmt)
        return false;
    }

    boolean this_present_pmUserName = true && this.isSetPmUserName();
    boolean that_present_pmUserName = true && that.isSetPmUserName();
    if (this_present_pmUserName || that_present_pmUserName) {
      if (!(this_present_pmUserName && that_present_pmUserName))
        return false;
      if (!this.pmUserName.equals(that.pmUserName))
        return false;
    }

    boolean this_present_planOutLoanDt = true && this.isSetPlanOutLoanDt();
    boolean that_present_planOutLoanDt = true && that.isSetPlanOutLoanDt();
    if (this_present_planOutLoanDt || that_present_planOutLoanDt) {
      if (!(this_present_planOutLoanDt && that_present_planOutLoanDt))
        return false;
      if (!this.planOutLoanDt.equals(that.planOutLoanDt))
        return false;
    }

    boolean this_present_planRepayLoanDt = true && this.isSetPlanRepayLoanDt();
    boolean that_present_planRepayLoanDt = true && that.isSetPlanRepayLoanDt();
    if (this_present_planRepayLoanDt || that_present_planRepayLoanDt) {
      if (!(this_present_planRepayLoanDt && that_present_planRepayLoanDt))
        return false;
      if (!this.planRepayLoanDt.equals(that.planRepayLoanDt))
        return false;
    }

    boolean this_present_requestStatus = true && this.isSetRequestStatus();
    boolean that_present_requestStatus = true && that.isSetRequestStatus();
    if (this_present_requestStatus || that_present_requestStatus) {
      if (!(this_present_requestStatus && that_present_requestStatus))
        return false;
      if (!this.requestStatus.equals(that.requestStatus))
        return false;
    }

    boolean this_present_requestDttm = true && this.isSetRequestDttm();
    boolean that_present_requestDttm = true && that.isSetRequestDttm();
    if (this_present_requestDttm || that_present_requestDttm) {
      if (!(this_present_requestDttm && that_present_requestDttm))
        return false;
      if (!this.requestDttm.equals(that.requestDttm))
        return false;
    }

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_extensionProjectId = true;
    boolean that_present_extensionProjectId = true;
    if (this_present_extensionProjectId || that_present_extensionProjectId) {
      if (!(this_present_extensionProjectId && that_present_extensionProjectId))
        return false;
      if (this.extensionProjectId != that.extensionProjectId)
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_requestStatusVal = true && this.isSetRequestStatusVal();
    boolean that_present_requestStatusVal = true && that.isSetRequestStatusVal();
    if (this_present_requestStatusVal || that_present_requestStatusVal) {
      if (!(this_present_requestStatusVal && that_present_requestStatusVal))
        return false;
      if (!this.requestStatusVal.equals(that.requestStatusVal))
        return false;
    }

    boolean this_present_extensionFee = true;
    boolean that_present_extensionFee = true;
    if (this_present_extensionFee || that_present_extensionFee) {
      if (!(this_present_extensionFee && that_present_extensionFee))
        return false;
      if (this.extensionFee != that.extensionFee)
        return false;
    }

    boolean this_present_extensionDate = true && this.isSetExtensionDate();
    boolean that_present_extensionDate = true && that.isSetExtensionDate();
    if (this_present_extensionDate || that_present_extensionDate) {
      if (!(this_present_extensionDate && that_present_extensionDate))
        return false;
      if (!this.extensionDate.equals(that.extensionDate))
        return false;
    }

    boolean this_present_extensionDays = true;
    boolean that_present_extensionDays = true;
    if (this_present_extensionDays || that_present_extensionDays) {
      if (!(this_present_extensionDays && that_present_extensionDays))
        return false;
      if (this.extensionDays != that.extensionDays)
        return false;
    }

    boolean this_present_pmUserId = true;
    boolean that_present_pmUserId = true;
    if (this_present_pmUserId || that_present_pmUserId) {
      if (!(this_present_pmUserId && that_present_pmUserId))
        return false;
      if (this.pmUserId != that.pmUserId)
        return false;
    }

    boolean this_present_chargeAmount = true;
    boolean that_present_chargeAmount = true;
    if (this_present_chargeAmount || that_present_chargeAmount) {
      if (!(this_present_chargeAmount && that_present_chargeAmount))
        return false;
      if (this.chargeAmount != that.chargeAmount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_projectNum = true && (isSetProjectNum());
    list.add(present_projectNum);
    if (present_projectNum)
      list.add(projectNum);

    boolean present_cusType = true;
    list.add(present_cusType);
    if (present_cusType)
      list.add(cusType);

    boolean present_creditAmt = true;
    list.add(present_creditAmt);
    if (present_creditAmt)
      list.add(creditAmt);

    boolean present_pmUserName = true && (isSetPmUserName());
    list.add(present_pmUserName);
    if (present_pmUserName)
      list.add(pmUserName);

    boolean present_planOutLoanDt = true && (isSetPlanOutLoanDt());
    list.add(present_planOutLoanDt);
    if (present_planOutLoanDt)
      list.add(planOutLoanDt);

    boolean present_planRepayLoanDt = true && (isSetPlanRepayLoanDt());
    list.add(present_planRepayLoanDt);
    if (present_planRepayLoanDt)
      list.add(planRepayLoanDt);

    boolean present_requestStatus = true && (isSetRequestStatus());
    list.add(present_requestStatus);
    if (present_requestStatus)
      list.add(requestStatus);

    boolean present_requestDttm = true && (isSetRequestDttm());
    list.add(present_requestDttm);
    if (present_requestDttm)
      list.add(requestDttm);

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_extensionProjectId = true;
    list.add(present_extensionProjectId);
    if (present_extensionProjectId)
      list.add(extensionProjectId);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_requestStatusVal = true && (isSetRequestStatusVal());
    list.add(present_requestStatusVal);
    if (present_requestStatusVal)
      list.add(requestStatusVal);

    boolean present_extensionFee = true;
    list.add(present_extensionFee);
    if (present_extensionFee)
      list.add(extensionFee);

    boolean present_extensionDate = true && (isSetExtensionDate());
    list.add(present_extensionDate);
    if (present_extensionDate)
      list.add(extensionDate);

    boolean present_extensionDays = true;
    list.add(present_extensionDays);
    if (present_extensionDays)
      list.add(extensionDays);

    boolean present_pmUserId = true;
    list.add(present_pmUserId);
    if (present_pmUserId)
      list.add(pmUserId);

    boolean present_chargeAmount = true;
    list.add(present_chargeAmount);
    if (present_chargeAmount)
      list.add(chargeAmount);

    return list.hashCode();
  }

  @Override
  public int compareTo(LoanExtensionBaseView other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNum()).compareTo(other.isSetProjectNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNum, other.projectNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusType()).compareTo(other.isSetCusType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusType, other.cusType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditAmt()).compareTo(other.isSetCreditAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditAmt, other.creditAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserName()).compareTo(other.isSetPmUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserName, other.pmUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanOutLoanDt()).compareTo(other.isSetPlanOutLoanDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanOutLoanDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planOutLoanDt, other.planOutLoanDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanRepayLoanDt()).compareTo(other.isSetPlanRepayLoanDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanRepayLoanDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planRepayLoanDt, other.planRepayLoanDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatus()).compareTo(other.isSetRequestStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatus, other.requestStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestDttm()).compareTo(other.isSetRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestDttm, other.requestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtensionProjectId()).compareTo(other.isSetExtensionProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtensionProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extensionProjectId, other.extensionProjectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatusVal()).compareTo(other.isSetRequestStatusVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatusVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatusVal, other.requestStatusVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtensionFee()).compareTo(other.isSetExtensionFee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtensionFee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extensionFee, other.extensionFee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtensionDate()).compareTo(other.isSetExtensionDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtensionDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extensionDate, other.extensionDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtensionDays()).compareTo(other.isSetExtensionDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtensionDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extensionDays, other.extensionDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserId()).compareTo(other.isSetPmUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserId, other.pmUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeAmount()).compareTo(other.isSetChargeAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeAmount, other.chargeAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("LoanExtensionBaseView(");
    boolean first = true;

    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNum:");
    if (this.projectNum == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusType:");
    sb.append(this.cusType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditAmt:");
    sb.append(this.creditAmt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserName:");
    if (this.pmUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.pmUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planOutLoanDt:");
    if (this.planOutLoanDt == null) {
      sb.append("null");
    } else {
      sb.append(this.planOutLoanDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planRepayLoanDt:");
    if (this.planRepayLoanDt == null) {
      sb.append("null");
    } else {
      sb.append(this.planRepayLoanDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatus:");
    if (this.requestStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestDttm:");
    if (this.requestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.requestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("extensionProjectId:");
    sb.append(this.extensionProjectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatusVal:");
    if (this.requestStatusVal == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStatusVal);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extensionFee:");
    sb.append(this.extensionFee);
    first = false;
    if (!first) sb.append(", ");
    sb.append("extensionDate:");
    if (this.extensionDate == null) {
      sb.append("null");
    } else {
      sb.append(this.extensionDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extensionDays:");
    sb.append(this.extensionDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserId:");
    sb.append(this.pmUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeAmount:");
    sb.append(this.chargeAmount);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LoanExtensionBaseViewStandardSchemeFactory implements SchemeFactory {
    public LoanExtensionBaseViewStandardScheme getScheme() {
      return new LoanExtensionBaseViewStandardScheme();
    }
  }

  private static class LoanExtensionBaseViewStandardScheme extends StandardScheme<LoanExtensionBaseView> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LoanExtensionBaseView struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNum = iprot.readString();
              struct.setProjectNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CUS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cusType = iprot.readI32();
              struct.setCusTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREDIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.creditAmt = iprot.readDouble();
              struct.setCreditAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PM_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmUserName = iprot.readString();
              struct.setPmUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PLAN_OUT_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planOutLoanDt = iprot.readString();
              struct.setPlanOutLoanDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PLAN_REPAY_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planRepayLoanDt = iprot.readString();
              struct.setPlanRepayLoanDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // REQUEST_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStatus = iprot.readString();
              struct.setRequestStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestDttm = iprot.readString();
              struct.setRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // EXTENSION_PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.extensionProjectId = iprot.readI32();
              struct.setExtensionProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // REQUEST_STATUS_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStatusVal = iprot.readString();
              struct.setRequestStatusValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EXTENSION_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.extensionFee = iprot.readDouble();
              struct.setExtensionFeeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // EXTENSION_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extensionDate = iprot.readString();
              struct.setExtensionDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // EXTENSION_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.extensionDays = iprot.readI32();
              struct.setExtensionDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pmUserId = iprot.readI32();
              struct.setPmUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CHARGE_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.chargeAmount = iprot.readDouble();
              struct.setChargeAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LoanExtensionBaseView struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      if (struct.projectNum != null) {
        oprot.writeFieldBegin(PROJECT_NUM_FIELD_DESC);
        oprot.writeString(struct.projectNum);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUS_TYPE_FIELD_DESC);
      oprot.writeI32(struct.cusType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREDIT_AMT_FIELD_DESC);
      oprot.writeDouble(struct.creditAmt);
      oprot.writeFieldEnd();
      if (struct.pmUserName != null) {
        oprot.writeFieldBegin(PM_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.pmUserName);
        oprot.writeFieldEnd();
      }
      if (struct.planOutLoanDt != null) {
        oprot.writeFieldBegin(PLAN_OUT_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planOutLoanDt);
        oprot.writeFieldEnd();
      }
      if (struct.planRepayLoanDt != null) {
        oprot.writeFieldBegin(PLAN_REPAY_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planRepayLoanDt);
        oprot.writeFieldEnd();
      }
      if (struct.requestStatus != null) {
        oprot.writeFieldBegin(REQUEST_STATUS_FIELD_DESC);
        oprot.writeString(struct.requestStatus);
        oprot.writeFieldEnd();
      }
      if (struct.requestDttm != null) {
        oprot.writeFieldBegin(REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.requestDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXTENSION_PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.extensionProjectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.requestStatusVal != null) {
        oprot.writeFieldBegin(REQUEST_STATUS_VAL_FIELD_DESC);
        oprot.writeString(struct.requestStatusVal);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXTENSION_FEE_FIELD_DESC);
      oprot.writeDouble(struct.extensionFee);
      oprot.writeFieldEnd();
      if (struct.extensionDate != null) {
        oprot.writeFieldBegin(EXTENSION_DATE_FIELD_DESC);
        oprot.writeString(struct.extensionDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXTENSION_DAYS_FIELD_DESC);
      oprot.writeI32(struct.extensionDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PM_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.pmUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHARGE_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.chargeAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LoanExtensionBaseViewTupleSchemeFactory implements SchemeFactory {
    public LoanExtensionBaseViewTupleScheme getScheme() {
      return new LoanExtensionBaseViewTupleScheme();
    }
  }

  private static class LoanExtensionBaseViewTupleScheme extends TupleScheme<LoanExtensionBaseView> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LoanExtensionBaseView struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProjectId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectName()) {
        optionals.set(1);
      }
      if (struct.isSetProjectNum()) {
        optionals.set(2);
      }
      if (struct.isSetCusType()) {
        optionals.set(3);
      }
      if (struct.isSetCreditAmt()) {
        optionals.set(4);
      }
      if (struct.isSetPmUserName()) {
        optionals.set(5);
      }
      if (struct.isSetPlanOutLoanDt()) {
        optionals.set(6);
      }
      if (struct.isSetPlanRepayLoanDt()) {
        optionals.set(7);
      }
      if (struct.isSetRequestStatus()) {
        optionals.set(8);
      }
      if (struct.isSetRequestDttm()) {
        optionals.set(9);
      }
      if (struct.isSetPid()) {
        optionals.set(10);
      }
      if (struct.isSetExtensionProjectId()) {
        optionals.set(11);
      }
      if (struct.isSetPage()) {
        optionals.set(12);
      }
      if (struct.isSetRows()) {
        optionals.set(13);
      }
      if (struct.isSetRequestStatusVal()) {
        optionals.set(14);
      }
      if (struct.isSetExtensionFee()) {
        optionals.set(15);
      }
      if (struct.isSetExtensionDate()) {
        optionals.set(16);
      }
      if (struct.isSetExtensionDays()) {
        optionals.set(17);
      }
      if (struct.isSetPmUserId()) {
        optionals.set(18);
      }
      if (struct.isSetChargeAmount()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetProjectNum()) {
        oprot.writeString(struct.projectNum);
      }
      if (struct.isSetCusType()) {
        oprot.writeI32(struct.cusType);
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeDouble(struct.creditAmt);
      }
      if (struct.isSetPmUserName()) {
        oprot.writeString(struct.pmUserName);
      }
      if (struct.isSetPlanOutLoanDt()) {
        oprot.writeString(struct.planOutLoanDt);
      }
      if (struct.isSetPlanRepayLoanDt()) {
        oprot.writeString(struct.planRepayLoanDt);
      }
      if (struct.isSetRequestStatus()) {
        oprot.writeString(struct.requestStatus);
      }
      if (struct.isSetRequestDttm()) {
        oprot.writeString(struct.requestDttm);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetExtensionProjectId()) {
        oprot.writeI32(struct.extensionProjectId);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetRequestStatusVal()) {
        oprot.writeString(struct.requestStatusVal);
      }
      if (struct.isSetExtensionFee()) {
        oprot.writeDouble(struct.extensionFee);
      }
      if (struct.isSetExtensionDate()) {
        oprot.writeString(struct.extensionDate);
      }
      if (struct.isSetExtensionDays()) {
        oprot.writeI32(struct.extensionDays);
      }
      if (struct.isSetPmUserId()) {
        oprot.writeI32(struct.pmUserId);
      }
      if (struct.isSetChargeAmount()) {
        oprot.writeDouble(struct.chargeAmount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LoanExtensionBaseView struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectNum = iprot.readString();
        struct.setProjectNumIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cusType = iprot.readI32();
        struct.setCusTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.creditAmt = iprot.readDouble();
        struct.setCreditAmtIsSet(true);
      }
      if (incoming.get(5)) {
        struct.pmUserName = iprot.readString();
        struct.setPmUserNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.planOutLoanDt = iprot.readString();
        struct.setPlanOutLoanDtIsSet(true);
      }
      if (incoming.get(7)) {
        struct.planRepayLoanDt = iprot.readString();
        struct.setPlanRepayLoanDtIsSet(true);
      }
      if (incoming.get(8)) {
        struct.requestStatus = iprot.readString();
        struct.setRequestStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.requestDttm = iprot.readString();
        struct.setRequestDttmIsSet(true);
      }
      if (incoming.get(10)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(11)) {
        struct.extensionProjectId = iprot.readI32();
        struct.setExtensionProjectIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(14)) {
        struct.requestStatusVal = iprot.readString();
        struct.setRequestStatusValIsSet(true);
      }
      if (incoming.get(15)) {
        struct.extensionFee = iprot.readDouble();
        struct.setExtensionFeeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.extensionDate = iprot.readString();
        struct.setExtensionDateIsSet(true);
      }
      if (incoming.get(17)) {
        struct.extensionDays = iprot.readI32();
        struct.setExtensionDaysIsSet(true);
      }
      if (incoming.get(18)) {
        struct.pmUserId = iprot.readI32();
        struct.setPmUserIdIsSet(true);
      }
      if (incoming.get(19)) {
        struct.chargeAmount = iprot.readDouble();
        struct.setChargeAmountIsSet(true);
      }
    }
  }

}

