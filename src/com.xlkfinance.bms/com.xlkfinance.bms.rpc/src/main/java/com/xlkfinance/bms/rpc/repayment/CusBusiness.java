/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.repayment;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-19")
public class CusBusiness implements org.apache.thrift.TBase<CusBusiness, CusBusiness._Fields>, java.io.Serializable, Cloneable, Comparable<CusBusiness> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CusBusiness");

  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("acctType", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ACCT_TYPE_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("acctTypeText", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREDIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("creditAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField PM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pmUserId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField PLAN_OUT_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planOutLoanDT", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PLAN_REPAY_LOAN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("planRepayLoanDT", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cusName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REQUEST_START_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStartDt", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REQUEST_END_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("requestEndDt", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ECO_TRADE_FIELD_DESC = new org.apache.thrift.protocol.TField("ecoTrade", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PMUSER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pmuserName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SETTLE_PROCESS_BEGIN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("settleProcessBeginDT", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField SETTLE_PROCESS_END_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("settleProcessEndDT", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField IS_COMPLETE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_complete", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField SETTLE_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("settleDT", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField LOAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("loanId", org.apache.thrift.protocol.TType.I32, (short)21);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CusBusinessStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CusBusinessTupleSchemeFactory());
  }

  public int pid; // required
  public String projectName; // required
  public int acctType; // required
  public String acctTypeText; // required
  public double creditAmt; // required
  public int pmUserId; // required
  public String planOutLoanDT; // required
  public String planRepayLoanDT; // required
  public String projectId; // required
  public String cusName; // required
  public String requestStartDt; // required
  public String requestEndDt; // required
  public String ecoTrade; // required
  public String pmuserName; // required
  public String settleProcessBeginDT; // required
  public String settleProcessEndDT; // required
  public String is_complete; // required
  public String settleDT; // required
  public int page; // required
  public int rows; // required
  public int loanId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PID((short)1, "pid"),
    PROJECT_NAME((short)2, "projectName"),
    ACCT_TYPE((short)3, "acctType"),
    ACCT_TYPE_TEXT((short)4, "acctTypeText"),
    CREDIT_AMT((short)5, "creditAmt"),
    PM_USER_ID((short)6, "pmUserId"),
    PLAN_OUT_LOAN_DT((short)7, "planOutLoanDT"),
    PLAN_REPAY_LOAN_DT((short)8, "planRepayLoanDT"),
    PROJECT_ID((short)9, "projectId"),
    CUS_NAME((short)10, "cusName"),
    REQUEST_START_DT((short)11, "requestStartDt"),
    REQUEST_END_DT((short)12, "requestEndDt"),
    ECO_TRADE((short)13, "ecoTrade"),
    PMUSER_NAME((short)14, "pmuserName"),
    SETTLE_PROCESS_BEGIN_DT((short)15, "settleProcessBeginDT"),
    SETTLE_PROCESS_END_DT((short)16, "settleProcessEndDT"),
    IS_COMPLETE((short)17, "is_complete"),
    SETTLE_DT((short)18, "settleDT"),
    PAGE((short)19, "page"),
    ROWS((short)20, "rows"),
    LOAN_ID((short)21, "loanId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PID
          return PID;
        case 2: // PROJECT_NAME
          return PROJECT_NAME;
        case 3: // ACCT_TYPE
          return ACCT_TYPE;
        case 4: // ACCT_TYPE_TEXT
          return ACCT_TYPE_TEXT;
        case 5: // CREDIT_AMT
          return CREDIT_AMT;
        case 6: // PM_USER_ID
          return PM_USER_ID;
        case 7: // PLAN_OUT_LOAN_DT
          return PLAN_OUT_LOAN_DT;
        case 8: // PLAN_REPAY_LOAN_DT
          return PLAN_REPAY_LOAN_DT;
        case 9: // PROJECT_ID
          return PROJECT_ID;
        case 10: // CUS_NAME
          return CUS_NAME;
        case 11: // REQUEST_START_DT
          return REQUEST_START_DT;
        case 12: // REQUEST_END_DT
          return REQUEST_END_DT;
        case 13: // ECO_TRADE
          return ECO_TRADE;
        case 14: // PMUSER_NAME
          return PMUSER_NAME;
        case 15: // SETTLE_PROCESS_BEGIN_DT
          return SETTLE_PROCESS_BEGIN_DT;
        case 16: // SETTLE_PROCESS_END_DT
          return SETTLE_PROCESS_END_DT;
        case 17: // IS_COMPLETE
          return IS_COMPLETE;
        case 18: // SETTLE_DT
          return SETTLE_DT;
        case 19: // PAGE
          return PAGE;
        case 20: // ROWS
          return ROWS;
        case 21: // LOAN_ID
          return LOAN_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ACCTTYPE_ISSET_ID = 1;
  private static final int __CREDITAMT_ISSET_ID = 2;
  private static final int __PMUSERID_ISSET_ID = 3;
  private static final int __PAGE_ISSET_ID = 4;
  private static final int __ROWS_ISSET_ID = 5;
  private static final int __LOANID_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("acctType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCT_TYPE_TEXT, new org.apache.thrift.meta_data.FieldMetaData("acctTypeText", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREDIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("creditAmt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("pmUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAN_OUT_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planOutLoanDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLAN_REPAY_LOAN_DT, new org.apache.thrift.meta_data.FieldMetaData("planRepayLoanDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("cusName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_START_DT, new org.apache.thrift.meta_data.FieldMetaData("requestStartDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_END_DT, new org.apache.thrift.meta_data.FieldMetaData("requestEndDt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ECO_TRADE, new org.apache.thrift.meta_data.FieldMetaData("ecoTrade", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PMUSER_NAME, new org.apache.thrift.meta_data.FieldMetaData("pmuserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_PROCESS_BEGIN_DT, new org.apache.thrift.meta_data.FieldMetaData("settleProcessBeginDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_PROCESS_END_DT, new org.apache.thrift.meta_data.FieldMetaData("settleProcessEndDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_COMPLETE, new org.apache.thrift.meta_data.FieldMetaData("is_complete", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_DT, new org.apache.thrift.meta_data.FieldMetaData("settleDT", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOAN_ID, new org.apache.thrift.meta_data.FieldMetaData("loanId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CusBusiness.class, metaDataMap);
  }

  public CusBusiness() {
  }

  public CusBusiness(
    int pid,
    String projectName,
    int acctType,
    String acctTypeText,
    double creditAmt,
    int pmUserId,
    String planOutLoanDT,
    String planRepayLoanDT,
    String projectId,
    String cusName,
    String requestStartDt,
    String requestEndDt,
    String ecoTrade,
    String pmuserName,
    String settleProcessBeginDT,
    String settleProcessEndDT,
    String is_complete,
    String settleDT,
    int page,
    int rows,
    int loanId)
  {
    this();
    this.pid = pid;
    setPidIsSet(true);
    this.projectName = projectName;
    this.acctType = acctType;
    setAcctTypeIsSet(true);
    this.acctTypeText = acctTypeText;
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    this.planOutLoanDT = planOutLoanDT;
    this.planRepayLoanDT = planRepayLoanDT;
    this.projectId = projectId;
    this.cusName = cusName;
    this.requestStartDt = requestStartDt;
    this.requestEndDt = requestEndDt;
    this.ecoTrade = ecoTrade;
    this.pmuserName = pmuserName;
    this.settleProcessBeginDT = settleProcessBeginDT;
    this.settleProcessEndDT = settleProcessEndDT;
    this.is_complete = is_complete;
    this.settleDT = settleDT;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.loanId = loanId;
    setLoanIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CusBusiness(CusBusiness other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pid = other.pid;
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.acctType = other.acctType;
    if (other.isSetAcctTypeText()) {
      this.acctTypeText = other.acctTypeText;
    }
    this.creditAmt = other.creditAmt;
    this.pmUserId = other.pmUserId;
    if (other.isSetPlanOutLoanDT()) {
      this.planOutLoanDT = other.planOutLoanDT;
    }
    if (other.isSetPlanRepayLoanDT()) {
      this.planRepayLoanDT = other.planRepayLoanDT;
    }
    if (other.isSetProjectId()) {
      this.projectId = other.projectId;
    }
    if (other.isSetCusName()) {
      this.cusName = other.cusName;
    }
    if (other.isSetRequestStartDt()) {
      this.requestStartDt = other.requestStartDt;
    }
    if (other.isSetRequestEndDt()) {
      this.requestEndDt = other.requestEndDt;
    }
    if (other.isSetEcoTrade()) {
      this.ecoTrade = other.ecoTrade;
    }
    if (other.isSetPmuserName()) {
      this.pmuserName = other.pmuserName;
    }
    if (other.isSetSettleProcessBeginDT()) {
      this.settleProcessBeginDT = other.settleProcessBeginDT;
    }
    if (other.isSetSettleProcessEndDT()) {
      this.settleProcessEndDT = other.settleProcessEndDT;
    }
    if (other.isSetIs_complete()) {
      this.is_complete = other.is_complete;
    }
    if (other.isSetSettleDT()) {
      this.settleDT = other.settleDT;
    }
    this.page = other.page;
    this.rows = other.rows;
    this.loanId = other.loanId;
  }

  public CusBusiness deepCopy() {
    return new CusBusiness(this);
  }

  @Override
  public void clear() {
    setPidIsSet(false);
    this.pid = 0;
    this.projectName = null;
    setAcctTypeIsSet(false);
    this.acctType = 0;
    this.acctTypeText = null;
    setCreditAmtIsSet(false);
    this.creditAmt = 0.0;
    setPmUserIdIsSet(false);
    this.pmUserId = 0;
    this.planOutLoanDT = null;
    this.planRepayLoanDT = null;
    this.projectId = null;
    this.cusName = null;
    this.requestStartDt = null;
    this.requestEndDt = null;
    this.ecoTrade = null;
    this.pmuserName = null;
    this.settleProcessBeginDT = null;
    this.settleProcessEndDT = null;
    this.is_complete = null;
    this.settleDT = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    setLoanIdIsSet(false);
    this.loanId = 0;
  }

  public int getPid() {
    return this.pid;
  }

  public CusBusiness setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getProjectName() {
    return this.projectName;
  }

  public CusBusiness setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getAcctType() {
    return this.acctType;
  }

  public CusBusiness setAcctType(int acctType) {
    this.acctType = acctType;
    setAcctTypeIsSet(true);
    return this;
  }

  public void unsetAcctType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCTTYPE_ISSET_ID);
  }

  /** Returns true if field acctType is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctType() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCTTYPE_ISSET_ID);
  }

  public void setAcctTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCTTYPE_ISSET_ID, value);
  }

  public String getAcctTypeText() {
    return this.acctTypeText;
  }

  public CusBusiness setAcctTypeText(String acctTypeText) {
    this.acctTypeText = acctTypeText;
    return this;
  }

  public void unsetAcctTypeText() {
    this.acctTypeText = null;
  }

  /** Returns true if field acctTypeText is set (has been assigned a value) and false otherwise */
  public boolean isSetAcctTypeText() {
    return this.acctTypeText != null;
  }

  public void setAcctTypeTextIsSet(boolean value) {
    if (!value) {
      this.acctTypeText = null;
    }
  }

  public double getCreditAmt() {
    return this.creditAmt;
  }

  public CusBusiness setCreditAmt(double creditAmt) {
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    return this;
  }

  public void unsetCreditAmt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  /** Returns true if field creditAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditAmt() {
    return EncodingUtils.testBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  public void setCreditAmtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREDITAMT_ISSET_ID, value);
  }

  public int getPmUserId() {
    return this.pmUserId;
  }

  public CusBusiness setPmUserId(int pmUserId) {
    this.pmUserId = pmUserId;
    setPmUserIdIsSet(true);
    return this;
  }

  public void unsetPmUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  /** Returns true if field pmUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPmUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __PMUSERID_ISSET_ID);
  }

  public void setPmUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PMUSERID_ISSET_ID, value);
  }

  public String getPlanOutLoanDT() {
    return this.planOutLoanDT;
  }

  public CusBusiness setPlanOutLoanDT(String planOutLoanDT) {
    this.planOutLoanDT = planOutLoanDT;
    return this;
  }

  public void unsetPlanOutLoanDT() {
    this.planOutLoanDT = null;
  }

  /** Returns true if field planOutLoanDT is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanOutLoanDT() {
    return this.planOutLoanDT != null;
  }

  public void setPlanOutLoanDTIsSet(boolean value) {
    if (!value) {
      this.planOutLoanDT = null;
    }
  }

  public String getPlanRepayLoanDT() {
    return this.planRepayLoanDT;
  }

  public CusBusiness setPlanRepayLoanDT(String planRepayLoanDT) {
    this.planRepayLoanDT = planRepayLoanDT;
    return this;
  }

  public void unsetPlanRepayLoanDT() {
    this.planRepayLoanDT = null;
  }

  /** Returns true if field planRepayLoanDT is set (has been assigned a value) and false otherwise */
  public boolean isSetPlanRepayLoanDT() {
    return this.planRepayLoanDT != null;
  }

  public void setPlanRepayLoanDTIsSet(boolean value) {
    if (!value) {
      this.planRepayLoanDT = null;
    }
  }

  public String getProjectId() {
    return this.projectId;
  }

  public CusBusiness setProjectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  public void unsetProjectId() {
    this.projectId = null;
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return this.projectId != null;
  }

  public void setProjectIdIsSet(boolean value) {
    if (!value) {
      this.projectId = null;
    }
  }

  public String getCusName() {
    return this.cusName;
  }

  public CusBusiness setCusName(String cusName) {
    this.cusName = cusName;
    return this;
  }

  public void unsetCusName() {
    this.cusName = null;
  }

  /** Returns true if field cusName is set (has been assigned a value) and false otherwise */
  public boolean isSetCusName() {
    return this.cusName != null;
  }

  public void setCusNameIsSet(boolean value) {
    if (!value) {
      this.cusName = null;
    }
  }

  public String getRequestStartDt() {
    return this.requestStartDt;
  }

  public CusBusiness setRequestStartDt(String requestStartDt) {
    this.requestStartDt = requestStartDt;
    return this;
  }

  public void unsetRequestStartDt() {
    this.requestStartDt = null;
  }

  /** Returns true if field requestStartDt is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStartDt() {
    return this.requestStartDt != null;
  }

  public void setRequestStartDtIsSet(boolean value) {
    if (!value) {
      this.requestStartDt = null;
    }
  }

  public String getRequestEndDt() {
    return this.requestEndDt;
  }

  public CusBusiness setRequestEndDt(String requestEndDt) {
    this.requestEndDt = requestEndDt;
    return this;
  }

  public void unsetRequestEndDt() {
    this.requestEndDt = null;
  }

  /** Returns true if field requestEndDt is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestEndDt() {
    return this.requestEndDt != null;
  }

  public void setRequestEndDtIsSet(boolean value) {
    if (!value) {
      this.requestEndDt = null;
    }
  }

  public String getEcoTrade() {
    return this.ecoTrade;
  }

  public CusBusiness setEcoTrade(String ecoTrade) {
    this.ecoTrade = ecoTrade;
    return this;
  }

  public void unsetEcoTrade() {
    this.ecoTrade = null;
  }

  /** Returns true if field ecoTrade is set (has been assigned a value) and false otherwise */
  public boolean isSetEcoTrade() {
    return this.ecoTrade != null;
  }

  public void setEcoTradeIsSet(boolean value) {
    if (!value) {
      this.ecoTrade = null;
    }
  }

  public String getPmuserName() {
    return this.pmuserName;
  }

  public CusBusiness setPmuserName(String pmuserName) {
    this.pmuserName = pmuserName;
    return this;
  }

  public void unsetPmuserName() {
    this.pmuserName = null;
  }

  /** Returns true if field pmuserName is set (has been assigned a value) and false otherwise */
  public boolean isSetPmuserName() {
    return this.pmuserName != null;
  }

  public void setPmuserNameIsSet(boolean value) {
    if (!value) {
      this.pmuserName = null;
    }
  }

  public String getSettleProcessBeginDT() {
    return this.settleProcessBeginDT;
  }

  public CusBusiness setSettleProcessBeginDT(String settleProcessBeginDT) {
    this.settleProcessBeginDT = settleProcessBeginDT;
    return this;
  }

  public void unsetSettleProcessBeginDT() {
    this.settleProcessBeginDT = null;
  }

  /** Returns true if field settleProcessBeginDT is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleProcessBeginDT() {
    return this.settleProcessBeginDT != null;
  }

  public void setSettleProcessBeginDTIsSet(boolean value) {
    if (!value) {
      this.settleProcessBeginDT = null;
    }
  }

  public String getSettleProcessEndDT() {
    return this.settleProcessEndDT;
  }

  public CusBusiness setSettleProcessEndDT(String settleProcessEndDT) {
    this.settleProcessEndDT = settleProcessEndDT;
    return this;
  }

  public void unsetSettleProcessEndDT() {
    this.settleProcessEndDT = null;
  }

  /** Returns true if field settleProcessEndDT is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleProcessEndDT() {
    return this.settleProcessEndDT != null;
  }

  public void setSettleProcessEndDTIsSet(boolean value) {
    if (!value) {
      this.settleProcessEndDT = null;
    }
  }

  public String getIs_complete() {
    return this.is_complete;
  }

  public CusBusiness setIs_complete(String is_complete) {
    this.is_complete = is_complete;
    return this;
  }

  public void unsetIs_complete() {
    this.is_complete = null;
  }

  /** Returns true if field is_complete is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_complete() {
    return this.is_complete != null;
  }

  public void setIs_completeIsSet(boolean value) {
    if (!value) {
      this.is_complete = null;
    }
  }

  public String getSettleDT() {
    return this.settleDT;
  }

  public CusBusiness setSettleDT(String settleDT) {
    this.settleDT = settleDT;
    return this;
  }

  public void unsetSettleDT() {
    this.settleDT = null;
  }

  /** Returns true if field settleDT is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleDT() {
    return this.settleDT != null;
  }

  public void setSettleDTIsSet(boolean value) {
    if (!value) {
      this.settleDT = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public CusBusiness setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public CusBusiness setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public int getLoanId() {
    return this.loanId;
  }

  public CusBusiness setLoanId(int loanId) {
    this.loanId = loanId;
    setLoanIdIsSet(true);
    return this;
  }

  public void unsetLoanId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANID_ISSET_ID);
  }

  /** Returns true if field loanId is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanId() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANID_ISSET_ID);
  }

  public void setLoanIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case ACCT_TYPE:
      if (value == null) {
        unsetAcctType();
      } else {
        setAcctType((Integer)value);
      }
      break;

    case ACCT_TYPE_TEXT:
      if (value == null) {
        unsetAcctTypeText();
      } else {
        setAcctTypeText((String)value);
      }
      break;

    case CREDIT_AMT:
      if (value == null) {
        unsetCreditAmt();
      } else {
        setCreditAmt((Double)value);
      }
      break;

    case PM_USER_ID:
      if (value == null) {
        unsetPmUserId();
      } else {
        setPmUserId((Integer)value);
      }
      break;

    case PLAN_OUT_LOAN_DT:
      if (value == null) {
        unsetPlanOutLoanDT();
      } else {
        setPlanOutLoanDT((String)value);
      }
      break;

    case PLAN_REPAY_LOAN_DT:
      if (value == null) {
        unsetPlanRepayLoanDT();
      } else {
        setPlanRepayLoanDT((String)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((String)value);
      }
      break;

    case CUS_NAME:
      if (value == null) {
        unsetCusName();
      } else {
        setCusName((String)value);
      }
      break;

    case REQUEST_START_DT:
      if (value == null) {
        unsetRequestStartDt();
      } else {
        setRequestStartDt((String)value);
      }
      break;

    case REQUEST_END_DT:
      if (value == null) {
        unsetRequestEndDt();
      } else {
        setRequestEndDt((String)value);
      }
      break;

    case ECO_TRADE:
      if (value == null) {
        unsetEcoTrade();
      } else {
        setEcoTrade((String)value);
      }
      break;

    case PMUSER_NAME:
      if (value == null) {
        unsetPmuserName();
      } else {
        setPmuserName((String)value);
      }
      break;

    case SETTLE_PROCESS_BEGIN_DT:
      if (value == null) {
        unsetSettleProcessBeginDT();
      } else {
        setSettleProcessBeginDT((String)value);
      }
      break;

    case SETTLE_PROCESS_END_DT:
      if (value == null) {
        unsetSettleProcessEndDT();
      } else {
        setSettleProcessEndDT((String)value);
      }
      break;

    case IS_COMPLETE:
      if (value == null) {
        unsetIs_complete();
      } else {
        setIs_complete((String)value);
      }
      break;

    case SETTLE_DT:
      if (value == null) {
        unsetSettleDT();
      } else {
        setSettleDT((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case LOAN_ID:
      if (value == null) {
        unsetLoanId();
      } else {
        setLoanId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PID:
      return Integer.valueOf(getPid());

    case PROJECT_NAME:
      return getProjectName();

    case ACCT_TYPE:
      return Integer.valueOf(getAcctType());

    case ACCT_TYPE_TEXT:
      return getAcctTypeText();

    case CREDIT_AMT:
      return Double.valueOf(getCreditAmt());

    case PM_USER_ID:
      return Integer.valueOf(getPmUserId());

    case PLAN_OUT_LOAN_DT:
      return getPlanOutLoanDT();

    case PLAN_REPAY_LOAN_DT:
      return getPlanRepayLoanDT();

    case PROJECT_ID:
      return getProjectId();

    case CUS_NAME:
      return getCusName();

    case REQUEST_START_DT:
      return getRequestStartDt();

    case REQUEST_END_DT:
      return getRequestEndDt();

    case ECO_TRADE:
      return getEcoTrade();

    case PMUSER_NAME:
      return getPmuserName();

    case SETTLE_PROCESS_BEGIN_DT:
      return getSettleProcessBeginDT();

    case SETTLE_PROCESS_END_DT:
      return getSettleProcessEndDT();

    case IS_COMPLETE:
      return getIs_complete();

    case SETTLE_DT:
      return getSettleDT();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case LOAN_ID:
      return Integer.valueOf(getLoanId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PID:
      return isSetPid();
    case PROJECT_NAME:
      return isSetProjectName();
    case ACCT_TYPE:
      return isSetAcctType();
    case ACCT_TYPE_TEXT:
      return isSetAcctTypeText();
    case CREDIT_AMT:
      return isSetCreditAmt();
    case PM_USER_ID:
      return isSetPmUserId();
    case PLAN_OUT_LOAN_DT:
      return isSetPlanOutLoanDT();
    case PLAN_REPAY_LOAN_DT:
      return isSetPlanRepayLoanDT();
    case PROJECT_ID:
      return isSetProjectId();
    case CUS_NAME:
      return isSetCusName();
    case REQUEST_START_DT:
      return isSetRequestStartDt();
    case REQUEST_END_DT:
      return isSetRequestEndDt();
    case ECO_TRADE:
      return isSetEcoTrade();
    case PMUSER_NAME:
      return isSetPmuserName();
    case SETTLE_PROCESS_BEGIN_DT:
      return isSetSettleProcessBeginDT();
    case SETTLE_PROCESS_END_DT:
      return isSetSettleProcessEndDT();
    case IS_COMPLETE:
      return isSetIs_complete();
    case SETTLE_DT:
      return isSetSettleDT();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case LOAN_ID:
      return isSetLoanId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CusBusiness)
      return this.equals((CusBusiness)that);
    return false;
  }

  public boolean equals(CusBusiness that) {
    if (that == null)
      return false;

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_acctType = true;
    boolean that_present_acctType = true;
    if (this_present_acctType || that_present_acctType) {
      if (!(this_present_acctType && that_present_acctType))
        return false;
      if (this.acctType != that.acctType)
        return false;
    }

    boolean this_present_acctTypeText = true && this.isSetAcctTypeText();
    boolean that_present_acctTypeText = true && that.isSetAcctTypeText();
    if (this_present_acctTypeText || that_present_acctTypeText) {
      if (!(this_present_acctTypeText && that_present_acctTypeText))
        return false;
      if (!this.acctTypeText.equals(that.acctTypeText))
        return false;
    }

    boolean this_present_creditAmt = true;
    boolean that_present_creditAmt = true;
    if (this_present_creditAmt || that_present_creditAmt) {
      if (!(this_present_creditAmt && that_present_creditAmt))
        return false;
      if (this.creditAmt != that.creditAmt)
        return false;
    }

    boolean this_present_pmUserId = true;
    boolean that_present_pmUserId = true;
    if (this_present_pmUserId || that_present_pmUserId) {
      if (!(this_present_pmUserId && that_present_pmUserId))
        return false;
      if (this.pmUserId != that.pmUserId)
        return false;
    }

    boolean this_present_planOutLoanDT = true && this.isSetPlanOutLoanDT();
    boolean that_present_planOutLoanDT = true && that.isSetPlanOutLoanDT();
    if (this_present_planOutLoanDT || that_present_planOutLoanDT) {
      if (!(this_present_planOutLoanDT && that_present_planOutLoanDT))
        return false;
      if (!this.planOutLoanDT.equals(that.planOutLoanDT))
        return false;
    }

    boolean this_present_planRepayLoanDT = true && this.isSetPlanRepayLoanDT();
    boolean that_present_planRepayLoanDT = true && that.isSetPlanRepayLoanDT();
    if (this_present_planRepayLoanDT || that_present_planRepayLoanDT) {
      if (!(this_present_planRepayLoanDT && that_present_planRepayLoanDT))
        return false;
      if (!this.planRepayLoanDT.equals(that.planRepayLoanDT))
        return false;
    }

    boolean this_present_projectId = true && this.isSetProjectId();
    boolean that_present_projectId = true && that.isSetProjectId();
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (!this.projectId.equals(that.projectId))
        return false;
    }

    boolean this_present_cusName = true && this.isSetCusName();
    boolean that_present_cusName = true && that.isSetCusName();
    if (this_present_cusName || that_present_cusName) {
      if (!(this_present_cusName && that_present_cusName))
        return false;
      if (!this.cusName.equals(that.cusName))
        return false;
    }

    boolean this_present_requestStartDt = true && this.isSetRequestStartDt();
    boolean that_present_requestStartDt = true && that.isSetRequestStartDt();
    if (this_present_requestStartDt || that_present_requestStartDt) {
      if (!(this_present_requestStartDt && that_present_requestStartDt))
        return false;
      if (!this.requestStartDt.equals(that.requestStartDt))
        return false;
    }

    boolean this_present_requestEndDt = true && this.isSetRequestEndDt();
    boolean that_present_requestEndDt = true && that.isSetRequestEndDt();
    if (this_present_requestEndDt || that_present_requestEndDt) {
      if (!(this_present_requestEndDt && that_present_requestEndDt))
        return false;
      if (!this.requestEndDt.equals(that.requestEndDt))
        return false;
    }

    boolean this_present_ecoTrade = true && this.isSetEcoTrade();
    boolean that_present_ecoTrade = true && that.isSetEcoTrade();
    if (this_present_ecoTrade || that_present_ecoTrade) {
      if (!(this_present_ecoTrade && that_present_ecoTrade))
        return false;
      if (!this.ecoTrade.equals(that.ecoTrade))
        return false;
    }

    boolean this_present_pmuserName = true && this.isSetPmuserName();
    boolean that_present_pmuserName = true && that.isSetPmuserName();
    if (this_present_pmuserName || that_present_pmuserName) {
      if (!(this_present_pmuserName && that_present_pmuserName))
        return false;
      if (!this.pmuserName.equals(that.pmuserName))
        return false;
    }

    boolean this_present_settleProcessBeginDT = true && this.isSetSettleProcessBeginDT();
    boolean that_present_settleProcessBeginDT = true && that.isSetSettleProcessBeginDT();
    if (this_present_settleProcessBeginDT || that_present_settleProcessBeginDT) {
      if (!(this_present_settleProcessBeginDT && that_present_settleProcessBeginDT))
        return false;
      if (!this.settleProcessBeginDT.equals(that.settleProcessBeginDT))
        return false;
    }

    boolean this_present_settleProcessEndDT = true && this.isSetSettleProcessEndDT();
    boolean that_present_settleProcessEndDT = true && that.isSetSettleProcessEndDT();
    if (this_present_settleProcessEndDT || that_present_settleProcessEndDT) {
      if (!(this_present_settleProcessEndDT && that_present_settleProcessEndDT))
        return false;
      if (!this.settleProcessEndDT.equals(that.settleProcessEndDT))
        return false;
    }

    boolean this_present_is_complete = true && this.isSetIs_complete();
    boolean that_present_is_complete = true && that.isSetIs_complete();
    if (this_present_is_complete || that_present_is_complete) {
      if (!(this_present_is_complete && that_present_is_complete))
        return false;
      if (!this.is_complete.equals(that.is_complete))
        return false;
    }

    boolean this_present_settleDT = true && this.isSetSettleDT();
    boolean that_present_settleDT = true && that.isSetSettleDT();
    if (this_present_settleDT || that_present_settleDT) {
      if (!(this_present_settleDT && that_present_settleDT))
        return false;
      if (!this.settleDT.equals(that.settleDT))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_loanId = true;
    boolean that_present_loanId = true;
    if (this_present_loanId || that_present_loanId) {
      if (!(this_present_loanId && that_present_loanId))
        return false;
      if (this.loanId != that.loanId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pid = true;
    list.add(present_pid);
    if (present_pid)
      list.add(pid);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_acctType = true;
    list.add(present_acctType);
    if (present_acctType)
      list.add(acctType);

    boolean present_acctTypeText = true && (isSetAcctTypeText());
    list.add(present_acctTypeText);
    if (present_acctTypeText)
      list.add(acctTypeText);

    boolean present_creditAmt = true;
    list.add(present_creditAmt);
    if (present_creditAmt)
      list.add(creditAmt);

    boolean present_pmUserId = true;
    list.add(present_pmUserId);
    if (present_pmUserId)
      list.add(pmUserId);

    boolean present_planOutLoanDT = true && (isSetPlanOutLoanDT());
    list.add(present_planOutLoanDT);
    if (present_planOutLoanDT)
      list.add(planOutLoanDT);

    boolean present_planRepayLoanDT = true && (isSetPlanRepayLoanDT());
    list.add(present_planRepayLoanDT);
    if (present_planRepayLoanDT)
      list.add(planRepayLoanDT);

    boolean present_projectId = true && (isSetProjectId());
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_cusName = true && (isSetCusName());
    list.add(present_cusName);
    if (present_cusName)
      list.add(cusName);

    boolean present_requestStartDt = true && (isSetRequestStartDt());
    list.add(present_requestStartDt);
    if (present_requestStartDt)
      list.add(requestStartDt);

    boolean present_requestEndDt = true && (isSetRequestEndDt());
    list.add(present_requestEndDt);
    if (present_requestEndDt)
      list.add(requestEndDt);

    boolean present_ecoTrade = true && (isSetEcoTrade());
    list.add(present_ecoTrade);
    if (present_ecoTrade)
      list.add(ecoTrade);

    boolean present_pmuserName = true && (isSetPmuserName());
    list.add(present_pmuserName);
    if (present_pmuserName)
      list.add(pmuserName);

    boolean present_settleProcessBeginDT = true && (isSetSettleProcessBeginDT());
    list.add(present_settleProcessBeginDT);
    if (present_settleProcessBeginDT)
      list.add(settleProcessBeginDT);

    boolean present_settleProcessEndDT = true && (isSetSettleProcessEndDT());
    list.add(present_settleProcessEndDT);
    if (present_settleProcessEndDT)
      list.add(settleProcessEndDT);

    boolean present_is_complete = true && (isSetIs_complete());
    list.add(present_is_complete);
    if (present_is_complete)
      list.add(is_complete);

    boolean present_settleDT = true && (isSetSettleDT());
    list.add(present_settleDT);
    if (present_settleDT)
      list.add(settleDT);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_loanId = true;
    list.add(present_loanId);
    if (present_loanId)
      list.add(loanId);

    return list.hashCode();
  }

  @Override
  public int compareTo(CusBusiness other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctType()).compareTo(other.isSetAcctType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctType, other.acctType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcctTypeText()).compareTo(other.isSetAcctTypeText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcctTypeText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acctTypeText, other.acctTypeText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditAmt()).compareTo(other.isSetCreditAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditAmt, other.creditAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmUserId()).compareTo(other.isSetPmUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmUserId, other.pmUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanOutLoanDT()).compareTo(other.isSetPlanOutLoanDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanOutLoanDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planOutLoanDT, other.planOutLoanDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlanRepayLoanDT()).compareTo(other.isSetPlanRepayLoanDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlanRepayLoanDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.planRepayLoanDT, other.planRepayLoanDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCusName()).compareTo(other.isSetCusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cusName, other.cusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStartDt()).compareTo(other.isSetRequestStartDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStartDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStartDt, other.requestStartDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestEndDt()).compareTo(other.isSetRequestEndDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestEndDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestEndDt, other.requestEndDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEcoTrade()).compareTo(other.isSetEcoTrade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEcoTrade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ecoTrade, other.ecoTrade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPmuserName()).compareTo(other.isSetPmuserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPmuserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pmuserName, other.pmuserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleProcessBeginDT()).compareTo(other.isSetSettleProcessBeginDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleProcessBeginDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleProcessBeginDT, other.settleProcessBeginDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleProcessEndDT()).compareTo(other.isSetSettleProcessEndDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleProcessEndDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleProcessEndDT, other.settleProcessEndDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_complete()).compareTo(other.isSetIs_complete());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_complete()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_complete, other.is_complete);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleDT()).compareTo(other.isSetSettleDT());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleDT()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleDT, other.settleDT);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanId()).compareTo(other.isSetLoanId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanId, other.loanId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CusBusiness(");
    boolean first = true;

    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("acctType:");
    sb.append(this.acctType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("acctTypeText:");
    if (this.acctTypeText == null) {
      sb.append("null");
    } else {
      sb.append(this.acctTypeText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditAmt:");
    sb.append(this.creditAmt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmUserId:");
    sb.append(this.pmUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("planOutLoanDT:");
    if (this.planOutLoanDT == null) {
      sb.append("null");
    } else {
      sb.append(this.planOutLoanDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("planRepayLoanDT:");
    if (this.planRepayLoanDT == null) {
      sb.append("null");
    } else {
      sb.append(this.planRepayLoanDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    if (this.projectId == null) {
      sb.append("null");
    } else {
      sb.append(this.projectId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cusName:");
    if (this.cusName == null) {
      sb.append("null");
    } else {
      sb.append(this.cusName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStartDt:");
    if (this.requestStartDt == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStartDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestEndDt:");
    if (this.requestEndDt == null) {
      sb.append("null");
    } else {
      sb.append(this.requestEndDt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ecoTrade:");
    if (this.ecoTrade == null) {
      sb.append("null");
    } else {
      sb.append(this.ecoTrade);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pmuserName:");
    if (this.pmuserName == null) {
      sb.append("null");
    } else {
      sb.append(this.pmuserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleProcessBeginDT:");
    if (this.settleProcessBeginDT == null) {
      sb.append("null");
    } else {
      sb.append(this.settleProcessBeginDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleProcessEndDT:");
    if (this.settleProcessEndDT == null) {
      sb.append("null");
    } else {
      sb.append(this.settleProcessEndDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_complete:");
    if (this.is_complete == null) {
      sb.append("null");
    } else {
      sb.append(this.is_complete);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleDT:");
    if (this.settleDT == null) {
      sb.append("null");
    } else {
      sb.append(this.settleDT);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanId:");
    sb.append(this.loanId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CusBusinessStandardSchemeFactory implements SchemeFactory {
    public CusBusinessStandardScheme getScheme() {
      return new CusBusinessStandardScheme();
    }
  }

  private static class CusBusinessStandardScheme extends StandardScheme<CusBusiness> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CusBusiness struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.acctType = iprot.readI32();
              struct.setAcctTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACCT_TYPE_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.acctTypeText = iprot.readString();
              struct.setAcctTypeTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREDIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.creditAmt = iprot.readDouble();
              struct.setCreditAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pmUserId = iprot.readI32();
              struct.setPmUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PLAN_OUT_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planOutLoanDT = iprot.readString();
              struct.setPlanOutLoanDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PLAN_REPAY_LOAN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.planRepayLoanDT = iprot.readString();
              struct.setPlanRepayLoanDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectId = iprot.readString();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cusName = iprot.readString();
              struct.setCusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REQUEST_START_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStartDt = iprot.readString();
              struct.setRequestStartDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REQUEST_END_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestEndDt = iprot.readString();
              struct.setRequestEndDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ECO_TRADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ecoTrade = iprot.readString();
              struct.setEcoTradeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PMUSER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pmuserName = iprot.readString();
              struct.setPmuserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SETTLE_PROCESS_BEGIN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleProcessBeginDT = iprot.readString();
              struct.setSettleProcessBeginDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SETTLE_PROCESS_END_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleProcessEndDT = iprot.readString();
              struct.setSettleProcessEndDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IS_COMPLETE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.is_complete = iprot.readString();
              struct.setIs_completeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // SETTLE_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleDT = iprot.readString();
              struct.setSettleDTIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // LOAN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loanId = iprot.readI32();
              struct.setLoanIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CusBusiness struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.acctType);
      oprot.writeFieldEnd();
      if (struct.acctTypeText != null) {
        oprot.writeFieldBegin(ACCT_TYPE_TEXT_FIELD_DESC);
        oprot.writeString(struct.acctTypeText);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREDIT_AMT_FIELD_DESC);
      oprot.writeDouble(struct.creditAmt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PM_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.pmUserId);
      oprot.writeFieldEnd();
      if (struct.planOutLoanDT != null) {
        oprot.writeFieldBegin(PLAN_OUT_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planOutLoanDT);
        oprot.writeFieldEnd();
      }
      if (struct.planRepayLoanDT != null) {
        oprot.writeFieldBegin(PLAN_REPAY_LOAN_DT_FIELD_DESC);
        oprot.writeString(struct.planRepayLoanDT);
        oprot.writeFieldEnd();
      }
      if (struct.projectId != null) {
        oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
        oprot.writeString(struct.projectId);
        oprot.writeFieldEnd();
      }
      if (struct.cusName != null) {
        oprot.writeFieldBegin(CUS_NAME_FIELD_DESC);
        oprot.writeString(struct.cusName);
        oprot.writeFieldEnd();
      }
      if (struct.requestStartDt != null) {
        oprot.writeFieldBegin(REQUEST_START_DT_FIELD_DESC);
        oprot.writeString(struct.requestStartDt);
        oprot.writeFieldEnd();
      }
      if (struct.requestEndDt != null) {
        oprot.writeFieldBegin(REQUEST_END_DT_FIELD_DESC);
        oprot.writeString(struct.requestEndDt);
        oprot.writeFieldEnd();
      }
      if (struct.ecoTrade != null) {
        oprot.writeFieldBegin(ECO_TRADE_FIELD_DESC);
        oprot.writeString(struct.ecoTrade);
        oprot.writeFieldEnd();
      }
      if (struct.pmuserName != null) {
        oprot.writeFieldBegin(PMUSER_NAME_FIELD_DESC);
        oprot.writeString(struct.pmuserName);
        oprot.writeFieldEnd();
      }
      if (struct.settleProcessBeginDT != null) {
        oprot.writeFieldBegin(SETTLE_PROCESS_BEGIN_DT_FIELD_DESC);
        oprot.writeString(struct.settleProcessBeginDT);
        oprot.writeFieldEnd();
      }
      if (struct.settleProcessEndDT != null) {
        oprot.writeFieldBegin(SETTLE_PROCESS_END_DT_FIELD_DESC);
        oprot.writeString(struct.settleProcessEndDT);
        oprot.writeFieldEnd();
      }
      if (struct.is_complete != null) {
        oprot.writeFieldBegin(IS_COMPLETE_FIELD_DESC);
        oprot.writeString(struct.is_complete);
        oprot.writeFieldEnd();
      }
      if (struct.settleDT != null) {
        oprot.writeFieldBegin(SETTLE_DT_FIELD_DESC);
        oprot.writeString(struct.settleDT);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_ID_FIELD_DESC);
      oprot.writeI32(struct.loanId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CusBusinessTupleSchemeFactory implements SchemeFactory {
    public CusBusinessTupleScheme getScheme() {
      return new CusBusinessTupleScheme();
    }
  }

  private static class CusBusinessTupleScheme extends TupleScheme<CusBusiness> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CusBusiness struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPid()) {
        optionals.set(0);
      }
      if (struct.isSetProjectName()) {
        optionals.set(1);
      }
      if (struct.isSetAcctType()) {
        optionals.set(2);
      }
      if (struct.isSetAcctTypeText()) {
        optionals.set(3);
      }
      if (struct.isSetCreditAmt()) {
        optionals.set(4);
      }
      if (struct.isSetPmUserId()) {
        optionals.set(5);
      }
      if (struct.isSetPlanOutLoanDT()) {
        optionals.set(6);
      }
      if (struct.isSetPlanRepayLoanDT()) {
        optionals.set(7);
      }
      if (struct.isSetProjectId()) {
        optionals.set(8);
      }
      if (struct.isSetCusName()) {
        optionals.set(9);
      }
      if (struct.isSetRequestStartDt()) {
        optionals.set(10);
      }
      if (struct.isSetRequestEndDt()) {
        optionals.set(11);
      }
      if (struct.isSetEcoTrade()) {
        optionals.set(12);
      }
      if (struct.isSetPmuserName()) {
        optionals.set(13);
      }
      if (struct.isSetSettleProcessBeginDT()) {
        optionals.set(14);
      }
      if (struct.isSetSettleProcessEndDT()) {
        optionals.set(15);
      }
      if (struct.isSetIs_complete()) {
        optionals.set(16);
      }
      if (struct.isSetSettleDT()) {
        optionals.set(17);
      }
      if (struct.isSetPage()) {
        optionals.set(18);
      }
      if (struct.isSetRows()) {
        optionals.set(19);
      }
      if (struct.isSetLoanId()) {
        optionals.set(20);
      }
      oprot.writeBitSet(optionals, 21);
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetAcctType()) {
        oprot.writeI32(struct.acctType);
      }
      if (struct.isSetAcctTypeText()) {
        oprot.writeString(struct.acctTypeText);
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeDouble(struct.creditAmt);
      }
      if (struct.isSetPmUserId()) {
        oprot.writeI32(struct.pmUserId);
      }
      if (struct.isSetPlanOutLoanDT()) {
        oprot.writeString(struct.planOutLoanDT);
      }
      if (struct.isSetPlanRepayLoanDT()) {
        oprot.writeString(struct.planRepayLoanDT);
      }
      if (struct.isSetProjectId()) {
        oprot.writeString(struct.projectId);
      }
      if (struct.isSetCusName()) {
        oprot.writeString(struct.cusName);
      }
      if (struct.isSetRequestStartDt()) {
        oprot.writeString(struct.requestStartDt);
      }
      if (struct.isSetRequestEndDt()) {
        oprot.writeString(struct.requestEndDt);
      }
      if (struct.isSetEcoTrade()) {
        oprot.writeString(struct.ecoTrade);
      }
      if (struct.isSetPmuserName()) {
        oprot.writeString(struct.pmuserName);
      }
      if (struct.isSetSettleProcessBeginDT()) {
        oprot.writeString(struct.settleProcessBeginDT);
      }
      if (struct.isSetSettleProcessEndDT()) {
        oprot.writeString(struct.settleProcessEndDT);
      }
      if (struct.isSetIs_complete()) {
        oprot.writeString(struct.is_complete);
      }
      if (struct.isSetSettleDT()) {
        oprot.writeString(struct.settleDT);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetLoanId()) {
        oprot.writeI32(struct.loanId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CusBusiness struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(21);
      if (incoming.get(0)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.acctType = iprot.readI32();
        struct.setAcctTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.acctTypeText = iprot.readString();
        struct.setAcctTypeTextIsSet(true);
      }
      if (incoming.get(4)) {
        struct.creditAmt = iprot.readDouble();
        struct.setCreditAmtIsSet(true);
      }
      if (incoming.get(5)) {
        struct.pmUserId = iprot.readI32();
        struct.setPmUserIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.planOutLoanDT = iprot.readString();
        struct.setPlanOutLoanDTIsSet(true);
      }
      if (incoming.get(7)) {
        struct.planRepayLoanDT = iprot.readString();
        struct.setPlanRepayLoanDTIsSet(true);
      }
      if (incoming.get(8)) {
        struct.projectId = iprot.readString();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cusName = iprot.readString();
        struct.setCusNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.requestStartDt = iprot.readString();
        struct.setRequestStartDtIsSet(true);
      }
      if (incoming.get(11)) {
        struct.requestEndDt = iprot.readString();
        struct.setRequestEndDtIsSet(true);
      }
      if (incoming.get(12)) {
        struct.ecoTrade = iprot.readString();
        struct.setEcoTradeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.pmuserName = iprot.readString();
        struct.setPmuserNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.settleProcessBeginDT = iprot.readString();
        struct.setSettleProcessBeginDTIsSet(true);
      }
      if (incoming.get(15)) {
        struct.settleProcessEndDT = iprot.readString();
        struct.setSettleProcessEndDTIsSet(true);
      }
      if (incoming.get(16)) {
        struct.is_complete = iprot.readString();
        struct.setIs_completeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.settleDT = iprot.readString();
        struct.setSettleDTIsSet(true);
      }
      if (incoming.get(18)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(19)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(20)) {
        struct.loanId = iprot.readI32();
        struct.setLoanIdIsSet(true);
      }
    }
  }

}

