/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.beforeloan;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-21")
public class BizChangeRecordDTO implements org.apache.thrift.TBase<BizChangeRecordDTO, BizChangeRecordDTO._Fields>, java.io.Serializable, Cloneable, Comparable<BizChangeRecordDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BizChangeRecordDTO");

  private static final org.apache.thrift.protocol.TField RELATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("relationId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MODIFY_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("modifyUser", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("modifyTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MODIFY_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("modifyReason", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OPERATION_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("operationIp", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ROWS_FIELD_DESC = new org.apache.thrift.protocol.TField("rows", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField MODIFY_USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("modifyUserName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField NEW_LOAN_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("newLoanMoney", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField OLD_LOAN_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("oldLoanDays", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField NEW_LOAN_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("newLoanDays", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField OLD_FEE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("oldFeeRate", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField NEW_FEE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("newFeeRate", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField OLD_GUARANTEE_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("oldGuaranteeFee", org.apache.thrift.protocol.TType.DOUBLE, (short)15);
  private static final org.apache.thrift.protocol.TField NEW_GUARANTEE_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("newGuaranteeFee", org.apache.thrift.protocol.TType.DOUBLE, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BizChangeRecordDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BizChangeRecordDTOTupleSchemeFactory());
  }

  public int relationId; // required
  public int modifyUser; // required
  public String modifyTime; // required
  public String modifyReason; // required
  public String operationIp; // required
  public int page; // required
  public int rows; // required
  public String modifyUserName; // required
  public double oldLoanMoney; // required
  public double newLoanMoney; // required
  public int oldLoanDays; // required
  public int newLoanDays; // required
  public double oldFeeRate; // required
  public double newFeeRate; // required
  public double oldGuaranteeFee; // required
  public double newGuaranteeFee; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RELATION_ID((short)1, "relationId"),
    MODIFY_USER((short)2, "modifyUser"),
    MODIFY_TIME((short)3, "modifyTime"),
    MODIFY_REASON((short)4, "modifyReason"),
    OPERATION_IP((short)5, "operationIp"),
    PAGE((short)6, "page"),
    ROWS((short)7, "rows"),
    MODIFY_USER_NAME((short)8, "modifyUserName"),
    OLD_LOAN_MONEY((short)9, "oldLoanMoney"),
    NEW_LOAN_MONEY((short)10, "newLoanMoney"),
    OLD_LOAN_DAYS((short)11, "oldLoanDays"),
    NEW_LOAN_DAYS((short)12, "newLoanDays"),
    OLD_FEE_RATE((short)13, "oldFeeRate"),
    NEW_FEE_RATE((short)14, "newFeeRate"),
    OLD_GUARANTEE_FEE((short)15, "oldGuaranteeFee"),
    NEW_GUARANTEE_FEE((short)16, "newGuaranteeFee");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RELATION_ID
          return RELATION_ID;
        case 2: // MODIFY_USER
          return MODIFY_USER;
        case 3: // MODIFY_TIME
          return MODIFY_TIME;
        case 4: // MODIFY_REASON
          return MODIFY_REASON;
        case 5: // OPERATION_IP
          return OPERATION_IP;
        case 6: // PAGE
          return PAGE;
        case 7: // ROWS
          return ROWS;
        case 8: // MODIFY_USER_NAME
          return MODIFY_USER_NAME;
        case 9: // OLD_LOAN_MONEY
          return OLD_LOAN_MONEY;
        case 10: // NEW_LOAN_MONEY
          return NEW_LOAN_MONEY;
        case 11: // OLD_LOAN_DAYS
          return OLD_LOAN_DAYS;
        case 12: // NEW_LOAN_DAYS
          return NEW_LOAN_DAYS;
        case 13: // OLD_FEE_RATE
          return OLD_FEE_RATE;
        case 14: // NEW_FEE_RATE
          return NEW_FEE_RATE;
        case 15: // OLD_GUARANTEE_FEE
          return OLD_GUARANTEE_FEE;
        case 16: // NEW_GUARANTEE_FEE
          return NEW_GUARANTEE_FEE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RELATIONID_ISSET_ID = 0;
  private static final int __MODIFYUSER_ISSET_ID = 1;
  private static final int __PAGE_ISSET_ID = 2;
  private static final int __ROWS_ISSET_ID = 3;
  private static final int __OLDLOANMONEY_ISSET_ID = 4;
  private static final int __NEWLOANMONEY_ISSET_ID = 5;
  private static final int __OLDLOANDAYS_ISSET_ID = 6;
  private static final int __NEWLOANDAYS_ISSET_ID = 7;
  private static final int __OLDFEERATE_ISSET_ID = 8;
  private static final int __NEWFEERATE_ISSET_ID = 9;
  private static final int __OLDGUARANTEEFEE_ISSET_ID = 10;
  private static final int __NEWGUARANTEEFEE_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RELATION_ID, new org.apache.thrift.meta_data.FieldMetaData("relationId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MODIFY_USER, new org.apache.thrift.meta_data.FieldMetaData("modifyUser", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("modifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODIFY_REASON, new org.apache.thrift.meta_data.FieldMetaData("modifyReason", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATION_IP, new org.apache.thrift.meta_data.FieldMetaData("operationIp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROWS, new org.apache.thrift.meta_data.FieldMetaData("rows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MODIFY_USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("modifyUserName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLD_LOAN_MONEY, new org.apache.thrift.meta_data.FieldMetaData("oldLoanMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NEW_LOAN_MONEY, new org.apache.thrift.meta_data.FieldMetaData("newLoanMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OLD_LOAN_DAYS, new org.apache.thrift.meta_data.FieldMetaData("oldLoanDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NEW_LOAN_DAYS, new org.apache.thrift.meta_data.FieldMetaData("newLoanDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OLD_FEE_RATE, new org.apache.thrift.meta_data.FieldMetaData("oldFeeRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NEW_FEE_RATE, new org.apache.thrift.meta_data.FieldMetaData("newFeeRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OLD_GUARANTEE_FEE, new org.apache.thrift.meta_data.FieldMetaData("oldGuaranteeFee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NEW_GUARANTEE_FEE, new org.apache.thrift.meta_data.FieldMetaData("newGuaranteeFee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BizChangeRecordDTO.class, metaDataMap);
  }

  public BizChangeRecordDTO() {
  }

  public BizChangeRecordDTO(
    int relationId,
    int modifyUser,
    String modifyTime,
    String modifyReason,
    String operationIp,
    int page,
    int rows,
    String modifyUserName,
    double oldLoanMoney,
    double newLoanMoney,
    int oldLoanDays,
    int newLoanDays,
    double oldFeeRate,
    double newFeeRate,
    double oldGuaranteeFee,
    double newGuaranteeFee)
  {
    this();
    this.relationId = relationId;
    setRelationIdIsSet(true);
    this.modifyUser = modifyUser;
    setModifyUserIsSet(true);
    this.modifyTime = modifyTime;
    this.modifyReason = modifyReason;
    this.operationIp = operationIp;
    this.page = page;
    setPageIsSet(true);
    this.rows = rows;
    setRowsIsSet(true);
    this.modifyUserName = modifyUserName;
    this.oldLoanMoney = oldLoanMoney;
    setOldLoanMoneyIsSet(true);
    this.newLoanMoney = newLoanMoney;
    setNewLoanMoneyIsSet(true);
    this.oldLoanDays = oldLoanDays;
    setOldLoanDaysIsSet(true);
    this.newLoanDays = newLoanDays;
    setNewLoanDaysIsSet(true);
    this.oldFeeRate = oldFeeRate;
    setOldFeeRateIsSet(true);
    this.newFeeRate = newFeeRate;
    setNewFeeRateIsSet(true);
    this.oldGuaranteeFee = oldGuaranteeFee;
    setOldGuaranteeFeeIsSet(true);
    this.newGuaranteeFee = newGuaranteeFee;
    setNewGuaranteeFeeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BizChangeRecordDTO(BizChangeRecordDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.relationId = other.relationId;
    this.modifyUser = other.modifyUser;
    if (other.isSetModifyTime()) {
      this.modifyTime = other.modifyTime;
    }
    if (other.isSetModifyReason()) {
      this.modifyReason = other.modifyReason;
    }
    if (other.isSetOperationIp()) {
      this.operationIp = other.operationIp;
    }
    this.page = other.page;
    this.rows = other.rows;
    if (other.isSetModifyUserName()) {
      this.modifyUserName = other.modifyUserName;
    }
    this.oldLoanMoney = other.oldLoanMoney;
    this.newLoanMoney = other.newLoanMoney;
    this.oldLoanDays = other.oldLoanDays;
    this.newLoanDays = other.newLoanDays;
    this.oldFeeRate = other.oldFeeRate;
    this.newFeeRate = other.newFeeRate;
    this.oldGuaranteeFee = other.oldGuaranteeFee;
    this.newGuaranteeFee = other.newGuaranteeFee;
  }

  public BizChangeRecordDTO deepCopy() {
    return new BizChangeRecordDTO(this);
  }

  @Override
  public void clear() {
    setRelationIdIsSet(false);
    this.relationId = 0;
    setModifyUserIsSet(false);
    this.modifyUser = 0;
    this.modifyTime = null;
    this.modifyReason = null;
    this.operationIp = null;
    setPageIsSet(false);
    this.page = 0;
    setRowsIsSet(false);
    this.rows = 0;
    this.modifyUserName = null;
    setOldLoanMoneyIsSet(false);
    this.oldLoanMoney = 0.0;
    setNewLoanMoneyIsSet(false);
    this.newLoanMoney = 0.0;
    setOldLoanDaysIsSet(false);
    this.oldLoanDays = 0;
    setNewLoanDaysIsSet(false);
    this.newLoanDays = 0;
    setOldFeeRateIsSet(false);
    this.oldFeeRate = 0.0;
    setNewFeeRateIsSet(false);
    this.newFeeRate = 0.0;
    setOldGuaranteeFeeIsSet(false);
    this.oldGuaranteeFee = 0.0;
    setNewGuaranteeFeeIsSet(false);
    this.newGuaranteeFee = 0.0;
  }

  public int getRelationId() {
    return this.relationId;
  }

  public BizChangeRecordDTO setRelationId(int relationId) {
    this.relationId = relationId;
    setRelationIdIsSet(true);
    return this;
  }

  public void unsetRelationId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RELATIONID_ISSET_ID);
  }

  /** Returns true if field relationId is set (has been assigned a value) and false otherwise */
  public boolean isSetRelationId() {
    return EncodingUtils.testBit(__isset_bitfield, __RELATIONID_ISSET_ID);
  }

  public void setRelationIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RELATIONID_ISSET_ID, value);
  }

  public int getModifyUser() {
    return this.modifyUser;
  }

  public BizChangeRecordDTO setModifyUser(int modifyUser) {
    this.modifyUser = modifyUser;
    setModifyUserIsSet(true);
    return this;
  }

  public void unsetModifyUser() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MODIFYUSER_ISSET_ID);
  }

  /** Returns true if field modifyUser is set (has been assigned a value) and false otherwise */
  public boolean isSetModifyUser() {
    return EncodingUtils.testBit(__isset_bitfield, __MODIFYUSER_ISSET_ID);
  }

  public void setModifyUserIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MODIFYUSER_ISSET_ID, value);
  }

  public String getModifyTime() {
    return this.modifyTime;
  }

  public BizChangeRecordDTO setModifyTime(String modifyTime) {
    this.modifyTime = modifyTime;
    return this;
  }

  public void unsetModifyTime() {
    this.modifyTime = null;
  }

  /** Returns true if field modifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetModifyTime() {
    return this.modifyTime != null;
  }

  public void setModifyTimeIsSet(boolean value) {
    if (!value) {
      this.modifyTime = null;
    }
  }

  public String getModifyReason() {
    return this.modifyReason;
  }

  public BizChangeRecordDTO setModifyReason(String modifyReason) {
    this.modifyReason = modifyReason;
    return this;
  }

  public void unsetModifyReason() {
    this.modifyReason = null;
  }

  /** Returns true if field modifyReason is set (has been assigned a value) and false otherwise */
  public boolean isSetModifyReason() {
    return this.modifyReason != null;
  }

  public void setModifyReasonIsSet(boolean value) {
    if (!value) {
      this.modifyReason = null;
    }
  }

  public String getOperationIp() {
    return this.operationIp;
  }

  public BizChangeRecordDTO setOperationIp(String operationIp) {
    this.operationIp = operationIp;
    return this;
  }

  public void unsetOperationIp() {
    this.operationIp = null;
  }

  /** Returns true if field operationIp is set (has been assigned a value) and false otherwise */
  public boolean isSetOperationIp() {
    return this.operationIp != null;
  }

  public void setOperationIpIsSet(boolean value) {
    if (!value) {
      this.operationIp = null;
    }
  }

  public int getPage() {
    return this.page;
  }

  public BizChangeRecordDTO setPage(int page) {
    this.page = page;
    setPageIsSet(true);
    return this;
  }

  public void unsetPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  /** Returns true if field page is set (has been assigned a value) and false otherwise */
  public boolean isSetPage() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
  }

  public void setPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
  }

  public int getRows() {
    return this.rows;
  }

  public BizChangeRecordDTO setRows(int rows) {
    this.rows = rows;
    setRowsIsSet(true);
    return this;
  }

  public void unsetRows() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  /** Returns true if field rows is set (has been assigned a value) and false otherwise */
  public boolean isSetRows() {
    return EncodingUtils.testBit(__isset_bitfield, __ROWS_ISSET_ID);
  }

  public void setRowsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROWS_ISSET_ID, value);
  }

  public String getModifyUserName() {
    return this.modifyUserName;
  }

  public BizChangeRecordDTO setModifyUserName(String modifyUserName) {
    this.modifyUserName = modifyUserName;
    return this;
  }

  public void unsetModifyUserName() {
    this.modifyUserName = null;
  }

  /** Returns true if field modifyUserName is set (has been assigned a value) and false otherwise */
  public boolean isSetModifyUserName() {
    return this.modifyUserName != null;
  }

  public void setModifyUserNameIsSet(boolean value) {
    if (!value) {
      this.modifyUserName = null;
    }
  }

  public double getOldLoanMoney() {
    return this.oldLoanMoney;
  }

  public BizChangeRecordDTO setOldLoanMoney(double oldLoanMoney) {
    this.oldLoanMoney = oldLoanMoney;
    setOldLoanMoneyIsSet(true);
    return this;
  }

  public void unsetOldLoanMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID);
  }

  /** Returns true if field oldLoanMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID);
  }

  public void setOldLoanMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDLOANMONEY_ISSET_ID, value);
  }

  public double getNewLoanMoney() {
    return this.newLoanMoney;
  }

  public BizChangeRecordDTO setNewLoanMoney(double newLoanMoney) {
    this.newLoanMoney = newLoanMoney;
    setNewLoanMoneyIsSet(true);
    return this;
  }

  public void unsetNewLoanMoney() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEWLOANMONEY_ISSET_ID);
  }

  /** Returns true if field newLoanMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetNewLoanMoney() {
    return EncodingUtils.testBit(__isset_bitfield, __NEWLOANMONEY_ISSET_ID);
  }

  public void setNewLoanMoneyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEWLOANMONEY_ISSET_ID, value);
  }

  public int getOldLoanDays() {
    return this.oldLoanDays;
  }

  public BizChangeRecordDTO setOldLoanDays(int oldLoanDays) {
    this.oldLoanDays = oldLoanDays;
    setOldLoanDaysIsSet(true);
    return this;
  }

  public void unsetOldLoanDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDLOANDAYS_ISSET_ID);
  }

  /** Returns true if field oldLoanDays is set (has been assigned a value) and false otherwise */
  public boolean isSetOldLoanDays() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDLOANDAYS_ISSET_ID);
  }

  public void setOldLoanDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDLOANDAYS_ISSET_ID, value);
  }

  public int getNewLoanDays() {
    return this.newLoanDays;
  }

  public BizChangeRecordDTO setNewLoanDays(int newLoanDays) {
    this.newLoanDays = newLoanDays;
    setNewLoanDaysIsSet(true);
    return this;
  }

  public void unsetNewLoanDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEWLOANDAYS_ISSET_ID);
  }

  /** Returns true if field newLoanDays is set (has been assigned a value) and false otherwise */
  public boolean isSetNewLoanDays() {
    return EncodingUtils.testBit(__isset_bitfield, __NEWLOANDAYS_ISSET_ID);
  }

  public void setNewLoanDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEWLOANDAYS_ISSET_ID, value);
  }

  public double getOldFeeRate() {
    return this.oldFeeRate;
  }

  public BizChangeRecordDTO setOldFeeRate(double oldFeeRate) {
    this.oldFeeRate = oldFeeRate;
    setOldFeeRateIsSet(true);
    return this;
  }

  public void unsetOldFeeRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDFEERATE_ISSET_ID);
  }

  /** Returns true if field oldFeeRate is set (has been assigned a value) and false otherwise */
  public boolean isSetOldFeeRate() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDFEERATE_ISSET_ID);
  }

  public void setOldFeeRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDFEERATE_ISSET_ID, value);
  }

  public double getNewFeeRate() {
    return this.newFeeRate;
  }

  public BizChangeRecordDTO setNewFeeRate(double newFeeRate) {
    this.newFeeRate = newFeeRate;
    setNewFeeRateIsSet(true);
    return this;
  }

  public void unsetNewFeeRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEWFEERATE_ISSET_ID);
  }

  /** Returns true if field newFeeRate is set (has been assigned a value) and false otherwise */
  public boolean isSetNewFeeRate() {
    return EncodingUtils.testBit(__isset_bitfield, __NEWFEERATE_ISSET_ID);
  }

  public void setNewFeeRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEWFEERATE_ISSET_ID, value);
  }

  public double getOldGuaranteeFee() {
    return this.oldGuaranteeFee;
  }

  public BizChangeRecordDTO setOldGuaranteeFee(double oldGuaranteeFee) {
    this.oldGuaranteeFee = oldGuaranteeFee;
    setOldGuaranteeFeeIsSet(true);
    return this;
  }

  public void unsetOldGuaranteeFee() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OLDGUARANTEEFEE_ISSET_ID);
  }

  /** Returns true if field oldGuaranteeFee is set (has been assigned a value) and false otherwise */
  public boolean isSetOldGuaranteeFee() {
    return EncodingUtils.testBit(__isset_bitfield, __OLDGUARANTEEFEE_ISSET_ID);
  }

  public void setOldGuaranteeFeeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OLDGUARANTEEFEE_ISSET_ID, value);
  }

  public double getNewGuaranteeFee() {
    return this.newGuaranteeFee;
  }

  public BizChangeRecordDTO setNewGuaranteeFee(double newGuaranteeFee) {
    this.newGuaranteeFee = newGuaranteeFee;
    setNewGuaranteeFeeIsSet(true);
    return this;
  }

  public void unsetNewGuaranteeFee() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEWGUARANTEEFEE_ISSET_ID);
  }

  /** Returns true if field newGuaranteeFee is set (has been assigned a value) and false otherwise */
  public boolean isSetNewGuaranteeFee() {
    return EncodingUtils.testBit(__isset_bitfield, __NEWGUARANTEEFEE_ISSET_ID);
  }

  public void setNewGuaranteeFeeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEWGUARANTEEFEE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RELATION_ID:
      if (value == null) {
        unsetRelationId();
      } else {
        setRelationId((Integer)value);
      }
      break;

    case MODIFY_USER:
      if (value == null) {
        unsetModifyUser();
      } else {
        setModifyUser((Integer)value);
      }
      break;

    case MODIFY_TIME:
      if (value == null) {
        unsetModifyTime();
      } else {
        setModifyTime((String)value);
      }
      break;

    case MODIFY_REASON:
      if (value == null) {
        unsetModifyReason();
      } else {
        setModifyReason((String)value);
      }
      break;

    case OPERATION_IP:
      if (value == null) {
        unsetOperationIp();
      } else {
        setOperationIp((String)value);
      }
      break;

    case PAGE:
      if (value == null) {
        unsetPage();
      } else {
        setPage((Integer)value);
      }
      break;

    case ROWS:
      if (value == null) {
        unsetRows();
      } else {
        setRows((Integer)value);
      }
      break;

    case MODIFY_USER_NAME:
      if (value == null) {
        unsetModifyUserName();
      } else {
        setModifyUserName((String)value);
      }
      break;

    case OLD_LOAN_MONEY:
      if (value == null) {
        unsetOldLoanMoney();
      } else {
        setOldLoanMoney((Double)value);
      }
      break;

    case NEW_LOAN_MONEY:
      if (value == null) {
        unsetNewLoanMoney();
      } else {
        setNewLoanMoney((Double)value);
      }
      break;

    case OLD_LOAN_DAYS:
      if (value == null) {
        unsetOldLoanDays();
      } else {
        setOldLoanDays((Integer)value);
      }
      break;

    case NEW_LOAN_DAYS:
      if (value == null) {
        unsetNewLoanDays();
      } else {
        setNewLoanDays((Integer)value);
      }
      break;

    case OLD_FEE_RATE:
      if (value == null) {
        unsetOldFeeRate();
      } else {
        setOldFeeRate((Double)value);
      }
      break;

    case NEW_FEE_RATE:
      if (value == null) {
        unsetNewFeeRate();
      } else {
        setNewFeeRate((Double)value);
      }
      break;

    case OLD_GUARANTEE_FEE:
      if (value == null) {
        unsetOldGuaranteeFee();
      } else {
        setOldGuaranteeFee((Double)value);
      }
      break;

    case NEW_GUARANTEE_FEE:
      if (value == null) {
        unsetNewGuaranteeFee();
      } else {
        setNewGuaranteeFee((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RELATION_ID:
      return Integer.valueOf(getRelationId());

    case MODIFY_USER:
      return Integer.valueOf(getModifyUser());

    case MODIFY_TIME:
      return getModifyTime();

    case MODIFY_REASON:
      return getModifyReason();

    case OPERATION_IP:
      return getOperationIp();

    case PAGE:
      return Integer.valueOf(getPage());

    case ROWS:
      return Integer.valueOf(getRows());

    case MODIFY_USER_NAME:
      return getModifyUserName();

    case OLD_LOAN_MONEY:
      return Double.valueOf(getOldLoanMoney());

    case NEW_LOAN_MONEY:
      return Double.valueOf(getNewLoanMoney());

    case OLD_LOAN_DAYS:
      return Integer.valueOf(getOldLoanDays());

    case NEW_LOAN_DAYS:
      return Integer.valueOf(getNewLoanDays());

    case OLD_FEE_RATE:
      return Double.valueOf(getOldFeeRate());

    case NEW_FEE_RATE:
      return Double.valueOf(getNewFeeRate());

    case OLD_GUARANTEE_FEE:
      return Double.valueOf(getOldGuaranteeFee());

    case NEW_GUARANTEE_FEE:
      return Double.valueOf(getNewGuaranteeFee());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RELATION_ID:
      return isSetRelationId();
    case MODIFY_USER:
      return isSetModifyUser();
    case MODIFY_TIME:
      return isSetModifyTime();
    case MODIFY_REASON:
      return isSetModifyReason();
    case OPERATION_IP:
      return isSetOperationIp();
    case PAGE:
      return isSetPage();
    case ROWS:
      return isSetRows();
    case MODIFY_USER_NAME:
      return isSetModifyUserName();
    case OLD_LOAN_MONEY:
      return isSetOldLoanMoney();
    case NEW_LOAN_MONEY:
      return isSetNewLoanMoney();
    case OLD_LOAN_DAYS:
      return isSetOldLoanDays();
    case NEW_LOAN_DAYS:
      return isSetNewLoanDays();
    case OLD_FEE_RATE:
      return isSetOldFeeRate();
    case NEW_FEE_RATE:
      return isSetNewFeeRate();
    case OLD_GUARANTEE_FEE:
      return isSetOldGuaranteeFee();
    case NEW_GUARANTEE_FEE:
      return isSetNewGuaranteeFee();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BizChangeRecordDTO)
      return this.equals((BizChangeRecordDTO)that);
    return false;
  }

  public boolean equals(BizChangeRecordDTO that) {
    if (that == null)
      return false;

    boolean this_present_relationId = true;
    boolean that_present_relationId = true;
    if (this_present_relationId || that_present_relationId) {
      if (!(this_present_relationId && that_present_relationId))
        return false;
      if (this.relationId != that.relationId)
        return false;
    }

    boolean this_present_modifyUser = true;
    boolean that_present_modifyUser = true;
    if (this_present_modifyUser || that_present_modifyUser) {
      if (!(this_present_modifyUser && that_present_modifyUser))
        return false;
      if (this.modifyUser != that.modifyUser)
        return false;
    }

    boolean this_present_modifyTime = true && this.isSetModifyTime();
    boolean that_present_modifyTime = true && that.isSetModifyTime();
    if (this_present_modifyTime || that_present_modifyTime) {
      if (!(this_present_modifyTime && that_present_modifyTime))
        return false;
      if (!this.modifyTime.equals(that.modifyTime))
        return false;
    }

    boolean this_present_modifyReason = true && this.isSetModifyReason();
    boolean that_present_modifyReason = true && that.isSetModifyReason();
    if (this_present_modifyReason || that_present_modifyReason) {
      if (!(this_present_modifyReason && that_present_modifyReason))
        return false;
      if (!this.modifyReason.equals(that.modifyReason))
        return false;
    }

    boolean this_present_operationIp = true && this.isSetOperationIp();
    boolean that_present_operationIp = true && that.isSetOperationIp();
    if (this_present_operationIp || that_present_operationIp) {
      if (!(this_present_operationIp && that_present_operationIp))
        return false;
      if (!this.operationIp.equals(that.operationIp))
        return false;
    }

    boolean this_present_page = true;
    boolean that_present_page = true;
    if (this_present_page || that_present_page) {
      if (!(this_present_page && that_present_page))
        return false;
      if (this.page != that.page)
        return false;
    }

    boolean this_present_rows = true;
    boolean that_present_rows = true;
    if (this_present_rows || that_present_rows) {
      if (!(this_present_rows && that_present_rows))
        return false;
      if (this.rows != that.rows)
        return false;
    }

    boolean this_present_modifyUserName = true && this.isSetModifyUserName();
    boolean that_present_modifyUserName = true && that.isSetModifyUserName();
    if (this_present_modifyUserName || that_present_modifyUserName) {
      if (!(this_present_modifyUserName && that_present_modifyUserName))
        return false;
      if (!this.modifyUserName.equals(that.modifyUserName))
        return false;
    }

    boolean this_present_oldLoanMoney = true;
    boolean that_present_oldLoanMoney = true;
    if (this_present_oldLoanMoney || that_present_oldLoanMoney) {
      if (!(this_present_oldLoanMoney && that_present_oldLoanMoney))
        return false;
      if (this.oldLoanMoney != that.oldLoanMoney)
        return false;
    }

    boolean this_present_newLoanMoney = true;
    boolean that_present_newLoanMoney = true;
    if (this_present_newLoanMoney || that_present_newLoanMoney) {
      if (!(this_present_newLoanMoney && that_present_newLoanMoney))
        return false;
      if (this.newLoanMoney != that.newLoanMoney)
        return false;
    }

    boolean this_present_oldLoanDays = true;
    boolean that_present_oldLoanDays = true;
    if (this_present_oldLoanDays || that_present_oldLoanDays) {
      if (!(this_present_oldLoanDays && that_present_oldLoanDays))
        return false;
      if (this.oldLoanDays != that.oldLoanDays)
        return false;
    }

    boolean this_present_newLoanDays = true;
    boolean that_present_newLoanDays = true;
    if (this_present_newLoanDays || that_present_newLoanDays) {
      if (!(this_present_newLoanDays && that_present_newLoanDays))
        return false;
      if (this.newLoanDays != that.newLoanDays)
        return false;
    }

    boolean this_present_oldFeeRate = true;
    boolean that_present_oldFeeRate = true;
    if (this_present_oldFeeRate || that_present_oldFeeRate) {
      if (!(this_present_oldFeeRate && that_present_oldFeeRate))
        return false;
      if (this.oldFeeRate != that.oldFeeRate)
        return false;
    }

    boolean this_present_newFeeRate = true;
    boolean that_present_newFeeRate = true;
    if (this_present_newFeeRate || that_present_newFeeRate) {
      if (!(this_present_newFeeRate && that_present_newFeeRate))
        return false;
      if (this.newFeeRate != that.newFeeRate)
        return false;
    }

    boolean this_present_oldGuaranteeFee = true;
    boolean that_present_oldGuaranteeFee = true;
    if (this_present_oldGuaranteeFee || that_present_oldGuaranteeFee) {
      if (!(this_present_oldGuaranteeFee && that_present_oldGuaranteeFee))
        return false;
      if (this.oldGuaranteeFee != that.oldGuaranteeFee)
        return false;
    }

    boolean this_present_newGuaranteeFee = true;
    boolean that_present_newGuaranteeFee = true;
    if (this_present_newGuaranteeFee || that_present_newGuaranteeFee) {
      if (!(this_present_newGuaranteeFee && that_present_newGuaranteeFee))
        return false;
      if (this.newGuaranteeFee != that.newGuaranteeFee)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_relationId = true;
    list.add(present_relationId);
    if (present_relationId)
      list.add(relationId);

    boolean present_modifyUser = true;
    list.add(present_modifyUser);
    if (present_modifyUser)
      list.add(modifyUser);

    boolean present_modifyTime = true && (isSetModifyTime());
    list.add(present_modifyTime);
    if (present_modifyTime)
      list.add(modifyTime);

    boolean present_modifyReason = true && (isSetModifyReason());
    list.add(present_modifyReason);
    if (present_modifyReason)
      list.add(modifyReason);

    boolean present_operationIp = true && (isSetOperationIp());
    list.add(present_operationIp);
    if (present_operationIp)
      list.add(operationIp);

    boolean present_page = true;
    list.add(present_page);
    if (present_page)
      list.add(page);

    boolean present_rows = true;
    list.add(present_rows);
    if (present_rows)
      list.add(rows);

    boolean present_modifyUserName = true && (isSetModifyUserName());
    list.add(present_modifyUserName);
    if (present_modifyUserName)
      list.add(modifyUserName);

    boolean present_oldLoanMoney = true;
    list.add(present_oldLoanMoney);
    if (present_oldLoanMoney)
      list.add(oldLoanMoney);

    boolean present_newLoanMoney = true;
    list.add(present_newLoanMoney);
    if (present_newLoanMoney)
      list.add(newLoanMoney);

    boolean present_oldLoanDays = true;
    list.add(present_oldLoanDays);
    if (present_oldLoanDays)
      list.add(oldLoanDays);

    boolean present_newLoanDays = true;
    list.add(present_newLoanDays);
    if (present_newLoanDays)
      list.add(newLoanDays);

    boolean present_oldFeeRate = true;
    list.add(present_oldFeeRate);
    if (present_oldFeeRate)
      list.add(oldFeeRate);

    boolean present_newFeeRate = true;
    list.add(present_newFeeRate);
    if (present_newFeeRate)
      list.add(newFeeRate);

    boolean present_oldGuaranteeFee = true;
    list.add(present_oldGuaranteeFee);
    if (present_oldGuaranteeFee)
      list.add(oldGuaranteeFee);

    boolean present_newGuaranteeFee = true;
    list.add(present_newGuaranteeFee);
    if (present_newGuaranteeFee)
      list.add(newGuaranteeFee);

    return list.hashCode();
  }

  @Override
  public int compareTo(BizChangeRecordDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRelationId()).compareTo(other.isSetRelationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.relationId, other.relationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModifyUser()).compareTo(other.isSetModifyUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifyUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifyUser, other.modifyUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModifyTime()).compareTo(other.isSetModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifyTime, other.modifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModifyReason()).compareTo(other.isSetModifyReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifyReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifyReason, other.modifyReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperationIp()).compareTo(other.isSetOperationIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperationIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operationIp, other.operationIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rows, other.rows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModifyUserName()).compareTo(other.isSetModifyUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifyUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifyUserName, other.modifyUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanMoney()).compareTo(other.isSetOldLoanMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanMoney, other.oldLoanMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewLoanMoney()).compareTo(other.isSetNewLoanMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewLoanMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newLoanMoney, other.newLoanMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldLoanDays()).compareTo(other.isSetOldLoanDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldLoanDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldLoanDays, other.oldLoanDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewLoanDays()).compareTo(other.isSetNewLoanDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewLoanDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newLoanDays, other.newLoanDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldFeeRate()).compareTo(other.isSetOldFeeRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldFeeRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldFeeRate, other.oldFeeRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewFeeRate()).compareTo(other.isSetNewFeeRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewFeeRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newFeeRate, other.newFeeRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldGuaranteeFee()).compareTo(other.isSetOldGuaranteeFee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldGuaranteeFee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldGuaranteeFee, other.oldGuaranteeFee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewGuaranteeFee()).compareTo(other.isSetNewGuaranteeFee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewGuaranteeFee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newGuaranteeFee, other.newGuaranteeFee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BizChangeRecordDTO(");
    boolean first = true;

    sb.append("relationId:");
    sb.append(this.relationId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("modifyUser:");
    sb.append(this.modifyUser);
    first = false;
    if (!first) sb.append(", ");
    sb.append("modifyTime:");
    if (this.modifyTime == null) {
      sb.append("null");
    } else {
      sb.append(this.modifyTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("modifyReason:");
    if (this.modifyReason == null) {
      sb.append("null");
    } else {
      sb.append(this.modifyReason);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("operationIp:");
    if (this.operationIp == null) {
      sb.append("null");
    } else {
      sb.append(this.operationIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("page:");
    sb.append(this.page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rows:");
    sb.append(this.rows);
    first = false;
    if (!first) sb.append(", ");
    sb.append("modifyUserName:");
    if (this.modifyUserName == null) {
      sb.append("null");
    } else {
      sb.append(this.modifyUserName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanMoney:");
    sb.append(this.oldLoanMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newLoanMoney:");
    sb.append(this.newLoanMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldLoanDays:");
    sb.append(this.oldLoanDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newLoanDays:");
    sb.append(this.newLoanDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldFeeRate:");
    sb.append(this.oldFeeRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newFeeRate:");
    sb.append(this.newFeeRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldGuaranteeFee:");
    sb.append(this.oldGuaranteeFee);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newGuaranteeFee:");
    sb.append(this.newGuaranteeFee);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BizChangeRecordDTOStandardSchemeFactory implements SchemeFactory {
    public BizChangeRecordDTOStandardScheme getScheme() {
      return new BizChangeRecordDTOStandardScheme();
    }
  }

  private static class BizChangeRecordDTOStandardScheme extends StandardScheme<BizChangeRecordDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BizChangeRecordDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RELATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.relationId = iprot.readI32();
              struct.setRelationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MODIFY_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.modifyUser = iprot.readI32();
              struct.setModifyUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modifyTime = iprot.readString();
              struct.setModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MODIFY_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modifyReason = iprot.readString();
              struct.setModifyReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OPERATION_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operationIp = iprot.readString();
              struct.setOperationIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page = iprot.readI32();
              struct.setPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ROWS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rows = iprot.readI32();
              struct.setRowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MODIFY_USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modifyUserName = iprot.readString();
              struct.setModifyUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OLD_LOAN_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.oldLoanMoney = iprot.readDouble();
              struct.setOldLoanMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NEW_LOAN_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.newLoanMoney = iprot.readDouble();
              struct.setNewLoanMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OLD_LOAN_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oldLoanDays = iprot.readI32();
              struct.setOldLoanDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NEW_LOAN_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newLoanDays = iprot.readI32();
              struct.setNewLoanDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // OLD_FEE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.oldFeeRate = iprot.readDouble();
              struct.setOldFeeRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // NEW_FEE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.newFeeRate = iprot.readDouble();
              struct.setNewFeeRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // OLD_GUARANTEE_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.oldGuaranteeFee = iprot.readDouble();
              struct.setOldGuaranteeFeeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // NEW_GUARANTEE_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.newGuaranteeFee = iprot.readDouble();
              struct.setNewGuaranteeFeeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BizChangeRecordDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(RELATION_ID_FIELD_DESC);
      oprot.writeI32(struct.relationId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MODIFY_USER_FIELD_DESC);
      oprot.writeI32(struct.modifyUser);
      oprot.writeFieldEnd();
      if (struct.modifyTime != null) {
        oprot.writeFieldBegin(MODIFY_TIME_FIELD_DESC);
        oprot.writeString(struct.modifyTime);
        oprot.writeFieldEnd();
      }
      if (struct.modifyReason != null) {
        oprot.writeFieldBegin(MODIFY_REASON_FIELD_DESC);
        oprot.writeString(struct.modifyReason);
        oprot.writeFieldEnd();
      }
      if (struct.operationIp != null) {
        oprot.writeFieldBegin(OPERATION_IP_FIELD_DESC);
        oprot.writeString(struct.operationIp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAGE_FIELD_DESC);
      oprot.writeI32(struct.page);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROWS_FIELD_DESC);
      oprot.writeI32(struct.rows);
      oprot.writeFieldEnd();
      if (struct.modifyUserName != null) {
        oprot.writeFieldBegin(MODIFY_USER_NAME_FIELD_DESC);
        oprot.writeString(struct.modifyUserName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(OLD_LOAN_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.oldLoanMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_LOAN_MONEY_FIELD_DESC);
      oprot.writeDouble(struct.newLoanMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OLD_LOAN_DAYS_FIELD_DESC);
      oprot.writeI32(struct.oldLoanDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_LOAN_DAYS_FIELD_DESC);
      oprot.writeI32(struct.newLoanDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OLD_FEE_RATE_FIELD_DESC);
      oprot.writeDouble(struct.oldFeeRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_FEE_RATE_FIELD_DESC);
      oprot.writeDouble(struct.newFeeRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OLD_GUARANTEE_FEE_FIELD_DESC);
      oprot.writeDouble(struct.oldGuaranteeFee);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_GUARANTEE_FEE_FIELD_DESC);
      oprot.writeDouble(struct.newGuaranteeFee);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BizChangeRecordDTOTupleSchemeFactory implements SchemeFactory {
    public BizChangeRecordDTOTupleScheme getScheme() {
      return new BizChangeRecordDTOTupleScheme();
    }
  }

  private static class BizChangeRecordDTOTupleScheme extends TupleScheme<BizChangeRecordDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BizChangeRecordDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRelationId()) {
        optionals.set(0);
      }
      if (struct.isSetModifyUser()) {
        optionals.set(1);
      }
      if (struct.isSetModifyTime()) {
        optionals.set(2);
      }
      if (struct.isSetModifyReason()) {
        optionals.set(3);
      }
      if (struct.isSetOperationIp()) {
        optionals.set(4);
      }
      if (struct.isSetPage()) {
        optionals.set(5);
      }
      if (struct.isSetRows()) {
        optionals.set(6);
      }
      if (struct.isSetModifyUserName()) {
        optionals.set(7);
      }
      if (struct.isSetOldLoanMoney()) {
        optionals.set(8);
      }
      if (struct.isSetNewLoanMoney()) {
        optionals.set(9);
      }
      if (struct.isSetOldLoanDays()) {
        optionals.set(10);
      }
      if (struct.isSetNewLoanDays()) {
        optionals.set(11);
      }
      if (struct.isSetOldFeeRate()) {
        optionals.set(12);
      }
      if (struct.isSetNewFeeRate()) {
        optionals.set(13);
      }
      if (struct.isSetOldGuaranteeFee()) {
        optionals.set(14);
      }
      if (struct.isSetNewGuaranteeFee()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetRelationId()) {
        oprot.writeI32(struct.relationId);
      }
      if (struct.isSetModifyUser()) {
        oprot.writeI32(struct.modifyUser);
      }
      if (struct.isSetModifyTime()) {
        oprot.writeString(struct.modifyTime);
      }
      if (struct.isSetModifyReason()) {
        oprot.writeString(struct.modifyReason);
      }
      if (struct.isSetOperationIp()) {
        oprot.writeString(struct.operationIp);
      }
      if (struct.isSetPage()) {
        oprot.writeI32(struct.page);
      }
      if (struct.isSetRows()) {
        oprot.writeI32(struct.rows);
      }
      if (struct.isSetModifyUserName()) {
        oprot.writeString(struct.modifyUserName);
      }
      if (struct.isSetOldLoanMoney()) {
        oprot.writeDouble(struct.oldLoanMoney);
      }
      if (struct.isSetNewLoanMoney()) {
        oprot.writeDouble(struct.newLoanMoney);
      }
      if (struct.isSetOldLoanDays()) {
        oprot.writeI32(struct.oldLoanDays);
      }
      if (struct.isSetNewLoanDays()) {
        oprot.writeI32(struct.newLoanDays);
      }
      if (struct.isSetOldFeeRate()) {
        oprot.writeDouble(struct.oldFeeRate);
      }
      if (struct.isSetNewFeeRate()) {
        oprot.writeDouble(struct.newFeeRate);
      }
      if (struct.isSetOldGuaranteeFee()) {
        oprot.writeDouble(struct.oldGuaranteeFee);
      }
      if (struct.isSetNewGuaranteeFee()) {
        oprot.writeDouble(struct.newGuaranteeFee);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BizChangeRecordDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.relationId = iprot.readI32();
        struct.setRelationIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.modifyUser = iprot.readI32();
        struct.setModifyUserIsSet(true);
      }
      if (incoming.get(2)) {
        struct.modifyTime = iprot.readString();
        struct.setModifyTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.modifyReason = iprot.readString();
        struct.setModifyReasonIsSet(true);
      }
      if (incoming.get(4)) {
        struct.operationIp = iprot.readString();
        struct.setOperationIpIsSet(true);
      }
      if (incoming.get(5)) {
        struct.page = iprot.readI32();
        struct.setPageIsSet(true);
      }
      if (incoming.get(6)) {
        struct.rows = iprot.readI32();
        struct.setRowsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.modifyUserName = iprot.readString();
        struct.setModifyUserNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.oldLoanMoney = iprot.readDouble();
        struct.setOldLoanMoneyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.newLoanMoney = iprot.readDouble();
        struct.setNewLoanMoneyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.oldLoanDays = iprot.readI32();
        struct.setOldLoanDaysIsSet(true);
      }
      if (incoming.get(11)) {
        struct.newLoanDays = iprot.readI32();
        struct.setNewLoanDaysIsSet(true);
      }
      if (incoming.get(12)) {
        struct.oldFeeRate = iprot.readDouble();
        struct.setOldFeeRateIsSet(true);
      }
      if (incoming.get(13)) {
        struct.newFeeRate = iprot.readDouble();
        struct.setNewFeeRateIsSet(true);
      }
      if (incoming.get(14)) {
        struct.oldGuaranteeFee = iprot.readDouble();
        struct.setOldGuaranteeFeeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.newGuaranteeFee = iprot.readDouble();
        struct.setNewGuaranteeFeeIsSet(true);
      }
    }
  }

}

