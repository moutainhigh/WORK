/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xlkfinance.bms.rpc.repayment;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-12-19")
public class InterestChgApplyDTO implements org.apache.thrift.TBase<InterestChgApplyDTO, InterestChgApplyDTO._Fields>, java.io.Serializable, Cloneable, Comparable<InterestChgApplyDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InterestChgApplyDTO");

  private static final org.apache.thrift.protocol.TField P_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PROJECT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("projectNumber", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projectName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REPAY_CYCLE_FIELD_DESC = new org.apache.thrift.protocol.TField("repayCycle", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREDIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("creditAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField REQUEST_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("requestDttm", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MONTH_LOAN_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("monthLoanInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField C_GMONTH_LOAN_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("cGmonthLoanInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField REAL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("realName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MONTH_LOAN_MGR_FIELD_DESC = new org.apache.thrift.protocol.TField("monthLoanMgr", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField CGMONTH_LOAN_MGR_FIELD_DESC = new org.apache.thrift.protocol.TField("cgmonthLoanMgr", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField CHANGE_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("changeReason", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField INTEREST_CHG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("interestChgId", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField CREDIT_GUARANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("creditGuarantee", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField GUARANTEE_GUARANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("guaranteeGuarantee", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PLEDGE_GUARANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("pledgeGuarantee", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField TH_PLEDGE_GUARANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("thPledgeGuarantee", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField LOOKUP_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("lookupDesc", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField CONTRACT_INTEREST_FIELD_DESC = new org.apache.thrift.protocol.TField("contractInterest", org.apache.thrift.protocol.TType.DOUBLE, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new InterestChgApplyDTOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new InterestChgApplyDTOTupleSchemeFactory());
  }

  public int pId; // required
  public int projectId; // required
  public String projectNumber; // required
  public String projectName; // required
  public int repayCycle; // required
  public double creditAmt; // required
  public String requestDttm; // required
  public double monthLoanInterest; // required
  public double cGmonthLoanInterest; // required
  public String realName; // required
  public double monthLoanMgr; // required
  public double cgmonthLoanMgr; // required
  public String changeReason; // required
  public int interestChgId; // required
  public String creditGuarantee; // required
  public String guaranteeGuarantee; // required
  public String pledgeGuarantee; // required
  public String thPledgeGuarantee; // required
  public String lookupDesc; // required
  public double contractInterest; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    P_ID((short)1, "pId"),
    PROJECT_ID((short)2, "projectId"),
    PROJECT_NUMBER((short)3, "projectNumber"),
    PROJECT_NAME((short)4, "projectName"),
    REPAY_CYCLE((short)5, "repayCycle"),
    CREDIT_AMT((short)6, "creditAmt"),
    REQUEST_DTTM((short)7, "requestDttm"),
    MONTH_LOAN_INTEREST((short)8, "monthLoanInterest"),
    C_GMONTH_LOAN_INTEREST((short)9, "cGmonthLoanInterest"),
    REAL_NAME((short)10, "realName"),
    MONTH_LOAN_MGR((short)11, "monthLoanMgr"),
    CGMONTH_LOAN_MGR((short)12, "cgmonthLoanMgr"),
    CHANGE_REASON((short)14, "changeReason"),
    INTEREST_CHG_ID((short)15, "interestChgId"),
    CREDIT_GUARANTEE((short)13, "creditGuarantee"),
    GUARANTEE_GUARANTEE((short)16, "guaranteeGuarantee"),
    PLEDGE_GUARANTEE((short)17, "pledgeGuarantee"),
    TH_PLEDGE_GUARANTEE((short)18, "thPledgeGuarantee"),
    LOOKUP_DESC((short)19, "lookupDesc"),
    CONTRACT_INTEREST((short)20, "contractInterest");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // P_ID
          return P_ID;
        case 2: // PROJECT_ID
          return PROJECT_ID;
        case 3: // PROJECT_NUMBER
          return PROJECT_NUMBER;
        case 4: // PROJECT_NAME
          return PROJECT_NAME;
        case 5: // REPAY_CYCLE
          return REPAY_CYCLE;
        case 6: // CREDIT_AMT
          return CREDIT_AMT;
        case 7: // REQUEST_DTTM
          return REQUEST_DTTM;
        case 8: // MONTH_LOAN_INTEREST
          return MONTH_LOAN_INTEREST;
        case 9: // C_GMONTH_LOAN_INTEREST
          return C_GMONTH_LOAN_INTEREST;
        case 10: // REAL_NAME
          return REAL_NAME;
        case 11: // MONTH_LOAN_MGR
          return MONTH_LOAN_MGR;
        case 12: // CGMONTH_LOAN_MGR
          return CGMONTH_LOAN_MGR;
        case 14: // CHANGE_REASON
          return CHANGE_REASON;
        case 15: // INTEREST_CHG_ID
          return INTEREST_CHG_ID;
        case 13: // CREDIT_GUARANTEE
          return CREDIT_GUARANTEE;
        case 16: // GUARANTEE_GUARANTEE
          return GUARANTEE_GUARANTEE;
        case 17: // PLEDGE_GUARANTEE
          return PLEDGE_GUARANTEE;
        case 18: // TH_PLEDGE_GUARANTEE
          return TH_PLEDGE_GUARANTEE;
        case 19: // LOOKUP_DESC
          return LOOKUP_DESC;
        case 20: // CONTRACT_INTEREST
          return CONTRACT_INTEREST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __PROJECTID_ISSET_ID = 1;
  private static final int __REPAYCYCLE_ISSET_ID = 2;
  private static final int __CREDITAMT_ISSET_ID = 3;
  private static final int __MONTHLOANINTEREST_ISSET_ID = 4;
  private static final int __CGMONTHLOANINTEREST_ISSET_ID = 5;
  private static final int __MONTHLOANMGR_ISSET_ID = 6;
  private static final int __CGMONTHLOANMGR_ISSET_ID = 7;
  private static final int __INTERESTCHGID_ISSET_ID = 8;
  private static final int __CONTRACTINTEREST_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.P_ID, new org.apache.thrift.meta_data.FieldMetaData("pId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROJECT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("projectNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("projectName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REPAY_CYCLE, new org.apache.thrift.meta_data.FieldMetaData("repayCycle", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREDIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("creditAmt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REQUEST_DTTM, new org.apache.thrift.meta_data.FieldMetaData("requestDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MONTH_LOAN_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("monthLoanInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.C_GMONTH_LOAN_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("cGmonthLoanInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REAL_NAME, new org.apache.thrift.meta_data.FieldMetaData("realName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MONTH_LOAN_MGR, new org.apache.thrift.meta_data.FieldMetaData("monthLoanMgr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CGMONTH_LOAN_MGR, new org.apache.thrift.meta_data.FieldMetaData("cgmonthLoanMgr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CHANGE_REASON, new org.apache.thrift.meta_data.FieldMetaData("changeReason", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTEREST_CHG_ID, new org.apache.thrift.meta_data.FieldMetaData("interestChgId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREDIT_GUARANTEE, new org.apache.thrift.meta_data.FieldMetaData("creditGuarantee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GUARANTEE_GUARANTEE, new org.apache.thrift.meta_data.FieldMetaData("guaranteeGuarantee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLEDGE_GUARANTEE, new org.apache.thrift.meta_data.FieldMetaData("pledgeGuarantee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TH_PLEDGE_GUARANTEE, new org.apache.thrift.meta_data.FieldMetaData("thPledgeGuarantee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOOKUP_DESC, new org.apache.thrift.meta_data.FieldMetaData("lookupDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_INTEREST, new org.apache.thrift.meta_data.FieldMetaData("contractInterest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InterestChgApplyDTO.class, metaDataMap);
  }

  public InterestChgApplyDTO() {
  }

  public InterestChgApplyDTO(
    int pId,
    int projectId,
    String projectNumber,
    String projectName,
    int repayCycle,
    double creditAmt,
    String requestDttm,
    double monthLoanInterest,
    double cGmonthLoanInterest,
    String realName,
    double monthLoanMgr,
    double cgmonthLoanMgr,
    String changeReason,
    int interestChgId,
    String creditGuarantee,
    String guaranteeGuarantee,
    String pledgeGuarantee,
    String thPledgeGuarantee,
    String lookupDesc,
    double contractInterest)
  {
    this();
    this.pId = pId;
    setPIdIsSet(true);
    this.projectId = projectId;
    setProjectIdIsSet(true);
    this.projectNumber = projectNumber;
    this.projectName = projectName;
    this.repayCycle = repayCycle;
    setRepayCycleIsSet(true);
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    this.requestDttm = requestDttm;
    this.monthLoanInterest = monthLoanInterest;
    setMonthLoanInterestIsSet(true);
    this.cGmonthLoanInterest = cGmonthLoanInterest;
    setCGmonthLoanInterestIsSet(true);
    this.realName = realName;
    this.monthLoanMgr = monthLoanMgr;
    setMonthLoanMgrIsSet(true);
    this.cgmonthLoanMgr = cgmonthLoanMgr;
    setCgmonthLoanMgrIsSet(true);
    this.changeReason = changeReason;
    this.interestChgId = interestChgId;
    setInterestChgIdIsSet(true);
    this.creditGuarantee = creditGuarantee;
    this.guaranteeGuarantee = guaranteeGuarantee;
    this.pledgeGuarantee = pledgeGuarantee;
    this.thPledgeGuarantee = thPledgeGuarantee;
    this.lookupDesc = lookupDesc;
    this.contractInterest = contractInterest;
    setContractInterestIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InterestChgApplyDTO(InterestChgApplyDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pId = other.pId;
    this.projectId = other.projectId;
    if (other.isSetProjectNumber()) {
      this.projectNumber = other.projectNumber;
    }
    if (other.isSetProjectName()) {
      this.projectName = other.projectName;
    }
    this.repayCycle = other.repayCycle;
    this.creditAmt = other.creditAmt;
    if (other.isSetRequestDttm()) {
      this.requestDttm = other.requestDttm;
    }
    this.monthLoanInterest = other.monthLoanInterest;
    this.cGmonthLoanInterest = other.cGmonthLoanInterest;
    if (other.isSetRealName()) {
      this.realName = other.realName;
    }
    this.monthLoanMgr = other.monthLoanMgr;
    this.cgmonthLoanMgr = other.cgmonthLoanMgr;
    if (other.isSetChangeReason()) {
      this.changeReason = other.changeReason;
    }
    this.interestChgId = other.interestChgId;
    if (other.isSetCreditGuarantee()) {
      this.creditGuarantee = other.creditGuarantee;
    }
    if (other.isSetGuaranteeGuarantee()) {
      this.guaranteeGuarantee = other.guaranteeGuarantee;
    }
    if (other.isSetPledgeGuarantee()) {
      this.pledgeGuarantee = other.pledgeGuarantee;
    }
    if (other.isSetThPledgeGuarantee()) {
      this.thPledgeGuarantee = other.thPledgeGuarantee;
    }
    if (other.isSetLookupDesc()) {
      this.lookupDesc = other.lookupDesc;
    }
    this.contractInterest = other.contractInterest;
  }

  public InterestChgApplyDTO deepCopy() {
    return new InterestChgApplyDTO(this);
  }

  @Override
  public void clear() {
    setPIdIsSet(false);
    this.pId = 0;
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.projectNumber = null;
    this.projectName = null;
    setRepayCycleIsSet(false);
    this.repayCycle = 0;
    setCreditAmtIsSet(false);
    this.creditAmt = 0.0;
    this.requestDttm = null;
    setMonthLoanInterestIsSet(false);
    this.monthLoanInterest = 0.0;
    setCGmonthLoanInterestIsSet(false);
    this.cGmonthLoanInterest = 0.0;
    this.realName = null;
    setMonthLoanMgrIsSet(false);
    this.monthLoanMgr = 0.0;
    setCgmonthLoanMgrIsSet(false);
    this.cgmonthLoanMgr = 0.0;
    this.changeReason = null;
    setInterestChgIdIsSet(false);
    this.interestChgId = 0;
    this.creditGuarantee = null;
    this.guaranteeGuarantee = null;
    this.pledgeGuarantee = null;
    this.thPledgeGuarantee = null;
    this.lookupDesc = null;
    setContractInterestIsSet(false);
    this.contractInterest = 0.0;
  }

  public int getPId() {
    return this.pId;
  }

  public InterestChgApplyDTO setPId(int pId) {
    this.pId = pId;
    setPIdIsSet(true);
    return this;
  }

  public void unsetPId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pId is set (has been assigned a value) and false otherwise */
  public boolean isSetPId() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getProjectId() {
    return this.projectId;
  }

  public InterestChgApplyDTO setProjectId(int projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public String getProjectNumber() {
    return this.projectNumber;
  }

  public InterestChgApplyDTO setProjectNumber(String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  public void unsetProjectNumber() {
    this.projectNumber = null;
  }

  /** Returns true if field projectNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectNumber() {
    return this.projectNumber != null;
  }

  public void setProjectNumberIsSet(boolean value) {
    if (!value) {
      this.projectNumber = null;
    }
  }

  public String getProjectName() {
    return this.projectName;
  }

  public InterestChgApplyDTO setProjectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  public void unsetProjectName() {
    this.projectName = null;
  }

  /** Returns true if field projectName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectName() {
    return this.projectName != null;
  }

  public void setProjectNameIsSet(boolean value) {
    if (!value) {
      this.projectName = null;
    }
  }

  public int getRepayCycle() {
    return this.repayCycle;
  }

  public InterestChgApplyDTO setRepayCycle(int repayCycle) {
    this.repayCycle = repayCycle;
    setRepayCycleIsSet(true);
    return this;
  }

  public void unsetRepayCycle() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REPAYCYCLE_ISSET_ID);
  }

  /** Returns true if field repayCycle is set (has been assigned a value) and false otherwise */
  public boolean isSetRepayCycle() {
    return EncodingUtils.testBit(__isset_bitfield, __REPAYCYCLE_ISSET_ID);
  }

  public void setRepayCycleIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REPAYCYCLE_ISSET_ID, value);
  }

  public double getCreditAmt() {
    return this.creditAmt;
  }

  public InterestChgApplyDTO setCreditAmt(double creditAmt) {
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    return this;
  }

  public void unsetCreditAmt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  /** Returns true if field creditAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditAmt() {
    return EncodingUtils.testBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  public void setCreditAmtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREDITAMT_ISSET_ID, value);
  }

  public String getRequestDttm() {
    return this.requestDttm;
  }

  public InterestChgApplyDTO setRequestDttm(String requestDttm) {
    this.requestDttm = requestDttm;
    return this;
  }

  public void unsetRequestDttm() {
    this.requestDttm = null;
  }

  /** Returns true if field requestDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestDttm() {
    return this.requestDttm != null;
  }

  public void setRequestDttmIsSet(boolean value) {
    if (!value) {
      this.requestDttm = null;
    }
  }

  public double getMonthLoanInterest() {
    return this.monthLoanInterest;
  }

  public InterestChgApplyDTO setMonthLoanInterest(double monthLoanInterest) {
    this.monthLoanInterest = monthLoanInterest;
    setMonthLoanInterestIsSet(true);
    return this;
  }

  public void unsetMonthLoanInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MONTHLOANINTEREST_ISSET_ID);
  }

  /** Returns true if field monthLoanInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetMonthLoanInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __MONTHLOANINTEREST_ISSET_ID);
  }

  public void setMonthLoanInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MONTHLOANINTEREST_ISSET_ID, value);
  }

  public double getCGmonthLoanInterest() {
    return this.cGmonthLoanInterest;
  }

  public InterestChgApplyDTO setCGmonthLoanInterest(double cGmonthLoanInterest) {
    this.cGmonthLoanInterest = cGmonthLoanInterest;
    setCGmonthLoanInterestIsSet(true);
    return this;
  }

  public void unsetCGmonthLoanInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CGMONTHLOANINTEREST_ISSET_ID);
  }

  /** Returns true if field cGmonthLoanInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetCGmonthLoanInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __CGMONTHLOANINTEREST_ISSET_ID);
  }

  public void setCGmonthLoanInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CGMONTHLOANINTEREST_ISSET_ID, value);
  }

  public String getRealName() {
    return this.realName;
  }

  public InterestChgApplyDTO setRealName(String realName) {
    this.realName = realName;
    return this;
  }

  public void unsetRealName() {
    this.realName = null;
  }

  /** Returns true if field realName is set (has been assigned a value) and false otherwise */
  public boolean isSetRealName() {
    return this.realName != null;
  }

  public void setRealNameIsSet(boolean value) {
    if (!value) {
      this.realName = null;
    }
  }

  public double getMonthLoanMgr() {
    return this.monthLoanMgr;
  }

  public InterestChgApplyDTO setMonthLoanMgr(double monthLoanMgr) {
    this.monthLoanMgr = monthLoanMgr;
    setMonthLoanMgrIsSet(true);
    return this;
  }

  public void unsetMonthLoanMgr() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MONTHLOANMGR_ISSET_ID);
  }

  /** Returns true if field monthLoanMgr is set (has been assigned a value) and false otherwise */
  public boolean isSetMonthLoanMgr() {
    return EncodingUtils.testBit(__isset_bitfield, __MONTHLOANMGR_ISSET_ID);
  }

  public void setMonthLoanMgrIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MONTHLOANMGR_ISSET_ID, value);
  }

  public double getCgmonthLoanMgr() {
    return this.cgmonthLoanMgr;
  }

  public InterestChgApplyDTO setCgmonthLoanMgr(double cgmonthLoanMgr) {
    this.cgmonthLoanMgr = cgmonthLoanMgr;
    setCgmonthLoanMgrIsSet(true);
    return this;
  }

  public void unsetCgmonthLoanMgr() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CGMONTHLOANMGR_ISSET_ID);
  }

  /** Returns true if field cgmonthLoanMgr is set (has been assigned a value) and false otherwise */
  public boolean isSetCgmonthLoanMgr() {
    return EncodingUtils.testBit(__isset_bitfield, __CGMONTHLOANMGR_ISSET_ID);
  }

  public void setCgmonthLoanMgrIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CGMONTHLOANMGR_ISSET_ID, value);
  }

  public String getChangeReason() {
    return this.changeReason;
  }

  public InterestChgApplyDTO setChangeReason(String changeReason) {
    this.changeReason = changeReason;
    return this;
  }

  public void unsetChangeReason() {
    this.changeReason = null;
  }

  /** Returns true if field changeReason is set (has been assigned a value) and false otherwise */
  public boolean isSetChangeReason() {
    return this.changeReason != null;
  }

  public void setChangeReasonIsSet(boolean value) {
    if (!value) {
      this.changeReason = null;
    }
  }

  public int getInterestChgId() {
    return this.interestChgId;
  }

  public InterestChgApplyDTO setInterestChgId(int interestChgId) {
    this.interestChgId = interestChgId;
    setInterestChgIdIsSet(true);
    return this;
  }

  public void unsetInterestChgId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INTERESTCHGID_ISSET_ID);
  }

  /** Returns true if field interestChgId is set (has been assigned a value) and false otherwise */
  public boolean isSetInterestChgId() {
    return EncodingUtils.testBit(__isset_bitfield, __INTERESTCHGID_ISSET_ID);
  }

  public void setInterestChgIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INTERESTCHGID_ISSET_ID, value);
  }

  public String getCreditGuarantee() {
    return this.creditGuarantee;
  }

  public InterestChgApplyDTO setCreditGuarantee(String creditGuarantee) {
    this.creditGuarantee = creditGuarantee;
    return this;
  }

  public void unsetCreditGuarantee() {
    this.creditGuarantee = null;
  }

  /** Returns true if field creditGuarantee is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditGuarantee() {
    return this.creditGuarantee != null;
  }

  public void setCreditGuaranteeIsSet(boolean value) {
    if (!value) {
      this.creditGuarantee = null;
    }
  }

  public String getGuaranteeGuarantee() {
    return this.guaranteeGuarantee;
  }

  public InterestChgApplyDTO setGuaranteeGuarantee(String guaranteeGuarantee) {
    this.guaranteeGuarantee = guaranteeGuarantee;
    return this;
  }

  public void unsetGuaranteeGuarantee() {
    this.guaranteeGuarantee = null;
  }

  /** Returns true if field guaranteeGuarantee is set (has been assigned a value) and false otherwise */
  public boolean isSetGuaranteeGuarantee() {
    return this.guaranteeGuarantee != null;
  }

  public void setGuaranteeGuaranteeIsSet(boolean value) {
    if (!value) {
      this.guaranteeGuarantee = null;
    }
  }

  public String getPledgeGuarantee() {
    return this.pledgeGuarantee;
  }

  public InterestChgApplyDTO setPledgeGuarantee(String pledgeGuarantee) {
    this.pledgeGuarantee = pledgeGuarantee;
    return this;
  }

  public void unsetPledgeGuarantee() {
    this.pledgeGuarantee = null;
  }

  /** Returns true if field pledgeGuarantee is set (has been assigned a value) and false otherwise */
  public boolean isSetPledgeGuarantee() {
    return this.pledgeGuarantee != null;
  }

  public void setPledgeGuaranteeIsSet(boolean value) {
    if (!value) {
      this.pledgeGuarantee = null;
    }
  }

  public String getThPledgeGuarantee() {
    return this.thPledgeGuarantee;
  }

  public InterestChgApplyDTO setThPledgeGuarantee(String thPledgeGuarantee) {
    this.thPledgeGuarantee = thPledgeGuarantee;
    return this;
  }

  public void unsetThPledgeGuarantee() {
    this.thPledgeGuarantee = null;
  }

  /** Returns true if field thPledgeGuarantee is set (has been assigned a value) and false otherwise */
  public boolean isSetThPledgeGuarantee() {
    return this.thPledgeGuarantee != null;
  }

  public void setThPledgeGuaranteeIsSet(boolean value) {
    if (!value) {
      this.thPledgeGuarantee = null;
    }
  }

  public String getLookupDesc() {
    return this.lookupDesc;
  }

  public InterestChgApplyDTO setLookupDesc(String lookupDesc) {
    this.lookupDesc = lookupDesc;
    return this;
  }

  public void unsetLookupDesc() {
    this.lookupDesc = null;
  }

  /** Returns true if field lookupDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetLookupDesc() {
    return this.lookupDesc != null;
  }

  public void setLookupDescIsSet(boolean value) {
    if (!value) {
      this.lookupDesc = null;
    }
  }

  public double getContractInterest() {
    return this.contractInterest;
  }

  public InterestChgApplyDTO setContractInterest(double contractInterest) {
    this.contractInterest = contractInterest;
    setContractInterestIsSet(true);
    return this;
  }

  public void unsetContractInterest() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTINTEREST_ISSET_ID);
  }

  /** Returns true if field contractInterest is set (has been assigned a value) and false otherwise */
  public boolean isSetContractInterest() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTINTEREST_ISSET_ID);
  }

  public void setContractInterestIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTINTEREST_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case P_ID:
      if (value == null) {
        unsetPId();
      } else {
        setPId((Integer)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((Integer)value);
      }
      break;

    case PROJECT_NUMBER:
      if (value == null) {
        unsetProjectNumber();
      } else {
        setProjectNumber((String)value);
      }
      break;

    case PROJECT_NAME:
      if (value == null) {
        unsetProjectName();
      } else {
        setProjectName((String)value);
      }
      break;

    case REPAY_CYCLE:
      if (value == null) {
        unsetRepayCycle();
      } else {
        setRepayCycle((Integer)value);
      }
      break;

    case CREDIT_AMT:
      if (value == null) {
        unsetCreditAmt();
      } else {
        setCreditAmt((Double)value);
      }
      break;

    case REQUEST_DTTM:
      if (value == null) {
        unsetRequestDttm();
      } else {
        setRequestDttm((String)value);
      }
      break;

    case MONTH_LOAN_INTEREST:
      if (value == null) {
        unsetMonthLoanInterest();
      } else {
        setMonthLoanInterest((Double)value);
      }
      break;

    case C_GMONTH_LOAN_INTEREST:
      if (value == null) {
        unsetCGmonthLoanInterest();
      } else {
        setCGmonthLoanInterest((Double)value);
      }
      break;

    case REAL_NAME:
      if (value == null) {
        unsetRealName();
      } else {
        setRealName((String)value);
      }
      break;

    case MONTH_LOAN_MGR:
      if (value == null) {
        unsetMonthLoanMgr();
      } else {
        setMonthLoanMgr((Double)value);
      }
      break;

    case CGMONTH_LOAN_MGR:
      if (value == null) {
        unsetCgmonthLoanMgr();
      } else {
        setCgmonthLoanMgr((Double)value);
      }
      break;

    case CHANGE_REASON:
      if (value == null) {
        unsetChangeReason();
      } else {
        setChangeReason((String)value);
      }
      break;

    case INTEREST_CHG_ID:
      if (value == null) {
        unsetInterestChgId();
      } else {
        setInterestChgId((Integer)value);
      }
      break;

    case CREDIT_GUARANTEE:
      if (value == null) {
        unsetCreditGuarantee();
      } else {
        setCreditGuarantee((String)value);
      }
      break;

    case GUARANTEE_GUARANTEE:
      if (value == null) {
        unsetGuaranteeGuarantee();
      } else {
        setGuaranteeGuarantee((String)value);
      }
      break;

    case PLEDGE_GUARANTEE:
      if (value == null) {
        unsetPledgeGuarantee();
      } else {
        setPledgeGuarantee((String)value);
      }
      break;

    case TH_PLEDGE_GUARANTEE:
      if (value == null) {
        unsetThPledgeGuarantee();
      } else {
        setThPledgeGuarantee((String)value);
      }
      break;

    case LOOKUP_DESC:
      if (value == null) {
        unsetLookupDesc();
      } else {
        setLookupDesc((String)value);
      }
      break;

    case CONTRACT_INTEREST:
      if (value == null) {
        unsetContractInterest();
      } else {
        setContractInterest((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case P_ID:
      return Integer.valueOf(getPId());

    case PROJECT_ID:
      return Integer.valueOf(getProjectId());

    case PROJECT_NUMBER:
      return getProjectNumber();

    case PROJECT_NAME:
      return getProjectName();

    case REPAY_CYCLE:
      return Integer.valueOf(getRepayCycle());

    case CREDIT_AMT:
      return Double.valueOf(getCreditAmt());

    case REQUEST_DTTM:
      return getRequestDttm();

    case MONTH_LOAN_INTEREST:
      return Double.valueOf(getMonthLoanInterest());

    case C_GMONTH_LOAN_INTEREST:
      return Double.valueOf(getCGmonthLoanInterest());

    case REAL_NAME:
      return getRealName();

    case MONTH_LOAN_MGR:
      return Double.valueOf(getMonthLoanMgr());

    case CGMONTH_LOAN_MGR:
      return Double.valueOf(getCgmonthLoanMgr());

    case CHANGE_REASON:
      return getChangeReason();

    case INTEREST_CHG_ID:
      return Integer.valueOf(getInterestChgId());

    case CREDIT_GUARANTEE:
      return getCreditGuarantee();

    case GUARANTEE_GUARANTEE:
      return getGuaranteeGuarantee();

    case PLEDGE_GUARANTEE:
      return getPledgeGuarantee();

    case TH_PLEDGE_GUARANTEE:
      return getThPledgeGuarantee();

    case LOOKUP_DESC:
      return getLookupDesc();

    case CONTRACT_INTEREST:
      return Double.valueOf(getContractInterest());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case P_ID:
      return isSetPId();
    case PROJECT_ID:
      return isSetProjectId();
    case PROJECT_NUMBER:
      return isSetProjectNumber();
    case PROJECT_NAME:
      return isSetProjectName();
    case REPAY_CYCLE:
      return isSetRepayCycle();
    case CREDIT_AMT:
      return isSetCreditAmt();
    case REQUEST_DTTM:
      return isSetRequestDttm();
    case MONTH_LOAN_INTEREST:
      return isSetMonthLoanInterest();
    case C_GMONTH_LOAN_INTEREST:
      return isSetCGmonthLoanInterest();
    case REAL_NAME:
      return isSetRealName();
    case MONTH_LOAN_MGR:
      return isSetMonthLoanMgr();
    case CGMONTH_LOAN_MGR:
      return isSetCgmonthLoanMgr();
    case CHANGE_REASON:
      return isSetChangeReason();
    case INTEREST_CHG_ID:
      return isSetInterestChgId();
    case CREDIT_GUARANTEE:
      return isSetCreditGuarantee();
    case GUARANTEE_GUARANTEE:
      return isSetGuaranteeGuarantee();
    case PLEDGE_GUARANTEE:
      return isSetPledgeGuarantee();
    case TH_PLEDGE_GUARANTEE:
      return isSetThPledgeGuarantee();
    case LOOKUP_DESC:
      return isSetLookupDesc();
    case CONTRACT_INTEREST:
      return isSetContractInterest();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof InterestChgApplyDTO)
      return this.equals((InterestChgApplyDTO)that);
    return false;
  }

  public boolean equals(InterestChgApplyDTO that) {
    if (that == null)
      return false;

    boolean this_present_pId = true;
    boolean that_present_pId = true;
    if (this_present_pId || that_present_pId) {
      if (!(this_present_pId && that_present_pId))
        return false;
      if (this.pId != that.pId)
        return false;
    }

    boolean this_present_projectId = true;
    boolean that_present_projectId = true;
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_projectNumber = true && this.isSetProjectNumber();
    boolean that_present_projectNumber = true && that.isSetProjectNumber();
    if (this_present_projectNumber || that_present_projectNumber) {
      if (!(this_present_projectNumber && that_present_projectNumber))
        return false;
      if (!this.projectNumber.equals(that.projectNumber))
        return false;
    }

    boolean this_present_projectName = true && this.isSetProjectName();
    boolean that_present_projectName = true && that.isSetProjectName();
    if (this_present_projectName || that_present_projectName) {
      if (!(this_present_projectName && that_present_projectName))
        return false;
      if (!this.projectName.equals(that.projectName))
        return false;
    }

    boolean this_present_repayCycle = true;
    boolean that_present_repayCycle = true;
    if (this_present_repayCycle || that_present_repayCycle) {
      if (!(this_present_repayCycle && that_present_repayCycle))
        return false;
      if (this.repayCycle != that.repayCycle)
        return false;
    }

    boolean this_present_creditAmt = true;
    boolean that_present_creditAmt = true;
    if (this_present_creditAmt || that_present_creditAmt) {
      if (!(this_present_creditAmt && that_present_creditAmt))
        return false;
      if (this.creditAmt != that.creditAmt)
        return false;
    }

    boolean this_present_requestDttm = true && this.isSetRequestDttm();
    boolean that_present_requestDttm = true && that.isSetRequestDttm();
    if (this_present_requestDttm || that_present_requestDttm) {
      if (!(this_present_requestDttm && that_present_requestDttm))
        return false;
      if (!this.requestDttm.equals(that.requestDttm))
        return false;
    }

    boolean this_present_monthLoanInterest = true;
    boolean that_present_monthLoanInterest = true;
    if (this_present_monthLoanInterest || that_present_monthLoanInterest) {
      if (!(this_present_monthLoanInterest && that_present_monthLoanInterest))
        return false;
      if (this.monthLoanInterest != that.monthLoanInterest)
        return false;
    }

    boolean this_present_cGmonthLoanInterest = true;
    boolean that_present_cGmonthLoanInterest = true;
    if (this_present_cGmonthLoanInterest || that_present_cGmonthLoanInterest) {
      if (!(this_present_cGmonthLoanInterest && that_present_cGmonthLoanInterest))
        return false;
      if (this.cGmonthLoanInterest != that.cGmonthLoanInterest)
        return false;
    }

    boolean this_present_realName = true && this.isSetRealName();
    boolean that_present_realName = true && that.isSetRealName();
    if (this_present_realName || that_present_realName) {
      if (!(this_present_realName && that_present_realName))
        return false;
      if (!this.realName.equals(that.realName))
        return false;
    }

    boolean this_present_monthLoanMgr = true;
    boolean that_present_monthLoanMgr = true;
    if (this_present_monthLoanMgr || that_present_monthLoanMgr) {
      if (!(this_present_monthLoanMgr && that_present_monthLoanMgr))
        return false;
      if (this.monthLoanMgr != that.monthLoanMgr)
        return false;
    }

    boolean this_present_cgmonthLoanMgr = true;
    boolean that_present_cgmonthLoanMgr = true;
    if (this_present_cgmonthLoanMgr || that_present_cgmonthLoanMgr) {
      if (!(this_present_cgmonthLoanMgr && that_present_cgmonthLoanMgr))
        return false;
      if (this.cgmonthLoanMgr != that.cgmonthLoanMgr)
        return false;
    }

    boolean this_present_changeReason = true && this.isSetChangeReason();
    boolean that_present_changeReason = true && that.isSetChangeReason();
    if (this_present_changeReason || that_present_changeReason) {
      if (!(this_present_changeReason && that_present_changeReason))
        return false;
      if (!this.changeReason.equals(that.changeReason))
        return false;
    }

    boolean this_present_interestChgId = true;
    boolean that_present_interestChgId = true;
    if (this_present_interestChgId || that_present_interestChgId) {
      if (!(this_present_interestChgId && that_present_interestChgId))
        return false;
      if (this.interestChgId != that.interestChgId)
        return false;
    }

    boolean this_present_creditGuarantee = true && this.isSetCreditGuarantee();
    boolean that_present_creditGuarantee = true && that.isSetCreditGuarantee();
    if (this_present_creditGuarantee || that_present_creditGuarantee) {
      if (!(this_present_creditGuarantee && that_present_creditGuarantee))
        return false;
      if (!this.creditGuarantee.equals(that.creditGuarantee))
        return false;
    }

    boolean this_present_guaranteeGuarantee = true && this.isSetGuaranteeGuarantee();
    boolean that_present_guaranteeGuarantee = true && that.isSetGuaranteeGuarantee();
    if (this_present_guaranteeGuarantee || that_present_guaranteeGuarantee) {
      if (!(this_present_guaranteeGuarantee && that_present_guaranteeGuarantee))
        return false;
      if (!this.guaranteeGuarantee.equals(that.guaranteeGuarantee))
        return false;
    }

    boolean this_present_pledgeGuarantee = true && this.isSetPledgeGuarantee();
    boolean that_present_pledgeGuarantee = true && that.isSetPledgeGuarantee();
    if (this_present_pledgeGuarantee || that_present_pledgeGuarantee) {
      if (!(this_present_pledgeGuarantee && that_present_pledgeGuarantee))
        return false;
      if (!this.pledgeGuarantee.equals(that.pledgeGuarantee))
        return false;
    }

    boolean this_present_thPledgeGuarantee = true && this.isSetThPledgeGuarantee();
    boolean that_present_thPledgeGuarantee = true && that.isSetThPledgeGuarantee();
    if (this_present_thPledgeGuarantee || that_present_thPledgeGuarantee) {
      if (!(this_present_thPledgeGuarantee && that_present_thPledgeGuarantee))
        return false;
      if (!this.thPledgeGuarantee.equals(that.thPledgeGuarantee))
        return false;
    }

    boolean this_present_lookupDesc = true && this.isSetLookupDesc();
    boolean that_present_lookupDesc = true && that.isSetLookupDesc();
    if (this_present_lookupDesc || that_present_lookupDesc) {
      if (!(this_present_lookupDesc && that_present_lookupDesc))
        return false;
      if (!this.lookupDesc.equals(that.lookupDesc))
        return false;
    }

    boolean this_present_contractInterest = true;
    boolean that_present_contractInterest = true;
    if (this_present_contractInterest || that_present_contractInterest) {
      if (!(this_present_contractInterest && that_present_contractInterest))
        return false;
      if (this.contractInterest != that.contractInterest)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pId = true;
    list.add(present_pId);
    if (present_pId)
      list.add(pId);

    boolean present_projectId = true;
    list.add(present_projectId);
    if (present_projectId)
      list.add(projectId);

    boolean present_projectNumber = true && (isSetProjectNumber());
    list.add(present_projectNumber);
    if (present_projectNumber)
      list.add(projectNumber);

    boolean present_projectName = true && (isSetProjectName());
    list.add(present_projectName);
    if (present_projectName)
      list.add(projectName);

    boolean present_repayCycle = true;
    list.add(present_repayCycle);
    if (present_repayCycle)
      list.add(repayCycle);

    boolean present_creditAmt = true;
    list.add(present_creditAmt);
    if (present_creditAmt)
      list.add(creditAmt);

    boolean present_requestDttm = true && (isSetRequestDttm());
    list.add(present_requestDttm);
    if (present_requestDttm)
      list.add(requestDttm);

    boolean present_monthLoanInterest = true;
    list.add(present_monthLoanInterest);
    if (present_monthLoanInterest)
      list.add(monthLoanInterest);

    boolean present_cGmonthLoanInterest = true;
    list.add(present_cGmonthLoanInterest);
    if (present_cGmonthLoanInterest)
      list.add(cGmonthLoanInterest);

    boolean present_realName = true && (isSetRealName());
    list.add(present_realName);
    if (present_realName)
      list.add(realName);

    boolean present_monthLoanMgr = true;
    list.add(present_monthLoanMgr);
    if (present_monthLoanMgr)
      list.add(monthLoanMgr);

    boolean present_cgmonthLoanMgr = true;
    list.add(present_cgmonthLoanMgr);
    if (present_cgmonthLoanMgr)
      list.add(cgmonthLoanMgr);

    boolean present_changeReason = true && (isSetChangeReason());
    list.add(present_changeReason);
    if (present_changeReason)
      list.add(changeReason);

    boolean present_interestChgId = true;
    list.add(present_interestChgId);
    if (present_interestChgId)
      list.add(interestChgId);

    boolean present_creditGuarantee = true && (isSetCreditGuarantee());
    list.add(present_creditGuarantee);
    if (present_creditGuarantee)
      list.add(creditGuarantee);

    boolean present_guaranteeGuarantee = true && (isSetGuaranteeGuarantee());
    list.add(present_guaranteeGuarantee);
    if (present_guaranteeGuarantee)
      list.add(guaranteeGuarantee);

    boolean present_pledgeGuarantee = true && (isSetPledgeGuarantee());
    list.add(present_pledgeGuarantee);
    if (present_pledgeGuarantee)
      list.add(pledgeGuarantee);

    boolean present_thPledgeGuarantee = true && (isSetThPledgeGuarantee());
    list.add(present_thPledgeGuarantee);
    if (present_thPledgeGuarantee)
      list.add(thPledgeGuarantee);

    boolean present_lookupDesc = true && (isSetLookupDesc());
    list.add(present_lookupDesc);
    if (present_lookupDesc)
      list.add(lookupDesc);

    boolean present_contractInterest = true;
    list.add(present_contractInterest);
    if (present_contractInterest)
      list.add(contractInterest);

    return list.hashCode();
  }

  @Override
  public int compareTo(InterestChgApplyDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPId()).compareTo(other.isSetPId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pId, other.pId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectNumber()).compareTo(other.isSetProjectNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectNumber, other.projectNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjectName()).compareTo(other.isSetProjectName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectName, other.projectName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRepayCycle()).compareTo(other.isSetRepayCycle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRepayCycle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.repayCycle, other.repayCycle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditAmt()).compareTo(other.isSetCreditAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditAmt, other.creditAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestDttm()).compareTo(other.isSetRequestDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestDttm, other.requestDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMonthLoanInterest()).compareTo(other.isSetMonthLoanInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMonthLoanInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.monthLoanInterest, other.monthLoanInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCGmonthLoanInterest()).compareTo(other.isSetCGmonthLoanInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCGmonthLoanInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cGmonthLoanInterest, other.cGmonthLoanInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRealName()).compareTo(other.isSetRealName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realName, other.realName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMonthLoanMgr()).compareTo(other.isSetMonthLoanMgr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMonthLoanMgr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.monthLoanMgr, other.monthLoanMgr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCgmonthLoanMgr()).compareTo(other.isSetCgmonthLoanMgr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCgmonthLoanMgr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cgmonthLoanMgr, other.cgmonthLoanMgr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChangeReason()).compareTo(other.isSetChangeReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChangeReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.changeReason, other.changeReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInterestChgId()).compareTo(other.isSetInterestChgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInterestChgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.interestChgId, other.interestChgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreditGuarantee()).compareTo(other.isSetCreditGuarantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditGuarantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditGuarantee, other.creditGuarantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGuaranteeGuarantee()).compareTo(other.isSetGuaranteeGuarantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGuaranteeGuarantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.guaranteeGuarantee, other.guaranteeGuarantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPledgeGuarantee()).compareTo(other.isSetPledgeGuarantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPledgeGuarantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pledgeGuarantee, other.pledgeGuarantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThPledgeGuarantee()).compareTo(other.isSetThPledgeGuarantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThPledgeGuarantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thPledgeGuarantee, other.thPledgeGuarantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLookupDesc()).compareTo(other.isSetLookupDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLookupDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lookupDesc, other.lookupDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractInterest()).compareTo(other.isSetContractInterest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractInterest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractInterest, other.contractInterest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("InterestChgApplyDTO(");
    boolean first = true;

    sb.append("pId:");
    sb.append(this.pId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectId:");
    sb.append(this.projectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectNumber:");
    if (this.projectNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.projectNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectName:");
    if (this.projectName == null) {
      sb.append("null");
    } else {
      sb.append(this.projectName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("repayCycle:");
    sb.append(this.repayCycle);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditAmt:");
    sb.append(this.creditAmt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestDttm:");
    if (this.requestDttm == null) {
      sb.append("null");
    } else {
      sb.append(this.requestDttm);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("monthLoanInterest:");
    sb.append(this.monthLoanInterest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cGmonthLoanInterest:");
    sb.append(this.cGmonthLoanInterest);
    first = false;
    if (!first) sb.append(", ");
    sb.append("realName:");
    if (this.realName == null) {
      sb.append("null");
    } else {
      sb.append(this.realName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("monthLoanMgr:");
    sb.append(this.monthLoanMgr);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cgmonthLoanMgr:");
    sb.append(this.cgmonthLoanMgr);
    first = false;
    if (!first) sb.append(", ");
    sb.append("changeReason:");
    if (this.changeReason == null) {
      sb.append("null");
    } else {
      sb.append(this.changeReason);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("interestChgId:");
    sb.append(this.interestChgId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditGuarantee:");
    if (this.creditGuarantee == null) {
      sb.append("null");
    } else {
      sb.append(this.creditGuarantee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("guaranteeGuarantee:");
    if (this.guaranteeGuarantee == null) {
      sb.append("null");
    } else {
      sb.append(this.guaranteeGuarantee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pledgeGuarantee:");
    if (this.pledgeGuarantee == null) {
      sb.append("null");
    } else {
      sb.append(this.pledgeGuarantee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thPledgeGuarantee:");
    if (this.thPledgeGuarantee == null) {
      sb.append("null");
    } else {
      sb.append(this.thPledgeGuarantee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lookupDesc:");
    if (this.lookupDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.lookupDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractInterest:");
    sb.append(this.contractInterest);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InterestChgApplyDTOStandardSchemeFactory implements SchemeFactory {
    public InterestChgApplyDTOStandardScheme getScheme() {
      return new InterestChgApplyDTOStandardScheme();
    }
  }

  private static class InterestChgApplyDTOStandardScheme extends StandardScheme<InterestChgApplyDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InterestChgApplyDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // P_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pId = iprot.readI32();
              struct.setPIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.projectId = iprot.readI32();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROJECT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectNumber = iprot.readString();
              struct.setProjectNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectName = iprot.readString();
              struct.setProjectNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REPAY_CYCLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.repayCycle = iprot.readI32();
              struct.setRepayCycleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREDIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.creditAmt = iprot.readDouble();
              struct.setCreditAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REQUEST_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestDttm = iprot.readString();
              struct.setRequestDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MONTH_LOAN_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.monthLoanInterest = iprot.readDouble();
              struct.setMonthLoanInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // C_GMONTH_LOAN_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cGmonthLoanInterest = iprot.readDouble();
              struct.setCGmonthLoanInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // REAL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.realName = iprot.readString();
              struct.setRealNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MONTH_LOAN_MGR
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.monthLoanMgr = iprot.readDouble();
              struct.setMonthLoanMgrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CGMONTH_LOAN_MGR
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.cgmonthLoanMgr = iprot.readDouble();
              struct.setCgmonthLoanMgrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CHANGE_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.changeReason = iprot.readString();
              struct.setChangeReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // INTEREST_CHG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.interestChgId = iprot.readI32();
              struct.setInterestChgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREDIT_GUARANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.creditGuarantee = iprot.readString();
              struct.setCreditGuaranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // GUARANTEE_GUARANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.guaranteeGuarantee = iprot.readString();
              struct.setGuaranteeGuaranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PLEDGE_GUARANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pledgeGuarantee = iprot.readString();
              struct.setPledgeGuaranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // TH_PLEDGE_GUARANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thPledgeGuarantee = iprot.readString();
              struct.setThPledgeGuaranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // LOOKUP_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lookupDesc = iprot.readString();
              struct.setLookupDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CONTRACT_INTEREST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.contractInterest = iprot.readDouble();
              struct.setContractInterestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InterestChgApplyDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(P_ID_FIELD_DESC);
      oprot.writeI32(struct.pId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
      oprot.writeI32(struct.projectId);
      oprot.writeFieldEnd();
      if (struct.projectNumber != null) {
        oprot.writeFieldBegin(PROJECT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.projectNumber);
        oprot.writeFieldEnd();
      }
      if (struct.projectName != null) {
        oprot.writeFieldBegin(PROJECT_NAME_FIELD_DESC);
        oprot.writeString(struct.projectName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REPAY_CYCLE_FIELD_DESC);
      oprot.writeI32(struct.repayCycle);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREDIT_AMT_FIELD_DESC);
      oprot.writeDouble(struct.creditAmt);
      oprot.writeFieldEnd();
      if (struct.requestDttm != null) {
        oprot.writeFieldBegin(REQUEST_DTTM_FIELD_DESC);
        oprot.writeString(struct.requestDttm);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MONTH_LOAN_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.monthLoanInterest);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(C_GMONTH_LOAN_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.cGmonthLoanInterest);
      oprot.writeFieldEnd();
      if (struct.realName != null) {
        oprot.writeFieldBegin(REAL_NAME_FIELD_DESC);
        oprot.writeString(struct.realName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MONTH_LOAN_MGR_FIELD_DESC);
      oprot.writeDouble(struct.monthLoanMgr);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CGMONTH_LOAN_MGR_FIELD_DESC);
      oprot.writeDouble(struct.cgmonthLoanMgr);
      oprot.writeFieldEnd();
      if (struct.creditGuarantee != null) {
        oprot.writeFieldBegin(CREDIT_GUARANTEE_FIELD_DESC);
        oprot.writeString(struct.creditGuarantee);
        oprot.writeFieldEnd();
      }
      if (struct.changeReason != null) {
        oprot.writeFieldBegin(CHANGE_REASON_FIELD_DESC);
        oprot.writeString(struct.changeReason);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INTEREST_CHG_ID_FIELD_DESC);
      oprot.writeI32(struct.interestChgId);
      oprot.writeFieldEnd();
      if (struct.guaranteeGuarantee != null) {
        oprot.writeFieldBegin(GUARANTEE_GUARANTEE_FIELD_DESC);
        oprot.writeString(struct.guaranteeGuarantee);
        oprot.writeFieldEnd();
      }
      if (struct.pledgeGuarantee != null) {
        oprot.writeFieldBegin(PLEDGE_GUARANTEE_FIELD_DESC);
        oprot.writeString(struct.pledgeGuarantee);
        oprot.writeFieldEnd();
      }
      if (struct.thPledgeGuarantee != null) {
        oprot.writeFieldBegin(TH_PLEDGE_GUARANTEE_FIELD_DESC);
        oprot.writeString(struct.thPledgeGuarantee);
        oprot.writeFieldEnd();
      }
      if (struct.lookupDesc != null) {
        oprot.writeFieldBegin(LOOKUP_DESC_FIELD_DESC);
        oprot.writeString(struct.lookupDesc);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CONTRACT_INTEREST_FIELD_DESC);
      oprot.writeDouble(struct.contractInterest);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InterestChgApplyDTOTupleSchemeFactory implements SchemeFactory {
    public InterestChgApplyDTOTupleScheme getScheme() {
      return new InterestChgApplyDTOTupleScheme();
    }
  }

  private static class InterestChgApplyDTOTupleScheme extends TupleScheme<InterestChgApplyDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InterestChgApplyDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPId()) {
        optionals.set(0);
      }
      if (struct.isSetProjectId()) {
        optionals.set(1);
      }
      if (struct.isSetProjectNumber()) {
        optionals.set(2);
      }
      if (struct.isSetProjectName()) {
        optionals.set(3);
      }
      if (struct.isSetRepayCycle()) {
        optionals.set(4);
      }
      if (struct.isSetCreditAmt()) {
        optionals.set(5);
      }
      if (struct.isSetRequestDttm()) {
        optionals.set(6);
      }
      if (struct.isSetMonthLoanInterest()) {
        optionals.set(7);
      }
      if (struct.isSetCGmonthLoanInterest()) {
        optionals.set(8);
      }
      if (struct.isSetRealName()) {
        optionals.set(9);
      }
      if (struct.isSetMonthLoanMgr()) {
        optionals.set(10);
      }
      if (struct.isSetCgmonthLoanMgr()) {
        optionals.set(11);
      }
      if (struct.isSetChangeReason()) {
        optionals.set(12);
      }
      if (struct.isSetInterestChgId()) {
        optionals.set(13);
      }
      if (struct.isSetCreditGuarantee()) {
        optionals.set(14);
      }
      if (struct.isSetGuaranteeGuarantee()) {
        optionals.set(15);
      }
      if (struct.isSetPledgeGuarantee()) {
        optionals.set(16);
      }
      if (struct.isSetThPledgeGuarantee()) {
        optionals.set(17);
      }
      if (struct.isSetLookupDesc()) {
        optionals.set(18);
      }
      if (struct.isSetContractInterest()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetPId()) {
        oprot.writeI32(struct.pId);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI32(struct.projectId);
      }
      if (struct.isSetProjectNumber()) {
        oprot.writeString(struct.projectNumber);
      }
      if (struct.isSetProjectName()) {
        oprot.writeString(struct.projectName);
      }
      if (struct.isSetRepayCycle()) {
        oprot.writeI32(struct.repayCycle);
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeDouble(struct.creditAmt);
      }
      if (struct.isSetRequestDttm()) {
        oprot.writeString(struct.requestDttm);
      }
      if (struct.isSetMonthLoanInterest()) {
        oprot.writeDouble(struct.monthLoanInterest);
      }
      if (struct.isSetCGmonthLoanInterest()) {
        oprot.writeDouble(struct.cGmonthLoanInterest);
      }
      if (struct.isSetRealName()) {
        oprot.writeString(struct.realName);
      }
      if (struct.isSetMonthLoanMgr()) {
        oprot.writeDouble(struct.monthLoanMgr);
      }
      if (struct.isSetCgmonthLoanMgr()) {
        oprot.writeDouble(struct.cgmonthLoanMgr);
      }
      if (struct.isSetChangeReason()) {
        oprot.writeString(struct.changeReason);
      }
      if (struct.isSetInterestChgId()) {
        oprot.writeI32(struct.interestChgId);
      }
      if (struct.isSetCreditGuarantee()) {
        oprot.writeString(struct.creditGuarantee);
      }
      if (struct.isSetGuaranteeGuarantee()) {
        oprot.writeString(struct.guaranteeGuarantee);
      }
      if (struct.isSetPledgeGuarantee()) {
        oprot.writeString(struct.pledgeGuarantee);
      }
      if (struct.isSetThPledgeGuarantee()) {
        oprot.writeString(struct.thPledgeGuarantee);
      }
      if (struct.isSetLookupDesc()) {
        oprot.writeString(struct.lookupDesc);
      }
      if (struct.isSetContractInterest()) {
        oprot.writeDouble(struct.contractInterest);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InterestChgApplyDTO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.pId = iprot.readI32();
        struct.setPIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.projectId = iprot.readI32();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.projectNumber = iprot.readString();
        struct.setProjectNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.projectName = iprot.readString();
        struct.setProjectNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.repayCycle = iprot.readI32();
        struct.setRepayCycleIsSet(true);
      }
      if (incoming.get(5)) {
        struct.creditAmt = iprot.readDouble();
        struct.setCreditAmtIsSet(true);
      }
      if (incoming.get(6)) {
        struct.requestDttm = iprot.readString();
        struct.setRequestDttmIsSet(true);
      }
      if (incoming.get(7)) {
        struct.monthLoanInterest = iprot.readDouble();
        struct.setMonthLoanInterestIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cGmonthLoanInterest = iprot.readDouble();
        struct.setCGmonthLoanInterestIsSet(true);
      }
      if (incoming.get(9)) {
        struct.realName = iprot.readString();
        struct.setRealNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.monthLoanMgr = iprot.readDouble();
        struct.setMonthLoanMgrIsSet(true);
      }
      if (incoming.get(11)) {
        struct.cgmonthLoanMgr = iprot.readDouble();
        struct.setCgmonthLoanMgrIsSet(true);
      }
      if (incoming.get(12)) {
        struct.changeReason = iprot.readString();
        struct.setChangeReasonIsSet(true);
      }
      if (incoming.get(13)) {
        struct.interestChgId = iprot.readI32();
        struct.setInterestChgIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.creditGuarantee = iprot.readString();
        struct.setCreditGuaranteeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.guaranteeGuarantee = iprot.readString();
        struct.setGuaranteeGuaranteeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.pledgeGuarantee = iprot.readString();
        struct.setPledgeGuaranteeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.thPledgeGuarantee = iprot.readString();
        struct.setThPledgeGuaranteeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.lookupDesc = iprot.readString();
        struct.setLookupDescIsSet(true);
      }
      if (incoming.get(19)) {
        struct.contractInterest = iprot.readDouble();
        struct.setContractInterestIsSet(true);
      }
    }
  }

}

